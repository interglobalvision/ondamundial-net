{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","$","window","resize","onResize","document","ready","Player","fixWidows","each","string","html","replace","fadeTime","statusUrl","streamData","playerElement","getElementById","checkStreamStatus","getJSON","data","status","pause","paused","play","volume","volumeIncrement","fadeInterval","setInterval","clearInterval"],"mappings":"AAGAA,MACEC,gBAAiB,IACjBC,KAAM,WACJ,GAAIC,OAAQC,IAEZC,GAAEC,QAAQC,OAAO,WACfJ,MAAMK,aAGRH,EAAEI,UAAUC,MAAM,WAChBV,KAAKW,OAAOT,UAKhBM,SAAU,aAKVI,UAAW,WAETP,EAAE,kBAAkBQ,KAAK,WACvB,GAAIC,QAAST,EAAED,MAAMW,MACrBD,QAASA,OAAOE,QAAQ,YAAY,YACpCX,EAAED,MAAMW,KAAKD,YAKnBd,KAAKW,QACHM,SAAW,IACXC,UAAW,qDACXC,WAAY,KACZjB,KAAM,WACJ,GAAIC,OAAQC,IAEZD,OAAMiB,cAAiBX,SAASY,eAAe,gBAG/ClB,MAAMmB,qBAKRA,kBAAmB,WACjB,GAAInB,OAAQC,IAGZC,GAAEkB,QAAQpB,MAAMe,UAAW,SAASM,MAClCrB,MAAMgB,WAAaK,KAAKC,OAGN,WAAfD,KAAKC,OACNtB,MAAMuB,QACGvB,MAAMiB,cAAcO,QAC7BxB,MAAMyB,UAMZA,KAAM,WACJ,GAAIzB,OAAQC,IAEZD,OAAMiB,cAAcS,OAAS,EAC7B1B,MAAMiB,cAAcQ,MAEpB,IAAIE,iBAAkB,GAAK3B,MAAMc,SAAW,IACxCc,aAAeC,YAAa,WAC9B7B,MAAMiB,cAAcS,QAAUC,gBAE1B3B,MAAMiB,cAAcS,QAAU,EAAIC,kBACpC3B,MAAMiB,cAAcS,OAAS,EAC7BI,cAAcF,gBAGf,KAGLL,MAAO,WACOtB,KAENgB,cAAcM,UAIxB1B,KAAKE","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global $, jQuery, document, Site, Modernizr */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n    $(document).ready(function () {\n      Site.Player.init();\n    });\n\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nSite.Player = {\n  fadeTime:  2000,\n  statusUrl: 'https://public.radio.co/stations/s0b5e9c02c/status',\n  streamData: null,\n  init: function() {\n    var _this = this;\n\n    _this.playerElement =  document.getElementById('radio-player');\n\n    // Check if the stream is online\n    _this.checkStreamStatus();\n\n  },\n\n  // Check the stream status thru ajax and change the player accordingly\n  checkStreamStatus: function() {\n    var _this = this;\n\n    // Make the ajax request\n    $.getJSON(_this.statusUrl, function(data) {\n      _this.streamData = data.status;\n\n      // If the stream is offline\n      if(data.status == 'offline') {\n        _this.pause(); // Pause the stream\n      } else if (_this.playerElement.paused) { // If stream is online and the player is paused\n        _this.play();\n      }\n    });\n\n  },\n\n  play: function() {\n    var _this = this;\n\n    _this.playerElement.volume = 0;\n    _this.playerElement.play();\n\n    var volumeIncrement = 1 / (_this.fadeTime / 50);\n    var fadeInterval = setInterval( function() {\n      _this.playerElement.volume += volumeIncrement;\n\n      if (_this.playerElement.volume >= 1 - volumeIncrement) {\n        _this.playerElement.volume = 1\n        clearInterval(fadeInterval);\n      }\n\n    }, 50);\n  },\n\n  pause: function() {\n    var _this = this;\n\n    _this.playerElement.pause();\n  },\n};\n\nSite.init();\n"]}