{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","$","window","resize","onResize","document","ready","StreamChecker","Player","fixWidows","each","string","html","replace","statusUrl","statusCheckInterval","streamData","startChecker","checkStreamStatus","setInterval","getJSON","data","status","triggerEvent","eventName","detail","console","log","customEvent","CustomEvent","dispatchEvent","neverPlayed","fadeTime","streamUrl","playerContainer","getElementById","playerElement","playerSrc","playButton","pauseButton","streamStatusText","nowPlayingText","handleOnlineStream","bind","handleCanPlay","handleOfflineStream","addEventListener","play","pause","event","classList","add","src","paused","load","innerHTML","current_track","title","target","removeEventListener","type","remove","networkState","volume","volumeIncrement","fadeInterval","newVolume","clearInterval"],"mappings":"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","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global $, jQuery, document, Site, Modernizr */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n    $(document).ready(function () {\n      Site.StreamChecker.init();\n      Site.Player.init();\n    });\n\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nSite.StreamChecker = {\n  statusUrl: 'https://public.radio.co/stations/s0b5e9c02c/status',\n  statusCheckInterval: 5000,\n  streamData: null,\n  init: function() {\n    var _this = this;\n\n    _this.startChecker();\n  },\n\n  startChecker: function() {\n    var _this = this;\n\n\n    _this.checkStreamStatus();\n\n    // Start checker on an interval\n    setInterval(function() {\n      _this.checkStreamStatus();\n    }, _this.statusCheckInterval);\n  },\n\n  // Check the stream status thru ajax and change the player accordingly\n  checkStreamStatus: function() {\n    var _this = this;\n\n    // Make the ajax request\n    $.getJSON(_this.statusUrl, function(data) {\n\n      // Save data in a cache var, just in case\n      _this.streamData = data.status;\n\n      // Check if the stream is offline\n      if(data.status == 'offline') {\n\n        _this.triggerEvent('streamoffline', data);\n\n      } else if(data.status === 'online')  {  // else  (stream is online)\n\n        _this.triggerEvent('streamonline', data);\n      }\n    });\n\n  },\n\n  triggerEvent: function(eventName, detail) {\n    var _this =  this;\n\n    console.log('event triggered: ', eventName);\n\n    var customEvent = new CustomEvent(eventName, {\n      detail: detail,\n    });\n\n    document.dispatchEvent(customEvent);\n  },\n\n};\n\nSite.Player = {\n  neverPlayed: true,\n  fadeTime:  2000,\n  streamUrl: 'http://streaming.radio.co/s0b5e9c02c/listen',\n  init: function() {\n    var _this = this;\n\n    // Player DOM elements\n    _this.playerContainer =  document.getElementById('player-container');\n    _this.playerElement =  document.getElementById('player');\n    _this.playerSrc =  document.getElementById('player-src');\n    _this.playButton =  document.getElementById('play-btn');\n    _this.pauseButton =  document.getElementById('pause-btn');\n    _this.streamStatusText =  document.getElementById('stream-status');\n    _this.nowPlayingText =  document.getElementById('now-playing');\n\n    // Bind event handlers\n    _this.handleOnlineStream = _this.handleOnlineStream.bind(_this);\n    _this.handleCanPlay = _this.handleCanPlay.bind(_this);\n    _this.handleOfflineStream = _this.handleOfflineStream.bind(_this);\n\n    // Subscribe to stream events\n    document.addEventListener('streamonline', _this.handleOnlineStream);\n    document.addEventListener('streamoffline', _this.handleOfflineStream);\n\n    // Subscribe to clic on player controls\n    _this.playButton.addEventListener('click', _this.play.bind(_this));\n    _this.pauseButton.addEventListener('click', _this.pause.bind(_this));\n\n  },\n\n  handleOnlineStream: function(event) {\n    var _this = this;\n\n    var data = event.detail;\n\n    // Add class `online` to the player container\n    _this.playerContainer.classList.add('online');\n\n    // Check if player src is empty\n    if (_this.playerSrc.src === '' || _this.playerElement.paused) {\n      // Add src\n      _this.playerSrc.src =  _this.streamUrl;\n\n      // Load src\n      _this.playerElement.load();\n    }\n\n    // Update marquee status\n    _this.streamStatusText.innerHTML = 'Ahora: ';\n\n    // Update Now playing\n    _this.nowPlayingText.innerHTML = data.current_track.title;\n\n    // If the player has never started playing\n    if (_this.neverPlayed) {\n      // We subscribe to the `canplay` event from the player\n      _this.playerElement.addEventListener('canplay', _this.handleCanPlay);\n    }\n  },\n\n  handleCanPlay: function(event) {\n    var _this = this;\n\n    // Play the audio element\n    _this.play();\n\n    // Remove listener cuz it's only needed once\n    event.target.removeEventListener(event.type, _this.handleCanPlay);\n\n  },\n\n  handleOfflineStream: function() {\n    var _this = this;\n\n    // Remove `online` class from the player container\n    _this.playerContainer.classList.remove('online');\n\n    // Update marquee status\n    _this.streamStatusText.innerHTML = 'Siguiente: ';\n\n    // Update the marquee text\n    _this.nowPlayingText.innerHTML = 'the upcoming show that has to be requested thru ajax';\n\n    // Pause the audio element\n    _this.pause();\n  },\n\n  play: function() {\n    var _this = this;\n\n    if( _this.playerElement.networkState !== 3) {\n\n      // Reset volume\n      _this.playerElement.volume = 0;\n\n      // Play audio element\n      _this.playerElement.play();\n\n      // Add `playing` class to player container\n      _this.playerContainer.classList.add('playing');\n\n\n      _this.neverPlayed = false;\n\n      // Calculate the volume increment\n      var volumeIncrement = 1 / (_this.fadeTime / 50);\n\n      // Fade in the volume\n      var fadeInterval = setInterval( function() {\n        var newVolume = _this.playerElement.volume + volumeIncrement;\n\n        if (newVolume > 1) {\n          newVolume = 1;\n        }\n\n        _this.playerElement.volume = newVolume;\n\n        if (_this.playerElement.volume >= 1) {\n          // Clear the interval\n          clearInterval(fadeInterval);\n\n        }\n      }, 50);\n    }\n  },\n\n  pause: function() {\n    var _this = this;\n\n    // Pause audio element\n    _this.playerElement.pause();\n\n    // Remove `playing` class from the player container\n    _this.playerContainer.classList.remove('playing');\n  },\n};\n\nSite.init();\n"]}