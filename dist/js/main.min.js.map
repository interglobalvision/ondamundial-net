{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","$","window","resize","onResize","document","ready","Programacion","fixWidows","each","string","html","replace","eventsPosts","JSON","parse","WP","programacionEvents","eventsObject","Object","sortEvents","forEach","el","eventMoment","moment","unix","parseInt","timestamp","year","format","month","monthNum","day","dayNum","hour","months","undefined","days","events","push","title","content","console","log","StreamChecker","statusUrl","statusCheckInterval","streamData","startChecker","checkStreamStatus","setInterval","getJSON","data","status","triggerEvent","fail","eventName","detail","customEvent","CustomEvent","dispatchEvent","Player","neverPlayed","fadeTime","streamUrl","playerContainer","getElementById","playerElement","playerSrc","playButton","pauseButton","streamStatusText","nowPlayingText","handleOnlineStream","bind","handleCanplay","handleOfflineStream","addEventListener","play","pause","volumeIncrement","event","classList","add","src","paused","load","innerHTML","current_track","target","removeEventListener","type","remove","networkState","volume","fadeInterval","newVolume","clearInterval"],"mappings":"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","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global $, jQuery, document, Site, Modernizr, Moment */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n    $(document).ready(function () {\n      //Site.Player.init();\n      Site.Programacion.init();\n    });\n\n    //Site.StreamChecker.init();\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nSite.Programacion = {\n  eventsPosts: JSON.parse(WP.programacionEvents),\n  eventsObject: new Object(),\n  init: function() {\n    var _this = this;\n\n    _this.sortEvents();\n  },\n\n  sortEvents: function() {\n    var _this = this;\n\n    _this.eventsPosts.forEach(function(el) {\n      // generate moment from timestamp in user local timezone\n      var eventMoment = moment.unix(parseInt(el.timestamp));\n\n      var year = eventMoment.format('YYYY');\n      var month = eventMoment.format('MMMM');\n      var monthNum = eventMoment.format('M');\n      var day = eventMoment.format('dddd Do');\n      var dayNum = eventMoment.format('D');\n      var hour = eventMoment.format('H:mm');\n\n      if (!_this.eventsObject[year]) {\n        _this.eventsObject[year] = [];\n        _this.eventsObject[year].months = [];\n      }\n\n      if (_this.eventsObject[year].months[monthNum] === undefined) {\n        _this.eventsObject[year].months[monthNum] = {\n          month: month,\n          days: []\n        };\n      }\n\n      if (_this.eventsObject[year].months[monthNum].days[dayNum] === undefined) {\n        _this.eventsObject[year].months[monthNum].days[dayNum] = {\n          day: day,\n          events: []\n        };\n      }\n\n      _this.eventsObject[year].months[monthNum].days[dayNum].events.push({\n        'hour': hour,\n        'title': el.title,\n        'content': el.content,\n      });\n    });\n\n    console.log(_this.eventsObject);\n  }\n}\n\nSite.StreamChecker = {\n  statusUrl: 'https://public.radio.co/stations/s0b5e9c02c/status',\n  statusCheckInterval: 5000,\n  streamData: null,\n  init: function() {\n    var _this = this;\n\n    _this.startChecker();\n  },\n\n  startChecker: function() {\n    var _this = this;\n\n\n    _this.checkStreamStatus();\n\n    // Start checker on an interval\n    setInterval(function() {\n      _this.checkStreamStatus();\n    }, _this.statusCheckInterval);\n  },\n\n  // Check the stream status thru ajax and change the player accordingly\n  checkStreamStatus: function() {\n    var _this = this;\n\n    // Make the ajax request\n    $.getJSON(_this.statusUrl, function(data) {\n\n      // Save data in a cache var, just in case\n      _this.streamData = data.status;\n\n      // Check if the stream is offline\n      if (data.status === 'offline') {\n\n        // Trigger the event\n        _this.triggerEvent('streamoffline', data);\n\n      } else if (data.status === 'online')  {  // else  (stream is online)\n\n        // Trigger the event\n        _this.triggerEvent('streamonline', data);\n      }\n    })\n    .fail( function() {\n      // Trigger the event\n      _this.triggerEvent('streamoffline');\n\n      console.log('Radio.co seems to be unresponsive');\n\n    });\n\n  },\n\n  triggerEvent: function(eventName, detail) {\n    var _this =  this;\n\n    console.log('event triggered: ', eventName);\n\n    var customEvent = new CustomEvent(eventName, {\n      detail: detail,\n    });\n\n    document.dispatchEvent(customEvent);\n  },\n\n};\n\nSite.Player = {\n  neverPlayed: true,\n  fadeTime:  2000,\n  streamUrl: 'http://streaming.radio.co/s0b5e9c02c/listen',\n  init: function() {\n    var _this = this;\n\n    // Player DOM elements\n    _this.playerContainer =  document.getElementById('player-container');\n    _this.playerElement =  document.getElementById('player');\n    _this.playerSrc =  document.getElementById('player-src');\n    _this.playButton =  document.getElementById('play-button');\n    _this.pauseButton =  document.getElementById('pause-button');\n    _this.streamStatusText =  document.getElementById('stream-status');\n    _this.nowPlayingText =  document.getElementById('now-playing');\n\n    // Bind event handlers\n    _this.handleOnlineStream = _this.handleOnlineStream.bind(_this);\n    _this.handleCanplay = _this.handleCanplay.bind(_this);\n    _this.handleOfflineStream = _this.handleOfflineStream.bind(_this);\n\n    // Subscribe to stream events\n    document.addEventListener('streamonline', _this.handleOnlineStream);\n    document.addEventListener('streamoffline', _this.handleOfflineStream);\n\n    // Subscribe to clic on player controls\n    _this.playButton.addEventListener('click', _this.play.bind(_this));\n    _this.pauseButton.addEventListener('click', _this.pause.bind(_this));\n\n\n    // Calculate the volume increment\n    _this.volumeIncrement = 1 / (_this.fadeTime / 50);\n\n  },\n\n  handleOnlineStream: function(event) {\n    var _this = this;\n\n    var data = event.detail;\n\n    // Add class `online` to the player container\n    _this.playerContainer.classList.add('online');\n\n    // Check if player src is empty\n    if (_this.playerSrc.src === '' || _this.playerElement.paused) {\n      // Add src\n      _this.playerSrc.src =  _this.streamUrl;\n\n      // Load src\n      _this.playerElement.load();\n    }\n\n    // Update marquee status\n    _this.streamStatusText.innerHTML = 'Ahora: ';\n\n    // Update Now playing\n    _this.nowPlayingText.innerHTML = data.current_track.title;\n\n    // If the player has never started playing\n    if (_this.neverPlayed) {\n      // We subscribe to the `canplay` event from the player\n      _this.playerElement.addEventListener('canplay', _this.handleCanplay);\n    }\n  },\n\n  handleCanplay: function(event) {\n    var _this = this;\n\n    // Play the audio element\n    _this.play();\n\n    // Remove listener cuz it's only needed once\n    event.target.removeEventListener(event.type, _this.handleCanplay);\n\n  },\n\n  handleOfflineStream: function() {\n    var _this = this;\n\n    // Remove `online` class from the player container\n    _this.playerContainer.classList.remove('online');\n\n    // Update marquee status\n    _this.streamStatusText.innerHTML = 'Siguiente: ';\n\n    // Update the marquee text\n    _this.nowPlayingText.innerHTML = 'the upcoming show that has to be requested thru ajax';\n\n    // Pause the audio element\n    _this.pause();\n  },\n\n  play: function() {\n    var _this = this;\n\n    if (_this.playerElement.networkState !== 3) {\n\n      // Reset volume\n      _this.playerElement.volume = 0;\n\n      // Play audio element\n      _this.playerElement.play();\n\n      // Add `playing` class to player container\n      _this.playerContainer.classList.add('playing');\n\n\n      _this.neverPlayed = false;\n\n      // Fade in the volume\n      var fadeInterval = setInterval( function() {\n        var newVolume = _this.playerElement.volume + _this.volumeIncrement;\n\n        if (newVolume > 1) {\n          newVolume = 1;\n        }\n\n        _this.playerElement.volume = newVolume;\n\n        if (_this.playerElement.volume >= 1) {\n          // Clear the interval\n          clearInterval(fadeInterval);\n\n        }\n      }, 50);\n    }\n  },\n\n  pause: function() {\n    var _this = this;\n\n    // Pause audio element\n    _this.playerElement.pause();\n\n    // Remove `playing` class from the player container\n    _this.playerContainer.classList.remove('playing');\n  },\n};\n\nSite.init();\n"]}