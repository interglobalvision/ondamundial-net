{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","$","window","resize","onResize","document","ready","Player","StreamChecker","fixWidows","each","string","html","replace","statusUrl","statusCheckInterval","streamData","startChecker","checkStreamStatus","setInterval","getJSON","data","status","triggerEvent","fail","console","log","eventName","detail","customEvent","CustomEvent","dispatchEvent","neverPlayed","fadeTime","streamUrl","playerContainer","getElementById","playerElement","playerSrc","playButton","pauseButton","streamStatusText","nowPlayingText","handleOnlineStream","bind","handleCanplay","handleOfflineStream","addEventListener","play","pause","volumeIncrement","event","classList","add","src","paused","load","innerHTML","current_track","title","target","removeEventListener","type","remove","networkState","volume","fadeInterval","newVolume","clearInterval"],"mappings":"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","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global $, jQuery, document, Site, Modernizr */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n    $(document).ready(function () {\n      Site.Player.init();\n    });\n\n    Site.StreamChecker.init();\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nSite.StreamChecker = {\n  statusUrl: 'https://public.radio.co/stations/s0b5e9c02c/status',\n  statusCheckInterval: 5000,\n  streamData: null,\n  init: function() {\n    var _this = this;\n\n    _this.startChecker();\n  },\n\n  startChecker: function() {\n    var _this = this;\n\n\n    _this.checkStreamStatus();\n\n    // Start checker on an interval\n    setInterval(function() {\n      _this.checkStreamStatus();\n    }, _this.statusCheckInterval);\n  },\n\n  // Check the stream status thru ajax and change the player accordingly\n  checkStreamStatus: function() {\n    var _this = this;\n\n    // Make the ajax request\n    $.getJSON(_this.statusUrl, function(data) {\n\n      // Save data in a cache var, just in case\n      _this.streamData = data.status;\n\n      // Check if the stream is offline\n      if (data.status === 'offline') {\n\n        // Trigger the event\n        _this.triggerEvent('streamoffline', data);\n\n      } else if (data.status === 'online')  {  // else  (stream is online)\n\n        // Trigger the event\n        _this.triggerEvent('streamonline', data);\n      }\n    })\n    .fail( function() {\n      // Trigger the event\n      _this.triggerEvent('streamoffline');\n\n      console.log('Radio.co seems to be unresponsive');\n\n    });\n\n  },\n\n  triggerEvent: function(eventName, detail) {\n    var _this =  this;\n\n    console.log('event triggered: ', eventName);\n\n    var customEvent = new CustomEvent(eventName, {\n      detail: detail,\n    });\n\n    document.dispatchEvent(customEvent);\n  },\n\n};\n\nSite.Player = {\n  neverPlayed: true,\n  fadeTime:  2000,\n  streamUrl: 'http://streaming.radio.co/s0b5e9c02c/listen',\n  init: function() {\n    var _this = this;\n\n    // Player DOM elements\n    _this.playerContainer =  document.getElementById('player-container');\n    _this.playerElement =  document.getElementById('player');\n    _this.playerSrc =  document.getElementById('player-src');\n    _this.playButton =  document.getElementById('play-button');\n    _this.pauseButton =  document.getElementById('pause-button');\n    _this.streamStatusText =  document.getElementById('stream-status');\n    _this.nowPlayingText =  document.getElementById('now-playing');\n\n    // Bind event handlers\n    _this.handleOnlineStream = _this.handleOnlineStream.bind(_this);\n    _this.handleCanplay = _this.handleCanplay.bind(_this);\n    _this.handleOfflineStream = _this.handleOfflineStream.bind(_this);\n\n    // Subscribe to stream events\n    document.addEventListener('streamonline', _this.handleOnlineStream);\n    document.addEventListener('streamoffline', _this.handleOfflineStream);\n\n    // Subscribe to clic on player controls\n    _this.playButton.addEventListener('click', _this.play.bind(_this));\n    _this.pauseButton.addEventListener('click', _this.pause.bind(_this));\n\n\n    // Calculate the volume increment\n    _this.volumeIncrement = 1 / (_this.fadeTime / 50);\n\n  },\n\n  handleOnlineStream: function(event) {\n    var _this = this;\n\n    var data = event.detail;\n\n    // Add class `online` to the player container\n    _this.playerContainer.classList.add('online');\n\n    // Check if player src is empty\n    if (_this.playerSrc.src === '' || _this.playerElement.paused) {\n      // Add src\n      _this.playerSrc.src =  _this.streamUrl;\n\n      // Load src\n      _this.playerElement.load();\n    }\n\n    // Update marquee status\n    _this.streamStatusText.innerHTML = 'Ahora: ';\n\n    // Update Now playing\n    _this.nowPlayingText.innerHTML = data.current_track.title;\n\n    // If the player has never started playing\n    if (_this.neverPlayed) {\n      // We subscribe to the `canplay` event from the player\n      _this.playerElement.addEventListener('canplay', _this.handleCanplay);\n    }\n  },\n\n  handleCanplay: function(event) {\n    var _this = this;\n\n    // Play the audio element\n    _this.play();\n\n    // Remove listener cuz it's only needed once\n    event.target.removeEventListener(event.type, _this.handleCanplay);\n\n  },\n\n  handleOfflineStream: function() {\n    var _this = this;\n\n    // Remove `online` class from the player container\n    _this.playerContainer.classList.remove('online');\n\n    // Update marquee status\n    _this.streamStatusText.innerHTML = 'Siguiente: ';\n\n    // Update the marquee text\n    _this.nowPlayingText.innerHTML = 'the upcoming show that has to be requested thru ajax';\n\n    // Pause the audio element\n    _this.pause();\n  },\n\n  play: function() {\n    var _this = this;\n\n    if (_this.playerElement.networkState !== 3) {\n\n      // Reset volume\n      _this.playerElement.volume = 0;\n\n      // Play audio element\n      _this.playerElement.play();\n\n      // Add `playing` class to player container\n      _this.playerContainer.classList.add('playing');\n\n\n      _this.neverPlayed = false;\n\n      // Fade in the volume\n      var fadeInterval = setInterval( function() {\n        var newVolume = _this.playerElement.volume + _this.volumeIncrement;\n\n        if (newVolume > 1) {\n          newVolume = 1;\n        }\n\n        _this.playerElement.volume = newVolume;\n\n        if (_this.playerElement.volume >= 1) {\n          // Clear the interval\n          clearInterval(fadeInterval);\n\n        }\n      }, 50);\n    }\n  },\n\n  pause: function() {\n    var _this = this;\n\n    // Pause audio element\n    _this.playerElement.pause();\n\n    // Remove `playing` class from the player container\n    _this.playerContainer.classList.remove('playing');\n  },\n};\n\nSite.init();\n"]}