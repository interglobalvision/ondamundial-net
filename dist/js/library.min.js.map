{"version":3,"sources":["lazysizes.js","moment.js","es.js","three.js","CanvasRenderer.js","Projector.js","mobile-detect.js","vue.js","howler.js"],"names":["window","factory","lazySizes","document","getElementsByClassName","lazySizesConfig","docElem","documentElement","Date","supportPicture","HTMLPictureElement","addEventListener","setTimeout","requestAnimationFrame","requestIdleCallback","regPicture","loadEvents","regClassCache","forEach","Array","prototype","hasClass","ele","cls","RegExp","test","addClass","setAttribute","trim","removeClass","reg","replace","addRemoveLoadEvents","dom","fn","add","action","evt","triggerEvent","elem","name","detail","noBubbles","noCancelable","event","createEvent","initCustomEvent","dispatchEvent","updatePolyfill","el","full","polyfill","picturefill","pf","reevaluate","elements","src","getCSS","style","getComputedStyle","getWidth","parent","width","offsetWidth","minSize","_lazysizesWidth","parentNode","rAF","running","waiting","fns","run","length","shift","apply","rafBatch","this","arguments","push","hidden","_lsFlush","rAFIt","simple","that","args","throttle","lastTime","rICTimeout","now","idleCallback","timeout","isPriority","delay","debounce","func","timestamp","later","last","loader","lazyloadElems","preloadElems","isCompleted","resetPreloadingTimer","loadMode","started","eLvW","elvH","eLtop","eLleft","eLright","eLbottom","defaultExpand","preloadExpand","hFac","regImg","regIframe","supportScroll","navigator","userAgent","currentExpand","isLoading","lowRuns","resetPreloading","e","target","isNestedVisible","elemExpand","outerRect","visible","body","offsetParent","getBoundingClientRect","left","right","top","bottom","checkElements","eLlen","i","rect","autoLoadElem","loadedSomething","elemNegativeExpand","elemExpandVal","beforeExpandVal","expand","clientHeight","clientWidth","expFactor","_lazyRace","innerWidth","innerHeight","unveilElement","preloadAfterLoad","sizesAttr","throttledCheckElements","switchLoadingClass","loadedClass","loadingClass","rafSwitchLoadingClass","rafedSwitchLoadingClass","changeIframeSrc","contentWindow","location","handleSources","source","customMedia","sourceSrcset","srcsetAttr","insertBefore","cloneNode","removeChild","lazyUnveil","isAuto","sizes","isImg","srcset","isPicture","firesLoad","defaultPrevented","autosizesClass","srcAttr","nodeName","clearTimeout","call","getElementsByTagName","lazyClass","complete","errorClass","autoSizer","updateElem","onload","afterScroll","_","preloadClass","MutationObserver","observe","childList","subtree","attributes","setInterval","readyState","checkElems","unveil","autosizesElems","sizeElement","sources","len","dataAttr","getSizeElement","updateElementsSizes","debouncedUpdateElementsSizes","init","prop","lazySizesDefaults","lazysizesConfig","cfg","uP","aC","rC","hC","fire","gW","module","exports","global","define","amd","moment","hooks","hookCallback","isArray","input","Object","toString","isObject","isObjectEmpty","obj","getOwnPropertyNames","k","hasOwnProperty","isUndefined","isNumber","isDate","map","arr","res","hasOwnProp","a","b","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","some","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","key","slice","join","Error","stack","deprecateSimple","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","_dayOfMonthOrdinalParse","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","zeroFill","targetLength","forceSign","absNumber","zerosToFill","pow","max","substr","addFormatToken","token","padded","callback","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInYear","year","isLeapYear","getIsLeapYear","makeGetSet","keepTime","set$1","get","month","daysInMonth","stringGet","stringSet","prioritized","mod","n","x","modMonth","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","createDate","y","d","h","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","oldLocale","locales","globalLocale","_abbr","require","getSetGlobalLocale","values","data","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","updateLocale","listLocales","keys","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","defaults","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","defaultLocaleMonthsShort","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","defaultLocaleWeekdaysShort","calculateOffset","obsOffset","militaryOffset","numOffset","obsOffsets","hm","configFromRFC2822","parsedArray","configFromString","aspNetJsonRegex","createFromInputFallback","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","clone$1","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","toFixed","total","asSeconds","totalSign","ymSign","daysSign","hmsSign","fun","t","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","parseTwoDigitYear","getSetYear","o","defaultLocaleMonths","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","monthsShortDot","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","weekdaysParseExact","THREE","EventDispatcher","Vector2","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","type","anisotropy","encoding","defineProperty","textureId","uuid","_Math","generateUUID","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","ClampToEdgeWrapping","LinearFilter","LinearMipMapLinearFilter","RGBAFormat","UnsignedByteType","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","LinearEncoding","onUpdate","Vector4","z","WebGLRenderTarget","height","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","Quaternion","_x","_y","_z","Vector3","Matrix4","error","DataTexture","NearestFilter","CubeTexture","images","CubeReflectionMapping","UniformContainer","seq","flatten","nBlocks","blockSize","firstElem","r","arrayCacheF32","Float32Array","allocTexUnits","renderer","arrayCacheI32","Int32Array","allocTextureUnit","setValue1f","gl","v","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","g","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","mat3array","setValue4fm","uniformMatrix4fv","mat4array","setValueT1","setTexture2D","emptyTexture","setValueT6","setTextureCube","emptyCubeTexture","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","size","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","setValueT6a","getPureArraySetter","SingleUniform","id","activeInfo","setValue","PureArrayUniform","StructuredUniform","addUniform","container","uniformObject","parseUniform","path","pathLength","RePathPart","matchEnd","idIsIndex","subscript","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","Color","setRGB","Box2","Infinity","WebGLFlareRenderer","state","textures","capabilities","vertices","faces","Uint16Array","vertexBuffer","createBuffer","elementBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","tempTexture","createTexture","occlusionTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","shader","vertexShader","fragmentShader","createProgram","vertex","getAttribLocation","uv","uniforms","renderType","occlusionMap","opacity","color","scale","rotation","screenPosition","createShader","FRAGMENT_SHADER","VERTEX_SHADER","precision","shaderSource","compileShader","attachShader","linkProgram","render","flares","scene","camera","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","disable","CULL_FACE","buffers","depth","setMask","flare","matrixWorld","applyMatrix4","matrixWorldInverse","projectionMatrix","copy","containsPoint","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","reset","CanvasTexture","canvas","needsUpdate","WebGLSpriteRenderer","position","uvOffset","uvScale","modelViewMatrix","fogType","fogDensity","fogNear","fogFar","fogColor","alphaTest","createElementNS","context","getContext","fillStyle","fillRect","painterSortStable","renderOrder","spritePosition","spriteRotation","spriteScale","sprites","oldFogType","sceneFogType","fog","isFog","near","far","isFogExp2","density","multiplyMatrices","material","onBeforeRender","decompose","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","setTest","depthTest","depthWrite","onAfterRender","Material","materialId","lights","NormalBlending","side","FrontSide","flatShading","vertexColors","NoColors","transparent","SrcAlphaFactor","OneMinusSrcAlphaFactor","AddEquation","depthFunc","LessEqualDepth","clippingPlanes","clipIntersection","clipShadows","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","overdraw","userData","ShaderMaterial","parameters","defines","linewidth","wireframe","wireframeLinewidth","clipping","skinning","morphTargets","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","uv2","index0AttributeName","setValues","MeshDepthMaterial","depthPacking","BasicDepthPacking","alphaMap","displacementMap","displacementScale","displacementBias","MeshDistanceMaterial","referencePosition","nearDistance","farDistance","Box3","Sphere","center","radius","Matrix3","Plane","normal","constant","Frustum","p0","p5","planes","WebGLShadowMap","_renderer","_objects","maxTextureSize","getDepthMaterial","object","isPointLight","lightPositionWorld","shadowCameraNear","shadowCameraFar","geometry","materialVariants","_depthMaterials","customMaterial","customDepthMaterial","_distanceMaterials","customDistanceMaterial","useMorphing","isBufferGeometry","morphAttributes","isGeometry","isSkinnedMesh","useSkinning","variantIndex","_MorphingFlag","_SkinningFlag","localClippingEnabled","keyA","keyB","materialsForVariant","_materialCache","cachedMaterial","scope","renderSingleSided","DoubleSide","renderReverseSided","BackSide","isMeshDistanceMaterial","renderObject","shadowCamera","layers","isMesh","isLine","isPoints","castShadow","frustumCulled","_frustum","intersectsObject","update","groups","kl","group","groupMaterial","materialIndex","depthMaterial","_lightPositionWorld","renderBufferDirect","children","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_NumberOfMaterialVariants","cubeDirections","cubeUps","cube2DViewPorts","RGBADepthPacking","distanceMaterial","enabled","autoUpdate","PCFShadowMap","_gl","_state","setClear","setScissorTest","faceCount","il","light","shadow","mapSize","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","matrix","setFromMatrixPosition","makeTranslation","lookAt","updateMatrixWorld","multiply","setRenderTarget","clear","face","up","vpDimensions","setFromMatrix","WebGLAttributes","attribute","bufferType","usage","dynamic","DYNAMIC_DRAW","buffer","onUploadCallback","Float64Array","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","INT","Int8Array","BYTE","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","count","bufferSubData","subarray","isInterleavedBufferAttribute","remove","deleteBuffer","Euler","order","_order","DefaultOrder","Layers","mask","Object3D","onRotationChange","quaternion","setFromEuler","onQuaternionChange","setFromQuaternion","object3DId","DefaultUp","onChange","defineProperties","enumerable","normalMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","Camera","OrthographicCamera","zoom","view","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","Face3","isVector3","vertexNormals","isColor","GeometryIdCount","Geometry","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","boundingSphere","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","TypeError","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","indices","normals","uvs","uvs2","arrayMax","BufferGeometry","drawRange","start","BoxGeometry","widthSegments","heightSegments","depthSegments","fromBufferGeometry","BoxBufferGeometry","mergeVertices","buildPlane","udir","vdir","gridX","gridY","ix","iy","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","vector","numberOfVertices","addGroup","groupStart","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","MeshBasicMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","envMap","combine","MultiplyOperation","reflectivity","refractionRatio","wireframeLinecap","wireframeLinejoin","Ray","origin","Line3","end","Triangle","Mesh","random","drawMode","TrianglesDrawMode","updateMorphTargets","WebGLBackground","geometries","renderList","forceClear","background","clearColor","clearAlpha","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","boxMesh","ShaderLib","cube","removeAttribute","makeScale","copyPosition","tCube","isTexture","planeCamera","planeMesh","alpha","getClearColor","setClearColor","getClearAlpha","setClearAlpha","reversePainterSortStable","WebGLRenderList","renderItemsIndex","opaque","renderItem","renderItems","WebGLRenderLists","hash","list","lists","dispose","absNumericalSort","WebGLMorphtargets","objectInfluences","morphTargetInfluences","influences","influencesList","influence","morphInfluences","getUniforms","WebGLIndexedBufferRenderer","infoRender","setMode","mode","calls","POINTS","points","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLGeometries","infoMemory","onGeometryDispose","buffergeometry","removeEventListener","wireframeAttributes","_bufferGeometry","setFromObject","geometryAttributes","getWireframeAttribute","geometryIndex","UniformsCache","shadowBias","shadowRadius","shadowMapSize","distance","coneCos","penumbraCos","decay","skyColor","groundColor","halfWidth","halfHeight","WebGLLights","setup","shadows","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","viewMatrix","intensity","isAmbientLight","isDirectionalLight","cache","multiplyScalar","vector3","sub","transformDirection","bias","directionalShadowMap","directionalShadowMatrix","directional","isSpotLight","cos","angle","penumbra","spotShadowMap","spotShadowMatrix","spot","isRectAreaLight","matrix42","identity","matrix4","premultiply","extractRotation","rectArea","pointShadowMap","pointShadowMatrix","point","isHemisphereLight","normalize","hemi","ambient","WebGLObjects","frame","updateList","updateFromObject","addLineNumbers","lines","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getEncodingComponents","sRGBEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","GammaEncoding","getTexelDecodingFunction","functionName","components","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","generateExtensions","rendererExtensions","envMapCubeUV","bumpMap","normalMap","logarithmicDepthBuffer","filter","filterEmptyLine","generateDefines","chunks","fetchAttributeLocations","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","parseIncludes","include","ShaderChunk","pattern","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","PCFSoftShadowMap","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","CubeRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","MixOperation","AddOperation","prefixVertex","prefixFragment","gammaFactorDefine","gammaFactor","customExtensions","customDefines","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","emissiveMap","roughnessMap","metalnessMap","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","sizeAttenuation","gradientMap","numClipIntersection","physicallyCorrectLights","NoToneMapping","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","isShaderMaterial","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","log","deleteShader","cachedUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","programIdCount","usedTimes","WebGLPrograms","allocateBones","skeleton","bones","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","isWebGLRenderTarget","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","getParameters","nClipPlanes","nClipIntersection","shaderID","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","maxMorphTargets","maxMorphNormals","getProgramCode","onBeforeCompile","acquireProgram","p","pl","programInfo","releaseProgram","pop","WebGLTextures","properties","utils","clampToMaxSize","maxSize","drawImage","isPowerOfTwo","makePowerOfTwo","HTMLImageElement","HTMLCanvasElement","nearestPowerOfTwo","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","filterFallback","f","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LINEAR","onTextureDispose","deallocateTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","isWebGLRenderTargetCube","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","__version","uploadTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","isDataTexture","cubeImage","maxCubemapSize","isPowerOfTwoImage","glFormat","convert","glType","setTextureParameters","mipmap","RGBFormat","getCompressedTextureFormats","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","generateMipmap","setTextureCubeDynamic","textureType","FloatType","HalfFloatType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","_isWebGL2","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DepthFormat","UnsignedShortType","UnsignedIntType","DepthStencilFormat","DEPTH_STENCIL","UnsignedInt248Type","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","webglDepthTexture","setupDepthRenderbuffer","isCube","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGL2RenderingContext","WebGLProperties","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","equals","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","newAttributes","enabledAttributes","enableVertexAttribArray","attributeDivisors","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","compressedTextureFormats","getParameter","COMPRESSED_TEXTURE_FORMATS","currentProgram","NoBlending","CustomBlending","currentBlending","currentPremultipledAlpha","AdditiveBlending","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","SubtractiveBlending","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","MultiplyBlending","SRC_COLOR","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","setMaterial","setFlipSided","colorBuffer","setPolygonOffset","currentFlipSided","frontFace","CW","CCW","setCullFace","cullFace","CullFaceNone","currentCullFace","CullFaceBack","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setLineWidth","currentLineWidth","lineWidthAvailable","lineWidth","factor","POLYGON_OFFSET_FILL","currentPolygonOffsetFactor","currentPolygonOffsetUnits","SCISSOR_TEST","webglSlot","maxTextures","currentTextureSlot","webglType","boundTexture","currentBoundTextures","emptyTextures","currentScissor","currentViewport","maxVertexAttributes","MAX_VERTEX_ATTRIBS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","VERSION","WebGLCapabilities","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","ArrayCamera","cameras","WebVRManager","onVRDisplayPresentChange","device","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","currentPixelRatio","getPixelRatio","currentSize","getSize","setDrawingBufferSize","frameData","VRFrameData","standingMatrix","standingMatrixInverse","cameraL","bounds","cameraR","cameraVR","standing","getDevice","setDevice","getCamera","depthNear","depthFar","getFrameData","pose","fromArray","orientation","stageParameters","sittingToStandingTransform","getInverse","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebGLExtensions","getExtension","WebGLClipping","resetGlobalState","uniform","globalState","numGlobalPlanes","numPlanes","numIntersection","projectPlanes","dstOffset","skipTransform","nPlanes","dstArray","flatSize","viewNormalMatrix","getNormalMatrix","i4","plane","renderingShadows","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLUtils","RepeatWrapping","REPEAT","MirroredRepeatWrapping","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LinearMipMapNearestFilter","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UnsignedShort4444Type","UNSIGNED_SHORT_4_4_4_4","UnsignedShort5551Type","UNSIGNED_SHORT_5_5_5_1","UnsignedShort565Type","UNSIGNED_SHORT_5_6_5","ByteType","ShortType","IntType","HALF_FLOAT_OES","AlphaFormat","ALPHA","LuminanceFormat","LUMINANCE","LuminanceAlphaFormat","LUMINANCE_ALPHA","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","DstAlphaFactor","DST_ALPHA","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","DstColorFactor","DST_COLOR","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","RGB_ETC1_Format","COMPRESSED_RGB_ETC1_WEBGL","MinEquation","MaxEquation","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","WebGLRenderer","getTargetPixelRatio","_currentRenderTarget","_pixelRatio","initGLContext","MaxIndex","_currentScissor","_scissor","_currentViewport","_viewport","_infoMemory","objects","_infoRender","morphtargets","programCache","_this","renderLists","_premultipliedAlpha","bufferRenderer","indexedBufferRenderer","flareRenderer","spriteRenderer","onContextLost","preventDefault","_isContextLost","onContextRestore","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","setupVertexAttributes","startIndex","isInstancedBufferGeometry","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","isAnimating","vr","loop","onAnimationFrame","projectObject","sortObjects","isLight","lightsArray","shadowsArray","isSprite","intersectsSprite","spritesArray","isLensFlare","flaresArray","isImmediateRenderObject","_vector3","currentRenderList","renderObjects","overrideMaterial","isArrayCamera","_currentArrayCamera","camera2","_width","_height","setProgram","_currentGeometryProgram","initMaterial","materialProperties","_clipping","programChange","UniformsUtils","numSupportedMorphTargets","numSupportedMorphNormals","lightsHash","ambientLightColor","directionalLights","spotLights","rectAreaLights","pointLights","hemisphereLights","progUniforms","uniformsList","seqWithValue","_usedTextureUnits","_clippingEnabled","_localClippingEnabled","_currentCamera","useCache","_currentMaterialId","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","isMeshBasicMaterial","setOptional","boneTexture","sqrt","nextPowerOfTwo","boneMatrices","boneTextureSize","toneMappingExposure","toneMappingWhitePoint","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isShadowMaterial","ltcMat","UniformsLib","LTC_MAT_TEXTURE","ltcMag","LTC_MAG_TEXTURE","upload","diffuse","emissive","emissiveIntensity","flipEnvMap","uvScaleMap","offsetRepeat","dashSize","totalSize","gapSize","specular","shininess","bumpScale","normalScale","roughness","metalness","envMapIntensity","clearCoat","clearCoatRoughness","textureUnit","REVISION","_canvas","_context","_alpha","_depth","_stencil","_antialias","antialias","_preserveDrawingBuffer","preserveDrawingBuffer","domElement","_currentFramebuffer","_currentScissorTest","_scissorTest","memory","contextAttributes","rangeMin","rangeMax","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","nx","ny","nz","uvArray","colorArray","geometryProgram","updateBuffers","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TriangleStripDrawMode","TRIANGLE_STRIP","TriangleFanDrawMode","TRIANGLE_FAN","isLineSegments","isLineLoop","LINE_LOOP","LINE_STRIP","compile","traverse","animate","isCamera","opaqueObjects","transparentObjects","setFaceCulling","frontFaceDirection","FrontFaceDirectionCW","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","SpriteMaterial","Sprite","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","Group","VideoTexture","video","HAVE_CURRENT_DATA","CompressedTexture","DepthTexture","WireframeGeometry","ol","edge1","edge2","edge","edges","index1","index2","getX","fromBufferAttribute","ParametricGeometry","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","subVectors","crossVectors","PolyhedronGeometry","PolyhedronBufferGeometry","subdivideFace","cols","aj","lerp","bj","rows","pushVertex","correctSeam","uvBuffer","x0","x1","x2","getVertexByIndex","correctUVs","centroid","uvA","uvB","uvC","divideScalar","azi","azimuth","correctUV","PI","atan2","inclination","computeVertexNormals","normalizeNormals","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","generateSegment","P","getPointAt","N","frames","B","sin","generateIndices","generateUVs","computeFrenetFrames","TorusKnotGeometry","tube","q","heightScale","TorusKnotBufferGeometry","calculatePositionOnCurve","cu","su","quOverP","cs","P1","P2","T","addVectors","cx","cy","TorusGeometry","arc","TorusBufferGeometry","ExtrudeGeometry","shapes","ExtrudeBufferGeometry","addShapeList","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","curveSegments","amount","bevelThickness","bevelSize","bevelEnabled","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","clamp","inverseSegments","phi","n1","n2","ShapeGeometry","ShapeBufferGeometry","addShape","shape","shapeHole","indexOffset","extractPoints","shapeVertices","shapeHoles","holes","ShapeUtils","isClockWise","reverse","triangulateShape","concat","EdgesGeometry","thresholdAngle","geometry2","thresholdDot","DEG2RAD","computeFaceNormals","sourceVertices","face1","face2","dot","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","generateCap","centerIndexStart","centerIndexEnd","theta","cosTheta","sinTheta","indexArray","slope","indexRow","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","RawShaderMaterial","STANDARD","PHYSICAL","TOON","LoadingManager","onLoad","onProgress","onError","itemsLoaded","itemsTotal","onStart","itemStart","url","itemEnd","itemError","FileLoader","manager","DefaultLoadingManager","CompressedTextureLoader","_parser","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Light","HemisphereLight","updateMatrix","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","constructor","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrackConstructor","times","interpolation","AnimationUtils","convertArray","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","optimize","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","AnimationClip","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","Loader","onLoadStart","onLoadProgress","onLoadComplete","JSONLoader","withCredentials","ObjectLoader","texturePath","CatmullRom","v0","v1","t2","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","Curve","arcLengthDivisions","LineCurve","v2","CurvePath","curves","autoClose","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","SplineCurve","CubicBezierCurve","v3","QuadraticBezierCurve","Path","currentPoint","fromPoints","Shape","ShapePath","subPaths","currentPath","Font","FontLoader","AudioLoader","StereoCamera","eyeSep","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","AudioContext","gain","createGain","connect","destination","Audio","listener","getInput","autoplay","startTime","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","typeName","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","node","findNode","AnimationObjectGroup","var_args","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","AnimationAction","mixer","clip","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","endingStart","ZeroCurvatureEnding","endingEnd","interpolant","createInterpolant","settings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","LoopRepeat","_loopCount","_startTime","timeScale","_effectiveTimeScale","weight","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","ray","params","PointCloud","ascSort","intersectObject","raycaster","intersects","recursive","raycast","Clock","autoStart","oldTime","elapsedTime","Spherical","Cylindrical","ImmediateRenderObject","renderCallback","VertexNormalsHelper","hex","nNormals","objGeometry","positions","SpotLightHelper","cone","getBoneList","boneList","isBone","SkeletonHelper","color1","color2","bone","VertexColors","PointLightHelper","sphereSize","RectAreaLightHelper","line","HemisphereLightHelper","rotateY","getAttribute","GridHelper","divisions","step","halfSize","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","addLine","addPoint","pointMap","FaceColors","colorFrustum","colorCone","colorUp","colorTarget","colorCross","BoxHelper","Box3Helper","box","computeBoundingSphere","PlaneHelper","positions2","ArrowHelper","dir","headLength","headWidth","lineGeometry","coneGeometry","translate","setDirection","setLength","AxisHelper","CubicPoly","t0","t1","c0","c1","c2","c3","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","CatmullRomCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","ArcCurve","aRadius","Face4","MeshFaceMaterial","materials","MultiMaterial","isMultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","setDynamic","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","ClosedSplineCurve3","SplineCurve3","Spline","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","Projector","projectVector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","Number","EPSILON","isInteger","assign","nextKey","_listeners","listeners","hasEventListener","listenerArray","splice","MOUSE","LEFT","MIDDLE","RIGHT","RGBEFormat","RAD2DEG","chars","rnd","euclideanModulo","mapLinear","a1","a2","b1","b2","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addScalar","addScaledVector","subScalar","divide","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","lengthSq","lengthManhattan","distanceTo","distanceToSquared","dx","dy","distanceToManhattan","lerpVectors","getY","rotateAround","meta","metadata","generator","wrap","ImageData","putImageData","toDataURL","transformUv","isVector4","setZ","setW","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","zz","xy","xz","yz","getZ","getW","create","slerp","qa","qb","qm","slerpFlat","dst","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","y1","z1","w1","sqrSin","tDir","onChangeCallback","euler","isEuler","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","qx","qy","qz","qw","iz","iw","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setFromSpherical","sinPhiRadius","setFromCylindrical","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","me","extractBasis","xAxis","yAxis","zAxis","makeBasis","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","setXYZ","determinant","transpose","setPosition","throwOnDegenerate","t11","t12","t13","t14","det","detInv","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeShear","compose","invSX","invSY","invSZ","makePerspective","makeOrthographic","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","setHex","setStyle","setHSL","hue2rgb","handleAlpha","copyGammaToLinear","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","addColors","common","specularmap","envmap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","merge","merged","uniforms_src","uniforms_dst","parameter_src","isMatrix3","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","basic","lambert","phong","standard","dashed","tFlip","equirect","tEquirect","distanceRGBA","physical","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","isEmpty","getCenter","expandByVector","expandByScalar","containsBox","intersectsBox","clampPoint","distanceToPoint","intersect","union","isMaterial","newValue","currentValue","extractFromCache","isRoot","JSON","stringify","parse","srcPlanes","dstPlanes","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","expandByObject","intersectsSphere","closestPoint","sphere","intersectsPlane","getBoundingSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","setFromMatrix4","transposeIntoArray","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","referencePoint","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","negRadius","d1","d2","RotationOrders","asin","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","toggle","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateX","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","force","serialize","library","element","isRootObject","uuids","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","computeBoundingBox","addFace","tempNormals","tempUVs","tempUVs2","cb","ab","fl","vA","vB","vC","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","verticesMap","unique","changes","faceIndicesToRemove","idx","sortFacesByMaterialIndex","materialIndexSort","_id","newUvs1","newUvs2","setBit","getNormalIndex","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","copyAt","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","getIndex","clearGroups","setDrawRange","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","morphAttribute","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","edgeList","projectedPoint","minDistance","setDrawMode","ml","morphTargetDictionary","String","uvIntersection","uv1","uv3","barycoord","checkIntersection","intersectionPointWorld","checkBufferGeometryIntersection","intersection","intersectionPoint","faceIndex","inverseMatrix","tempA","tempB","tempC","fvA","fvB","fvC","faceMaterial","tl","targets","uvs_f","vecX","vecY","wantedRotation","isSpriteMaterial","intersectPoint","worldPosition","worldScale","guessSizeSq","level","addLevel","getObjectForDistance","matrixPosition","offsetMatrix","identityMatrix","gbone","rotq","scl","sw","vec","skinWeight","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","testPoint","rayPointDistanceSq","localThresholdSq","distanceToRay","localThreshold","contour","triangulate","snip","verts","px","py","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","allPointsMap","allpoints","hl","shapeWithoutHoles","hole","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","indepHoles","failedCuts","minShapeIndex","counter","h2","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","inShapePt","inHolePt","sIdx","nextIdx","ihIdx","chkHole","hIdx","triangles","pts","getArrays","positionAttribute","verticesArray","uvAttribute","IndexAttribute","sl","arrays","scalePt2","pt","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","sidewalls","layeroffset","steps","bevelSegments","slen1","vlen","slen2","f4","placeholder","f3","addVertex","nextIndex","uvgen","generateTopUV","addUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","indicesArray","vector2","extrudePts","splineTube","binormal","position2","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","getSpacedPoints","ahole","shapePoints","bs","vert","flen","contourMovements","oneHoleMovements","holesMovements","verticesMovements","extrudeMaterial","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","Geometries","freeze","Materials","Cache","files","file","load","cached","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","ArrayBuffer","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","status","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loaded","texDatas","mipmapCount","isCubemap","texData","crossOrigin","setCrossOrigin","urls","isJPEG","search","arraySlice","isTypedArray","forceClone","isView","DataView","getKeyframeOrder","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","KeyframeTrackPrototype","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","message","ValueTypeName","getInterpolation","timeOffset","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","json","trackType","_getTrackTypeForValueTypeName","track","jsonTracks","frameTime","fps","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","animationMorphTargets","clips","parseAnimation","animation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","shading","typedArray","TYPED_ARRAYS","drawcalls","offsets","Handlers","handlers","extractUrlBase","initMaterials","createMaterial","BlendingMode","textureLoader","materialLoader","loadTexture","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","getPoint","getUtoTmapping","getPoints","getLength","lengths","getLengths","cacheArcLengths","current","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","isLineCurve","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","twoPi","deltaAngle","samePoints","intPoint","point0","point1","point2","point3","PathPrototype","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","extractAllPoints","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","solid","holesFirst","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","froms","tos","tmpHoles","createPath","glyph","glyphs","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","ha","paths","line_height","yMax","yMin","underlineThickness","char","webkitAudioContext","setContext","decodeAudioData","audioBuffer","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","positionX","setValueAtTime","currentTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setBuffer","play","createBufferSource","onended","onEnded","pause","stop","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","isInterleavedBuffer","setFromCamera","coords","intersectObjects","performance","getElapsedTime","getDelta","newTime","makeSafe","vec3","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","hx","hy","setPoint","setColor","pz","SceneUtils","createMultiMaterialObject","detach","attach","construct","initFromArray","getControlPointsArray","reparametrizeByArcLength","samplingCoef","setColors","isIntersectionBox","isIntersectionSphere","random16","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","extrude","makeGeometry","fromAttribute","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","getCurrentRenderTarget","getPrecision","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","getData","updateCubeMap","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CullFaceFrontBack","FrontFaceDirectionCCW","BasicShadowMap","FlatShading","SmoothShading","LoopOnce","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroSlopeEnding","WrapAroundEnding","LogLuvEncoding","CubeGeometry","LineStrip","LinePieces","SpriteCanvasMaterial","isSpriteCanvasMaterial","calculateLights","_ambientLight","_directionalLights","_pointLights","ll","_lights","lightColor","calculateLight","_lightColor","lightPosition","renderSprite","setOpacity","_canvasWidthHalf","_canvasHeightHalf","dist","_elemBox","_patterns","textureToPattern","setFillStyle","bitmap","ox","oy","save","rotate","setStrokeStyle","renderLine","beginPath","setLineCap","setLineJoin","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","setLineDash","stroke","renderFace3","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","drawTriangle","_diffuseColor","_emissiveColor","_color","_centroid","positionWorld","normalModel","strokePath","fillPath","_uvs","patternPath","_normal","vertexNormalsModel","_normalViewMatrix","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","fill","repeatX","repeatY","mirrorX","mirrorY","createElement","setTransform","createPattern","u0","u1","u2","idet","transform","pixels","_contextGlobalAlpha","globalAlpha","_contextGlobalCompositeOperation","globalCompositeOperation","_contextLineWidth","_contextLineCap","lineCap","_contextLineJoin","lineJoin","_contextStrokeStyle","strokeStyle","_contextFillStyle","_contextLineDash","_renderData","_elements","_v1","_v2","_v3","_projector","_canvasWidth","_canvasHeight","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_clearColor","_clearAlpha","_clipBox","_clearBox","sortElements","setClearColorHex","clearRect","projectScene","RenderableSprite","RenderableLine","RenderableFace","RenderableObject","RenderableVertex","vertexNormalsLength","addObject","_object","getNextObjectInPool","_viewProjectionMatrix","pushPoint","_vector4","invW","_sprite","getNextSpriteInPool","_objectCount","_objectPoolLength","_objectPool","getNextVertexInPool","_vertexCount","_vertexPoolLength","_vertexPool","getNextFaceInPool","_faceCount","_facePoolLength","_facePool","getNextLineInPool","_lineCount","_linePoolLength","_linePool","_spriteCount","_spritePoolLength","_spritePool","painterSort","clipLine","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","_vertex","_face","_line","_modelMatrix","_boundingBox","_points3","_viewMatrix","_modelViewProjectionMatrix","_normalMatrix","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","RenderList","setObject","projectVertex","pushNormal","pushColor","pushUv","checkTriangleVisibility","checkBackfaceCulling","pushLine","pushTriangle","targetVertex","nl","equalIC","containsIC","valueLC","convertPropsToRegExp","MobileDetect","maxPhoneWidth","ua","_cache","impl","mobileDetectRules","phones","iPhone","BlackBerry","HTC","Nexus","Dell","Motorola","Samsung","LG","Sony","Asus","NokiaLumia","Micromax","Palm","Vertu","Pantech","Fly","Wiko","iMobile","SimValley","Wolfgang","Alcatel","Nintendo","Amoi","INQ","GenericPhone","tablets","iPad","NexusTablet","SamsungTablet","Kindle","SurfaceTablet","HPTablet","AsusTablet","BlackBerryTablet","HTCtablet","MotorolaTablet","NookTablet","AcerTablet","ToshibaTablet","LGTablet","FujitsuTablet","PrestigioTablet","LenovoTablet","DellTablet","YarvikTablet","MedionTablet","ArnovaTablet","IntensoTablet","IRUTablet","MegafonTablet","EbodaTablet","AllViewTablet","ArchosTablet","AinolTablet","NokiaLumiaTablet","SonyTablet","PhilipsTablet","CubeTablet","CobyTablet","MIDTablet","MSITablet","SMiTTablet","RockChipTablet","FlyTablet","bqTablet","HuaweiTablet","NecTablet","PantechTablet","BronchoTablet","VersusTablet","ZyncTablet","PositivoTablet","NabiTablet","KoboTablet","DanewTablet","TexetTablet","PlaystationTablet","TrekstorTablet","PyleAudioTablet","AdvanTablet","DanyTechTablet","GalapadTablet","MicromaxTablet","KarbonnTablet","AllFineTablet","PROSCANTablet","YONESTablet","ChangJiaTablet","GUTablet","PointOfViewTablet","OvermaxTablet","HCLTablet","DPSTablet","VistureTablet","CrestaTablet","MediatekTablet","ConcordeTablet","GoCleverTablet","ModecomTablet","VoninoTablet","ECSTablet","StorexTablet","VodafoneTablet","EssentielBTablet","RossMoorTablet","iMobileTablet","TolinoTablet","AudioSonicTablet","AMPETablet","SkkTablet","TecnoTablet","JXDTablet","iJoyTablet","FX2Tablet","XoroTablet","ViewsonicTablet","OdysTablet","CaptivaTablet","IconbitTablet","TeclastTablet","OndaTablet","JaytechTablet","BlaupunktTablet","DigmaTablet","EvolioTablet","LavaTablet","AocTablet","MpmanTablet","CelkonTablet","WolderTablet","MiTablet","NibiruTablet","NexoTablet","LeaderTablet","UbislateTablet","PocketBookTablet","KocasoTablet","HisenseTablet","Hudl","TelstraTablet","GenericTablet","oss","AndroidOS","BlackBerryOS","PalmOS","SymbianOS","WindowsMobileOS","WindowsPhoneOS","iOS","MeeGoOS","MaemoOS","JavaOS","webOS","badaOS","BREWOS","uas","Chrome","Dolfin","Opera","Skyfire","Edge","IE","Firefox","Bolt","TeaShark","Blazer","Safari","UCBrowser","baiduboxapp","baidubrowser","DiigoBrowser","Puffin","Mercury","ObigoBrowser","NetFront","GenericBrowser","PaleMoon","props","Mobile","Build","Version","VendorID","iPod","Coast","Fennec","NokiaBrowser","Opera Mini","Opera Mobi","UC Browser","MQQBrowser","MicroMessenger","SamsungBrowser","Iron","Tizen","Webkit","Gecko","Trident","Presto","Goanna","Android","BREW","Java","Windows Phone OS","Windows Phone","Windows CE","Windows NT","Symbian","Bot","MobileBot","DesktopMode","TV","WebKit","Console","Watch","detectMobileBrowsers","fullPattern","shortPattern","tabletPattern","FALLBACK_PHONE","FALLBACK_TABLET","FALLBACK_MOBILE","verPos","oss0","findMatch","rules","findMatches","getVersionStr","patterns","getVersion","prepareVersionNo","numbers","isMobileFallback","isTabletFallback","prepareDetectionCache","mobile","phone","tablet","phoneSized","isPhoneSized","mobileGrade","$isMobile","os","is","detectOS","getDeviceSmallerSide","screen","userAgents","versionStr","grade","_impl","Vue","isUndef","isDef","isTrue","isFalse","isPrimitive","toRawType","_toString","isPlainObject","isRegExp","isValidArrayIndex","toNumber","makeMap","str","expectsLowerCase","item","hasOwn","ctx","boundFn","_length","_from","noop","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","keysA","keysB","looseIndexOf","once","called","isReserved","def","writable","configurable","parsePath","bailRE","isNative","Ctor","pushTarget","_target","Dep","targetStack","popTarget","createTextVNode","VNode","cloneVNode","vnode","deep","cloned","tag","elm","componentOptions","asyncFactory","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","protoAugment","__proto__","copyAugment","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive","customSetter","shallow","dep","property","getOwnPropertyDescriptor","childOb","depend","dependArray","newVal","notify","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","assertObjectType","checkComponents","lower","isBuiltInTag","isReservedTag","normalizeProps","camelize","normalizeInject","inject","normalizeDirectives","dirs","directives","mergeOptions","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isType","Boolean","hyphenate","getPropDefaultValue","prevShouldConvert","assertProp","default","$options","_props","getType","required","expectedTypes","assertedType","assertType","expectedType","validator","simpleCheckRE","handleError","err","cur","$parent","errorCaptured","capture","globalHandleError","errorHandler","logError","inBrowser","flushCallbacks","copies","callbacks","withMacroTask","_withTask","useMacroTask","nextTick","_resolve","macroTimerFunc","microTimerFunc","Promise","resolve","createFnInvoker","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","old","normalizeEvent","passive","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","extractPropsFromVNodeData","attrs","altKey","keyInLowerCase","tip","formatComponentName","checkProp","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","_isVList","ensureCtor","comp","__esModule","hasSymbol","Symbol","toStringTag","createAsyncPlaceholder","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","then","component","isAsyncPlaceholder","getFirstComponentChild","initEvents","_events","_hasHookEvent","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","functionalContext","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","template","callHook","updateComponent","mark","_name","_uid","startTag","endTag","_render","measure","Watcher","$vnode","updateChildComponent","parentVnode","renderChildren","isUpdatingChildComponent","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","deactivateChildComponent","$emit","resetSchedulerState","queue","activatedChildren","has","circular","flushing","flushSchedulerQueue","watcher","MAX_UPDATE_COUNT","user","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","emit","queueActivatedComponent","queueWatcher","seenObjects","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","opts","initProps","methods","initMethods","initData","computed","initComputed","watch","nativeWatch","initWatch","propsOptions","hyphenatedKey","isReservedAttribute","isReservedAttr","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","$data","defineComputed","shouldCache","createComputedGetter","dirty","handler","createWatcher","keyOrFn","$watch","initProvide","provide","_provided","initInjections","resolveInject","Reflect","ownKeys","provideKey","provideDefault","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","_rendered","resolveFilter","checkKeyCodes","eventKeyCode","builtInAlias","eventKeyName","keyCodes","bindObjectProps","asProp","isSync","mustUseProp","domProps","$event","renderStatic","isInFor","renderFns","staticRenderFns","tree","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","existing","ours","installRenderHelpers","_o","_n","_s","_t","_q","_m","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","injections","contextVm","isCompiled","_compiled","needNormalization","_scopeId","_c","functionalScopeId","createFunctionalComponent","mergeProps","renderContext","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","transformModel","functional","nativeOn","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","hooksToMerge","fromParent","componentVNodeHooks","mergeHook$1","one","two","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","SIMPLE_NORMALIZE","getTagNamespace","parsePlatformTagName","applyNS","initRender","$createElement","parentData","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","modified","latest","extended","sealed","sealedOptions","dedupe","Vue$3","_init","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","cached$$1","componentInstance","$destroy","genClassForVnode","mergeClassData","renderClass","staticClass","class","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","query","selected","querySelector","createElement$1","tagName","multiple","namespace","namespaceMap","createTextNode","createComment","newNode","referenceNode","appendChild","nextSibling","setTextContent","textContent","registerRef","isRemoval","ref","refs","refInFor","sameVnode","sameInputType","typeA","typeB","isTextInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE9","isEdge","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","lastFilterIndex","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","pluckModuleFunction","modules","addProp","addAttr","addDirective","addHandler","important","prevent","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","index$1","expressionPos","expressionEndPos","eof","chr","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","selectedVal","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","CHECKBOX_RADIO_TOKEN","change","createOnceHandler","target$1","onceHandler","remove$2","once$$1","supportsPassive","updateDOMListeners","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","notInFocus","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","checkChild","styleData","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","classList","tar","resolveTransition","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","styles","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","checkDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","actuallySetSelected","isMultiple","option","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","initEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","moved","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","html","advance","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","rest$1","all","shouldIgnoreFirstNewline","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","attr","startTagClose","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","rest","createASTElement","makeAttrsMap","warnOnce","warn$2","endPre","pre","inVPre","platformIsPreTag","inPre","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","postTransforms","currentParent","preserveWhitespace","comments","checkRootConstraints","guardIESVGBug","isForbiddenTag","forbidden","processPre","processRawAttrs","processed","processFor","processIf","processOnce","processElement","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","plain","slotTarget","i$1","lastNode","isTextTag","decodeHTMLCached","processKey","processRef","processSlot","processComponent","processAttrs","checkInFor","inMatch","forAliasRE","for","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","checkForAliasModel","ieNSBug","ieNSPrefix","_el","preTransformNode","typeBinding","ifCondition","ifConditionExtra","branch0","cloneASTElement","addRawAttr","branch1","branch2","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","l$1","staticInFor","staticRoot","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genGuard","keyModifier","genKeyFilter","genFilterCode","keyVal","wrapListeners","bind$1","wrapData","generate","ast","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","maybeComponent","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","genNode","needsNormalization","genComment","genText","transformSpecialNewlines","bind$$1","componentName","detectErrors","errors","checkNode","checkFor","checkEvent","checkExpression","stipped","stripStringRE","keywordMatch","unaryOperatorsRE","checkIdentifier","ident","identRE","prohibitedKeywordRE","createFunction","createCompileToFunctionFn","warn$$1","compiled","tips","fnGenErrors","getOuterHTML","outerHTML","innerHTML","camelizeRE","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","warnHandler","ignoredElements","_lifecycleHooks","hasProto","UA","isAndroid","isIOS","isChrome","_isServer","_Set","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Set","generateComponentTrace","hasConsole","classifyRE","classify","includeFile","__file","currentRecursiveSequence","uid","subs","addSub","removeSub","addDep","raw","prototypeAccessors","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","walk","items","setImmediate","MessageChannel","port","port2","port1","onmessage","postMessage","perf","clearMarks","clearMeasures","initProxy","allowedGlobals","warnNonPresent","hasProxy","Proxy","isBuiltInModifier","hasHandler","isAllowed","getHandler","_withStripped","uid$2","expOrFn","active","deps","newDeps","depIds","newDepIds","cleanupDeps","this$1","teardown","$mount","keepAlive","mountedNode","prepatch","insert","uid$1","_self","dataDef","propsDef","newData","$set","$delete","immediate","hookRE","cbs","lowerCaseEvent","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","renderError","patternTypes","KeepAlive","exclude","created","destroyed","builtInComponents","configDef","util","delete","ssrContext","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ignore","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","assertNodeMatch","hasChildNodes","bailed","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","patchable","i$2","vmodel","model$1","_vOptions","prevOptions","curOptions","transition$$1","originalDisplay","__vOriginalDisplay","display","platformDirectives","transitionProps","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","_reflow","offsetHeight","_hasMove","platformComponents","decoder","content","encoded","div","regexEscapeRE","close","klass$1","style$1","he","decode","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","isIgnoreNewlineTag","model$2","modules$1","directives$1","baseOptions","reduce","esc","tab","space","down","self","ctrl","alt","middle","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","compileToFunctions","ref$1","idToTemplate","mount","HowlerGlobal","Howler","_counter","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","masterGain","noAudio","usingWebAudio","autoSuspend","mobileAutoEnable","_setup","volume","vol","setupAudioContext","_webAudio","ids","_getSoundIds","sound","_soundById","_node","mute","muted","unload","codecs","ext","_autoSuspend","oncanplaythrough","_setupCodecs","audioTest","canPlayType","mpegTest","checkOpera","isOldOpera","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_enableMobileAudio","isMobile","isTouch","maxTouchPoints","msMaxTouchPoints","_mobileEnabled","_mobileUnloaded","sampleRate","_scratchBuffer","unlock","_autoResume","noteOn","resume","suspend","_sounds","_paused","_suspendTimer","_resumeAfterSuspend","_emit","Howl","_autoplay","_format","_html5","html5","_loop","_pool","pool","_preload","preload","_rate","rate","_src","_xhrWithCredentials","xhrWithCredentials","_duration","_endTimers","_queue","_onend","onend","_onfade","onfade","_onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onresume","protocol","Sound","loadBuffer","internal","num","_ended","_inactiveSound","soundId","_seek","_start","_stop","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","_clearTimer","playHtml5","loadedNoReadyState","ejecta","isCocoonJS","_rateSeek","_stopFade","noteOff","_cleanBuffer","fade","linearRampToValueAtTime","_startFadeInterval","stepLen","_interval","clearInterval","cancelScheduledValues","loopStart","loopEnd","realTime","playing","rateSeek","sounds","_errorFn","_loadFn","remCache","off","isId","_loadQueue","task","_drain","cnt","_panner","howl","_parent","createGainNode","_errorListener","_loadListener","__default","loadSound","dataView","xhr","onerror","safeXhrSend","arraybuffer","platform","appVersion","safari","standalone","_pos","_orientation","stereo","pan","xUp","yUp","zUp","or","_super","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","panningModel","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa"],"mappings":"CAAA,SAAAA,OAAAC,SACA,GAAAC,WAKA,SAAAF,OAAAG,UACA,YAEA,IAAAA,SAAAC,uBAAA,CAEA,GAAAC,iBAEAC,QAAAH,SAAAI,gBAEAC,KAAAR,OAAAQ,KAEAC,eAAAT,OAAAU,mBAMAC,iBAAAX,OAAA,iBAEAY,WAAAZ,OAAAY,WAEAC,sBAAAb,OAAAa,uBAAAD,WAEAE,oBAAAd,OAAAc,oBAEAC,WAAA,aAEAC,YAAA,OAAA,QAAA,eAAA,eAEAC,iBAEAC,QAAAC,MAAAC,UAAAF,QAEAG,SAAA,SAAAC,IAAAC,KAIA,MAHAN,eAAAM,OACAN,cAAAM,KAAA,GAAAC,QAAA,UAAAD,IAAA,YAEAN,cAAAM,KAAAE,KAAAH,IAAA,aAAA,UAAA,KAAAL,cAAAM,MAGAG,SAAA,SAAAJ,IAAAC,KACAF,SAAAC,IAAAC,MACAD,IAAAK,aAAA,SAAAL,IAAA,aAAA,UAAA,IAAAM,OAAA,IAAAL,MAIAM,YAAA,SAAAP,IAAAC,KACA,GAAAO,MACAA,IAAAT,SAAAC,IAAAC,OACAD,IAAAK,aAAA,SAAAL,IAAA,aAAA,UAAA,IAAAS,QAAAD,IAAA,OAIAE,oBAAA,SAAAC,IAAAC,GAAAC,KACA,GAAAC,QAAAD,IAzCA,mBAyCA,qBACAA,MACAH,oBAAAC,IAAAC,IAEAlB,WAAAE,QAAA,SAAAmB,KACAJ,IAAAG,QAAAC,IAAAH,OAIAI,aAAA,SAAAC,KAAAC,KAAAC,OAAAC,UAAAC,cACA,GAAAC,OAAAzC,SAAA0C,YAAA,cAKA,OAHAD,OAAAE,gBAAAN,MAAAE,WAAAC,aAAAF,YAEAF,KAAAQ,cAAAH,OACAA,OAGAI,eAAA,SAAAC,GAAAC,MACA,GAAAC,WACA1C,iBAAA0C,SAAAnD,OAAAoD,aAAA/C,gBAAAgD,IACAF,UAAAG,YAAA,EAAAC,UAAAN,MACAC,MAAAA,KAAAM,MACAP,GAAAO,IAAAN,KAAAM,MAIAC,OAAA,SAAAlB,KAAAmB,OACA,OAAAC,iBAAApB,KAAA,WAAAmB,QAGAE,SAAA,SAAArB,KAAAsB,OAAAC,OAGA,IAFAA,MAAAA,OAAAvB,KAAAwB,YAEAD,MAAAzD,gBAAA2D,SAAAH,SAAAtB,KAAA0B,iBACAH,MAAAD,OAAAE,YACAF,OAAAA,OAAAK,UAGA,OAAAJ,QAGAK,IAAA,WACA,GAAAC,SAAAC,QACAC,OAEAC,IAAA,WACA,GAAArC,GAGA,KAFAkC,SAAA,EACAC,SAAA,EACAC,IAAAE,QACAtC,GAAAoC,IAAAG,QACAvC,GAAA,GAAAwC,MAAAxC,GAAA,GAAAA,GAAA,GAEAkC,UAAA,GAGAO,SAAA,SAAAzC,IACAkC,QACAlC,GAAAwC,MAAAE,KAAAC,YAEAP,IAAAQ,MAAA5C,GAAA0C,KAAAC,YAEAR,UACAA,SAAA,GACAlE,SAAA4E,OAAAnE,WAAAC,uBAAA0D,OAOA,OAFAI,UAAAK,SAAAT,IAEAI,YAGAM,MAAA,SAAA/C,GAAAgD,QACA,MAAAA,QACA,WACAf,IAAAjC,KAEA,WACA,GAAAiD,MAAAP,KACAQ,KAAAP,SACAV,KAAA,WACAjC,GAAAwC,MAAAS,KAAAC,UAMAC,SAAA,SAAAnD,IACA,GAAAkC,SACAkB,SAAA,EAGAC,WADA,IAEAhB,IAAA,WACAH,SAAA,EACAkB,SAAA9E,KAAAgF,MACAtD,MAEAuD,aAAA3E,oBACA,WACAA,oBAAAyD,KAAAmB,QAAAH,aATA,MAUAA,aACAA,WAXA,MAcAN,MAAA,WACArE,WAAA2D,OACA,EAGA,OAAA,UAAAoB,YACA,GAAAC,QACAD,YAAA,IAAAA,cACAJ,WAAA,IAGAnB,UAIAA,SAAA,EAEAwB,MAhCA,KAgCApF,KAAAgF,MAAAF,UAEAM,MAAA,IACAA,MAAA,GAGAD,YAAAC,MAAA,GAAA9E,oBACA2E,eAEA7E,WAAA6E,aAAAG,UAMAC,SAAA,SAAAC,MACA,GAAAJ,SAAAK,UAEAxB,IAAA,WACAmB,QAAA,KACAI,QAEAE,MAAA,WACA,GAAAC,MAAAzF,KAAAgF,MAAAO,SAEAE,MARA,GASArF,WAAAoF,MATA,GASAC,OAEAnF,qBAAAyD,KAAAA,KAIA,OAAA,YACAwB,UAAAvF,KAAAgF,MAEAE,UACAA,QAAA9E,WAAAoF,MAnBA,OAyBAE,OAAA,WACA,GAAAC,eAAAC,aAAAC,YAAAC,qBAAAC,SAAAC,QAEAC,KAAAC,KAAAC,MAAAC,OAAAC,QAAAC,SAEAC,cAAAC,cAAAC,KAEAC,OAAA,SACAC,UAAA,YAEAC,cAAA,YAAApH,UAAA,SAAAyB,KAAA4F,UAAAC,WAGAC,cAAA,EAEAC,UAAA,EACAC,SAAA,EAEAC,gBAAA,SAAAC,GACAH,YACAG,GAAAA,EAAAC,QACA5F,oBAAA2F,EAAAC,OAAAF,mBAGAC,GAAAH,UAAA,IAAAG,EAAAC,UACAJ,UAAA,IAIAK,gBAAA,SAAAtF,KAAAuF,YACA,GAAAC,WACAlE,OAAAtB,KACAyF,QAAA,UAAAvE,OAAAtD,SAAA8H,KAAA,eAAA,UAAAxE,OAAAlB,KAAA,aAOA,KALAoE,OAAAmB,WACAhB,UAAAgB,WACAlB,QAAAkB,WACAjB,SAAAiB,WAEAE,UAAAnE,OAAAA,OAAAqE,eAAArE,QAAA1D,SAAA8H,MAAApE,QAAAvD,UACA0H,SAAAvE,OAAAI,OAAA,YAAA,GAAA,IAEA,WAAAJ,OAAAI,OAAA,cACAkE,UAAAlE,OAAAsE,wBACAH,QAAAnB,QAAAkB,UAAAK,MACAxB,OAAAmB,UAAAM,OACAvB,SAAAiB,UAAAO,IAAA,GACA3B,MAAAoB,UAAAQ,OAAA,EAKA,OAAAP,UAGAQ,cAAA,WACA,GAAAC,OAAAC,EAAAC,KAAAC,aAAAC,gBAAAf,WAAAgB,mBAAAC,cAAAC,eAEA,KAAAzC,SAAAlG,gBAAAkG,WAAAiB,UAAA,IAAAiB,MAAAtC,cAAA3B,QAAA,CAEAkE,EAAA,EAEAjB,UAEA,MAAAT,gBACA,UAAA3G,mBACAA,gBAAA4I,OAAA3I,QAAA4I,aAAA,KAAA5I,QAAA6I,YAAA,IAAA,IAAA,KAGApC,cAAA1G,gBAAA4I,OACAjC,cAAAD,cAAA1G,gBAAA+I,WAGA7B,cAAAP,eAAAQ,UAAA,GAAAC,QAAA,GAAAlB,SAAA,IAAApG,SAAA4E,QACAwC,cAAAP,cACAS,QAAA,GAEAF,cADAhB,SAAA,GAAAkB,QAAA,GAAAD,UAAA,EACAT,cAjEA,CAsEA,MAAA2B,EAAAD,MAAAC,IAEA,GAAAvC,cAAAuC,KAAAvC,cAAAuC,GAAAW,UAEA,GAAAjC,cAeA,IAbA2B,cAAA5C,cAAAuC,GAAA,aAAA,kBAAAZ,WAAA,EAAAiB,iBACAjB,WAAAP,eAGAyB,kBAAAlB,aACArB,KAAA6C,WAAAxB,WAAAb,KACAP,KAAA6C,YAAAzB,WACAgB,oBAAA,EAAAhB,WACAkB,gBAAAlB,YAGAa,KAAAxC,cAAAuC,GAAAP,yBAEArB,SAAA6B,KAAAJ,SAAAO,qBACAnC,MAAAgC,KAAAL,MAAA5B,OACAG,QAAA8B,KAAAN,QAAAS,mBAAA7B,OACAL,OAAA+B,KAAAP,OAAA3B,OACAK,UAAAD,SAAAD,QAAAD,SACAN,aAAAmB,UAAA,IAAAuB,gBAAAxC,SAAA,GAAAkB,QAAA,IAAAI,gBAAA1B,cAAAuC,GAAAZ,cAGA,GAFA0B,cAAArD,cAAAuC,IACAG,iBAAA,EACArB,UAAA,EAAA,WACAqB,iBAAAxC,cAAAuC,cACApB,UAAA,GAAAC,QAAA,GAAAlB,SAAA,IACAH,aAAA,IAAA/F,gBAAAoJ,oBACArD,aAAA,KAAA2C,gBAAAjC,UAAAD,SAAAD,QAAAD,OAAA,QAAAR,cAAAuC,GAAA,aAAArI,gBAAAqJ,eACAd,aAAAxC,aAAA,IAAAD,cAAAuC,QA5BAc,eAAArD,cAAAuC,GAgCAE,gBAAAC,iBACAW,cAAAZ,gBAKAe,uBAAAtE,SAAAmD,eAEAoB,mBAAA,SAAAjC,GACAjG,SAAAiG,EAAAC,OAAAvH,gBAAAwJ,aACAhI,YAAA8F,EAAAC,OAAAvH,gBAAAyJ,cACA9H,oBAAA2F,EAAAC,OAAAmC,wBAEAC,wBAAA/E,MAAA2E,oBACAG,sBAAA,SAAApC,GACAqC,yBAAApC,OAAAD,EAAAC,UAGAqC,gBAAA,SAAA1H,KAAAiB,KACA,IACAjB,KAAA2H,cAAAC,SAAApI,QAAAyB,KACA,MAAAmE,GACApF,KAAAiB,IAAAA,MAIA4G,cAAA,SAAAC,QACA,GAAAC,aAAAzG,OAEA0G,aAAAF,OAAA,aAAAhK,gBAAAmK,aAEAF,YAAAjK,gBAAAiK,YAAAD,OAAA,aAAA,eAAAA,OAAA,aAAA,YACAA,OAAA1I,aAAA,QAAA2I,aAGAC,cACAF,OAAA1I,aAAA,SAAA4I,cAIAD,cACAzG,OAAAwG,OAAAnG,WACAL,OAAA4G,aAAAJ,OAAAK,YAAAL,QACAxG,OAAA8G,YAAAN,UAIAO,WAAA3F,MAAA,SAAA1C,KAAAE,OAAAoI,OAAAC,MAAAC,OACA,GAAAvH,KAAAwH,OAAAnH,OAAAoH,UAAArI,MAAAsI,WAEAtI,MAAAN,aAAAC,KAAA,mBAAAE,SAAA0I,mBAEAL,QACAD,OACAnJ,SAAAa,KAAAlC,gBAAA+K,gBAEA7I,KAAAZ,aAAA,QAAAmJ,QAIAE,OAAAzI,KAAA,aAAAlC,gBAAAmK,YACAhH,IAAAjB,KAAA,aAAAlC,gBAAAgL,SAEAN,QACAlH,OAAAtB,KAAA2B,WACA+G,UAAApH,QAAA9C,WAAAU,KAAAoC,OAAAyH,UAAA,KAGAJ,UAAAzI,OAAAyI,WAAA,OAAA3I,QAAAyI,QAAAxH,KAAAyH,WAEArI,OAAAgF,OAAArF,MAEA2I,YACAlJ,oBAAAO,KAAAmF,iBAAA,GACA6D,aAAAjF,sBACAA,qBAAA1F,WAAA8G,gBAAA,MAEAhG,SAAAa,KAAAlC,gBAAAyJ,cACA9H,oBAAAO,KAAAwH,uBAAA,IAGAkB,WACA/J,QAAAsK,KAAA3H,OAAA4H,qBAAA,UAAArB,eAGAY,OACAzI,KAAAZ,aAAA,SAAAqJ,QACAxH,MAAAyH,YACA9D,UAAA1F,KAAAc,KAAA+I,UACArB,gBAAA1H,KAAAiB,KAEAjB,KAAAiB,IAAAA,MAIAwH,QAAAC,YACAjI,eAAAT,MAAAiB,IAAAA,OAIAW,IAAA,WACA5B,KAAA8G,iBACA9G,MAAA8G,UAEAxH,YAAAU,KAAAlC,gBAAAqL,WAEAR,YAAA3I,KAAAoJ,WACAT,UACAxD,gBAAA9E,OAEA4E,YAEAoC,mBAAAhH,YAKA4G,cAAA,SAAAjH,MACA,GAAAE,QAEAsI,MAAA7D,OAAAzF,KAAAc,KAAA+I,UAGAR,MAAAC,QAAAxI,KAAA,aAAAlC,gBAAAqJ,YAAAnH,KAAA,aAAA,UACAsI,OAAA,QAAAC,QAEAD,QAAAxE,cAAA0E,QAAAxI,KAAAiB,MAAAjB,KAAAyI,QAAAzI,KAAAoJ,UAAAtK,SAAAkB,KAAAlC,gBAAAuL,eAEAnJ,OAAAH,aAAAC,KAAA,kBAAAE,OAEAoI,QACAgB,UAAAC,WAAAvJ,MAAA,EAAAA,KAAAwB,aAGAxB,KAAA8G,WAAA,EACA7B,YAEAoD,WAAArI,KAAAE,OAAAoI,OAAAC,MAAAC,SAGAgB,OAAA,WACA,IAAA1F,YAAA,CACA,GAAA7F,KAAAgF,MAAAgB,QAAA,IAEA,WADA5F,YAAAmL,OAAA,IAGA,IAAAC,aAAAnG,SAAA,WACAxF,gBAAAkG,SAAA,EACAoD,0BAGAtD,cAAA,EAEAhG,gBAAAkG,SAAA,EAEAoD,yBAEAhJ,iBAAA,SAAA,WACA,GAAAN,gBAAAkG,WACAlG,gBAAAkG,SAAA,GAEAyF,gBACA,IAGA,QACAC,EAAA,WACAzF,QAAAhG,KAAAgF,MAEAW,cAAAhG,SAAAC,uBAAAC,gBAAAqL,WACAtF,aAAAjG,SAAAC,uBAAAC,gBAAAqL,UAAA,IAAArL,gBAAA6L,cACAjF,KAAA5G,gBAAA4G,KAEAtG,iBAAA,SAAAgJ,wBAAA,GAEAhJ,iBAAA,SAAAgJ,wBAAA,GAEA3J,OAAAmM,iBACA,GAAAA,kBAAAxC,wBAAAyC,QAAA9L,SAAA+L,WAAA,EAAAC,SAAA,EAAAC,YAAA,KAEAjM,QAAA,iBAAA,kBAAAqJ,wBAAA,GACArJ,QAAA,iBAAA,kBAAAqJ,wBAAA,GACA6C,YAAA7C,uBAAA,MAGAhJ,iBAAA,aAAAgJ,wBAAA,IAGA,QAAA,YAAA,QAAA,OAAA,gBAAA,eAAA,sBAAAzI,QAAA,SAAAsB,MACArC,SAAA,iBAAAqC,KAAAmH,wBAAA,KAGA,QAAAlI,KAAAtB,SAAAsM,YACAV,UAEApL,iBAAA,OAAAoL,QACA5L,SAAA,iBAAA,mBAAAwJ,wBACA/I,WAAAmL,OAAA,MAGA5F,cAAA3B,OACAgE,gBAEAmB,0BAGA+C,WAAA/C,uBACAgD,OAAAnD,kBAKAqC,UAAA,WACA,GAAAe,gBAEAC,YAAA5H,MAAA,SAAA1C,KAAAsB,OAAAjB,MAAAkB,OACA,GAAAgJ,SAAApE,EAAAqE,GAMA,IALAxK,KAAA0B,gBAAAH,MACAA,OAAA,KAEAvB,KAAAZ,aAAA,QAAAmC,OAEA/C,WAAAU,KAAAoC,OAAAyH,UAAA,IAEA,IADAwB,QAAAjJ,OAAA4H,qBAAA,UACA/C,EAAA,EAAAqE,IAAAD,QAAAtI,OAAAkE,EAAAqE,IAAArE,IACAoE,QAAApE,GAAA/G,aAAA,QAAAmC,MAIAlB,OAAAH,OAAAuK,UACAhK,eAAAT,KAAAK,MAAAH,UAGAwK,eAAA,SAAA1K,KAAAyK,SAAAlJ,OACA,GAAAlB,OACAiB,OAAAtB,KAAA2B,UAEAL,UACAC,MAAAF,SAAArB,KAAAsB,OAAAC,OACAlB,MAAAN,aAAAC,KAAA,mBAAAuB,MAAAA,MAAAkJ,WAAAA,WAEApK,MAAAuI,mBACArH,MAAAlB,MAAAH,OAAAqB,QAEAA,QAAAvB,KAAA0B,iBACA4I,YAAAtK,KAAAsB,OAAAjB,MAAAkB,SAMAoJ,oBAAA,WACA,GAAAxE,GACAqE,IAAAH,eAAApI,MACA,IAAAuI,IAGA,IAFArE,EAAA,EAEAA,EAAAqE,IAAArE,IACAuE,eAAAL,eAAAlE,KAKAyE,6BAAAtH,SAAAqH,oBAEA,QACAjB,EAAA,WACAW,eAAAzM,SAAAC,uBAAAC,gBAAA+K,gBACAzK,iBAAA,SAAAwM,+BAEAT,WAAAS,6BACArB,WAAAmB,mBAIAG,KAAA,WACAA,KAAA1E,IACA0E,KAAA1E,GAAA,EACAmD,UAAAI,IACA/F,OAAA+F,KA4CA,OAxCA,YACA,GAAAoB,MAEAC,mBACA5B,UAAA,WACA7B,YAAA,aACAC,aAAA,cACAoC,aAAA,cACAN,WAAA,YAEAR,eAAA,gBACAC,QAAA,WACAb,WAAA,cACAd,UAAA,aAEA1F,QAAA,GACAsG,eACA8C,MAAA,EACAhE,UAAA,IACAnC,KAAA,GACAV,SAAA,EAGAlG,iBAAAL,OAAAK,iBAAAL,OAAAuN,mBAEA,KAAAF,OAAAC,mBACAD,OAAAhN,mBACAA,gBAAAgN,MAAAC,kBAAAD,MAIArN,QAAAK,gBAAAA,gBAEAO,WAAA,WACAP,gBAAA+M,MACAA,aAMAI,IAAAnN,gBACAwL,UAAAA,UACA3F,OAAAA,OACAkH,KAAAA,KACAK,GAAAzK,eACA0K,GAAAhM,SACAiM,GAAA9L,YACA+L,GAAAvM,SACAwM,KAAAvL,aACAwL,GAAAlK,SACAO,IAAAA,OAtqBAnE,OAAAA,OAAAG,SACAH,QAAAE,UAAAA,UACA,gBAAA6N,SAAAA,OAAAC,UACAD,OAAAC,QAAA9N,YAEAF,QCAA,SAAAiO,OAAAhO,SACA,gBAAA+N,UAAA,mBAAAD,QAAAA,OAAAC,QAAA/N,UACA,kBAAAiO,SAAAA,OAAAC,IAAAD,OAAAjO,SACAgO,OAAAG,OAAAnO,WACA2E,KAAA,WAAA,YAIA,SAAAyJ,SACA,MAAAC,cAAA5J,MAAA,KAAAG,WASA,QAAA0J,SAAAC,OACA,MAAAA,iBAAArN,QAAA,mBAAAsN,OAAArN,UAAAsN,SAAAlD,KAAAgD,OAGA,QAAAG,UAAAH,OAGA,MAAA,OAAAA,OAAA,oBAAAC,OAAArN,UAAAsN,SAAAlD,KAAAgD,OAGA,QAAAI,eAAAC,KACA,GAAAJ,OAAAK,oBACA,MAAA,KAAAL,OAAAK,oBAAAD,KAAArK,MAEA,IAAAuK,EACA,KAAAA,IAAAF,KACA,GAAAA,IAAAG,eAAAD,GACA,OAAA,CAGA,QAAA,EAIA,QAAAE,aAAAT,OACA,WAAA,KAAAA,MAGA,QAAAU,UAAAV,OACA,MAAA,gBAAAA,QAAA,oBAAAC,OAAArN,UAAAsN,SAAAlD,KAAAgD,OAGA,QAAAW,QAAAX,OACA,MAAAA,iBAAAhO,OAAA,kBAAAiO,OAAArN,UAAAsN,SAAAlD,KAAAgD,OAGA,QAAAY,KAAAC,IAAAnN,IACA,GAAAwG,GAAA4G,MACA,KAAA5G,EAAA,EAAAA,EAAA2G,IAAA7K,SAAAkE,EACA4G,IAAAxK,KAAA5C,GAAAmN,IAAA3G,GAAAA,GAEA,OAAA4G,KAGA,QAAAC,YAAAC,EAAAC,GACA,MAAAhB,QAAArN,UAAA4N,eAAAxD,KAAAgE,EAAAC,GAGA,QAAAC,QAAAF,EAAAC,GACA,IAAA,GAAA/G,KAAA+G,GACAF,WAAAE,EAAA/G,KACA8G,EAAA9G,GAAA+G,EAAA/G,GAYA,OARA6G,YAAAE,EAAA,cACAD,EAAAd,SAAAe,EAAAf,UAGAa,WAAAE,EAAA,aACAD,EAAAG,QAAAF,EAAAE,SAGAH,EAGA,QAAAI,WAAApB,MAAAqB,OAAAC,OAAAC,QACA,MAAAC,kBAAAxB,MAAAqB,OAAAC,OAAAC,QAAA,GAAAE,MAGA,QAAAC,uBAEA,OACAC,OAAA,EACAC,gBACAC,eACAC,UAAA,EACAC,cAAA,EACAC,WAAA,EACAC,aAAA,KACAC,eAAA,EACAC,iBAAA,EACAC,KAAA,EACAC,mBACAC,SAAA,KACAC,SAAA,EACAC,iBAAA,GAIA,QAAAC,iBAAAC,GAIA,MAHA,OAAAA,EAAAC,MACAD,EAAAC,IAAAjB,uBAEAgB,EAAAC,IAqBA,QAAAC,SAAAF,GACA,GAAA,MAAAA,EAAAG,SAAA,CACA,GAAAC,OAAAL,gBAAAC,GACAK,YAAAC,KAAAhG,KAAA8F,MAAAT,gBAAA,SAAAnI,GACA,MAAA,OAAAA,IAEA+I,YAAAC,MAAAR,EAAAS,GAAAC,YACAN,MAAAhB,SAAA,IACAgB,MAAAnB,QACAmB,MAAAb,eACAa,MAAAO,iBACAP,MAAAN,kBACAM,MAAAd,YACAc,MAAAZ,gBACAY,MAAAX,mBACAW,MAAAR,UAAAQ,MAAAR,UAAAS,YASA,IAPAL,EAAAY,UACAL,WAAAA,YACA,IAAAH,MAAAf,eACA,IAAAe,MAAAlB,aAAA5L,YACAuN,KAAAT,MAAAU,SAGA,MAAAvD,OAAAwD,UAAAxD,OAAAwD,SAAAf,GAIA,MAAAO,WAHAP,GAAAG,SAAAI,WAMA,MAAAP,GAAAG,SAGA,QAAAa,eAAAZ,OACA,GAAAJ,GAAAtB,UAAAuC,IAQA,OAPA,OAAAb,MACA5B,OAAAuB,gBAAAC,GAAAI,OAGAL,gBAAAC,GAAAP,iBAAA,EAGAO,EAOA,QAAAkB,YAAAC,GAAAC,MACA,GAAA5J,GAAA2E,KAAAkF,GAiCA,IA/BAtD,YAAAqD,KAAAE,oBACAH,GAAAG,iBAAAF,KAAAE,kBAEAvD,YAAAqD,KAAAG,MACAJ,GAAAI,GAAAH,KAAAG,IAEAxD,YAAAqD,KAAAI,MACAL,GAAAK,GAAAJ,KAAAI,IAEAzD,YAAAqD,KAAAK,MACAN,GAAAM,GAAAL,KAAAK,IAEA1D,YAAAqD,KAAAR,WACAO,GAAAP,QAAAQ,KAAAR,SAEA7C,YAAAqD,KAAAM,QACAP,GAAAO,KAAAN,KAAAM,MAEA3D,YAAAqD,KAAAO,UACAR,GAAAQ,OAAAP,KAAAO,QAEA5D,YAAAqD,KAAAQ,WACAT,GAAAS,QAAAR,KAAAQ,SAEA7D,YAAAqD,KAAAnB,OACAkB,GAAAlB,IAAAF,gBAAAqB,OAEArD,YAAAqD,KAAAS,WACAV,GAAAU,QAAAT,KAAAS,SAGAC,iBAAAxO,OAAA,EACA,IAAAkE,EAAA,EAAAA,EAAAsK,iBAAAxO,OAAAkE,IACA2E,KAAA2F,iBAAAtK,GACA6J,IAAAD,KAAAjF,MACA4B,YAAAsD,OACAF,GAAAhF,MAAAkF,IAKA,OAAAF,IAMA,QAAAY,QAAAC,QACAd,WAAAxN,KAAAsO,QACAtO,KAAA+M,GAAA,GAAAnR,MAAA,MAAA0S,OAAAvB,GAAAuB,OAAAvB,GAAAC,UAAAO,KACAvN,KAAAwM,YACAxM,KAAA+M,GAAA,GAAAnR,MAAA2R,OAIA,IAAAgB,mBACAA,kBAAA,EACA9E,MAAA+E,aAAAxO,MACAuO,kBAAA,GAIA,QAAAE,UAAAxE,KACA,MAAAA,eAAAoE,SAAA,MAAApE,KAAA,MAAAA,IAAA2D,iBAGA,QAAAc,UAAAC,QACA,MAAAA,QAAA,EAEAC,KAAAC,KAAAF,SAAA,EAEAC,KAAAE,MAAAH,QAIA,QAAAI,OAAAC,qBACA,GAAAC,gBAAAD,oBACAE,MAAA,CAMA,OAJA,KAAAD,eAAAE,SAAAF,iBACAC,MAAAR,SAAAO,gBAGAC,MAIA,QAAAE,eAAAC,OAAAC,OAAAC,aACA,GAGAzL,GAHAqE,IAAAyG,KAAAY,IAAAH,OAAAzP,OAAA0P,OAAA1P,QACA6P,WAAAb,KAAAc,IAAAL,OAAAzP,OAAA0P,OAAA1P,QACA+P,MAAA,CAEA,KAAA7L,EAAA,EAAAA,EAAAqE,IAAArE,KACAyL,aAAAF,OAAAvL,KAAAwL,OAAAxL,KACAyL,aAAAR,MAAAM,OAAAvL,MAAAiL,MAAAO,OAAAxL,MACA6L,OAGA,OAAAA,OAAAF,WAGA,QAAAG,MAAAC,MACA,IAAApG,MAAAqG,6BACA,mBAAAC,UAAAA,QAAAH,MACAG,QAAAH,KAAA,wBAAAC,KAIA,QAAAG,WAAAH,IAAAvS,IACA,GAAA2S,YAAA,CAEA,OAAAnF,QAAA,WAIA,GAHA,MAAArB,MAAAyG,oBACAzG,MAAAyG,mBAAA,KAAAL,KAEAI,UAAA,CAGA,IAAA,GADAE,KADA3P,QAEAsD,EAAA,EAAAA,EAAA7D,UAAAL,OAAAkE,IAAA,CAEA,GADAqM,IAAA,GACA,gBAAAlQ,WAAA6D,GAAA,CACAqM,KAAA,MAAArM,EAAA,IACA,KAAA,GAAAsM,OAAAnQ,WAAA,GACAkQ,KAAAC,IAAA,KAAAnQ,UAAA,GAAAmQ,KAAA,IAEAD,KAAAA,IAAAE,MAAA,GAAA,OAEAF,KAAAlQ,UAAA6D,EAEAtD,MAAAN,KAAAiQ,KAEAP,KAAAC,IAAA,gBAAAtT,MAAAC,UAAA6T,MAAAzJ,KAAApG,MAAA8P,KAAA,IAAA,MAAA,GAAAC,QAAAC,OACAP,WAAA,EAEA,MAAA3S,IAAAwC,MAAAE,KAAAC,YACA3C,IAKA,QAAAmT,iBAAA7S,KAAAiS,KACA,MAAApG,MAAAyG,oBACAzG,MAAAyG,mBAAAtS,KAAAiS,KAEAa,aAAA9S,QACAgS,KAAAC,KACAa,aAAA9S,OAAA,GAOA,QAAA+S,YAAA/G,OACA,MAAAA,iBAAAgH,WAAA,sBAAA/G,OAAArN,UAAAsN,SAAAlD,KAAAgD,OAGA,QAAAiH,KAAAvC,QACA,GAAA7F,MAAA3E,CACA,KAAAA,IAAAwK,QACA7F,KAAA6F,OAAAxK,GACA6M,WAAAlI,MACAzI,KAAA8D,GAAA2E,KAEAzI,KAAA,IAAA8D,GAAA2E,IAGAzI,MAAA8Q,QAAAxC,OAIAtO,KAAA+Q,+BAAA,GAAAnU,SACAoD,KAAAgR,wBAAAvL,QAAAzF,KAAAiR,cAAAxL,QACA,IAAA,UAAAA,QAGA,QAAAyL,cAAAC,aAAAC,aACA,GAAA3I,MAAAiC,IAAAI,UAAAqG,aACA,KAAA1I,OAAA2I,aACAzG,WAAAyG,YAAA3I,QACAsB,SAAAoH,aAAA1I,QAAAsB,SAAAqH,YAAA3I,QACAiC,IAAAjC,SACAqC,OAAAJ,IAAAjC,MAAA0I,aAAA1I,OACAqC,OAAAJ,IAAAjC,MAAA2I,YAAA3I,QACA,MAAA2I,YAAA3I,MACAiC,IAAAjC,MAAA2I,YAAA3I,YAEAiC,KAAAjC,MAIA,KAAAA,OAAA0I,cACAxG,WAAAwG,aAAA1I,QACAkC,WAAAyG,YAAA3I,OACAsB,SAAAoH,aAAA1I,SAEAiC,IAAAjC,MAAAqC,UAAAJ,IAAAjC,OAGA,OAAAiC,KAGA,QAAA2G,QAAA/C,QACA,MAAAA,QACAtO,KAAA6Q,IAAAvC,QA6BA,QAAAgD,UAAAlB,IAAAmB,IAAA3Q,KACA,GAAA4Q,QAAAxR,KAAAyR,UAAArB,MAAApQ,KAAAyR,UAAA,QACA,OAAAd,YAAAa,QAAAA,OAAA5K,KAAA2K,IAAA3Q,KAAA4Q,OAYA,QAAAE,gBAAAtB,KACA,GAAAnF,QAAAjL,KAAA2R,gBAAAvB,KACAwB,YAAA5R,KAAA2R,gBAAAvB,IAAAyB,cAEA,OAAA5G,UAAA2G,YACA3G,QAGAjL,KAAA2R,gBAAAvB,KAAAwB,YAAAzU,QAAA,mBAAA,SAAAwQ,KACA,MAAAA,KAAA0C,MAAA,KAGArQ,KAAA2R,gBAAAvB,MAKA,QAAA0B,eACA,MAAA9R,MAAA+R,aAMA,QAAAC,SAAArD,QACA,MAAA3O,MAAAiS,SAAA9U,QAAA,KAAAwR,QAoBA,QAAAuD,cAAAvD,OAAAwD,cAAAC,OAAAC,UACA,GAAAb,QAAAxR,KAAAsS,cAAAF,OACA,OAAAzB,YAAAa,QACAA,OAAA7C,OAAAwD,cAAAC,OAAAC,UACAb,OAAArU,QAAA,MAAAwR,QAGA,QAAA4D,YAAAC,KAAAhB,QACA,GAAAvG,QAAAjL,KAAAsS,cAAAE,KAAA,EAAA,SAAA,OACA,OAAA7B,YAAA1F,QAAAA,OAAAuG,QAAAvG,OAAA9N,QAAA,MAAAqU,QAKA,QAAAiB,cAAAC,KAAAC,WACA,GAAAC,WAAAF,KAAAG,aACAC,SAAAF,WAAAE,QAAAF,UAAA,KAAAE,QAAAH,WAAAD,KAGA,QAAAK,gBAAAC,OACA,MAAA,gBAAAA,OAAAF,QAAAE,QAAAF,QAAAE,MAAAH,mBAAA1F,GAGA,QAAA8F,sBAAAC,aACA,GACAC,gBACA1K,KAFA2K,kBAIA,KAAA3K,OAAAyK,aACAvI,WAAAuI,YAAAzK,QACA0K,eAAAJ,eAAAtK,SAEA2K,gBAAAD,gBAAAD,YAAAzK,MAKA,OAAA2K,iBAKA,QAAAC,iBAAAX,KAAAY,UACAC,WAAAb,MAAAY,SAGA,QAAAE,qBAAAC,UACA,GAAAT,SACA,KAAA,GAAAU,KAAAD,UACAT,MAAA9S,MAAAwS,KAAAgB,EAAAJ,SAAAC,WAAAG,IAKA,OAHAV,OAAAW,KAAA,SAAA/I,EAAAC,GACA,MAAAD,GAAA0I,SAAAzI,EAAAyI,WAEAN,MAGA,QAAAY,UAAAjF,OAAAkF,aAAAC,WACA,GAAAC,WAAA,GAAAnF,KAAAc,IAAAf,QACAqF,YAAAH,aAAAE,UAAAnU,MAEA,QADA+O,QAAA,EACAmF,UAAA,IAAA,GAAA,KACAlF,KAAAqF,IAAA,GAAArF,KAAAsF,IAAA,EAAAF,cAAAlK,WAAAqK,OAAA,GAAAJ,UAeA,QAAAK,gBAAAC,MAAAC,OAAAtC,QAAAuC,UACA,GAAArT,MAAAqT,QACA,iBAAAA,YACArT,KAAA,WACA,MAAAlB,MAAAuU,cAGAF,QACAG,qBAAAH,OAAAnT,MAEAoT,SACAE,qBAAAF,OAAA,IAAA,WACA,MAAAV,UAAA1S,KAAApB,MAAAE,KAAAC,WAAAqU,OAAA,GAAAA,OAAA,MAGAtC,UACAwC,qBAAAxC,SAAA,WACA,MAAAhS,MAAAyU,aAAAzC,QAAA9Q,KAAApB,MAAAE,KAAAC,WAAAoU,SAKA,QAAAK,wBAAA9K,OACA,MAAAA,OAAA+K,MAAA,YACA/K,MAAAzM,QAAA,WAAA,IAEAyM,MAAAzM,QAAA,MAAA,IAGA,QAAAyX,oBAAA3J,QACA,GAAAnH,GAAAlE,OAAAiV,MAAA5J,OAAA0J,MAAAG,iBAEA,KAAAhR,EAAA,EAAAlE,OAAAiV,MAAAjV,OAAAkE,EAAAlE,OAAAkE,IACA0Q,qBAAAK,MAAA/Q,IACA+Q,MAAA/Q,GAAA0Q,qBAAAK,MAAA/Q,IAEA+Q,MAAA/Q,GAAA4Q,uBAAAG,MAAA/Q,GAIA,OAAA,UAAAyN,KACA,GAAAzN,GAAA0N,OAAA,EACA,KAAA1N,EAAA,EAAAA,EAAAlE,OAAAkE,IACA0N,QAAAb,WAAAkE,MAAA/Q,IAAA+Q,MAAA/Q,GAAA8C,KAAA2K,IAAAtG,QAAA4J,MAAA/Q,EAEA,OAAA0N,SAKA,QAAAuD,cAAAzI,EAAArB,QACA,MAAAqB,GAAAE,WAIAvB,OAAA+J,aAAA/J,OAAAqB,EAAAmI,cACAQ,gBAAAhK,QAAAgK,gBAAAhK,SAAA2J,mBAAA3J,QAEAgK,gBAAAhK,QAAAqB,IANAA,EAAAmI,aAAA3C,cASA,QAAAkD,cAAA/J,OAAAC,QAGA,QAAAgK,6BAAAtL,OACA,MAAAsB,QAAAwG,eAAA9H,QAAAA,MAHA,GAAA9F,GAAA,CAOA,KADAqR,sBAAAC,UAAA,EACAtR,GAAA,GAAAqR,sBAAAtY,KAAAoO,SACAA,OAAAA,OAAA9N,QAAAgY,sBAAAD,6BACAC,sBAAAC,UAAA,EACAtR,GAAA,CAGA,OAAAmH,QA8BA,QAAAoK,eAAAhB,MAAAiB,MAAAC,aACAC,QAAAnB,OAAA1D,WAAA2E,OAAAA,MAAA,SAAAG,SAAAhB,YACA,MAAAgB,WAAAF,YAAAA,YAAAD,OAIA,QAAAI,uBAAArB,MAAA/F,QACA,MAAA3D,YAAA6K,QAAAnB,OAIAmB,QAAAnB,OAAA/F,OAAApB,QAAAoB,OAAAH,SAHA,GAAAvR,QAAA+Y,eAAAtB,QAOA,QAAAsB,gBAAAC,GACA,MAAAC,aAAAD,EAAAzY,QAAA,KAAA,IAAAA,QAAA,sCAAA,SAAA2Y,QAAAC,GAAAC,GAAAC,GAAAC,IACA,MAAAH,KAAAC,IAAAC,IAAAC,MAIA,QAAAL,aAAAD,GACA,MAAAA,GAAAzY,QAAA,yBAAA,QAKA,QAAAgZ,eAAA9B,MAAAE,UACA,GAAAzQ,GAAA5C,KAAAqT,QASA,KARA,gBAAAF,SACAA,OAAAA,QAEA/J,SAAAiK,YACArT,KAAA,SAAA0I,MAAAiL,OACAA,MAAAN,UAAAxF,MAAAnF,SAGA9F,EAAA,EAAAA,EAAAuQ,MAAAzU,OAAAkE,IACAsS,OAAA/B,MAAAvQ,IAAA5C,KAIA,QAAAmV,mBAAAhC,MAAAE,UACA4B,cAAA9B,MAAA,SAAAzK,MAAAiL,MAAAvG,OAAA+F,OACA/F,OAAAgI,GAAAhI,OAAAgI,OACA/B,SAAA3K,MAAA0E,OAAAgI,GAAAhI,OAAA+F,SAIA,QAAAkC,yBAAAlC,MAAAzK,MAAA0E,QACA,MAAA1E,OAAAe,WAAAyL,OAAA/B,QACA+B,OAAA/B,OAAAzK,MAAA0E,OAAAkI,GAAAlI,OAAA+F,OA0DA,QAAAoC,YAAAC,MACA,MAAAC,YAAAD,MAAA,IAAA,IAGA,QAAAC,YAAAD,MACA,MAAAA,MAAA,GAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,KAAA,EAaA,QAAAE,iBACA,MAAAD,YAAA3W,KAAA0W,QAGA,QAAAG,YAAAnE,KAAAoE,UACA,MAAA,UAAA5H,OACA,MAAA,OAAAA,OACA6H,MAAA/W,KAAA0S,KAAAxD,OACAzF,MAAA+E,aAAAxO,KAAA8W,UACA9W,MAEAgX,IAAAhX,KAAA0S,OAKA,QAAAsE,KAAAzF,IAAAmB,MACA,MAAAnB,KAAA/E,UACA+E,IAAAxE,GAAA,OAAAwE,IAAAtD,OAAA,MAAA,IAAAyE,QAAAnF,IAGA,QAAAwJ,OAAAxF,IAAAmB,KAAAxD,OACAqC,IAAA/E,YAAAM,MAAAoC,SACA,aAAAwD,MAAAiE,WAAApF,IAAAmF,QACAnF,IAAAxE,GAAA,OAAAwE,IAAAtD,OAAA,MAAA,IAAAyE,MAAAxD,MAAAqC,IAAA0F,QAAAC,YAAAhI,MAAAqC,IAAA0F,UAGA1F,IAAAxE,GAAA,OAAAwE,IAAAtD,OAAA,MAAA,IAAAyE,MAAAxD,QAOA,QAAAiI,WAAAnE,OAEA,MADAA,OAAAD,eAAAC,OACArC,WAAA3Q,KAAAgT,QACAhT,KAAAgT,SAEAhT,KAIA,QAAAoX,WAAApE,MAAA9D,OACA,GAAA,gBAAA8D,OAAA,CACAA,MAAAC,qBAAAD,MAEA,KAAA,GADAqE,aAAA7D,oBAAAR,OACAlP,EAAA,EAAAA,EAAAuT,YAAAzX,OAAAkE,IACA9D,KAAAqX,YAAAvT,GAAA4O,MAAAM,MAAAqE,YAAAvT,GAAA4O,WAIA,IADAM,MAAAD,eAAAC,OACArC,WAAA3Q,KAAAgT,QACA,MAAAhT,MAAAgT,OAAA9D,MAGA,OAAAlP,MAGA,QAAAsX,KAAAC,EAAAC,GACA,OAAAD,EAAAC,EAAAA,GAAAA,EAoBA,QAAAN,aAAAR,KAAAO,OACA,GAAAnK,MAAA4J,OAAA5J,MAAAmK,OACA,MAAA1J,IAEA,IAAAkK,UAAAH,IAAAL,MAAA,GAEA,OADAP,QAAAO,MAAAQ,UAAA,GACA,IAAAA,SAAAd,WAAAD,MAAA,GAAA,GAAA,GAAAe,SAAA,EAAA,EAsDA,QAAAC,cAAApL,EAAArB,QACA,MAAAqB,GAIA3C,QAAA3J,KAAA2X,SAAA3X,KAAA2X,QAAArL,EAAA2K,SACAjX,KAAA2X,SAAA3X,KAAA2X,QAAAC,UAAAC,kBAAAhb,KAAAoO,QAAA,SAAA,cAAAqB,EAAA2K,SAJAtN,QAAA3J,KAAA2X,SAAA3X,KAAA2X,QACA3X,KAAA2X,QAAA,WAOA,QAAAG,mBAAAxL,EAAArB,QACA,MAAAqB,GAIA3C,QAAA3J,KAAA+X,cAAA/X,KAAA+X,aAAAzL,EAAA2K,SACAjX,KAAA+X,aAAAF,iBAAAhb,KAAAoO,QAAA,SAAA,cAAAqB,EAAA2K,SAJAtN,QAAA3J,KAAA+X,cAAA/X,KAAA+X,aACA/X,KAAA+X,aAAA,WAMA,QAAAC,mBAAAC,UAAAhN,OAAAE,QACA,GAAArH,GAAAoU,GAAA3G,IAAA4G,IAAAF,UAAAG,mBACA,KAAApY,KAAAqY,aAKA,IAHArY,KAAAqY,gBACArY,KAAAsY,oBACAtY,KAAAuY,qBACAzU,EAAA,EAAAA,EAAA,KAAAA,EACAyN,IAAAvG,WAAA,IAAAlH,IACA9D,KAAAuY,kBAAAzU,GAAA9D,KAAAwY,YAAAjH,IAAA,IAAA6G,oBACApY,KAAAsY,iBAAAxU,GAAA9D,KAAAyY,OAAAlH,IAAA,IAAA6G,mBAIA,OAAAjN,QACA,QAAAF,QACAiN,GAAAQ,QAAA9R,KAAA5G,KAAAuY,kBAAAJ,MACA,IAAAD,GAAAA,GAAA,OAEAA,GAAAQ,QAAA9R,KAAA5G,KAAAsY,iBAAAH,MACA,IAAAD,GAAAA,GAAA,MAGA,QAAAjN,QAEA,KADAiN,GAAAQ,QAAA9R,KAAA5G,KAAAuY,kBAAAJ,MAEAD,IAEAA,GAAAQ,QAAA9R,KAAA5G,KAAAsY,iBAAAH,MACA,IAAAD,GAAAA,GAAA,OAGA,KADAA,GAAAQ,QAAA9R,KAAA5G,KAAAsY,iBAAAH,MAEAD,IAEAA,GAAAQ,QAAA9R,KAAA5G,KAAAuY,kBAAAJ,MACA,IAAAD,GAAAA,GAAA,MAKA,QAAAS,mBAAAV,UAAAhN,OAAAE,QACA,GAAArH,GAAAyN,IAAA+D,KAEA,IAAAtV,KAAA4Y,kBACA,MAAAZ,mBAAApR,KAAA5G,KAAAiY,UAAAhN,OAAAE,OAYA,KATAnL,KAAAqY,eACArY,KAAAqY,gBACArY,KAAAsY,oBACAtY,KAAAuY,sBAMAzU,EAAA,EAAAA,EAAA,GAAAA,IAAA,CAYA,GAVAyN,IAAAvG,WAAA,IAAAlH,IACAqH,SAAAnL,KAAAsY,iBAAAxU,KACA9D,KAAAsY,iBAAAxU,GAAA,GAAAlH,QAAA,IAAAoD,KAAAyY,OAAAlH,IAAA,IAAApU,QAAA,IAAA,IAAA,IAAA,KACA6C,KAAAuY,kBAAAzU,GAAA,GAAAlH,QAAA,IAAAoD,KAAAwY,YAAAjH,IAAA,IAAApU,QAAA,IAAA,IAAA,IAAA,MAEAgO,QAAAnL,KAAAqY,aAAAvU,KACAwR,MAAA,IAAAtV,KAAAyY,OAAAlH,IAAA,IAAA,KAAAvR,KAAAwY,YAAAjH,IAAA,IACAvR,KAAAqY,aAAAvU,GAAA,GAAAlH,QAAA0Y,MAAAnY,QAAA,IAAA,IAAA,MAGAgO,QAAA,SAAAF,QAAAjL,KAAAsY,iBAAAxU,GAAAjH,KAAAob,WACA,MAAAnU,EACA,IAAAqH,QAAA,QAAAF,QAAAjL,KAAAuY,kBAAAzU,GAAAjH,KAAAob,WACA,MAAAnU,EACA,KAAAqH,QAAAnL,KAAAqY,aAAAvU,GAAAjH,KAAAob,WACA,MAAAnU,IAOA,QAAA+U,UAAAtH,IAAArC,OACA,GAAA4J,WAEA,KAAAvH,IAAA/E,UAEA,MAAA+E,IAGA,IAAA,gBAAArC,OACA,GAAA,QAAArS,KAAAqS,OACAA,MAAAH,MAAAG,WAIA,IAFAA,MAAAqC,IAAAkD,aAAAsE,YAAA7J,QAEA5E,SAAA4E,OACA,MAAAqC,IAOA,OAFAuH,YAAAlK,KAAAY,IAAA+B,IAAAyH,OAAA9B,YAAA3F,IAAAmF,OAAAxH,QACAqC,IAAAxE,GAAA,OAAAwE,IAAAtD,OAAA,MAAA,IAAA,SAAAiB,MAAA4J,YACAvH,IAGA,QAAA0H,aAAA/J,OACA,MAAA,OAAAA,OACA2J,SAAA7Y,KAAAkP,OACAzF,MAAA+E,aAAAxO,MAAA,GACAA,MAEAgX,IAAAhX,KAAA,SAIA,QAAAkZ,kBACA,MAAAhC,aAAAlX,KAAA0W,OAAA1W,KAAAiX,SAIA,QAAAkC,kBAAA1D,UACA,MAAAzV,MAAA4Y,mBACAjO,WAAA3K,KAAA,iBACAoZ,mBAAAxS,KAAA5G,MAEAyV,SACAzV,KAAAqZ,wBAEArZ,KAAAsZ,oBAGA3O,WAAA3K,KAAA,uBACAA,KAAAsZ,kBAAAC,yBAEAvZ,KAAAqZ,yBAAA5D,SACAzV,KAAAqZ,wBAAArZ,KAAAsZ,mBAKA,QAAAE,aAAA/D,UACA,MAAAzV,MAAA4Y,mBACAjO,WAAA3K,KAAA,iBACAoZ,mBAAAxS,KAAA5G,MAEAyV,SACAzV,KAAAyZ,mBAEAzZ,KAAA0Z,eAGA/O,WAAA3K,KAAA,kBACAA,KAAA0Z,aAAAC,oBAEA3Z,KAAAyZ,oBAAAhE,SACAzV,KAAAyZ,mBAAAzZ,KAAA0Z,cAIA,QAAAN,sBACA,QAAAQ,WAAAhP,EAAAC,GACA,MAAAA,GAAAjL,OAAAgL,EAAAhL,OAGA,GACAkE,GAAAyN,IADAsI,eAAAC,cAAAC,cAEA,KAAAjW,EAAA,EAAAA,EAAA,GAAAA,IAEAyN,IAAAvG,WAAA,IAAAlH,IACA+V,YAAA3Z,KAAAF,KAAAwY,YAAAjH,IAAA,KACAuI,WAAA5Z,KAAAF,KAAAyY,OAAAlH,IAAA,KACAwI,YAAA7Z,KAAAF,KAAAyY,OAAAlH,IAAA,KACAwI,YAAA7Z,KAAAF,KAAAwY,YAAAjH,IAAA,IAOA,KAHAsI,YAAAlG,KAAAiG,WACAE,WAAAnG,KAAAiG,WACAG,YAAApG,KAAAiG,WACA9V,EAAA,EAAAA,EAAA,GAAAA,IACA+V,YAAA/V,GAAA+R,YAAAgE,YAAA/V,IACAgW,WAAAhW,GAAA+R,YAAAiE,WAAAhW,GAEA,KAAAA,EAAA,EAAAA,EAAA,GAAAA,IACAiW,YAAAjW,GAAA+R,YAAAkE,YAAAjW,GAGA9D,MAAA0Z,aAAA,GAAA9c,QAAA,KAAAmd,YAAAzJ,KAAA,KAAA,IAAA,KACAtQ,KAAAsZ,kBAAAtZ,KAAA0Z,aACA1Z,KAAAyZ,mBAAA,GAAA7c,QAAA,KAAAkd,WAAAxJ,KAAA,KAAA,IAAA,KACAtQ,KAAAqZ,wBAAA,GAAAzc,QAAA,KAAAid,YAAAvJ,KAAA,KAAA,IAAA,KAGA,QAAA0J,YAAAC,EAAA3N,EAAA4N,EAAAC,EAAAC,EAAAxE,EAAAyE,IAGA,GAAArB,MAAA,GAAApd,MAAAqe,EAAA3N,EAAA4N,EAAAC,EAAAC,EAAAxE,EAAAyE,GAMA,OAHAJ,GAAA,KAAAA,GAAA,GAAA9K,SAAA6J,KAAAsB,gBACAtB,KAAAuB,YAAAN,GAEAjB,KAGA,QAAAwB,eAAAP,GACA,GAAAjB,MAAA,GAAApd,MAAAA,KAAA6e,IAAA3a,MAAA,KAAAG,WAMA,OAHAga,GAAA,KAAAA,GAAA,GAAA9K,SAAA6J,KAAA0B,mBACA1B,KAAA2B,eAAAV,GAEAjB,KAIA,QAAA4B,iBAAAlE,KAAAmE,IAAAC,KACA,GACAC,KAAA,EAAAF,IAAAC,GAIA,SAFA,EAAAN,cAAA9D,KAAA,EAAAqE,KAAAC,YAAAH,KAAA,EAEAE,IAAA,EAIA,QAAAE,oBAAAvE,KAAAwE,KAAAC,QAAAN,IAAAC,KACA,GAGAM,SAAAC,aAHAC,cAAA,EAAAH,QAAAN,KAAA,EACAU,WAAAX,gBAAAlE,KAAAmE,IAAAC,KACAU,UAAA,EAAA,GAAAN,KAAA,GAAAI,aAAAC,UAcA,OAXAC,YAAA,GACAJ,QAAA1E,KAAA,EACA2E,aAAA5E,WAAA2E,SAAAI,WACAA,UAAA/E,WAAAC,OACA0E,QAAA1E,KAAA,EACA2E,aAAAG,UAAA/E,WAAAC,QAEA0E,QAAA1E,KACA2E,aAAAG,YAIA9E,KAAA0E,QACAI,UAAAH,cAIA,QAAAI,YAAAlK,IAAAsJ,IAAAC,KACA,GAEAY,SAAAN,QAFAG,WAAAX,gBAAArJ,IAAAmF,OAAAmE,IAAAC,KACAI,KAAAtM,KAAAE,OAAAyC,IAAAiK,YAAAD,WAAA,GAAA,GAAA,CAcA,OAXAL,MAAA,GACAE,QAAA7J,IAAAmF,OAAA,EACAgF,QAAAR,KAAAS,YAAAP,QAAAP,IAAAC,MACAI,KAAAS,YAAApK,IAAAmF,OAAAmE,IAAAC,MACAY,QAAAR,KAAAS,YAAApK,IAAAmF,OAAAmE,IAAAC,KACAM,QAAA7J,IAAAmF,OAAA,IAEA0E,QAAA7J,IAAAmF,OACAgF,QAAAR,OAIAA,KAAAQ,QACAhF,KAAA0E,SAIA,QAAAO,aAAAjF,KAAAmE,IAAAC,KACA,GAAAS,YAAAX,gBAAAlE,KAAAmE,IAAAC,KACAc,eAAAhB,gBAAAlE,KAAA,EAAAmE,IAAAC,IACA,QAAArE,WAAAC,MAAA6E,WAAAK,gBAAA,EAiCA,QAAAC,YAAAtK,KACA,MAAAkK,YAAAlK,IAAAvR,KAAA8b,MAAAjB,IAAA7a,KAAA8b,MAAAhB,KAAAI,KAQA,QAAAa,wBACA,MAAA/b,MAAA8b,MAAAjB,IAGA,QAAAmB,wBACA,MAAAhc,MAAA8b,MAAAhB,IAKA,QAAAmB,YAAArS,OACA,GAAAsR,MAAAlb,KAAAyU,aAAAyG,KAAAlb,KACA,OAAA,OAAA4J,MAAAsR,KAAAlb,KAAAzC,IAAA,GAAAqM,MAAAsR,MAAA,KAGA,QAAAgB,eAAAtS,OACA,GAAAsR,MAAAO,WAAAzb,KAAA,EAAA,GAAAkb,IACA,OAAA,OAAAtR,MAAAsR,KAAAlb,KAAAzC,IAAA,GAAAqM,MAAAsR,MAAA,KAgEA,QAAAiB,cAAAvS,MAAAsB,QACA,MAAA,gBAAAtB,OACAA,MAGAkD,MAAAlD,QAIAA,MAAAsB,OAAAkR,cAAAxS,OACA,gBAAAA,OACAA,MAGA,MARAyS,SAAAzS,MAAA,IAWA,QAAA0S,iBAAA1S,MAAAsB,QACA,MAAA,gBAAAtB,OACAsB,OAAAkR,cAAAxS,OAAA,GAAA,EAEAkD,MAAAlD,OAAA,KAAAA,MAMA,QAAA2S,gBAAAjQ,EAAArB,QACA,MAAAqB,GAIA3C,QAAA3J,KAAAwc,WAAAxc,KAAAwc,UAAAlQ,EAAAmQ,OACAzc,KAAAwc,UAAAxc,KAAAwc,UAAA5E,SAAA/a,KAAAoO,QAAA,SAAA,cAAAqB,EAAAmQ,OAJA9S,QAAA3J,KAAAwc,WAAAxc,KAAAwc,UACAxc,KAAAwc,UAAA,WAOA,QAAAE,qBAAApQ,GACA,MAAA,GAAAtM,KAAA2c,eAAArQ,EAAAmQ,OAAAzc,KAAA2c,eAIA,QAAAC,mBAAAtQ,GACA,MAAA,GAAAtM,KAAA6c,aAAAvQ,EAAAmQ,OAAAzc,KAAA6c,aAGA,QAAAC,qBAAAC,YAAA9R,OAAAE,QACA,GAAArH,GAAAoU,GAAA3G,IAAA4G,IAAA4E,YAAA3E,mBACA,KAAApY,KAAAgd,eAKA,IAJAhd,KAAAgd,kBACAhd,KAAAid,uBACAjd,KAAAkd,qBAEApZ,EAAA,EAAAA,EAAA,IAAAA,EACAyN,IAAAvG,WAAA,IAAA,IAAAyR,IAAA3Y,GACA9D,KAAAkd,kBAAApZ,GAAA9D,KAAAmd,YAAA5L,IAAA,IAAA6G,oBACApY,KAAAid,oBAAAnZ,GAAA9D,KAAAod,cAAA7L,IAAA,IAAA6G,oBACApY,KAAAgd,eAAAlZ,GAAA9D,KAAAqd,SAAA9L,IAAA,IAAA6G,mBAIA,OAAAjN,QACA,SAAAF,QACAiN,GAAAQ,QAAA9R,KAAA5G,KAAAgd,eAAA7E,MACA,IAAAD,GAAAA,GAAA,MACA,QAAAjN,QACAiN,GAAAQ,QAAA9R,KAAA5G,KAAAid,oBAAA9E,MACA,IAAAD,GAAAA,GAAA,OAEAA,GAAAQ,QAAA9R,KAAA5G,KAAAkd,kBAAA/E,MACA,IAAAD,GAAAA,GAAA,MAGA,SAAAjN,QAEA,KADAiN,GAAAQ,QAAA9R,KAAA5G,KAAAgd,eAAA7E,MAEAD,IAGA,KADAA,GAAAQ,QAAA9R,KAAA5G,KAAAid,oBAAA9E,MAEAD,IAEAA,GAAAQ,QAAA9R,KAAA5G,KAAAkd,kBAAA/E,MACA,IAAAD,GAAAA,GAAA,MACA,QAAAjN,QAEA,KADAiN,GAAAQ,QAAA9R,KAAA5G,KAAAid,oBAAA9E,MAEAD,IAGA,KADAA,GAAAQ,QAAA9R,KAAA5G,KAAAgd,eAAA7E,MAEAD,IAEAA,GAAAQ,QAAA9R,KAAA5G,KAAAkd,kBAAA/E,MACA,IAAAD,GAAAA,GAAA,OAGA,KADAA,GAAAQ,QAAA9R,KAAA5G,KAAAkd,kBAAA/E,MAEAD,IAGA,KADAA,GAAAQ,QAAA9R,KAAA5G,KAAAgd,eAAA7E,MAEAD,IAEAA,GAAAQ,QAAA9R,KAAA5G,KAAAid,oBAAA9E,MACA,IAAAD,GAAAA,GAAA,MAKA,QAAAoF,qBAAAP,YAAA9R,OAAAE,QACA,GAAArH,GAAAyN,IAAA+D,KAEA,IAAAtV,KAAAud,oBACA,MAAAT,qBAAAlW,KAAA5G,KAAA+c,YAAA9R,OAAAE;4FAUA,KAPAnL,KAAAgd,iBACAhd,KAAAgd,kBACAhd,KAAAkd,qBACAld,KAAAid,uBACAjd,KAAAwd,uBAGA1Z,EAAA,EAAAA,EAAA,EAAAA,IAAA,CAcA,GAXAyN,IAAAvG,WAAA,IAAA,IAAAyR,IAAA3Y,GACAqH,SAAAnL,KAAAwd,mBAAA1Z,KACA9D,KAAAwd,mBAAA1Z,GAAA,GAAAlH,QAAA,IAAAoD,KAAAqd,SAAA9L,IAAA,IAAApU,QAAA,IAAA,MAAA,IAAA,KACA6C,KAAAid,oBAAAnZ,GAAA,GAAAlH,QAAA,IAAAoD,KAAAod,cAAA7L,IAAA,IAAApU,QAAA,IAAA,MAAA,IAAA,KACA6C,KAAAkd,kBAAApZ,GAAA,GAAAlH,QAAA,IAAAoD,KAAAmd,YAAA5L,IAAA,IAAApU,QAAA,IAAA,MAAA,IAAA,MAEA6C,KAAAgd,eAAAlZ,KACAwR,MAAA,IAAAtV,KAAAqd,SAAA9L,IAAA,IAAA,KAAAvR,KAAAod,cAAA7L,IAAA,IAAA,KAAAvR,KAAAmd,YAAA5L,IAAA,IACAvR,KAAAgd,eAAAlZ,GAAA,GAAAlH,QAAA0Y,MAAAnY,QAAA,IAAA,IAAA,MAGAgO,QAAA,SAAAF,QAAAjL,KAAAwd,mBAAA1Z,GAAAjH,KAAAkgB,aACA,MAAAjZ,EACA,IAAAqH,QAAA,QAAAF,QAAAjL,KAAAid,oBAAAnZ,GAAAjH,KAAAkgB,aACA,MAAAjZ,EACA,IAAAqH,QAAA,OAAAF,QAAAjL,KAAAkd,kBAAApZ,GAAAjH,KAAAkgB,aACA,MAAAjZ,EACA,KAAAqH,QAAAnL,KAAAgd,eAAAlZ,GAAAjH,KAAAkgB,aACA,MAAAjZ,IAOA,QAAA2Z,iBAAA7T,OACA,IAAA5J,KAAAwM,UACA,MAAA,OAAA5C,MAAA5J,KAAAuN,GAEA,IAAAkP,KAAAzc,KAAAiO,OAAAjO,KAAA+M,GAAAiO,YAAAhb,KAAA+M,GAAA2Q,QACA,OAAA,OAAA9T,OACAA,MAAAuS,aAAAvS,MAAA5J,KAAAyU,cACAzU,KAAAzC,IAAAqM,MAAA6S,IAAA,MAEAA,IAIA,QAAAkB,uBAAA/T,OACA,IAAA5J,KAAAwM,UACA,MAAA,OAAA5C,MAAA5J,KAAAuN,GAEA,IAAA4N,UAAAnb,KAAAyc,MAAA,EAAAzc,KAAAyU,aAAAqH,MAAAjB,KAAA,CACA,OAAA,OAAAjR,MAAAuR,QAAAnb,KAAAzC,IAAAqM,MAAAuR,QAAA,KAGA,QAAAyC,oBAAAhU,OACA,IAAA5J,KAAAwM,UACA,MAAA,OAAA5C,MAAA5J,KAAAuN,GAOA,IAAA,MAAA3D,MAAA,CACA,GAAAuR,SAAAmB,gBAAA1S,MAAA5J,KAAAyU,aACA,OAAAzU,MAAAyc,IAAAzc,KAAAyc,MAAA,EAAAtB,QAAAA,QAAA,GAEA,MAAAnb,MAAAyc,OAAA,EAKA,QAAAoB,eAAApI,UACA,MAAAzV,MAAAud,qBACA5S,WAAA3K,KAAA,mBACA8d,qBAAAlX,KAAA5G,MAEAyV,SACAzV,KAAA+d,qBAEA/d,KAAAge,iBAGArT,WAAA3K,KAAA,oBACAA,KAAAge,eAAAC,sBAEAje,KAAA+d,sBAAAtI,SACAzV,KAAA+d,qBAAA/d,KAAAge,gBAKA,QAAAE,oBAAAzI,UACA,MAAAzV,MAAAud,qBACA5S,WAAA3K,KAAA,mBACA8d,qBAAAlX,KAAA5G,MAEAyV,SACAzV,KAAAme,0BAEAne,KAAAoe,sBAGAzT,WAAA3K,KAAA,yBACAA,KAAAoe,oBAAAC,2BAEAre,KAAAme,2BAAA1I,SACAzV,KAAAme,0BAAAne,KAAAoe,qBAKA,QAAAE,kBAAA7I,UACA,MAAAzV,MAAAud,qBACA5S,WAAA3K,KAAA,mBACA8d,qBAAAlX,KAAA5G,MAEAyV,SACAzV,KAAAue,wBAEAve,KAAAwe,oBAGA7T,WAAA3K,KAAA,uBACAA,KAAAwe,kBAAAC,yBAEAze,KAAAue,yBAAA9I,SACAzV,KAAAue,wBAAAve,KAAAwe,mBAKA,QAAAV,wBACA,QAAAlE,WAAAhP,EAAAC,GACA,MAAAA,GAAAjL,OAAAgL,EAAAhL,OAGA,GACAkE,GAAAyN,IAAAmN,KAAAC,OAAAC,MADAC,aAAAhF,eAAAC,cAAAC,cAEA,KAAAjW,EAAA,EAAAA,EAAA,EAAAA,IAEAyN,IAAAvG,WAAA,IAAA,IAAAyR,IAAA3Y,GACA4a,KAAA1e,KAAAmd,YAAA5L,IAAA,IACAoN,OAAA3e,KAAAod,cAAA7L,IAAA,IACAqN,MAAA5e,KAAAqd,SAAA9L,IAAA,IACAsN,UAAA3e,KAAAwe,MACA7E,YAAA3Z,KAAAye,QACA7E,WAAA5Z,KAAA0e,OACA7E,YAAA7Z,KAAAwe,MACA3E,YAAA7Z,KAAAye,QACA5E,YAAA7Z,KAAA0e,MAQA,KAJAC,UAAAlL,KAAAiG,WACAC,YAAAlG,KAAAiG,WACAE,WAAAnG,KAAAiG,WACAG,YAAApG,KAAAiG,WACA9V,EAAA,EAAAA,EAAA,EAAAA,IACA+V,YAAA/V,GAAA+R,YAAAgE,YAAA/V,IACAgW,WAAAhW,GAAA+R,YAAAiE,WAAAhW,IACAiW,YAAAjW,GAAA+R,YAAAkE,YAAAjW,GAGA9D,MAAAge,eAAA,GAAAphB,QAAA,KAAAmd,YAAAzJ,KAAA,KAAA,IAAA,KACAtQ,KAAAoe,oBAAApe,KAAAge,eACAhe,KAAAwe,kBAAAxe,KAAAge,eAEAhe,KAAA+d,qBAAA,GAAAnhB,QAAA,KAAAkd,WAAAxJ,KAAA,KAAA,IAAA,KACAtQ,KAAAme,0BAAA,GAAAvhB,QAAA,KAAAid,YAAAvJ,KAAA,KAAA,IAAA,KACAtQ,KAAAue,wBAAA,GAAA3hB,QAAA,KAAAiiB,UAAAvO,KAAA,KAAA,IAAA,KAKA,QAAAwO,WACA,MAAA9e,MAAA+e,QAAA,IAAA,GAGA,QAAAC,WACA,MAAAhf,MAAA+e,SAAA,GAyBA,QAAA7S,UAAAmI,MAAA4K,WACA7K,eAAAC,MAAA,EAAA,EAAA,WACA,MAAArU,MAAAyU,aAAAvI,SAAAlM,KAAA+e,QAAA/e,KAAAkf,UAAAD,aAgBA,QAAAE,eAAA1J,SAAAvK,QACA,MAAAA,QAAAkU,eA2DA,QAAAC,YAAAzV,OAGA,MAAA,OAAAA,MAAA,IAAAiJ,cAAAyM,OAAA,GAIA,QAAAC,gBAAAR,MAAAG,QAAAM,SACA,MAAAT,OAAA,GACAS,QAAA,KAAA,KAEAA,QAAA,KAAA,KA0CA,QAAAC,iBAAArP,KACA,MAAAA,KAAAA,IAAAyC,cAAA1V,QAAA,IAAA,KAAAiT,IAMA,QAAAsP,cAAAC,OAGA,IAFA,GAAAC,GAAAC,KAAA3U,OAAA4U,MAAAhc,EAAA,EAEAA,EAAA6b,MAAA/f,QAAA,CAKA,IAJAkgB,MAAAL,gBAAAE,MAAA7b,IAAAgc,MAAA,KACAF,EAAAE,MAAAlgB,OACAigB,KAAAJ,gBAAAE,MAAA7b,EAAA,IACA+b,KAAAA,KAAAA,KAAAC,MAAA,KAAA,KACAF,EAAA,GAAA,CAEA,GADA1U,OAAA6U,WAAAD,MAAAzP,MAAA,EAAAuP,GAAAtP,KAAA,MAEA,MAAApF,OAEA,IAAA2U,MAAAA,KAAAjgB,QAAAggB,GAAAxQ,cAAA0Q,MAAAD,MAAA,IAAAD,EAAA,EAEA,KAEAA,KAEA9b,IAEA,MAAA,MAGA,QAAAic,YAAAniB,MACA,GAAAoiB,WAAA,IAEA,KAAAC,QAAAriB,OAAA,mBAAAuL,SACAA,QAAAA,OAAAC,QACA,IACA4W,UAAAE,aAAAC,KACAC,SACA,YAAAxiB,MACAyiB,mBAAAL,WACA,MAAAjd,IAEA,MAAAkd,SAAAriB,MAMA,QAAAyiB,oBAAAjQ,IAAAkQ,QACA,GAAAC,KAeA,OAdAnQ,OAEAmQ,KADAlW,YAAAiW,QACAE,UAAApQ,KAGAqQ,aAAArQ,IAAAkQ,WAKAJ,aAAAK,MAIAL,aAAAC,MAGA,QAAAM,cAAA7iB,KAAA0Q,QACA,GAAA,OAAAA,OAAA,CACA,GAAA6C,cAAAuP,UAEA,IADApS,OAAAqS,KAAA/iB,KACA,MAAAqiB,QAAAriB,MACA6S,gBAAA,uBACA,2OAIAU,aAAA8O,QAAAriB,MAAAkT,YACA,IAAA,MAAAxC,OAAAsS,aAAA,CACA,GAAA,MAAAX,QAAA3R,OAAAsS,cAUA,MAPAC,gBAAAvS,OAAAsS,gBACAC,eAAAvS,OAAAsS,kBAEAC,eAAAvS,OAAAsS,cAAA1gB,MACAtC,KAAAA,KACA0Q,OAAAA,SAEA,IATA6C,cAAA8O,QAAA3R,OAAAsS,cAAA9P,QA0BA,MAdAmP,SAAAriB,MAAA,GAAAyT,QAAAH,aAAAC,aAAA7C,SAEAuS,eAAAjjB,OACAijB,eAAAjjB,MAAAtB,QAAA,SAAAkb,GACAiJ,aAAAjJ,EAAA5Z,KAAA4Z,EAAAlJ,UAOA+R,mBAAAziB,MAGAqiB,QAAAriB,MAIA,aADAqiB,SAAAriB,MACA,KAIA,QAAAkjB,cAAAljB,KAAA0Q,QACA,GAAA,MAAAA,OAAA,CACA,GAAApD,QAAAiG,aAAAuP,UAEA,OAAAT,QAAAriB,QACAuT,aAAA8O,QAAAriB,MAAAkT,SAEAxC,OAAA4C,aAAAC,aAAA7C,QACApD,OAAA,GAAAmG,QAAA/C,QACApD,OAAA0V,aAAAX,QAAAriB,MACAqiB,QAAAriB,MAAAsN,OAGAmV,mBAAAziB,UAGA,OAAAqiB,QAAAriB,QACA,MAAAqiB,QAAAriB,MAAAgjB,aACAX,QAAAriB,MAAAqiB,QAAAriB,MAAAgjB,aACA,MAAAX,QAAAriB,aACAqiB,SAAAriB,MAIA,OAAAqiB,SAAAriB,MAIA,QAAA4iB,WAAApQ,KACA,GAAAlF,OAMA,IAJAkF,KAAAA,IAAAjC,SAAAiC,IAAAjC,QAAAgS,QACA/P,IAAAA,IAAAjC,QAAAgS,QAGA/P,IACA,MAAA8P,aAGA,KAAAvW,QAAAyG,KAAA,CAGA,GADAlF,OAAA6U,WAAA3P,KAEA,MAAAlF,OAEAkF,MAAAA,KAGA,MAAAsP,cAAAtP,KAGA,QAAA2Q,eACA,MAAAC,MAAAf,SAGA,QAAAgB,eAAA3U,GACA,GAAAZ,UACAd,EAAA0B,EAAAkK,EAyBA,OAvBA5L,KAAA,IAAAyB,gBAAAC,GAAAZ,WACAA,SACAd,EAAAsW,OAAA,GAAAtW,EAAAsW,OAAA,GAAAA,MACAtW,EAAAuW,MAAA,GAAAvW,EAAAuW,MAAAjK,YAAAtM,EAAAwW,MAAAxW,EAAAsW,QAAAC,KACAvW,EAAAyW,MAAA,GAAAzW,EAAAyW,MAAA,IAAA,KAAAzW,EAAAyW,QAAA,IAAAzW,EAAA0W,SAAA,IAAA1W,EAAA2W,SAAA,IAAA3W,EAAA4W,cAAAH,KACAzW,EAAA0W,QAAA,GAAA1W,EAAA0W,QAAA,GAAAA,OACA1W,EAAA2W,QAAA,GAAA3W,EAAA2W,QAAA,GAAAA,OACA3W,EAAA4W,aAAA,GAAA5W,EAAA4W,aAAA,IAAAA,aACA,EAEAnV,gBAAAC,GAAAmV,qBAAA/V,SAAA0V,MAAA1V,SAAAyV,QACAzV,SAAAyV,MAEA9U,gBAAAC,GAAAoV,iBAAA,IAAAhW,WACAA,SAAAiW,MAEAtV,gBAAAC,GAAAsV,mBAAA,IAAAlW,WACAA,SAAAmW,SAGAxV,gBAAAC,GAAAZ,SAAAA,UAGAY,EAIA,QAAAwV,UAAAlX,EAAAC,EAAAkX,GACA,MAAA,OAAAnX,EACAA,EAEA,MAAAC,EACAA,EAEAkX,EAGA,QAAAC,kBAAA1T,QAEA,GAAA2T,UAAA,GAAArmB,MAAA6N,MAAA7I,MACA,OAAA0N,QAAA4T,SACAD,SAAAvH,iBAAAuH,SAAAE,cAAAF,SAAAG,eAEAH,SAAA3H,cAAA2H,SAAAI,WAAAJ,SAAAK,WAOA,QAAAC,iBAAAjU,QACA,GAAAxK,GAAAkV,KAAAwJ,YAAAC,UAAA7Y,QAEA,KAAA0E,OAAAvB,GAAA,CA6BA,IAzBAyV,YAAAR,iBAAA1T,QAGAA,OAAAgI,IAAA,MAAAhI,OAAAkI,GAAA2K,OAAA,MAAA7S,OAAAkI,GAAA0K,QACAwB,sBAAApU,QAIA,MAAAA,OAAAqU,aACAF,UAAAX,SAAAxT,OAAAkI,GAAA4K,MAAAoB,YAAApB,QAEA9S,OAAAqU,WAAAlM,WAAAgM,YAAA,IAAAnU,OAAAqU,cACAtW,gBAAAiC,QAAAmT,oBAAA,GAGAzI,KAAAwB,cAAAiI,UAAA,EAAAnU,OAAAqU,YACArU,OAAAkI,GAAA0K,OAAAlI,KAAAmJ,cACA7T,OAAAkI,GAAA2K,MAAAnI,KAAAoJ,cAQAte,EAAA,EAAAA,EAAA,GAAA,MAAAwK,OAAAkI,GAAA1S,KAAAA,EACAwK,OAAAkI,GAAA1S,GAAA8F,MAAA9F,GAAA0e,YAAA1e,EAIA,MAAAA,EAAA,EAAAA,IACAwK,OAAAkI,GAAA1S,GAAA8F,MAAA9F,GAAA,MAAAwK,OAAAkI,GAAA1S,GAAA,IAAAA,EAAA,EAAA,EAAAwK,OAAAkI,GAAA1S,EAIA,MAAAwK,OAAAkI,GAAA6K,OACA,IAAA/S,OAAAkI,GAAA8K,SACA,IAAAhT,OAAAkI,GAAA+K,SACA,IAAAjT,OAAAkI,GAAAgL,eACAlT,OAAAsU,UAAA,EACAtU,OAAAkI,GAAA6K,MAAA,GAGA/S,OAAAvB,IAAAuB,OAAA4T,QAAA1H,cAAAR,YAAAla,MAAA,KAAA8J,OAGA,MAAA0E,OAAAN,MACAM,OAAAvB,GAAA8V,cAAAvU,OAAAvB,GAAA+V,gBAAAxU,OAAAN,MAGAM,OAAAsU,WACAtU,OAAAkI,GAAA6K,MAAA,IAIA/S,OAAAgI,QAAA,KAAAhI,OAAAgI,GAAA4D,GAAA5L,OAAAgI,GAAA4D,IAAA5L,OAAAvB,GAAA2Q,WACArR,gBAAAiC,QAAAlC,iBAAA,IAIA,QAAAsW,uBAAApU,QACA,GAAAyU,GAAAC,SAAA9H,KAAAC,QAAAN,IAAAC,IAAAmI,KAAAC,eAGA,IADAH,EAAAzU,OAAAgI,GACA,MAAAyM,EAAAI,IAAA,MAAAJ,EAAAK,GAAA,MAAAL,EAAAM,EACAxI,IAAA,EACAC,IAAA,EAMAkI,SAAAlB,SAAAiB,EAAAI,GAAA7U,OAAAkI,GAAA4K,MAAA3F,WAAA6H,cAAA,EAAA,GAAA5M,MACAwE,KAAA4G,SAAAiB,EAAAK,EAAA,KACAjI,QAAA2G,SAAAiB,EAAAM,EAAA,IACA,GAAAlI,QAAA,KACA+H,iBAAA,OAEA,CACArI,IAAAvM,OAAAH,QAAA2N,MAAAjB,IACAC,IAAAxM,OAAAH,QAAA2N,MAAAhB,GAEA,IAAAyI,SAAA9H,WAAA6H,cAAAzI,IAAAC,IAEAkI,UAAAlB,SAAAiB,EAAAS,GAAAlV,OAAAkI,GAAA4K,MAAAmC,QAAA7M,MAGAwE,KAAA4G,SAAAiB,EAAAA,EAAAQ,QAAArI,MAEA,MAAA6H,EAAA7I,IAEAiB,QAAA4H,EAAA7I,GACA,GAAAiB,QAAA,KACA+H,iBAAA,GAEA,MAAAH,EAAAhgB,GAEAoY,QAAA4H,EAAAhgB,EAAA8X,KACAkI,EAAAhgB,EAAA,GAAAggB,EAAAhgB,EAAA,KACAmgB,iBAAA,IAIA/H,QAAAN,IAGAK,KAAA,GAAAA,KAAAS,YAAAqH,SAAAnI,IAAAC,KACAzO,gBAAAiC,QAAAoT,gBAAA,EACA,MAAAwB,gBACA7W,gBAAAiC,QAAAsT,kBAAA,GAEAqB,KAAAhI,mBAAA+H,SAAA9H,KAAAC,QAAAN,IAAAC,KACAxM,OAAAkI,GAAA4K,MAAA6B,KAAAvM,KACApI,OAAAqU,WAAAM,KAAAzH,WA0CA,QAAAiI,eAAAnV,QACA,GAAAxK,GAAA4f,EAGAC,UAAAC,WAAAC,WAAAC,SAFA1R,OAAA9D,OAAAT,GACA8G,MAAAoP,iBAAAC,KAAA5R,SAAA6R,cAAAD,KAAA5R,OAGA,IAAAuC,MAAA,CAGA,IAFAtI,gBAAAiC,QAAAtC,KAAA,EAEAlI,EAAA,EAAA4f,EAAAQ,SAAAtkB,OAAAkE,EAAA4f,EAAA5f,IACA,GAAAogB,SAAApgB,GAAA,GAAAkgB,KAAArP,MAAA,IAAA,CACAiP,WAAAM,SAAApgB,GAAA,GACA6f,WAAA,IAAAO,SAAApgB,GAAA,EACA,OAGA,GAAA,MAAA8f,WAEA,YADAtV,OAAA7B,UAAA,EAGA,IAAAkI,MAAA,GAAA,CACA,IAAA7Q,EAAA,EAAA4f,EAAAS,SAAAvkB,OAAAkE,EAAA4f,EAAA5f,IACA,GAAAqgB,SAAArgB,GAAA,GAAAkgB,KAAArP,MAAA,IAAA,CAEAkP,YAAAlP,MAAA,IAAA,KAAAwP,SAAArgB,GAAA,EACA,OAGA,GAAA,MAAA+f,WAEA,YADAvV,OAAA7B,UAAA,GAIA,IAAAkX,WAAA,MAAAE,WAEA,YADAvV,OAAA7B,UAAA,EAGA,IAAAkI,MAAA,GAAA,CACA,IAAAyP,QAAAJ,KAAArP,MAAA,IAIA,YADArG,OAAA7B,UAAA,EAFAqX,UAAA,IAMAxV,OAAAR,GAAA8V,YAAAC,YAAA,KAAAC,UAAA,IACAO,0BAAA/V,YAEAA,QAAA7B,UAAA,EAOA,QAAA6X,2BAAAC,QAAAC,SAAAC,OAAAC,QAAAC,UAAAC,WACA,GAAAC,SACAC,eAAAP,SACAQ,yBAAArM,QAAA8L,UACAnI,SAAAoI,OAAA,IACApI,SAAAqI,QAAA,IACArI,SAAAsI,UAAA,IAOA,OAJAC,YACAC,OAAA3kB,KAAAmc,SAAAuI,UAAA,KAGAC,OAGA,QAAAC,gBAAAP,SACA,GAAA7N,MAAA2F,SAAAkI,QAAA,GACA,OAAA7N,OAAA,GACA,IAAAA,KACAA,MAAA,IACA,KAAAA,KAEAA,KAGA,QAAAsO,mBAAApP,GAEA,MAAAA,GAAAzY,QAAA,oBAAA,KAAAA,QAAA,WAAA,KAAAH,OAGA,QAAAioB,cAAAC,WAAAC,YAAA7W,QACA,GAAA4W,WAAA,CAIA,GAFAE,2BAAA1M,QAAAwM,cACA,GAAAtpB,MAAAupB,YAAA,GAAAA,YAAA,GAAAA,YAAA,IAAAzH,SAIA,MAFArR,iBAAAiC,QAAAlC,iBAAA,EACAkC,OAAA7B,UAAA,GACA,EAGA,OAAA,EAgBA,QAAA4Y,iBAAAC,UAAAC,eAAAC,WACA,GAAAF,UACA,MAAAG,YAAAH,UACA,IAAAC,eAEA,MAAA,EAEA,IAAAG,IAAArJ,SAAAmJ,UAAA,IACAlZ,EAAAoZ,GAAA,GACA,QADAA,GAAApZ,GAAA,IACA,GAAAA,EAKA,QAAAqZ,mBAAArX,QACA,GAAAqG,OAAAxI,QAAA6X,KAAAgB,kBAAA1W,OAAAT,IACA,IAAA8G,MAAA,CACA,GAAAiR,aAAAtB,0BAAA3P,MAAA,GAAAA,MAAA,GAAAA,MAAA,GAAAA,MAAA,GAAAA,MAAA,GAAAA,MAAA,GACA,KAAAsQ,aAAAtQ,MAAA,GAAAiR,YAAAtX,QACA,MAGAA,QAAAkI,GAAAoP,YACAtX,OAAAN,KAAAqX,gBAAA1Q,MAAA,GAAAA,MAAA,GAAAA,MAAA,KAEArG,OAAAvB,GAAAyN,cAAA1a,MAAA,KAAAwO,OAAAkI,IACAlI,OAAAvB,GAAA8V,cAAAvU,OAAAvB,GAAA+V,gBAAAxU,OAAAN,MAEA3B,gBAAAiC,QAAAnC,SAAA,MAEAmC,QAAA7B,UAAA,EAKA,QAAAoZ,kBAAAvX,QACA,GAAAwH,SAAAgQ,gBAAA9B,KAAA1V,OAAAT,GAEA,IAAA,OAAAiI,QAEA,YADAxH,OAAAvB,GAAA,GAAAnR,OAAAka,QAAA,IAIA2N,eAAAnV,SACA,IAAAA,OAAA7B,iBACA6B,QAAA7B,SAKAkZ,kBAAArX,SACA,IAAAA,OAAA7B,iBACA6B,QAAA7B,SAMAhD,MAAAsc,wBAAAzX,UAoBA,QAAA+V,2BAAA/V,QAEA,GAAAA,OAAAR,KAAArE,MAAAuc,SAEA,WADAvC,eAAAnV,OAGA,IAAAA,OAAAR,KAAArE,MAAAwc,SAEA,WADAN,mBAAArX,OAGAA,QAAAkI,MACAnK,gBAAAiC,QAAA/C,OAAA,CAGA,IACAzH,GAAAqhB,YAAA/O,OAAA/B,MAAA6R,QADA9T,OAAA,GAAA9D,OAAAT,GAEAsY,aAAA/T,OAAAxS,OACAwmB,uBAAA,CAIA,KAFAhQ,OAAApB,aAAA1G,OAAAR,GAAAQ,OAAAH,SAAAwG,MAAAG,sBAEAhR,EAAA,EAAAA,EAAAsS,OAAAxW,OAAAkE,IACAuQ,MAAA+B,OAAAtS,GACAqhB,aAAA/S,OAAAuC,MAAAe,sBAAArB,MAAA/F,cAAA,GAGA6W,cACAe,QAAA9T,OAAA+B,OAAA,EAAA/B,OAAAsG,QAAAyM,cACAe,QAAAtmB,OAAA,GACAyM,gBAAAiC,QAAA7C,YAAAvL,KAAAgmB,SAEA9T,OAAAA,OAAA/B,MAAA+B,OAAAsG,QAAAyM,aAAAA,YAAAvlB,QACAwmB,wBAAAjB,YAAAvlB,QAGA4U,qBAAAH,QACA8Q,YACA9Y,gBAAAiC,QAAA/C,OAAA,EAGAc,gBAAAiC,QAAA9C,aAAAtL,KAAAmU,OAEAkC,wBAAAlC,MAAA8Q,YAAA7W,SAEAA,OAAApB,UAAAiY,aACA9Y,gBAAAiC,QAAA9C,aAAAtL,KAAAmU,MAKAhI,iBAAAiC,QAAA3C,cAAAwa,aAAAC,uBACAhU,OAAAxS,OAAA,GACAyM,gBAAAiC,QAAA7C,YAAAvL,KAAAkS,QAIA9D,OAAAkI,GAAA6K,OAAA,KACA,IAAAhV,gBAAAiC,QAAAlB,SACAkB,OAAAkI,GAAA6K,MAAA,IACAhV,gBAAAiC,QAAAlB,YAAAD,IAGAd,gBAAAiC,QAAArC,gBAAAqC,OAAAkI,GAAAnG,MAAA,GACAhE,gBAAAiC,QAAApC,SAAAoC,OAAA+X,UAEA/X,OAAAkI,GAAA6K,MAAAiF,gBAAAhY,OAAAH,QAAAG,OAAAkI,GAAA6K,MAAA/S,OAAA+X,WAEA9D,gBAAAjU,QACA2S,cAAA3S,QAIA,QAAAgY,iBAAApb,OAAAqb,KAAAra,UACA,GAAAsa,KAEA,OAAA,OAAAta,SAEAqa,KAEA,MAAArb,OAAAub,aACAvb,OAAAub,aAAAF,KAAAra,UACA,MAAAhB,OAAAwb,MAEAF,KAAAtb,OAAAwb,KAAAxa,UACAsa,MAAAD,KAAA,KACAA,MAAA,IAEAC,MAAA,KAAAD,OACAA,KAAA,GAEAA,MAGAA,KAKA,QAAAI,0BAAArY,QACA,GAAAsY,YACAC,WAEAC,YACAhjB,EACAijB,YAEA,IAAA,IAAAzY,OAAAR,GAAAlO,OAGA,MAFAyM,iBAAAiC,QAAAxC,eAAA,OACAwC,OAAAvB,GAAA,GAAAnR,MAAA2R,KAIA,KAAAzJ,EAAA,EAAAA,EAAAwK,OAAAR,GAAAlO,OAAAkE,IACAijB,aAAA,EACAH,WAAApZ,cAAAc,QACA,MAAAA,OAAA4T,UACA0E,WAAA1E,QAAA5T,OAAA4T,SAEA0E,WAAA9Y,GAAAQ,OAAAR,GAAAhK,GACAugB,0BAAAuC,YAEApa,QAAAoa,cAKAG,cAAA1a,gBAAAua,YAAAjb,cAGAob,cAAA,GAAA1a,gBAAAua,YAAApb,aAAA5L,OAEAyM,gBAAAua,YAAAI,MAAAD,cAEA,MAAAD,aAAAC,aAAAD,eACAA,YAAAC,aACAF,WAAAD,YAIA9b,QAAAwD,OAAAuY,YAAAD,YAGA,QAAAK,kBAAA3Y,QACA,IAAAA,OAAAvB,GAAA,CAIA,GAAAjJ,GAAAmP,qBAAA3E,OAAAT,GACAS,QAAAkI,GAAAhM,KAAA1G,EAAA4S,KAAA5S,EAAAmT,MAAAnT,EAAA2Y,KAAA3Y,EAAAkV,KAAAlV,EAAAyiB,KAAAziB,EAAAojB,OAAApjB,EAAAqjB,OAAArjB,EAAAsjB,aAAA,SAAAnd,KACA,MAAAA,MAAAoS,SAAApS,IAAA,MAGAsY,gBAAAjU,SAGA,QAAA+Y,kBAAA/Y,QACA,GAAA5D,KAAA,GAAA2D,QAAA4S,cAAAqG,cAAAhZ,SAOA,OANA5D,KAAAkY,WAEAlY,IAAAnN,IAAA,EAAA,KACAmN,IAAAkY,aAAAzV,IAGAzC,IAGA,QAAA4c,eAAAhZ,QACA,GAAA1E,OAAA0E,OAAAT,GACA5C,OAAAqD,OAAAR,EAIA,OAFAQ,QAAAH,QAAAG,OAAAH,SAAAqS,UAAAlS,OAAAP,IAEA,OAAAnE,WAAAuD,KAAAlC,QAAA,KAAArB,MACA0D,eAAA1B,WAAA,KAGA,gBAAAhC,SACA0E,OAAAT,GAAAjE,MAAA0E,OAAAH,QAAAoZ,SAAA3d,QAGA6E,SAAA7E,OACA,GAAAyE,QAAA4S,cAAArX,SACAW,OAAAX,OACA0E,OAAAvB,GAAAnD,MACAD,QAAAsB,QACA0b,yBAAArY,QACArD,OACAoZ,0BAAA/V,QAEAkZ,gBAAAlZ,QAGA9B,QAAA8B,UACAA,OAAAvB,GAAA,MAGAuB,SAGA,QAAAkZ,iBAAAlZ,QACA,GAAA1E,OAAA0E,OAAAT,EACAxD,aAAAT,OACA0E,OAAAvB,GAAA,GAAAnR,MAAA6N,MAAA7I,OACA2J,OAAAX,OACA0E,OAAAvB,GAAA,GAAAnR,MAAAgO,MAAAmB,WACA,gBAAAnB,OACAic,iBAAAvX,QACA3E,QAAAC,QACA0E,OAAAkI,GAAAhM,IAAAZ,MAAAyG,MAAA,GAAA,SAAApG,KACA,MAAAoS,UAAApS,IAAA,MAEAsY,gBAAAjU,SACAvE,SAAAH,OACAqd,iBAAA3Y,QACAhE,SAAAV,OAEA0E,OAAAvB,GAAA,GAAAnR,MAAAgO,OAEAH,MAAAsc,wBAAAzX,QAIA,QAAAlD,kBAAAxB,MAAAqB,OAAAC,OAAAC,OAAAsc,OACA,GAAA1F,KAoBA,QAlBA,IAAA7W,SAAA,IAAAA,SACAC,OAAAD,OACAA,WAAAiC,KAGApD,SAAAH,QAAAI,cAAAJ,QACAD,QAAAC,QAAA,IAAAA,MAAAhK,UACAgK,UAAAuD,IAIA4U,EAAAnU,kBAAA,EACAmU,EAAAG,QAAAH,EAAA9T,OAAAwZ,MACA1F,EAAAhU,GAAA7C,OACA6W,EAAAlU,GAAAjE,MACAmY,EAAAjU,GAAA7C,OACA8W,EAAA7U,QAAA/B,OAEAkc,iBAAAtF,GAGA,QAAAuB,aAAA1Z,MAAAqB,OAAAC,OAAAC,QACA,MAAAC,kBAAAxB,MAAAqB,OAAAC,OAAAC,QAAA,GAgCA,QAAAuc,QAAApqB,GAAAqqB,SACA,GAAAjd,KAAA5G,CAIA,IAHA,IAAA6jB,QAAA/nB,QAAA+J,QAAAge,QAAA,MACAA,QAAAA,QAAA,KAEAA,QAAA/nB,OACA,MAAA0jB,cAGA,KADA5Y,IAAAid,QAAA,GACA7jB,EAAA,EAAAA,EAAA6jB,QAAA/nB,SAAAkE,EACA6jB,QAAA7jB,GAAA0I,YAAAmb,QAAA7jB,GAAAxG,IAAAoN,OACAA,IAAAid,QAAA7jB,GAGA,OAAA4G,KAIA,QAAA8E,OAGA,MAAAkY,QAAA,cAFArX,MAAAzJ,KAAA3G,UAAA,IAKA,QAAAiU,OAGA,MAAAwT,QAAA,aAFArX,MAAAzJ,KAAA3G,UAAA,IAWA,QAAA2nB,iBAAAtb,GACA,IAAA,GAAA8D,OAAA9D,GACA,IAAA,IAAAoM,QAAA9R,KAAAihB,SAAAzX,MAAA,MAAA9D,EAAA8D,MAAAtD,MAAAR,EAAA8D,MACA,OAAA,CAKA,KAAA,GADA0X,iBAAA,EACAhkB,EAAA,EAAAA,EAAA+jB,SAAAjoB,SAAAkE,EACA,GAAAwI,EAAAub,SAAA/jB,IAAA,CACA,GAAAgkB,eACA,OAAA,CAEAC,YAAAzb,EAAAub,SAAA/jB,OAAAiL,MAAAzC,EAAAub,SAAA/jB,OACAgkB,gBAAA,GAKA,OAAA,EAGA,QAAAE,aACA,MAAAhoB,MAAAyM,SAGA,QAAAwb,mBACA,MAAAC,gBAAA3a,KAGA,QAAA4a,UAAAC,UACA,GAAAhV,iBAAAH,qBAAAmV,UACAC,MAAAjV,gBAAAsD,MAAA,EACA4R,SAAAlV,gBAAAmV,SAAA,EACA9P,OAAArF,gBAAA6D,OAAA,EACAuR,MAAApV,gBAAA8H,MAAA,EACAuN,KAAArV,gBAAAqJ,KAAA,EACAsC,MAAA3L,gBAAAmT,MAAA,EACArH,QAAA9L,gBAAA8T,QAAA,EACAwB,QAAAtV,gBAAA+T,QAAA,EACAwB,aAAAvV,gBAAAgU,aAAA,CAEApnB,MAAAyM,SAAAmb,gBAAAxU,iBAGApT,KAAA4oB,eAAAD,aACA,IAAAD,QACA,IAAAxJ,QACA,IAAAH,MAAA,GAAA,GAGA/e,KAAA6oB,OAAAJ,KACA,EAAAD,MAIAxoB,KAAA2X,SAAAc,OACA,EAAA6P,SACA,GAAAD,MAEAroB,KAAA8oB,SAEA9oB,KAAAmO,QAAAqS,YAEAxgB,KAAA+oB,UAGA,QAAAC,YAAA/e,KACA,MAAAA,eAAAke,UAGA,QAAAc,UAAAta,QACA,MAAAA,QAAA,GACA,EAAAC,KAAAsa,OAAA,EAAAva,QAEAC,KAAAsa,MAAAva,QAMA,QAAAwa,QAAA9U,MAAA+U,WACAhV,eAAAC,MAAA,EAAA,EAAA,WACA,GAAA8U,QAAAnpB,KAAAqpB,YACAC,KAAA,GAKA,OAJAH,QAAA,IACAA,QAAAA,OACAG,KAAA,KAEAA,KAAA1V,YAAAuV,OAAA,IAAA,GAAAC,UAAAxV,WAAA,OAAA,GAAA,KAuBA,QAAA2V,kBAAAC,QAAApX,QACA,GAAAqX,UAAArX,QAAA,IAAAuC,MAAA6U,QAEA,IAAA,OAAAC,QACA,MAAA,KAGA,IAAAC,OAAAD,QAAAA,QAAA7pB,OAAA,OACA+pB,OAAAD,MAAA,IAAA/U,MAAAiV,eAAA,IAAA,EAAA,GACA1K,QAAA,GAAAyK,MAAA,GAAA5a,MAAA4a,MAAA,GAEA,OAAA,KAAAzK,QACA,EACA,MAAAyK,MAAA,GAAAzK,SAAAA,QAIA,QAAA2K,iBAAAjgB,MAAAkgB,OACA,GAAApf,KAAA8H,IACA,OAAAsX,OAAA7b,QACAvD,IAAAof,MAAAC,QACAvX,MAAA/D,SAAA7E,QAAAW,OAAAX,OAAAA,MAAAmB,UAAAuY,YAAA1Z,OAAAmB,WAAAL,IAAAK,UAEAL,IAAAqC,GAAAid,QAAAtf,IAAAqC,GAAAhC,UAAAyH,MACA/I,MAAA+E,aAAA9D,KAAA,GACAA,KAEA4Y,YAAA1Z,OAAAqgB,QAIA,QAAAC,eAAA5d,GAGA,MAAA,KAAAsC,KAAAsa,MAAA5c,EAAAS,GAAAod,oBAAA,IAqBA,QAAAC,cAAAxgB,MAAAygB,cAAAC,aACA,GACAC,aADApB,OAAAnpB,KAAAkO,SAAA,CAEA,KAAAlO,KAAAwM,UACA,MAAA,OAAA5C,MAAA5J,KAAAuN,GAEA,IAAA,MAAA3D,MAAA,CACA,GAAA,gBAAAA,QAEA,GAAA,QADAA,MAAA2f,iBAAAiB,iBAAA5gB,QAEA,MAAA5J,UAEA4O,MAAAc,IAAA9F,OAAA,KAAA0gB,cACA1gB,OAAA,GAmBA,QAjBA5J,KAAAiO,QAAAoc,gBACAE,YAAAL,cAAAlqB,OAEAA,KAAAkO,QAAAtE,MACA5J,KAAAiO,QAAA,EACA,MAAAsc,aACAvqB,KAAAzC,IAAAgtB,YAAA,KAEApB,SAAAvf,SACAygB,eAAArqB,KAAAyqB,kBACAC,YAAA1qB,KAAAkoB,eAAAte,MAAAuf,OAAA,KAAA,GAAA,GACAnpB,KAAAyqB,oBACAzqB,KAAAyqB,mBAAA,EACAhhB,MAAA+E,aAAAxO,MAAA,GACAA,KAAAyqB,kBAAA,OAGAzqB,KAEA,MAAAA,MAAAiO,OAAAkb,OAAAe,cAAAlqB,MAIA,QAAA2qB,YAAA/gB,MAAAygB,eACA,MAAA,OAAAzgB,OACA,gBAAAA,SACAA,OAAAA,OAGA5J,KAAAqpB,UAAAzf,MAAAygB,eAEArqB,OAEAA,KAAAqpB,YAIA,QAAAuB,gBAAAP,eACA,MAAArqB,MAAAqpB,UAAA,EAAAgB,eAGA,QAAAQ,kBAAAR,eASA,MARArqB,MAAAiO,SACAjO,KAAAqpB,UAAA,EAAAgB,eACArqB,KAAAiO,QAAA,EAEAoc,eACArqB,KAAA8qB,SAAAZ,cAAAlqB,MAAA,MAGAA,KAGA,QAAA+qB,2BACA,GAAA,MAAA/qB,KAAAgO,KACAhO,KAAAqpB,UAAArpB,KAAAgO,MAAA,GAAA,OACA,IAAA,gBAAAhO,MAAA6N,GAAA,CACA,GAAAmd,OAAAzB,iBAAA0B,YAAAjrB,KAAA6N,GACA,OAAAmd,MACAhrB,KAAAqpB,UAAA2B,OAGAhrB,KAAAqpB,UAAA,GAAA,GAGA,MAAArpB,MAGA,QAAAkrB,sBAAAthB,OACA,QAAA5J,KAAAwM,YAGA5C,MAAAA,MAAA0Z,YAAA1Z,OAAAyf,YAAA,GAEArpB,KAAAqpB,YAAAzf,OAAA,IAAA,GAGA,QAAAuhB,wBACA,MACAnrB,MAAAqpB,YAAArpB,KAAA+pB,QAAA9S,MAAA,GAAAoS,aACArpB,KAAAqpB,YAAArpB,KAAA+pB,QAAA9S,MAAA,GAAAoS,YAIA,QAAA+B,+BACA,IAAA/gB,YAAArK,KAAAqrB,eACA,MAAArrB,MAAAqrB,aAGA,IAAAtJ,KAKA,IAHAvU,WAAAuU,EAAA/hB,MACA+hB,EAAAuF,cAAAvF,GAEAA,EAAAvL,GAAA,CACA,GAAA8U,OAAAvJ,EAAA9T,OAAAjD,UAAA+W,EAAAvL,IAAA8M,YAAAvB,EAAAvL,GACAxW,MAAAqrB,cAAArrB,KAAAwM,WACA4C,cAAA2S,EAAAvL,GAAA8U,MAAAC,WAAA,MAEAvrB,MAAAqrB,eAAA,CAGA,OAAArrB,MAAAqrB,cAGA,QAAAG,WACA,QAAAxrB,KAAAwM,YAAAxM,KAAAiO,OAGA,QAAAwd,eACA,QAAAzrB,KAAAwM,WAAAxM,KAAAiO,OAGA,QAAAyd,SACA,QAAA1rB,KAAAwM,YAAAxM,KAAAiO,QAAA,IAAAjO,KAAAkO,SAWA,QAAAga,gBAAAte,MAAAwG,KACA,GAGAkZ,MACAqC,IACAC,QALAxD,SAAAxe,MAEA+K,MAAA,IAuDA,OAlDAqU,YAAApf,OACAwe,UACA/N,GAAAzQ,MAAAgf,cACA1O,EAAAtQ,MAAAif,MACAzO,EAAAxQ,MAAA+N,SAEArN,SAAAV,QACAwe,YACAhY,IACAgY,SAAAhY,KAAAxG,MAEAwe,SAAAO,aAAA/e,QAEA+K,MAAAkX,YAAA7H,KAAApa,SACA0f,KAAA,MAAA3U,MAAA,IAAA,EAAA,EACAyT,UACAnO,EAAA,EACAC,EAAAnL,MAAA4F,MAAAwM,OAAAmI,KACAnP,EAAApL,MAAA4F,MAAA0M,OAAAiI,KACAhd,EAAAyC,MAAA4F,MAAA2M,SAAAgI,KACA1T,EAAA7G,MAAA4F,MAAA4M,SAAA+H,KACAjP,GAAAtL,MAAAka,SAAA,IAAAtU,MAAA6M,eAAA8H,QAEA3U,MAAAmX,SAAA9H,KAAApa,SACA0f,KAAA,MAAA3U,MAAA,IAAA,GAAAA,MAAA,GAAA,GACAyT,UACAnO,EAAA8R,SAAApX,MAAA,GAAA2U,MACAlP,EAAA2R,SAAApX,MAAA,GAAA2U,MACAvG,EAAAgJ,SAAApX,MAAA,GAAA2U,MACApP,EAAA6R,SAAApX,MAAA,GAAA2U,MACAnP,EAAA4R,SAAApX,MAAA,GAAA2U,MACAhd,EAAAyf,SAAApX,MAAA,GAAA2U,MACA1T,EAAAmW,SAAApX,MAAA,GAAA2U,QAEA,MAAAlB,SACAA,YACA,gBAAAA,YAAA,QAAAA,WAAA,MAAAA,aACAwD,QAAAI,kBAAA1I,YAAA8E,SAAA1a,MAAA4V,YAAA8E,SAAA3a,KAEA2a,YACAA,SAAA/N,GAAAuR,QAAAjD,aACAP,SAAAhO,EAAAwR,QAAAnT,QAGAkT,IAAA,GAAAxD,UAAAC,UAEAY,WAAApf,QAAAe,WAAAf,MAAA,aACA+hB,IAAAxd,QAAAvE,MAAAuE,SAGAwd,IAMA,QAAAI,UAAAE,IAAA3C,MAIA,GAAA5e,KAAAuhB,KAAAlE,WAAAkE,IAAA9uB,QAAA,IAAA,KAEA,QAAA2P,MAAApC,KAAA,EAAAA,KAAA4e,KAGA,QAAA4C,2BAAAC,KAAAb,OACA,GAAA5gB,MAAAie,aAAA,EAAAlQ,OAAA,EAUA,OARA/N,KAAA+N,OAAA6S,MAAArU,QAAAkV,KAAAlV,QACA,IAAAqU,MAAA5U,OAAAyV,KAAAzV,QACAyV,KAAApC,QAAAxsB,IAAAmN,IAAA+N,OAAA,KAAA2T,QAAAd,UACA5gB,IAAA+N,OAGA/N,IAAAie,cAAA2C,OAAAa,KAAApC,QAAAxsB,IAAAmN,IAAA+N,OAAA,KAEA/N,IAGA,QAAAshB,mBAAAG,KAAAb,OACA,GAAA5gB,IACA,OAAAyhB,MAAA3f,WAAA8e,MAAA9e,WAIA8e,MAAAzB,gBAAAyB,MAAAa,MACAA,KAAAE,SAAAf,OACA5gB,IAAAwhB,0BAAAC,KAAAb,QAEA5gB,IAAAwhB,0BAAAZ,MAAAa,MACAzhB,IAAAie,cAAAje,IAAAie,aACAje,IAAA+N,QAAA/N,IAAA+N,QAGA/N,MAZAie,aAAA,EAAAlQ,OAAA,GAgBA,QAAA6T,aAAAC,UAAA3uB,MACA,MAAA,UAAA+P,IAAA6e,QACA,GAAAC,KAAAC,GAWA,OATA,QAAAF,QAAA1f,OAAA0f,UACA/b,gBAAA7S,KAAA,YAAAA,KAAA,uDAAAA,KAAA,kGAEA8uB,IAAA/e,IAAAA,IAAA6e,OAAAA,OAAAE,KAGA/e,IAAA,gBAAAA,MAAAA,IAAAA,IACA8e,IAAAvE,eAAAva,IAAA6e,QACA9B,YAAA1qB,KAAAysB,IAAAF,WACAvsB,MAIA,QAAA0qB,aAAAnZ,IAAA6W,SAAAuE,SAAAne,cACA,GAAAma,cAAAP,SAAAQ,cACAH,KAAAQ,SAAAb,SAAAS,OACApQ,OAAAwQ,SAAAb,SAAAzQ,QAEApG,KAAA/E,YAKAgC,aAAA,MAAAA,cAAAA,aAEAiK,QACAI,SAAAtH,IAAAyF,IAAAzF,IAAA,SAAAkH,OAAAkU,UAEAlE,MACA1R,MAAAxF,IAAA,OAAAyF,IAAAzF,IAAA,QAAAkX,KAAAkE,UAEAhE,cACApX,IAAAxE,GAAAid,QAAAzY,IAAAxE,GAAAhC,UAAA4d,aAAAgE,UAEAne,cACA/E,MAAA+E,aAAA+C,IAAAkX,MAAAhQ,SAOA,QAAAmU,mBAAAC,SAAAjsB,KACA,GAAA4R,MAAAqa,SAAAra,KAAA5R,IAAA,QAAA,EACA,OAAA4R,OAAA,EAAA,WACAA,MAAA,EAAA,WACAA,KAAA,EAAA,UACAA,KAAA,EAAA,UACAA,KAAA,EAAA,UACAA,KAAA,EAAA,WAAA,WAGA,QAAAsa,YAAAC,KAAAC,SAGA,GAAApsB,KAAAmsB,MAAAzJ,cACA2J,IAAApD,gBAAAjpB,IAAAZ,MAAAktB,QAAA,OACAjiB,OAAAxB,MAAA0jB,eAAAntB,KAAAitB,MAAA,WAEAzb,OAAAwb,UAAArc,WAAAqc,QAAA/hB,SAAA+hB,QAAA/hB,QAAArE,KAAA5G,KAAAY,KAAAosB,QAAA/hB,QAEA,OAAAjL,MAAAiL,OAAAuG,QAAAxR,KAAAyU,aAAAnD,SAAArG,OAAAjL,KAAAsjB,YAAA1iB,OAGA,QAAAmpB,SACA,MAAA,IAAA1b,QAAArO,MAGA,QAAAosB,SAAAxiB,MAAAoJ,OACA,GAAAoa,YAAA3e,SAAA7E,OAAAA,MAAA0Z,YAAA1Z,MACA,UAAA5J,KAAAwM,YAAA4gB,WAAA5gB,aAGAwG,MAAAD,eAAA1I,YAAA2I,OAAA,cAAAA,OACA,gBAAAA,MACAhT,KAAA+K,UAAAqiB,WAAAriB,UAEAqiB,WAAAriB,UAAA/K,KAAA+pB,QAAAmD,QAAAla,OAAAjI,WAIA,QAAAshB,UAAAziB,MAAAoJ,OACA,GAAAoa,YAAA3e,SAAA7E,OAAAA,MAAA0Z,YAAA1Z,MACA,UAAA5J,KAAAwM,YAAA4gB,WAAA5gB,aAGAwG,MAAAD,eAAA1I,YAAA2I,OAAA,cAAAA,OACA,gBAAAA,MACAhT,KAAA+K,UAAAqiB,WAAAriB,UAEA/K,KAAA+pB,QAAAsD,MAAAra,OAAAjI,UAAAqiB,WAAAriB,WAIA,QAAAuiB,WAAA5f,KAAAD,GAAAuF,MAAAua,aAEA,MADAA,aAAAA,aAAA,MACA,MAAAA,YAAA,GAAAvtB,KAAAosB,QAAA1e,KAAAsF,QAAAhT,KAAAqsB,SAAA3e,KAAAsF,UACA,MAAAua,YAAA,GAAAvtB,KAAAqsB,SAAA5e,GAAAuF,QAAAhT,KAAAosB,QAAA3e,GAAAuF,QAGA,QAAAwa,QAAA5jB,MAAAoJ,OACA,GACAya,SADAL,WAAA3e,SAAA7E,OAAAA,MAAA0Z,YAAA1Z,MAEA,UAAA5J,KAAAwM,YAAA4gB,WAAA5gB,aAGAwG,MAAAD,eAAAC,OAAA,eACA,gBAAAA,MACAhT,KAAA+K,YAAAqiB,WAAAriB,WAEA0iB,QAAAL,WAAAriB,UACA/K,KAAA+pB,QAAAmD,QAAAla,OAAAjI,WAAA0iB,SAAAA,SAAAztB,KAAA+pB,QAAAsD,MAAAra,OAAAjI,YAIA,QAAA2iB,eAAA9jB,MAAAoJ,OACA,MAAAhT,MAAAwtB,OAAA5jB,MAAAoJ,QAAAhT,KAAAosB,QAAAxiB,MAAAoJ,OAGA,QAAA2a,gBAAA/jB,MAAAoJ,OACA,MAAAhT,MAAAwtB,OAAA5jB,MAAAoJ,QAAAhT,KAAAqsB,SAAAziB,MAAAoJ,OAGA,QAAAR,MAAA5I,MAAAoJ,MAAA4a,SACA,GAAArtB,MACAstB,UACArc,MAEA,KAAAxR,KAAAwM,UACA,MAAAe,IAKA,IAFAhN,KAAAspB,gBAAAjgB,MAAA5J,OAEAO,KAAAiM,UACA,MAAAe,IAOA,QAJAsgB,UAAA,KAAAttB,KAAA8oB,YAAArpB,KAAAqpB,aAEArW,MAAAD,eAAAC,QAGA,IAAA,OAAAxB,OAAAsc,UAAA9tB,KAAAO,MAAA,EAAA,MACA,KAAA,QAAAiR,OAAAsc,UAAA9tB,KAAAO,KAAA,MACA,KAAA,UAAAiR,OAAAsc,UAAA9tB,KAAAO,MAAA,CAAA,MACA,KAAA,SAAAiR,QAAAxR,KAAAO,MAAA,GAAA,MACA,KAAA,SAAAiR,QAAAxR,KAAAO,MAAA,GAAA,MACA,KAAA,OAAAiR,QAAAxR,KAAAO,MAAA,IAAA,MACA,KAAA,MAAAiR,QAAAxR,KAAAO,KAAAstB,WAAA,KAAA,MACA,KAAA,OAAArc,QAAAxR,KAAAO,KAAAstB,WAAA,MAAA,MACA,SAAArc,OAAAxR,KAAAO,KAGA,MAAAqtB,SAAApc,OAAA9C,SAAA8C,QAGA,QAAAsc,WAAAljB,EAAAC,GAEA,GAGAkjB,SAAAC,OAHAC,eAAA,IAAApjB,EAAA6L,OAAA9L,EAAA8L,SAAA7L,EAAAoM,QAAArM,EAAAqM,SAEAiX,OAAAtjB,EAAAmf,QAAAxsB,IAAA0wB,eAAA,SAcA,OAXApjB,GAAAqjB,OAAA,GACAH,QAAAnjB,EAAAmf,QAAAxsB,IAAA0wB,eAAA,EAAA,UAEAD,QAAAnjB,EAAAqjB,SAAAA,OAAAH,WAEAA,QAAAnjB,EAAAmf,QAAAxsB,IAAA0wB,eAAA,EAAA,UAEAD,QAAAnjB,EAAAqjB,SAAAH,QAAAG,WAIAD,eAAAD,SAAA,EAMA,QAAAlkB,YACA,MAAA9J,MAAA+pB,QAAA7e,OAAA,MAAAD,OAAA,oCAGA,QAAAkjB,eACA,IAAAnuB,KAAAwM,UACA,MAAA,KAEA,IAAAF,GAAAtM,KAAA+pB,QAAA1e,KACA,OAAAiB,GAAAoK,OAAA,GAAApK,EAAAoK,OAAA,KACA3B,aAAAzI,EAAA,kCAEAqE,WAAA/U,KAAAY,UAAA2xB,aAEAnuB,KAAAouB,SAAAD,cAEApZ,aAAAzI,EAAA,gCASA,QAAA+hB,WACA,IAAAruB,KAAAwM,UACA,MAAA,qBAAAxM,KAAA6N,GAAA,MAEA,IAAA3M,MAAA,SACAotB,KAAA,EACAtuB,MAAAwrB,YACAtqB,KAAA,IAAAlB,KAAAqpB,YAAA,aAAA,mBACAiF,KAAA,IAEA,IAAAC,QAAA,IAAArtB,KAAA,MACAwV,KAAA,GAAA1W,KAAA0W,QAAA1W,KAAA0W,QAAA,KAAA,OAAA,SAEA8X,OAAAF,KAAA,MAEA,OAAAtuB,MAAAiL,OAAAsjB,OAAA7X,KAHA,wBAGA8X,QAGA,QAAAvjB,QAAAwjB,aACAA,cACAA,YAAAzuB,KAAA0rB,QAAAjiB,MAAAilB,iBAAAjlB,MAAAklB,cAEA,IAAAnd,QAAAuD,aAAA/U,KAAAyuB,YACA,OAAAzuB,MAAAyU,aAAAma,WAAApd,QAGA,QAAA9D,MAAAqf,KAAA5a,eACA,MAAAnS,MAAAwM,YACAiC,SAAAse,OAAAA,KAAAvgB,WACA8W,YAAAyJ,MAAAvgB,WACA0b,gBAAAza,GAAAzN,KAAA0N,KAAAqf,OAAA7hB,OAAAlL,KAAAkL,UAAA2jB,UAAA1c,eAEAnS,KAAAyU,aAAA3C,cAIA,QAAAgd,SAAA3c,eACA,MAAAnS,MAAA0N,KAAA4V,cAAAnR,eAGA,QAAA1E,IAAAsf,KAAA5a,eACA,MAAAnS,MAAAwM,YACAiC,SAAAse,OAAAA,KAAAvgB,WACA8W,YAAAyJ,MAAAvgB,WACA0b,gBAAAxa,KAAA1N,KAAAyN,GAAAsf,OAAA7hB,OAAAlL,KAAAkL,UAAA2jB,UAAA1c,eAEAnS,KAAAyU,aAAA3C,cAIA,QAAAid,OAAA5c,eACA,MAAAnS,MAAAyN,GAAA6V,cAAAnR,eAMA,QAAAjH,QAAAkF,KACA,GAAA4e,cAEA,YAAA7hB,KAAAiD,IACApQ,KAAAmO,QAAAgS,OAEA6O,cAAAxO,UAAApQ,KACA,MAAA4e,gBACAhvB,KAAAmO,QAAA6gB,eAEAhvB,MAeA,QAAAyU,cACA,MAAAzU,MAAAmO,QAGA,QAAA+e,SAAAla,OAIA,OAHAA,MAAAD,eAAAC,QAIA,IAAA,OACAhT,KAAAiX,MAAA,EAEA,KAAA,UACA,IAAA,QACAjX,KAAAgZ,KAAA,EAEA,KAAA,OACA,IAAA,UACA,IAAA,MACA,IAAA,OACAhZ,KAAA+e,MAAA,EAEA,KAAA,OACA/e,KAAAkf,QAAA,EAEA,KAAA,SACAlf,KAAA0oB,QAAA,EAEA,KAAA,SACA1oB,KAAA2oB,aAAA,GAgBA,MAZA,SAAA3V,OACAhT,KAAAmb,QAAA,GAEA,YAAAnI,OACAhT,KAAAivB,WAAA,GAIA,YAAAjc,OACAhT,KAAAiX,MAAA,EAAArI,KAAAE,MAAA9O,KAAAiX,QAAA,IAGAjX,KAGA,QAAAqtB,OAAAra,OAEA,WAAA7F,MADA6F,MAAAD,eAAAC,SACA,gBAAAA,MACAhT,MAIA,SAAAgT,QACAA,MAAA,OAGAhT,KAAAktB,QAAAla,OAAAzV,IAAA,EAAA,YAAAyV,MAAA,OAAAA,OAAA8X,SAAA,EAAA,OAGA,QAAA/f,WACA,MAAA/K,MAAA+M,GAAAhC,UAAA,KAAA/K,KAAAkO,SAAA,GAGA,QAAAghB,QACA,MAAAtgB,MAAAE,MAAA9O,KAAA+K,UAAA,KAGA,QAAAqjB,UACA,MAAA,IAAAxyB,MAAAoE,KAAA+K,WAGA,QAAAwgB,WACA,GAAAjf,GAAAtM,IACA,QAAAsM,EAAAoK,OAAApK,EAAA2K,QAAA3K,EAAA0M,OAAA1M,EAAAia,OAAAja,EAAA4a,SAAA5a,EAAA6a,SAAA7a,EAAA8a,eAGA,QAAA+H,YACA,GAAA7iB,GAAAtM,IACA,QACAqoB,MAAA/b,EAAAoK,OACA+B,OAAAnM,EAAA2K,QACA+B,KAAA1M,EAAA0M,OACA+F,MAAAzS,EAAAyS,QACAG,QAAA5S,EAAA4S,UACAwJ,QAAApc,EAAAoc,UACAC,aAAArc,EAAAqc,gBAIA,QAAAyG,UAEA,MAAApvB,MAAAwM,UAAAxM,KAAAmuB,cAAA,KAGA,QAAAkB,aACA,MAAA7iB,SAAAxM,MAGA,QAAAsvB,gBACA,MAAAxkB,WAAAuB,gBAAArM,OAGA,QAAAuvB,aACA,MAAAljB,iBAAArM,MAAA0L,SAGA,QAAA8jB,gBACA,OACA5lB,MAAA5J,KAAA6N,GACA5C,OAAAjL,KAAA8N,GACA5C,OAAAlL,KAAAmO,QACAsZ,MAAAznB,KAAAiO,OACA9C,OAAAnL,KAAAkN,SAcA,QAAAuiB,wBAAApb,MAAAqb,QACAtb,eAAA,GAAAC,MAAAA,MAAAzU,QAAA,EAAA8vB,QAwCA,QAAAC,gBAAA/lB,OACA,MAAAgmB,sBAAAhpB,KAAA5G,KACA4J,MACA5J,KAAAkb,OACAlb,KAAAmb,UACAnb,KAAAyU,aAAAqH,MAAAjB,IACA7a,KAAAyU,aAAAqH,MAAAhB,KAGA,QAAA+U,mBAAAjmB,OACA,MAAAgmB,sBAAAhpB,KAAA5G,KACA4J,MAAA5J,KAAA8vB,UAAA9vB,KAAAivB,aAAA,EAAA,GAGA,QAAAc,qBACA,MAAApU,aAAA3b,KAAA0W,OAAA,EAAA,GAGA,QAAAsZ,kBACA,GAAAC,UAAAjwB,KAAAyU,aAAAqH,KACA,OAAAH,aAAA3b,KAAA0W,OAAAuZ,SAAApV,IAAAoV,SAAAnV,KAGA,QAAA8U,sBAAAhmB,MAAAsR,KAAAC,QAAAN,IAAAC,KACA,GAAAoV,YACA,OAAA,OAAAtmB,MACA6R,WAAAzb,KAAA6a,IAAAC,KAAApE,MAEAwZ,YAAAvU,YAAA/R,MAAAiR,IAAAC,KACAI,KAAAgV,cACAhV,KAAAgV,aAEAC,WAAAvpB,KAAA5G,KAAA4J,MAAAsR,KAAAC,QAAAN,IAAAC,MAIA,QAAAqV,YAAAnN,SAAA9H,KAAAC,QAAAN,IAAAC,KACA,GAAAsV,eAAAnV,mBAAA+H,SAAA9H,KAAAC,QAAAN,IAAAC,KACA9B,KAAAwB,cAAA4V,cAAA1Z,KAAA,EAAA0Z,cAAA5U,UAKA,OAHAxb,MAAA0W,KAAAsC,KAAA0B,kBACA1a,KAAAiX,MAAA+B,KAAAmJ,eACAniB,KAAAgZ,KAAAA,KAAAoJ,cACApiB,KAwBA,QAAAqwB,eAAAzmB,OACA,MAAA,OAAAA,MAAAgF,KAAAC,MAAA7O,KAAAiX,QAAA,GAAA,GAAAjX,KAAAiX,MAAA,GAAArN,MAAA,GAAA5J,KAAAiX,QAAA,GAyDA,QAAAqZ,iBAAA1mB,OACA,GAAA4R,WAAA5M,KAAAsa,OAAAlpB,KAAA+pB,QAAAmD,QAAA,OAAAltB,KAAA+pB,QAAAmD,QAAA,SAAA,OAAA,CACA,OAAA,OAAAtjB,MAAA4R,UAAAxb,KAAAzC,IAAAqM,MAAA4R,UAAA,KAiGA,QAAA+U,SAAA3mB,MAAAiL,OACAA,MAAA2M,aAAAzS,MAAA,KAAA,KAAAnF,QAiBA,QAAA4mB,eACA,MAAAxwB,MAAAiO,OAAA,MAAA,GAGA,QAAAwiB,eACA,MAAAzwB,MAAAiO,OAAA,6BAAA,GA2GA,QAAAyiB,YAAA9mB,OACA,MAAA0Z,aAAA,IAAA1Z,OAGA,QAAA+mB,gBACA,MAAArN,aAAAxjB,MAAA,KAAAG,WAAA2wB,YAGA,QAAAC,oBAAAze;oCACA,MAAAA,QAyCA,QAAA0e,OAAA7lB,OAAA8lB,MAAAC,MAAAC,QACA,GAAA/lB,QAAAsV,YACAnV,IAAAL,YAAA6F,IAAAogB,OAAAF,MACA,OAAA7lB,QAAA8lB,OAAA3lB,IAAAJ,QAGA,QAAAimB,gBAAAjmB,OAAA8lB,MAAAC,OAQA,GAPA1mB,SAAAW,UACA8lB,MAAA9lB,OACAA,WAAAkC,IAGAlC,OAAAA,QAAA,GAEA,MAAA8lB,MACA,MAAAD,OAAA7lB,OAAA8lB,MAAAC,MAAA,QAGA,IAAAltB,GACAqtB,MACA,KAAArtB,EAAA,EAAAA,EAAA,GAAAA,IACAqtB,IAAArtB,GAAAgtB,MAAA7lB,OAAAnH,EAAAktB,MAAA,QAEA,OAAAG,KAWA,QAAAC,kBAAAC,aAAApmB,OAAA8lB,MAAAC,OACA,iBAAAK,eACA/mB,SAAAW,UACA8lB,MAAA9lB,OACAA,WAAAkC,IAGAlC,OAAAA,QAAA,KAEAA,OAAAomB,aACAN,MAAA9lB,OACAomB,cAAA,EAEA/mB,SAAAW,UACA8lB,MAAA9lB,OACAA,WAAAkC,IAGAlC,OAAAA,QAAA,GAGA,IAAAC,QAAAsV,YACA3gB,MAAAwxB,aAAAnmB,OAAA4Q,MAAAjB,IAAA,CAEA,IAAA,MAAAkW,MACA,MAAAD,OAAA7lB,QAAA8lB,MAAAlxB,OAAA,EAAAmxB,MAAA,MAGA,IAAAltB,GACAqtB,MACA,KAAArtB,EAAA,EAAAA,EAAA,EAAAA,IACAqtB,IAAArtB,GAAAgtB,MAAA7lB,QAAAnH,EAAAjE,OAAA,EAAAmxB,MAAA,MAEA,OAAAG,KAGA,QAAAG,YAAArmB,OAAA8lB,OACA,MAAAG,gBAAAjmB,OAAA8lB,MAAA,UAGA,QAAAQ,iBAAAtmB,OAAA8lB,OACA,MAAAG,gBAAAjmB,OAAA8lB,MAAA,eAGA,QAAAS,cAAAH,aAAApmB,OAAA8lB,OACA,MAAAK,kBAAAC,aAAApmB,OAAA8lB,MAAA,YAGA,QAAAU,mBAAAJ,aAAApmB,OAAA8lB,OACA,MAAAK,kBAAAC,aAAApmB,OAAA8lB,MAAA,iBAGA,QAAAW,iBAAAL,aAAApmB,OAAA8lB,OACA,MAAAK,kBAAAC,aAAApmB,OAAA8lB,MAAA,eAqBA,QAAArhB,OACA,GAAA6Q,MAAAvgB,KAAA8oB,KAaA,OAXA9oB,MAAA4oB,cAAA+I,QAAA3xB,KAAA4oB,eACA5oB,KAAA6oB,MAAA8I,QAAA3xB,KAAA6oB,OACA7oB,KAAA2X,QAAAga,QAAA3xB,KAAA2X,SAEA4I,KAAAoI,aAAAgJ,QAAApR,KAAAoI,cACApI,KAAAmI,QAAAiJ,QAAApR,KAAAmI,SACAnI,KAAArB,QAAAyS,QAAApR,KAAArB,SACAqB,KAAAxB,MAAA4S,QAAApR,KAAAxB,OACAwB,KAAA9H,OAAAkZ,QAAApR,KAAA9H,QACA8H,KAAA8H,MAAAsJ,QAAApR,KAAA8H,OAEAroB,KAGA,QAAA4xB,eAAAxJ,SAAAxe,MAAAsF,MAAAqd,WACA,GAAAjB,OAAApD,eAAAte,MAAAsF,MAMA,OAJAkZ,UAAAQ,eAAA2D,UAAAjB,MAAA1C,cACAR,SAAAS,OAAA0D,UAAAjB,MAAAzC,MACAT,SAAAzQ,SAAA4U,UAAAjB,MAAA3T,QAEAyQ,SAAAW,UAIA,QAAA8I,OAAAjoB,MAAAsF,OACA,MAAA0iB,eAAA5xB,KAAA4J,MAAAsF,MAAA,GAIA,QAAA4iB,YAAAloB,MAAAsF,OACA,MAAA0iB,eAAA5xB,KAAA4J,MAAAsF,OAAA,GAGA,QAAA6iB,SAAApjB,QACA,MAAAA,QAAA,EACAC,KAAAE,MAAAH,QAEAC,KAAAC,KAAAF,QAIA,QAAAqjB,UACA,GAIAtJ,SAAAxJ,QAAAH,MAAAsJ,MAAA4J,eAJAtJ,aAAA3oB,KAAA4oB,cACAH,KAAAzoB,KAAA6oB,MACApQ,OAAAzY,KAAA2X,QACA4I,KAAAvgB,KAAA8oB,KAwCA,OAnCAH,eAAA,GAAAF,MAAA,GAAAhQ,QAAA,GACAkQ,cAAA,GAAAF,MAAA,GAAAhQ,QAAA,IACAkQ,cAAA,MAAAoJ,QAAAG,aAAAzZ,QAAAgQ,MACAA,KAAA,EACAhQ,OAAA,GAKA8H,KAAAoI,aAAAA,aAAA,IAEAD,QAAAha,SAAAia,aAAA,KACApI,KAAAmI,QAAAA,QAAA,GAEAxJ,QAAAxQ,SAAAga,QAAA,IACAnI,KAAArB,QAAAA,QAAA,GAEAH,MAAArQ,SAAAwQ,QAAA,IACAqB,KAAAxB,MAAAA,MAAA,GAEA0J,MAAA/Z,SAAAqQ,MAAA,IAGAkT,eAAAvjB,SAAAyjB,aAAA1J,OACAhQ,QAAAwZ,eACAxJ,MAAAsJ,QAAAG,aAAAD,iBAGA5J,MAAA3Z,SAAA+J,OAAA,IACAA,QAAA,GAEA8H,KAAAkI,KAAAA,KACAlI,KAAA9H,OAAAA,OACA8H,KAAA8H,MAAAA,MAEAroB,KAGA,QAAAmyB,cAAA1J,MAGA,MAAA,MAAAA,KAAA,OAGA,QAAAyJ,cAAAzZ,QAEA,MAAA,QAAAA,OAAA,KAGA,QAAA2Z,IAAApf,OACA,IAAAhT,KAAAwM,UACA,MAAAe,IAEA,IAAAkb,MACAhQ,OACAkQ,aAAA3oB,KAAA4oB,aAIA,IAAA,WAFA5V,MAAAD,eAAAC,SAEA,SAAAA,MAGA,MAFAyV,MAAAzoB,KAAA6oB,MAAAF,aAAA,MACAlQ,OAAAzY,KAAA2X,QAAAwa,aAAA1J,MACA,UAAAzV,MAAAyF,OAAAA,OAAA,EAIA,QADAgQ,KAAAzoB,KAAA6oB,MAAAja,KAAAsa,MAAAgJ,aAAAlyB,KAAA2X,UACA3E,OACA,IAAA,OAAA,MAAAyV,MAAA,EAAAE,aAAA,MACA,KAAA,MAAA,MAAAF,MAAAE,aAAA,KACA,KAAA,OAAA,MAAA,IAAAF,KAAAE,aAAA,IACA,KAAA,SAAA,MAAA,MAAAF,KAAAE,aAAA,GACA,KAAA,SAAA,MAAA,OAAAF,KAAAE,aAAA,GAEA,KAAA,cAAA,MAAA/Z,MAAAE,MAAA,MAAA2Z,MAAAE,YACA,SAAA,KAAA,IAAApY,OAAA,gBAAAyC,QAMA,QAAAqf,aACA,MAAAryB,MAAAwM,UAIAxM,KAAA4oB,cACA,MAAA5oB,KAAA6oB,MACA7oB,KAAA2X,QAAA,GAAA,OACA,QAAA5I,MAAA/O,KAAA2X,QAAA,IANApK,IAUA,QAAA+kB,QAAAC,OACA,MAAA,YACA,MAAAvyB,MAAAoyB,GAAAG,QAaA,QAAAC,WACA,MAAAtK,gBAAAloB,MAGA,QAAAyyB,OAAAzf,OAEA,MADAA,OAAAD,eAAAC,OACAhT,KAAAwM,UAAAxM,KAAAgT,MAAA,OAAAzF,IAGA,QAAAmlB,YAAA90B,MACA,MAAA,YACA,MAAAoC,MAAAwM,UAAAxM,KAAA8oB,MAAAlrB,MAAA2P,KAYA,QAAAib,SACA,MAAA9Z,UAAA1O,KAAAyoB,OAAA,GAcA,QAAAkK,mBAAAvgB,OAAAzD,OAAAwD,cAAAE,SAAAnH,QACA,MAAAA,QAAAgH,aAAAvD,QAAA,IAAAwD,cAAAC,OAAAC,UAGA,QAAAugB,gBAAAC,eAAA1gB,cAAAjH,QACA,GAAAkd,UAAAF,eAAA2K,gBAAAnjB,MACAgZ,QAAAQ,MAAAd,SAAAgK,GAAA,MACAlT,QAAAgK,MAAAd,SAAAgK,GAAA,MACArT,MAAAmK,MAAAd,SAAAgK,GAAA,MACA3J,KAAAS,MAAAd,SAAAgK,GAAA,MACA3Z,OAAAyQ,MAAAd,SAAAgK,GAAA,MACA/J,MAAAa,MAAAd,SAAAgK,GAAA,MAEAxnB,EAAA8d,SAAAoK,WAAAC,KAAA,IAAArK,UACAA,QAAAoK,WAAAld,IAAA,KAAA8S,UACAxJ,SAAA,IAAA,MACAA,QAAA4T,WAAAxmB,IAAA,KAAA4S,UACAH,OAAA,IAAA,MACAA,MAAA+T,WAAA3Y,IAAA,KAAA4E,QACA0J,MAAA,IAAA,MACAA,KAAAqK,WAAA5Y,IAAA,KAAAuO,OACAhQ,QAAA,IAAA,MACAA,OAAAqa,WAAA1Y,IAAA,KAAA3B,SACA4P,OAAA,IAAA,OAAA,KAAAA,MAKA,OAHAzd,GAAA,GAAAuH,cACAvH,EAAA,IAAAioB,eAAA,EACAjoB,EAAA,GAAAM,OACAynB,kBAAA7yB,MAAA,KAAA8K,GAIA,QAAAooB,4BAAAC,kBACA,WAAA9lB,KAAA8lB,iBACA/J,MAEA,kBAAA,oBACAA,MAAA+J,kBACA,GAMA,QAAAC,6BAAAC,UAAAC,OACA,WAAAjmB,KAAA2lB,WAAAK,iBAGAhmB,KAAAimB,MACAN,WAAAK,YAEAL,WAAAK,WAAAC,MACA,MAAAD,YACAL,WAAAC,GAAAK,MAAA,IAEA,IAGA,QAAAvE,UAAAwE,YACA,IAAArzB,KAAAwM,UACA,MAAAxM,MAAAyU,aAAA3C,aAGA,IAAA5G,QAAAlL,KAAAyU,aACAjD,OAAAohB,eAAA5yB,MAAAqzB,WAAAnoB,OAMA,OAJAmoB,cACA7hB,OAAAtG,OAAAqH,YAAAvS,KAAAwR,SAGAtG,OAAA0jB,WAAApd,QAKA,QAAA8X,MAAA9R,GACA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAGA,QAAA8b,iBAQA,IAAAtzB,KAAAwM,UACA,MAAAxM,MAAAyU,aAAA3C,aAGA,IAGAoN,SAAAH,MAAAsJ,MAHAK,QAAA6K,MAAAvzB,KAAA4oB,eAAA,IACAH,KAAA8K,MAAAvzB,KAAA6oB,OACApQ,OAAA8a,MAAAvzB,KAAA2X,QAIAuH,SAAAxQ,SAAAga,QAAA,IACA3J,MAAArQ,SAAAwQ,QAAA,IACAwJ,SAAA,GACAxJ,SAAA,GAGAmJ,MAAA3Z,SAAA+J,OAAA,IACAA,QAAA,EAIA,IAAA+a,GAAAnL,MACAjO,EAAA3B,OACAgb,EAAAhL,KACAtO,EAAA4E,MACAzS,EAAA4S,QACAtJ,EAAA8S,QAAAA,QAAAgL,QAAA,GAAAv2B,QAAA,SAAA,IAAA,GACAw2B,MAAA3zB,KAAA4zB,WAEA,KAAAD,MAGA,MAAA,KAGA,IAAAE,WAAAF,MAAA,EAAA,IAAA,GACAG,OAAAxK,KAAAtpB,KAAA2X,WAAA2R,KAAAqK,OAAA,IAAA,GACAI,SAAAzK,KAAAtpB,KAAA6oB,SAAAS,KAAAqK,OAAA,IAAA,GACAK,QAAA1K,KAAAtpB,KAAA4oB,iBAAAU,KAAAqK,OAAA,IAAA,EAEA,OAAAE,WAAA,KACAL,EAAAM,OAAAN,EAAA,IAAA,KACApZ,EAAA0Z,OAAA1Z,EAAA,IAAA,KACAqZ,EAAAM,SAAAN,EAAA,IAAA,KACAtZ,GAAA7N,GAAAsJ,EAAA,IAAA,KACAuE,EAAA6Z,QAAA7Z,EAAA,IAAA,KACA7N,EAAA0nB,QAAA1nB,EAAA,IAAA,KACAsJ,EAAAoe,QAAApe,EAAA,IAAA,IArzIA,GAAAlM,cA6GAkD,IAEAA,MADArQ,MAAAC,UAAAoQ,KACArQ,MAAAC,UAAAoQ,KAEA,SAAAqnB,KAIA,IAAA,GAHAC,GAAArqB,OAAA7J,MACAmI,IAAA+rB,EAAAt0B,SAAA,EAEAkE,EAAA,EAAAA,EAAAqE,IAAArE,IACA,GAAAA,IAAAowB,IAAAD,IAAArtB,KAAA5G,KAAAk0B,EAAApwB,GAAAA,EAAAowB,GACA,OAAA,CAIA,QAAA,EAoDA,IAAA9lB,kBAAA3E,MAAA2E,oBAiDAG,kBAAA,EA8FAmC,eAYAjH,OAAAqG,6BAAA,EACArG,MAAAyG,mBAAA,IAyDA,IAAA8Q,KAGAA,MADAnX,OAAAmX,KACAnX,OAAAmX,KAEA,SAAA/W,KACA,GAAAnG,GAAA4G,MACA,KAAA5G,IAAAmG,KACAU,WAAAV,IAAAnG,IACA4G,IAAAxK,KAAA4D,EAGA,OAAA4G,KAIA,IAAAypB,kBACAC,QAAA,gBACAC,QAAA,mBACAC,SAAA,eACAC,QAAA,oBACAC,SAAA,sBACAC,SAAA,KAQAC,uBACAC,IAAA,YACAC,GAAA,SACAC,EAAA,aACAC,GAAA,eACAC,IAAA,sBACAC,KAAA,6BAyBAC,8BAAA,UAMAC,qBACAC,OAAA,QACAC,KAAA,SACAxf,EAAA,gBACAmd,GAAA,aACAzmB,EAAA,WACA+oB,GAAA,aACAlb,EAAA,UACAmb,GAAA,WACApb,EAAA,QACAqb,GAAA,UACAnb,EAAA,UACAob,GAAA,YACAvb,EAAA,SACAwb,GAAA,YAeA3iB,WA4BAS,cAyBAuB,iBAAA,uLAEAK,sBAAA,6CAEAF,mBAEAT,wBAoFAkhB,OAAA,KACAC,OAAA,OACAC,OAAA,QACAC,OAAA,QACAC,OAAA,aACAC,UAAA,QACAC,UAAA,YACAC,UAAA,gBACAC,UAAA,UACAC,UAAA,UACAC,UAAA,eAEAC,cAAA,MACAC,YAAA,WAEArL,YAAA,qBACAT,iBAAA,0BAEA+L,eAAA,uBAIAC,UAAA,mHAGAhhB,WA2BAY,UA8BAgL,KAAA,EACAF,MAAA,EACAC,KAAA,EACAE,KAAA,EACAC,OAAA,EACAC,OAAA,EACAC,YAAA,EACAG,KAAA,EACAE,QAAA,CAIAzN,gBAAA,IAAA,EAAA,EAAA,WACA,GAAA6F,GAAAja,KAAA0W,MACA,OAAAuD,IAAA,KAAA,GAAAA,EAAA,IAAAA,IAGA7F,eAAA,GAAA,KAAA,GAAA,EAAA,WACA,MAAApU,MAAA0W,OAAA,MAGAtC,eAAA,GAAA,OAAA,GAAA,EAAA,QACAA,eAAA,GAAA,QAAA,GAAA,EAAA,QACAA,eAAA,GAAA,SAAA,GAAA,GAAA,EAAA,QAIA3B,aAAA,OAAA,KAIAY,gBAAA,OAAA,GAIAgC,cAAA,IAAAihB,aACAjhB,cAAA,KAAA0gB,UAAAJ,QACAtgB,cAAA,OAAA8gB,UAAAN,QACAxgB,cAAA,QAAA+gB,UAAAN,QACAzgB,cAAA,SAAA+gB,UAAAN,QAEA3f,eAAA,QAAA,UAAAiL,MACAjL,cAAA,OAAA,SAAAvM,MAAAiL,OACAA,MAAAuM,MAAA,IAAAxX,MAAAhK,OAAA6J,MAAAgtB,kBAAA7sB,OAAAmF,MAAAnF,SAEAuM,cAAA,KAAA,SAAAvM,MAAAiL,OACAA,MAAAuM,MAAA3X,MAAAgtB,kBAAA7sB,SAEAuM,cAAA,IAAA,SAAAvM,MAAAiL,OACAA,MAAAuM,MAAA/E,SAAAzS,MAAA,MAeAH,MAAAgtB,kBAAA,SAAA7sB,OACA,MAAAmF,OAAAnF,QAAAmF,MAAAnF,OAAA,GAAA,KAAA,KAKA,IAiEA8O,SAjEAge,WAAA7f,WAAA,YAAA,EAoEA6B,SADAnc,MAAAC,UAAAkc,QACAnc,MAAAC,UAAAkc,QAEA,SAAAie,GAEA,GAAA7yB,EACA,KAAAA,EAAA,EAAAA,EAAA9D,KAAAJ,SAAAkE,EACA,GAAA9D,KAAA8D,KAAA6yB,EACA,MAAA7yB,EAGA,QAAA,GAeAsQ,eAAA,KAAA,KAAA,GAAA,KAAA,WACA,MAAApU,MAAAiX,QAAA,IAGA7C,eAAA,MAAA,EAAA,EAAA,SAAAnJ,QACA,MAAAjL,MAAAyU,aAAA+D,YAAAxY,KAAAiL,UAGAmJ,eAAA,OAAA,EAAA,EAAA,SAAAnJ,QACA,MAAAjL,MAAAyU,aAAAgE,OAAAzY,KAAAiL,UAKAwH,aAAA,QAAA,KAIAY,gBAAA,QAAA,GAIAgC,cAAA,IAAA0gB,WACA1gB,cAAA,KAAA0gB,UAAAJ,QACAtgB,cAAA,MAAA,SAAAI,SAAAvK,QACA,MAAAA,QAAAiO,iBAAA1D,YAEAJ,cAAA,OAAA,SAAAI,SAAAvK,QACA,MAAAA,QAAAsO,YAAA/D,YAGAU,eAAA,IAAA,MAAA,SAAAvM,MAAAiL,OACAA,MAAAqM,OAAAnS,MAAAnF,OAAA,IAGAuM,eAAA,MAAA,QAAA,SAAAvM,MAAAiL,MAAAvG,OAAA+F,OACA,GAAA4C,OAAA3I,OAAAH,QAAA4K,YAAAnP,MAAAyK,MAAA/F,OAAApB,QAEA,OAAA+J,MACApC,MAAAqM,OAAAjK,MAEA5K,gBAAAiC,QAAAzC,aAAAjC,OAMA,IAAAiO,kBAAA,gCACA+e,oBAAA,wFAAA9W,MAAA,KAUAiF,yBAAA,kDAAAjF,MAAA,KAkIAvG,wBAAAid,UAoBA7c,mBAAA6c,SA4IApiB,gBAAA,KAAA,KAAA,GAAA,KAAA,QACAA,eAAA,KAAA,KAAA,GAAA,KAAA,WAIA3B,aAAA,OAAA,KACAA,aAAA,UAAA,KAIAY,gBAAA,OAAA,GACAA,gBAAA,UAAA,GAIAgC,cAAA,IAAA0gB,WACA1gB,cAAA,KAAA0gB,UAAAJ,QACAtgB,cAAA,IAAA0gB,WACA1gB,cAAA,KAAA0gB,UAAAJ,QAEAtf,mBAAA,IAAA,KAAA,IAAA,MAAA,SAAAzM,MAAAsR,KAAA5M,OAAA+F,OACA6G,KAAA7G,MAAAF,OAAA,EAAA,IAAApF,MAAAnF,QAWA,IAAAitB,oBACAhc,IAAA,EACAC,IAAA,EAyBA1G,gBAAA,IAAA,EAAA,KAAA,OAEAA,eAAA,KAAA,EAAA,EAAA,SAAAnJ,QACA,MAAAjL,MAAAyU,aAAA0I,YAAAnd,KAAAiL,UAGAmJ,eAAA,MAAA,EAAA,EAAA,SAAAnJ,QACA,MAAAjL,MAAAyU,aAAA2I,cAAApd,KAAAiL,UAGAmJ,eAAA,OAAA,EAAA,EAAA,SAAAnJ,QACA,MAAAjL,MAAAyU,aAAA4I,SAAArd,KAAAiL,UAGAmJ,eAAA,IAAA,EAAA,EAAA,WACAA,eAAA,IAAA,EAAA,EAAA,cAIA3B,aAAA,MAAA,KACAA,aAAA,UAAA,KACAA,aAAA,aAAA,KAGAY,gBAAA,MAAA,IACAA,gBAAA,UAAA,IACAA,gBAAA,aAAA,IAIAgC,cAAA,IAAA0gB,WACA1gB,cAAA,IAAA0gB,WACA1gB,cAAA,IAAA0gB,WACA1gB,cAAA,KAAA,SAAAI,SAAAvK,QACA,MAAAA,QAAAoT,iBAAA7I,YAEAJ,cAAA,MAAA,SAAAI,SAAAvK,QACA,MAAAA,QAAAgT,mBAAAzI,YAEAJ,cAAA,OAAA,SAAAI,SAAAvK,QACA,MAAAA,QAAA2S,cAAApI,YAGAY,mBAAA,KAAA,MAAA,QAAA,SAAAzM,MAAAsR,KAAA5M,OAAA+F,OACA,GAAA8G,SAAA7M,OAAAH,QAAAiO,cAAAxS,MAAAyK,MAAA/F,OAAApB,QAEA,OAAAiO,QACAD,KAAAhB,EAAAiB,QAEA9O,gBAAAiC,QAAArB,eAAArD,QAIAyM,mBAAA,IAAA,IAAA,KAAA,SAAAzM,MAAAsR,KAAA5M,OAAA+F,OACA6G,KAAA7G,OAAAtF,MAAAnF,QA+BA,IAAAktB,uBAAA,2DAAAhX,MAAA,KAUAsF,2BAAA,8BAAAtF,MAAA,KAKAiX,yBAAA,uBAAAjX,MAAA,KAqJA7B,qBAAAuY,UAoBAnY,0BAAAmY,UAoBA/X,wBAAA+X,SAwEApiB,gBAAA,KAAA,KAAA,GAAA,EAAA,QACAA,eAAA,KAAA,KAAA,GAAA,EAAA0K,SACA1K,eAAA,KAAA,KAAA,GAAA,EAAA4K,SAEA5K,eAAA,MAAA,EAAA,EAAA,WACA,MAAA,GAAA0K,QAAAhf,MAAAE,MAAA4T,SAAA5T,KAAAkf,UAAA,KAGA9K,eAAA,QAAA,EAAA,EAAA,WACA,MAAA,GAAA0K,QAAAhf,MAAAE,MAAA4T,SAAA5T,KAAAkf,UAAA,GACAtL,SAAA5T,KAAA0oB,UAAA,KAGAtU,eAAA,MAAA,EAAA,EAAA,WACA,MAAA,GAAApU,KAAA+e,QAAAnL,SAAA5T,KAAAkf,UAAA,KAGA9K,eAAA,QAAA,EAAA,EAAA,WACA,MAAA,GAAApU,KAAA+e,QAAAnL,SAAA5T,KAAAkf,UAAA,GACAtL,SAAA5T,KAAA0oB,UAAA,KASAxc,SAAA,KAAA,GACAA,SAAA,KAAA,GAIAuG,aAAA,OAAA,KAGAY,gBAAA,OAAA,IAQAgC,cAAA,IAAA8J,eACA9J,cAAA,IAAA8J,eACA9J,cAAA,IAAA0gB,WACA1gB,cAAA,IAAA0gB,WACA1gB,cAAA,IAAA0gB,WACA1gB,cAAA,KAAA0gB,UAAAJ,QACAtgB,cAAA,KAAA0gB,UAAAJ,QACAtgB,cAAA,KAAA0gB,UAAAJ,QAEAtgB,cAAA,MAAA2gB,WACA3gB,cAAA,QAAA4gB,WACA5gB,cAAA,MAAA2gB,WACA3gB,cAAA,QAAA4gB,WAEA9f,eAAA,IAAA,MAAAkL,MACAlL,eAAA,IAAA,MAAA,SAAAvM,MAAAiL,MAAAvG,QACA,GAAA0oB,QAAAjoB,MAAAnF,MACAiL,OAAAwM,MAAA,KAAA2V,OAAA,EAAAA,SAEA7gB,eAAA,IAAA,KAAA,SAAAvM,MAAAiL,MAAAvG,QACAA,OAAA2oB,MAAA3oB,OAAAH,QAAAuY,KAAA9c,OACA0E,OAAA+X,UAAAzc,QAEAuM,eAAA,IAAA,MAAA,SAAAvM,MAAAiL,MAAAvG,QACAuG,MAAAwM,MAAAtS,MAAAnF,OACAyC,gBAAAiC,QAAAlB,SAAA,IAEA+I,cAAA,MAAA,SAAAvM,MAAAiL,MAAAvG,QACA,GAAA4oB,KAAAttB,MAAAhK,OAAA,CACAiV,OAAAwM,MAAAtS,MAAAnF,MAAAuK,OAAA,EAAA+iB,MACAriB,MAAAyM,QAAAvS,MAAAnF,MAAAuK,OAAA+iB,MACA7qB,gBAAAiC,QAAAlB,SAAA,IAEA+I,cAAA,QAAA,SAAAvM,MAAAiL,MAAAvG,QACA,GAAA6oB,MAAAvtB,MAAAhK,OAAA,EACAw3B,KAAAxtB,MAAAhK,OAAA,CACAiV,OAAAwM,MAAAtS,MAAAnF,MAAAuK,OAAA,EAAAgjB,OACAtiB,MAAAyM,QAAAvS,MAAAnF,MAAAuK,OAAAgjB,KAAA,IACAtiB,MAAA0M,QAAAxS,MAAAnF,MAAAuK,OAAAijB,OACA/qB,gBAAAiC,QAAAlB,SAAA,IAEA+I,cAAA,MAAA,SAAAvM,MAAAiL,MAAAvG,QACA,GAAA4oB,KAAAttB,MAAAhK,OAAA,CACAiV,OAAAwM,MAAAtS,MAAAnF,MAAAuK,OAAA,EAAA+iB,MACAriB,MAAAyM,QAAAvS,MAAAnF,MAAAuK,OAAA+iB,QAEA/gB,cAAA,QAAA,SAAAvM,MAAAiL,MAAAvG,QACA,GAAA6oB,MAAAvtB,MAAAhK,OAAA,EACAw3B,KAAAxtB,MAAAhK,OAAA,CACAiV,OAAAwM,MAAAtS,MAAAnF,MAAAuK,OAAA,EAAAgjB,OACAtiB,MAAAyM,QAAAvS,MAAAnF,MAAAuK,OAAAgjB,KAAA,IACAtiB,MAAA0M,QAAAxS,MAAAnF,MAAAuK,OAAAijB,QAWA,IA6CAlX,cA7CAmX,2BAAA,gBAgBAC,WAAAzgB,WAAA,SAAA,GAMA6J,YACApP,SAAA6iB,gBACAziB,eAAAgjB,sBACA5iB,YAjzCA,eAkzCAE,QA5yCA,KA6yCAulB,uBAAAtC,8BACA/iB,aAAAgjB,oBAEAzc,OAAAme,oBACApe,YAAAuM,yBAEA7J,KAAA2b,kBAEAxZ,SAAAyZ,sBACA3Z,YAAA4Z,yBACA3Z,cAAAgI,2BAEAoS,cAAAH,4BAIApX,WACAY,kBAiWAkD,iBAAA,mJACAE,cAAA,8IAEAG,QAAA,wBAEAF,WACA,eAAA,wBACA,aAAA,oBACA,eAAA,mBACA,aAAA,eAAA,IACA,WAAA,gBACA,UAAA,cAAA,IACA,aAAA,eACA,WAAA,UAEA,aAAA,gBACA,YAAA,eAAA,IACA,UAAA,UAIAC,WACA,gBAAA,wBACA,gBAAA,uBACA,WAAA,mBACA,QAAA,cACA,cAAA,sBACA,cAAA,qBACA,SAAA,iBACA,OAAA,aACA,KAAA,SAGA2B,gBAAA,sBAwDA3Z,QAAA,0LA+CAsZ,YACAgS,GAAA,EACAC,IAAA,EACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IAgEAzuB,OAAAsc,wBAAA/V,UACA,iVAIA,SAAA1B,QACAA,OAAAvB,GAAA,GAAAnR,MAAA0S,OAAAT,IAAAS,OAAA4T,QAAA,OAAA,OAKAzY,MAAAuc,SAAA,aAGAvc,MAAAwc,SAAA,YA6PA,IAAAkS,cAAAnoB,UACA,qGACA,WACA,GAAAsb,OAAAhI,YAAAxjB,MAAA,KAAAG,UACA,OAAAD,MAAAwM,WAAA8e,MAAA9e,UACA8e,MAAAtrB,KAAAA,KAAAsrB,MAEAhe,kBAKA8qB,aAAApoB,UACA,qGACA,WACA,GAAAsb,OAAAhI,YAAAxjB,MAAA,KAAAG,UACA,OAAAD,MAAAwM,WAAA8e,MAAA9e,UACA8e,MAAAtrB,KAAAA,KAAAsrB,MAEAhe,kBAwCA1M,IAAA,WACA,MAAAhF,MAAAgF,IAAAhF,KAAAgF,OAAA,GAAAhF,OAGAisB,UAAA,OAAA,UAAA,QAAA,OAAA,MAAA,OAAA,SAAA,SAAA,cA+FAsB,QAAA,IAAA,KACAA,OAAA,KAAA,IAIA9T,cAAA,IAAAmV,kBACAnV,cAAA,KAAAmV,kBACArU,eAAA,IAAA,MAAA,SAAAvM,MAAAiL,MAAAvG,QACAA,OAAA4T,SAAA,EACA5T,OAAAN,KAAAub,iBAAAiB,iBAAA5gB,QAQA,IAAAggB,aAAA,iBA2CAngB,OAAA+E,aAAA,YAmJA,IAAAqd,aAAA,2DAKAC,SAAA,qKA+DA5D,gBAAA5qB,GAAA6qB,SAAA3rB,UACA0rB,eAAAmQ,QAAApQ,eAuFA,IAAA1qB,KAAA+uB,YAAA,EAAA,OACAxB,SAAAwB,aAAA,EAAA,WA0IA7iB,OAAAklB,cAAA,uBACAllB,MAAAilB,iBAAA,wBAkGA,IAAA4J,MAAAtoB,UACA,kJACA,SAAAI,KACA,WAAAjD,KAAAiD,IACApQ,KAAAyU,aAEAzU,KAAAkL,OAAAkF,MA8HAgE,gBAAA,GAAA,KAAA,GAAA,EAAA,WACA,MAAApU,MAAAgjB,WAAA,MAGA5O,eAAA,GAAA,KAAA,GAAA,EAAA,WACA,MAAApU,MAAAu4B,cAAA,MAOA9I,uBAAA,OAAA,YACAA,uBAAA,QAAA,YACAA,uBAAA,OAAA,eACAA,uBAAA,QAAA,eAIAhd,aAAA,WAAA,MACAA,aAAA,cAAA,MAIAY,gBAAA,WAAA,GACAA,gBAAA,cAAA,GAKAgC,cAAA,IAAAihB,aACAjhB,cAAA,IAAAihB,aACAjhB,cAAA,KAAA0gB,UAAAJ,QACAtgB,cAAA,KAAA0gB,UAAAJ,QACAtgB,cAAA,OAAA8gB,UAAAN,QACAxgB,cAAA,OAAA8gB,UAAAN,QACAxgB,cAAA,QAAA+gB,UAAAN,QACAzgB,cAAA,QAAA+gB,UAAAN,QAEAzf,mBAAA,OAAA,QAAA,OAAA,SAAA,SAAAzM,MAAAsR,KAAA5M,OAAA+F,OACA6G,KAAA7G,MAAAF,OAAA,EAAA,IAAApF,MAAAnF,SAGAyM,mBAAA,KAAA,MAAA,SAAAzM,MAAAsR,KAAA5M,OAAA+F,OACA6G,KAAA7G,OAAA5K,MAAAgtB,kBAAA7sB,SAqDAwK,eAAA,IAAA,EAAA,KAAA,WAIA3B,aAAA,UAAA,KAIAY,gBAAA,UAAA,GAIAgC,cAAA,IAAAqgB,QACAvf,cAAA,IAAA,SAAAvM,MAAAiL,OACAA,MAAAqM,OAAA,GAAAnS,MAAAnF,OAAA,KAWAwK,eAAA,KAAA,KAAA,GAAA,KAAA,QAIA3B,aAAA,OAAA,KAGAY,gBAAA,OAAA,GAIAgC,cAAA,IAAA0gB,WACA1gB,cAAA,KAAA0gB,UAAAJ,QACAtgB,cAAA,KAAA,SAAAI,SAAAvK,QAEA,MAAAuK,UACAvK,OAAA8F,yBAAA9F,OAAA+F,cACA/F,OAAA6F,iCAGAoF,eAAA,IAAA,MAAAgL,MACAhL,cAAA,KAAA,SAAAvM,MAAAiL,OACAA,MAAAsM,MAAApS,MAAAnF,MAAA+K,MAAAohB,WAAA,GAAA,KAKA,IAAAyC,kBAAA3hB,WAAA,QAAA,EAIAzC,gBAAA,OAAA,OAAA,GAAA,OAAA,aAIA3B,aAAA,YAAA,OAGAY,gBAAA,YAAA,GAIAgC,cAAA,MAAA6gB,WACA7gB,cAAA,OAAAugB,QACAzf,eAAA,MAAA,QAAA,SAAAvM,MAAAiL,MAAAvG,QACAA,OAAAqU,WAAA5T,MAAAnF,SAcAwK,eAAA,KAAA,KAAA,GAAA,EAAA,UAIA3B,aAAA,SAAA,KAIAY,gBAAA,SAAA,IAIAgC,cAAA,IAAA0gB,WACA1gB,cAAA,KAAA0gB,UAAAJ,QACAxf,eAAA,IAAA,MAAAmL,OAIA,IAAAmX,cAAA5hB,WAAA,WAAA,EAIAzC,gBAAA,KAAA,KAAA,GAAA,EAAA,UAIA3B,aAAA,SAAA,KAIAY,gBAAA,SAAA,IAIAgC,cAAA,IAAA0gB,WACA1gB,cAAA,KAAA0gB,UAAAJ,QACAxf,eAAA,IAAA,MAAAoL,OAIA,IAAAmX,cAAA7hB,WAAA,WAAA,EAIAzC,gBAAA,IAAA,EAAA,EAAA,WACA,SAAApU,KAAAonB,cAAA,OAGAhT,eAAA,GAAA,KAAA,GAAA,EAAA,WACA,SAAApU,KAAAonB,cAAA,MAGAhT,eAAA,GAAA,MAAA,GAAA,EAAA,eACAA,eAAA,GAAA,OAAA,GAAA,EAAA,WACA,MAAA,IAAApU,KAAAonB,gBAEAhT,eAAA,GAAA,QAAA,GAAA,EAAA,WACA,MAAA,KAAApU,KAAAonB,gBAEAhT,eAAA,GAAA,SAAA,GAAA,EAAA,WACA,MAAA,KAAApU,KAAAonB,gBAEAhT,eAAA,GAAA,UAAA,GAAA,EAAA,WACA,MAAA,KAAApU,KAAAonB,gBAEAhT,eAAA,GAAA,WAAA,GAAA,EAAA,WACA,MAAA,KAAApU,KAAAonB,gBAEAhT,eAAA,GAAA,YAAA,GAAA,EAAA,WACA,MAAA,KAAApU,KAAAonB,gBAMA3U,aAAA,cAAA,MAIAY,gBAAA,cAAA,IAIAgC,cAAA,IAAA6gB,UAAAR,QACArgB,cAAA,KAAA6gB,UAAAP,QACAtgB,cAAA,MAAA6gB,UAAAN,OAEA,IAAAvhB,MACA,KAAAA,MAAA,OAAAA,MAAAzU,QAAA,EAAAyU,OAAA,IACAgB,cAAAhB,MAAAgiB,cAOA,KAAAhiB,MAAA,IAAAA,MAAAzU,QAAA,EAAAyU,OAAA,IACA8B,cAAA9B,MAAAkc,QAIA,IAAAoI,mBAAA9hB,WAAA,gBAAA,EAIAzC,gBAAA,IAAA,EAAA,EAAA,YACAA,eAAA,KAAA,EAAA,EAAA,WAYA,IAAAwkB,OAAAvqB,OAAA7R,SAEAo8B,OAAAr7B,IAAAA,IACAq7B,MAAAtnB,SAAAwb,WACA8L,MAAA7O,MAAAA,MACA6O,MAAApmB,KAAAA,KACAomB,MAAAvL,MAAAA,MACAuL,MAAA3tB,OAAAA,OACA2tB,MAAAlrB,KAAAA,KACAkrB,MAAA9J,QAAAA,QACA8J,MAAAnrB,GAAAA,GACAmrB,MAAA7J,MAAAA,MACA6J,MAAA5hB,IAAAG,UACAyhB,MAAArJ,UAAAA,UACAqJ,MAAAxM,QAAAA,QACAwM,MAAAvM,SAAAA,SACAuM,MAAAtL,UAAAA,UACAsL,MAAApL,OAAAA,OACAoL,MAAAlL,cAAAA,cACAkL,MAAAjL,eAAAA,eACAiL,MAAApsB,QAAA6iB,UACAuJ,MAAAN,KAAAA,KACAM,MAAA1tB,OAAAA,OACA0tB,MAAAnkB,WAAAA,WACAmkB,MAAA1kB,IAAAkkB,aACAQ,MAAAppB,IAAA2oB,aACAS,MAAAtJ,aAAAA,aACAsJ,MAAA/nB,IAAAuG,UACAwhB,MAAA1L,QAAAA,QACA0L,MAAA9N,SAAAA,SACA8N,MAAArN,QAAAA,QACAqN,MAAAzJ,SAAAA,SACAyJ,MAAAxK,OAAAA,OACAwK,MAAAzK,YAAAA,YACAyK,MAAAvK,QAAAA,QACAuK,MAAAxJ,OAAAA,OACAwJ,MAAA9uB,SAAAA,SACA8uB,MAAA1J,KAAAA,KACA0J,MAAA7tB,QAAAA,QACA6tB,MAAApJ,aAAAA,aAGAoJ,MAAAliB,KAAAggB,WACAkC,MAAAjiB,WAAAC,cAGAgiB,MAAA5V,SAAA2M,eACAiJ,MAAAL,YAAA1I,kBAGA+I,MAAArQ,QAAAqQ,MAAAtQ,SAAA+H,cAGAuI,MAAA3hB,MAAAgC,YACA2f,MAAA1hB,YAAAgC,eAGA0f,MAAA1d,KAAA0d,MAAApQ,MAAAvM,WACA2c,MAAA9I,QAAA8I,MAAAC,SAAA3c,cACA0c,MAAAjd,YAAAqU,eACA4I,MAAAE,eAAA/I,kBAGA6I,MAAA5f,KAAAwf,iBACAI,MAAAnc,IAAAmc,MAAAnQ,KAAAhL,gBACAmb,MAAAzd,QAAAwC,sBACAib,MAAA3J,WAAArR,mBACAgb,MAAApd,UAAA8U,gBAGAsI,MAAArS,KAAAqS,MAAA7Z,MAAAuY,WAGAsB,MAAA1R,OAAA0R,MAAA1Z,QAAAuZ,aAGAG,MAAAzR,OAAAyR,MAAAlQ,QAAAgQ,aAGAE,MAAAxR,YAAAwR,MAAAjQ,aAAAgQ,kBAGAC,MAAAvP,UAAAe,aACAwO,MAAAvtB,IAAAuf,eACAgO,MAAA3O,MAAAY,iBACA+N,MAAAhI,UAAA7F,wBACA6N,MAAA1N,qBAAAA,qBACA0N,MAAAG,MAAA5N,qBACAyN,MAAApN,QAAAA,QACAoN,MAAAnN,YAAAA,YACAmN,MAAAlN,MAAAA,MACAkN,MAAAnR,MAAAiE,MAGAkN,MAAAI,SAAAxI,YACAoI,MAAAK,SAAAxI,YAGAmI,MAAAM,MAAAlpB,UAAA,kDAAAwoB,kBACAI,MAAAngB,OAAAzI,UAAA,mDAAAiJ,aACA2f,MAAAvQ,MAAArY,UAAA,iDAAA0mB,YACAkC,MAAAtK,KAAAte,UAAA,2GAAA2a,YACAiO,MAAAO,aAAAnpB,UAAA,0GAAAob,4BAcA,IAAAgO,SAAA/nB,OAAA7U,SAEA48B,SAAA9nB,SAAAA,SACA8nB,QAAA1nB,eAAAA,eACA0nB,QAAAtnB,YAAAA,YACAsnB,QAAApnB,QAAAA,QACAonB,QAAA7R,SAAAsJ,mBACAuI,QAAAxK,WAAAiC,mBACAuI,QAAAlnB,aAAAA,aACAknB,QAAA7mB,WAAAA,WACA6mB,QAAAvoB,IAAAA,IAGAuoB,QAAA3gB,OAAAf,aACA0hB,QAAA5gB,YAAAV,kBACAshB,QAAArgB,YAAAJ,kBACAygB,QAAA5f,YAAAA,YACA4f,QAAAjgB,iBAAAA,iBAGAigB,QAAAle,KAAAW,WACAud,QAAAC,eAAArd,qBACAod,QAAAE,eAAAvd,qBAGAqd,QAAA/b,SAAAd,eACA6c,QAAAjc,YAAAP,kBACAwc,QAAAhc,cAAAV,oBACA0c,QAAAhd,cAAAkB,oBAEA8b,QAAAvb,cAAAA,cACAub,QAAAlb,mBAAAA,mBACAkb,QAAA9a,iBAAAA,iBAGA8a,QAAA1S,KAAArH,WACA+Z,QAAAltB,SAAAqT,eA4FAc,mBAAA,MACAkX,uBAAA,uBACAvlB,QAAA,SAAArD,QACA,GAAA9D,GAAA8D,OAAA,EAKA,OAAAA,SAJA,IAAAI,MAAAJ,OAAA,IAAA,IAAA,KACA,IAAA9D,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,KAAA,SAMApB,MAAA6uB,KAAAtoB,UAAA,wDAAAqQ,oBACA5W,MAAA8vB,SAAAvpB,UAAA,gEAAAwQ,UAEA,IAAAmR,SAAA/iB,KAAAc,IA0JA8pB,eAAAlH,OAAA,MACAsB,UAAAtB,OAAA,KACAmH,UAAAnH,OAAA,KACAoH,QAAApH,OAAA,KACAqH,OAAArH,OAAA,KACAsH,QAAAtH,OAAA,KACAuH,SAAAvH,OAAA,KACAwH,QAAAxH,OAAA,KAiBA3J,aAAA+J,WAAA,gBACAhK,QAAAgK,WAAA,WACAxT,QAAAwT,WAAA,WACA3T,MAAA2T,WAAA,SACAjK,KAAAiK,WAAA,QACAja,OAAAia,WAAA,UACArK,MAAAqK,WAAA,SAMAxJ,MAAAta,KAAAsa,MACA4J,YACAC,GAAA,GACAnd,EAAA,GACAtJ,EAAA,GACA6N,EAAA,GACAD,EAAA,GACAE,EAAA,IA6EAmZ,MAAA3kB,KAAAc,IAgEAqqB,QAAA5R,SAAA3rB,SA2FA,OAzFAu9B,SAAAvtB,QAAAwb,UACA+R,QAAArqB,IAAAA,IACAqqB,QAAAx8B,IAAAs0B,MACAkI,QAAAjP,SAAAgH,WACAiI,QAAA3H,GAAAA,GACA2H,QAAAP,eAAAA,eACAO,QAAAnG,UAAAA,UACAmG,QAAAN,UAAAA,UACAM,QAAAL,QAAAA,QACAK,QAAAJ,OAAAA,OACAI,QAAAH,QAAAA,QACAG,QAAAF,SAAAA,SACAE,QAAAD,QAAAA,QACAC,QAAAhvB,QAAAsnB,UACA0H,QAAAhR,QAAAiJ,OACA+H,QAAAhQ,MAAAyI,QACAuH,QAAA/iB,IAAAyb,MACAsH,QAAApR,aAAAA,aACAoR,QAAArR,QAAAA,QACAqR,QAAA7a,QAAAA,QACA6a,QAAAhb,MAAAA,MACAgb,QAAAtR,KAAAA,KACAsR,QAAAvR,MAAAA,MACAuR,QAAAthB,OAAAA,OACAshB,QAAA1R,MAAAA,MACA0R,QAAAlL,SAAAA,SACAkL,QAAA5L,YAAAmF,cACAyG,QAAAjwB,SAAAwpB,cACAyG,QAAA3K,OAAAkE,cACAyG,QAAA7uB,OAAAA,OACA6uB,QAAAtlB,WAAAA,WAGAslB,QAAAC,YAAAhqB,UAAA,sFAAAsjB,eACAyG,QAAAzB,KAAAA,KAMAlkB,eAAA,IAAA,EAAA,EAAA,QACAA,eAAA,IAAA,EAAA,EAAA,WAIAiB,cAAA,IAAAihB,aACAjhB,cAAA,IAAAkhB,gBACApgB,cAAA,IAAA,SAAAvM,MAAAiL,MAAAvG,QACAA,OAAAvB,GAAA,GAAAnR,MAAA,IAAAmsB,WAAAne,MAAA,OAEAuM,cAAA,IAAA,SAAAvM,MAAAiL,MAAAvG,QACAA,OAAAvB,GAAA,GAAAnR,MAAAmT,MAAAnF,UAMAH,MAAAwwB,QAAA,SA32IA,SAAA1lB,UACA7K,aAAA6K,UA42IA+O,aAEA7Z,MAAAnM,GAAAs7B,MACAnvB,MAAA+F,IAAAA,IACA/F,MAAAyK,IAAAA,IACAzK,MAAA7I,IAAAA,IACA6I,MAAA4B,IAAAL,UACAvB,MAAAylB,KAAAwB,WACAjnB,MAAAgP,OAAA6Y,WACA7nB,MAAAc,OAAAA,OACAd,MAAAyB,OAAAmV,mBACA5W,MAAA4uB,QAAA/qB,cACA7D,MAAA2e,SAAAF,eACAze,MAAAgF,SAAAA,SACAhF,MAAA4T,SAAAmU,aACA/nB,MAAAmnB,UAAAD,aACAlnB,MAAAgL,WAAA+L,UACA/W,MAAAuf,WAAAA,WACAvf,MAAA+O,YAAA+Y,gBACA9nB,MAAA0T,YAAAuU,gBACAjoB,MAAAgX,aAAAA,aACAhX,MAAAqX,aAAAA,aACArX,MAAAwW,QAAAc,YACAtX,MAAA2T,cAAAqU,kBACAhoB,MAAAsJ,eAAAA,eACAtJ,MAAAywB,qBAAAlH,2BACAvpB,MAAA0wB,sBAAAjH,4BACAzpB,MAAA0jB,eAAAP,kBACAnjB,MAAAjN,UAAAo8B,MAEAnvB,QC35IA,SAAAJ,OAAAhO,SACA,gBAAA+N,UAAA,mBAAAD,SACA,kBAAAiX,SAAA/kB,QAAA+kB,QAAA,cACA,kBAAA9W,SAAAA,OAAAC,IAAAD,QAAA,aAAAjO,SACAA,QAAAgO,OAAAG,SACAxJ,KAAA,SAAAwJ,QAAA,YAGA,IAAA4wB,gBAAA,8DAAAta,MAAA,KACAtH,YAAA,kDAAAsH,MAAA,KAEA/G,aAAA,QAAA,QAAA,QAAA,QAAA,QAAA,QAAA,QAAA,QAAA,QAAA,QAAA,QAAA,SACAS,YAAA,kLAyEA,OAvEAhQ,QAAAiX,aAAA,MACAhI,OAAA,2FAAAqH,MAAA,KACAtH,YAAA,SAAAlM,EAAArB,QACA,MAAAqB,GAEA,QAAAzP,KAAAoO,QACAuN,YAAAlM,EAAA2K,SAEAmjB,eAAA9tB,EAAA2K,SAJAmjB,gBAOA5gB,YAAAA,YACAL,iBAAAK,YACA6gB,kBAAA,+FACAC,uBAAA,0FACAvhB,YAAAA,YACAwhB,gBAAAxhB,YACAyhB,iBAAAzhB,YACAsE,SAAA,uDAAAyC,MAAA,KACA1C,cAAA,qCAAA0C,MAAA,KACA3C,YAAA,uBAAA2C,MAAA,KACA2a,oBAAA,EACA/oB,gBACAkjB,GAAA,OACAD,IAAA,UACAE,EAAA,aACAC,GAAA,wBACAC,IAAA,6BACAC,KAAA,oCAEA1jB,UACA8iB,QAAA,WACA,MAAA,aAAA,IAAAp0B,KAAA+e,QAAA,IAAA,IAAA,QAEAsV,QAAA,WACA,MAAA,gBAAA,IAAAr0B,KAAA+e,QAAA,IAAA,IAAA,QAEAuV,SAAA,WACA,MAAA,cAAA,IAAAt0B,KAAA+e,QAAA,IAAA,IAAA,QAEAwV,QAAA,WACA,MAAA,cAAA,IAAAv0B,KAAA+e,QAAA,IAAA,IAAA,QAEAyV,SAAA,WACA,MAAA,0BAAA,IAAAx0B,KAAA+e,QAAA,IAAA,IAAA,QAEA0V,SAAA,KAEAviB,cACAijB,OAAA,QACAC,KAAA,UACAxf,EAAA,gBACAtJ,EAAA,YACA+oB,GAAA,aACAlb,EAAA,WACAmb,GAAA,WACApb,EAAA,SACAqb,GAAA,UACAnb,EAAA,SACAob,GAAA,WACAvb,EAAA,SACAwb,GAAA,WAEA8B,uBAAA,WACAvlB,QAAA,MACAkJ,MACAL,IAAA,EACAC,IAAA,OCrFA,SAAAzR,OAAAhO,SACA,gBAAA+N,UAAA,mBAAAD,QAAA9N,QAAA+N,SACA,kBAAAE,SAAAA,OAAAC,IAAAD,QAAA,WAAAjO,SACAA,QAAAgO,OAAAqxB,MAAArxB,OAAAqxB,YACA16B,KAAA,SAAAoJ,SAAA,YAyGA,SAAAuxB,oBA2XA,QAAAC,SAAApjB,EAAAyC,GAEAja,KAAAwX,EAAAA,GAAA,EACAxX,KAAAia,EAAAA,GAAA,EA6dA,QAAA4gB,SAAAC,MAAAC,QAAAC,MAAAC,MAAAC,UAAAC,UAAAlwB,OAAAmwB,KAAAC,WAAAC,UAEAzxB,OAAA0xB,eAAAv7B,KAAA,MAAAkP,MAAAssB,cAEAx7B,KAAAy7B,KAAAC,MAAAC,eAEA37B,KAAApC,KAAA,GAEAoC,KAAA86B,UAAA3tB,KAAA2tB,MAAAA,MAAAD,QAAAe,cACA57B,KAAA67B,WAEA77B,KAAA+6B,YAAA5tB,KAAA4tB,QAAAA,QAAAF,QAAAiB,gBAEA97B,KAAAg7B,UAAA7tB,KAAA6tB,MAAAA,MAAAe,oBACA/7B,KAAAi7B,UAAA9tB,KAAA8tB,MAAAA,MAAAc,oBAEA/7B,KAAAk7B,cAAA/tB,KAAA+tB,UAAAA,UAAAc;yDACAh8B,KAAAm7B,cAAAhuB,KAAAguB,UAAAA,UAAAc,yBAEAj8B,KAAAq7B,eAAAluB,KAAAkuB,WAAAA,WAAA,EAEAr7B,KAAAiL,WAAAkC,KAAAlC,OAAAA,OAAAixB,WACAl8B,KAAAo7B,SAAAjuB,KAAAiuB,KAAAA,KAAAe,iBAEAn8B,KAAAmpB,OAAA,GAAAyR,SAAA,EAAA,GACA56B,KAAAo8B,OAAA,GAAAxB,SAAA,EAAA,GAEA56B,KAAAq8B,iBAAA,EACAr8B,KAAAs8B,kBAAA,EACAt8B,KAAAu8B,OAAA,EACAv8B,KAAAw8B,gBAAA,EAMAx8B,KAAAs7B,aAAAnuB,KAAAmuB,SAAAA,SAAAmB,eAEAz8B,KAAAi6B,QAAA,EACAj6B,KAAA08B,SAAA,KAiQA,QAAAC,SAAAnlB,EAAAyC,EAAA2iB,EAAA7Z,GAEA/iB,KAAAwX,EAAAA,GAAA,EACAxX,KAAAia,EAAAA,GAAA,EACAja,KAAA48B,EAAAA,GAAA,EACA58B,KAAA+iB,MAAA5V,KAAA4V,EAAAA,EAAA,EAinBA,QAAA8Z,mBAAA39B,MAAA49B,OAAAC,SAEA/8B,KAAAy7B,KAAAC,MAAAC,eAEA37B,KAAAd,MAAAA,MACAc,KAAA88B,OAAAA,OAEA98B,KAAAg9B,QAAA,GAAAL,SAAA,EAAA,EAAAz9B,MAAA49B,QACA98B,KAAAi9B,aAAA,EAEAj9B,KAAAk9B,SAAA,GAAAP,SAAA,EAAA,EAAAz9B,MAAA49B,QAEAC,QAAAA,gBAEA5vB,KAAA4vB,QAAA5B,YAAA4B,QAAA5B,UAAAa,cAEAh8B,KAAAm9B,QAAA,GAAAtC,aAAA1tB,OAAAA,GAAA4vB,QAAA/B,MAAA+B,QAAA9B,MAAA8B,QAAA7B,UAAA6B,QAAA5B,UAAA4B,QAAA9xB,OAAA8xB,QAAA3B,KAAA2B,QAAA1B,WAAA0B,QAAAzB,UAEAt7B,KAAAo9B,gBAAAjwB,KAAA4vB,QAAAK,aAAAL,QAAAK,YACAp9B,KAAAq9B,kBAAAlwB,KAAA4vB,QAAAM,eAAAN,QAAAM,cACAr9B,KAAAs9B,iBAAAnwB,KAAA4vB,QAAAO,aAAAP,QAAAO,aAAA,KA2DA,QAAAC,uBAAAr+B,MAAA49B,OAAAC,SAEAF,kBAAAj2B,KAAA5G,KAAAd,MAAA49B,OAAAC,SAEA/8B,KAAAw9B,eAAA,EACAx9B,KAAAy9B,kBAAA,EAgBA,QAAAC,YAAAlmB,EAAAyC,EAAA2iB,EAAA7Z,GAEA/iB,KAAA29B,GAAAnmB,GAAA,EACAxX,KAAA49B,GAAA3jB,GAAA,EACAja,KAAA69B,GAAAjB,GAAA,EACA58B,KAAAsW,OAAAnJ,KAAA4V,EAAAA,EAAA,EA2lBA,QAAA+a,SAAAtmB,EAAAyC,EAAA2iB,GAEA58B,KAAAwX,EAAAA,GAAA,EACAxX,KAAAia,EAAAA,GAAA,EACAja,KAAA48B,EAAAA,GAAA,EA0tBA,QAAAmB,WAEA/9B,KAAArB,UAEA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAIAsB,UAAAL,OAAA,GAEAmQ,QAAAiuB,MAAA,iFAo4BA,QAAAC,aAAA1d,KAAArhB,MAAA49B,OAAA7xB,OAAAmwB,KAAAL,QAAAC,MAAAC,MAAAC,UAAAC,UAAAE,WAAAC,UAEAT,QAAAj0B,KAAA5G,KAAA,KAAA+6B,QAAAC,MAAAC,MAAAC,UAAAC,UAAAlwB,OAAAmwB,KAAAC,WAAAC,UAEAt7B,KAAA86B,OAAAva,KAAAA,KAAArhB,MAAAA,MAAA49B,OAAAA,QAEA98B,KAAAk7B,cAAA/tB,KAAA+tB,UAAAA,UAAAgD,cACAl+B,KAAAm7B,cAAAhuB,KAAAguB,UAAAA,UAAA+C,cAEAl+B,KAAAq8B,iBAAA,EACAr8B,KAAAu8B,OAAA,EACAv8B,KAAAw8B,gBAAA,EAaA,QAAA2B,aAAAC,OAAArD,QAAAC,MAAAC,MAAAC,UAAAC,UAAAlwB,OAAAmwB,KAAAC,WAAAC,UAEA8C,WAAAjxB,KAAAixB,OAAAA,UACArD,YAAA5tB,KAAA4tB,QAAAA,QAAAsD,sBAEAxD,QAAAj0B,KAAA5G,KAAAo+B,OAAArD,QAAAC,MAAAC,MAAAC,UAAAC,UAAAlwB,OAAAmwB,KAAAC,WAAAC,UAEAt7B,KAAAu8B,OAAA,EA+EA,QAAA+B,oBAEAt+B,KAAAu+B,OACAv+B,KAAAwK,OAkBA,QAAAg0B,SAAA3pB,MAAA4pB,QAAAC,WAEA,GAAAC,WAAA9pB,MAAA,EAEA,IAAA8pB,WAAA,GAAAA,UAAA,EAAA,MAAA9pB,MAIA,IAAA0C,GAAAknB,QAAAC,UACAE,EAAAC,cAAAtnB,EASA,QAPApK,KAAAyxB,IAEAA,EAAA,GAAAE,cAAAvnB,GACAsnB,cAAAtnB,GAAAqnB,GAIA,IAAAH,QAAA,CAEAE,UAAApT,QAAAqT,EAAA,EAEA,KAAA,GAAA96B,GAAA,EAAAqlB,OAAA,EAAArlB,IAAA26B,UAAA36B,EAEAqlB,QAAAuV,UACA7pB,MAAA/Q,GAAAynB,QAAAqT,EAAAzV,QAMA,MAAAyV,GAMA,QAAAG,eAAAC,SAAAznB,GAEA,GAAAqnB,GAAAK,cAAA1nB,OAEApK,KAAAyxB,IAEAA,EAAA,GAAAM,YAAA3nB,GACA0nB,cAAA1nB,GAAAqnB,EAIA,KAAA,GAAA96B,GAAA,EAAAA,IAAAyT,IAAAzT,EACA86B,EAAA96B,GAAAk7B,SAAAG,kBAEA,OAAAP,GAWA,QAAAQ,YAAAC,GAAAC,GAAAD,GAAAE,UAAAv/B,KAAAw/B,KAAAF,GACA,QAAAG,YAAAJ,GAAAC,GAAAD,GAAAK,UAAA1/B,KAAAw/B,KAAAF,GAIA,QAAAK,aAAAN,GAAAC,OAEAnyB,KAAAmyB,EAAA9nB,EAAA6nB,GAAAO,WAAA5/B,KAAAw/B,KAAAF,GACAD,GAAAQ,UAAA7/B,KAAAw/B,KAAAF,EAAA9nB,EAAA8nB,EAAArlB,GAIA,QAAA6lB,aAAAT,GAAAC,OAEAnyB,KAAAmyB,EAAA9nB,EACA6nB,GAAAU,UAAA//B,KAAAw/B,KAAAF,EAAA9nB,EAAA8nB,EAAArlB,EAAAqlB,EAAA1C,OACAzvB,KAAAmyB,EAAAV,EACAS,GAAAU,UAAA//B,KAAAw/B,KAAAF,EAAAV,EAAAU,EAAAU,EAAAV,EAAAz0B,GAEAw0B,GAAAY,WAAAjgC,KAAAw/B,KAAAF,GAIA,QAAAY,aAAAb,GAAAC,OAEAnyB,KAAAmyB,EAAA9nB,EAAA6nB,GAAAc,WAAAngC,KAAAw/B,KAAAF,GACAD,GAAAe,UAAApgC,KAAAw/B,KAAAF,EAAA9nB,EAAA8nB,EAAArlB,EAAAqlB,EAAA1C,EAAA0C,EAAAvc,GAMA,QAAAsd,aAAAhB,GAAAC,GAEAD,GAAAiB,iBAAAtgC,KAAAw/B,MAAA,EAAAF,EAAA3gC,UAAA2gC,GAIA,QAAAiB,aAAAlB,GAAAC,OAEAnyB,KAAAmyB,EAAA3gC,SAEA0gC,GAAAmB,iBAAAxgC,KAAAw/B,MAAA,EAAAF,IAIAmB,UAAA5vB,IAAAyuB,EAAA3gC,UACA0gC,GAAAmB,iBAAAxgC,KAAAw/B,MAAA,EAAAiB,YAMA,QAAAC,aAAArB,GAAAC,OAEAnyB,KAAAmyB,EAAA3gC,SAEA0gC,GAAAsB,iBAAA3gC,KAAAw/B,MAAA,EAAAF,IAIAsB,UAAA/vB,IAAAyuB,EAAA3gC,UACA0gC,GAAAsB,iBAAA3gC,KAAAw/B,MAAA,EAAAoB,YAQA,QAAAC,YAAAxB,GAAAC,EAAAN,UAEA,GAAAtsB,MAAAssB,SAAAG,kBACAE,IAAAK,UAAA1/B,KAAAw/B,KAAA9sB,MACAssB,SAAA8B,aAAAxB,GAAAyB,aAAAruB,MAIA,QAAAsuB,YAAA3B,GAAAC,EAAAN,UAEA,GAAAtsB,MAAAssB,SAAAG,kBACAE,IAAAK,UAAA1/B,KAAAw/B,KAAA9sB,MACAssB,SAAAiC,eAAA3B,GAAA4B,iBAAAxuB,MAMA,QAAAyuB,aAAA9B,GAAAC,GAAAD,GAAA+B,WAAAphC,KAAAw/B,KAAAF,GACA,QAAA+B,aAAAhC,GAAAC,GAAAD,GAAAiC,WAAAthC,KAAAw/B,KAAAF,GACA,QAAAiC,aAAAlC,GAAAC,GAAAD,GAAAmC,WAAAxhC,KAAAw/B,KAAAF,GAIA,QAAAmC,mBAAArG,MAEA,OAAAA,MAEA,IAAA,MAAA,MAAAgE,WACA,KAAA,OAAA,MAAAO,YACA,KAAA,OAAA,MAAAG,YACA,KAAA,OAAA,MAAAI,YAEA,KAAA,OAAA,MAAAG,YACA,KAAA,OAAA,MAAAE,YACA,KAAA,OAAA,MAAAG,YAEA,KAAA,OAAA,IAAA,OAAA,MAAAG,WACA,KAAA,OAAA,MAAAG,WAEA,KAAA,MAAA,IAAA,OAAA,MAAAvB,WACA,KAAA,OAAA,IAAA,OAAA,MAAA0B,YACA,KAAA,OAAA,IAAA,OAAA,MAAAE,YACA,KAAA,OAAA,IAAA,OAAA,MAAAE,cAQA,QAAAG,aAAArC,GAAAC,GAAAD,GAAAsC,WAAA3hC,KAAAw/B,KAAAF,GACA,QAAAsC,aAAAvC,GAAAC,GAAAD,GAAAwC,WAAA7hC,KAAAw/B,KAAAF,GAIA,QAAAwC,aAAAzC,GAAAC,GAEAD,GAAAO,WAAA5/B,KAAAw/B,KAAAhB,QAAAc,EAAAt/B,KAAA+hC,KAAA,IAIA,QAAAC,aAAA3C,GAAAC,GAEAD,GAAAY,WAAAjgC,KAAAw/B,KAAAhB,QAAAc,EAAAt/B,KAAA+hC,KAAA,IAIA,QAAAE,aAAA5C,GAAAC,GAEAD,GAAAc,WAAAngC,KAAAw/B,KAAAhB,QAAAc,EAAAt/B,KAAA+hC,KAAA,IAMA,QAAAG,aAAA7C,GAAAC,GAEAD,GAAAiB,iBAAAtgC,KAAAw/B,MAAA,EAAAhB,QAAAc,EAAAt/B,KAAA+hC,KAAA,IAIA,QAAAI,aAAA9C,GAAAC,GAEAD,GAAAmB,iBAAAxgC,KAAAw/B,MAAA,EAAAhB,QAAAc,EAAAt/B,KAAA+hC,KAAA,IAIA,QAAAK,aAAA/C,GAAAC,GAEAD,GAAAsB,iBAAA3gC,KAAAw/B,MAAA,EAAAhB,QAAAc,EAAAt/B,KAAA+hC,KAAA,KAMA,QAAAM,aAAAhD,GAAAC,EAAAN,UAEA,GAAAznB,GAAA+nB,EAAA1/B,OACAoT,MAAA+rB,cAAAC,SAAAznB,EAEA8nB,IAAAwC,WAAA7hC,KAAAw/B,KAAAxsB,MAEA,KAAA,GAAAlP,GAAA,EAAAA,IAAAyT,IAAAzT,EAEAk7B,SAAA8B,aAAAxB,EAAAx7B,IAAAi9B,aAAA/tB,MAAAlP,IAMA,QAAAw+B,aAAAjD,GAAAC,EAAAN,UAEA,GAAAznB,GAAA+nB,EAAA1/B,OACAoT,MAAA+rB,cAAAC,SAAAznB,EAEA8nB,IAAAwC,WAAA7hC,KAAAw/B,KAAAxsB,MAEA,KAAA,GAAAlP,GAAA,EAAAA,IAAAyT,IAAAzT,EAEAk7B,SAAAiC,eAAA3B,EAAAx7B,IAAAo9B,iBAAAluB,MAAAlP,IAQA,QAAAy+B,oBAAAnH,MAEA,OAAAA,MAEA,IAAA,MAAA,MAAAsG,YACA,KAAA,OAAA,MAAAI,YACA,KAAA,OAAA,MAAAE,YACA,KAAA,OAAA,MAAAC,YAEA,KAAA,OAAA,MAAAC,YACA,KAAA,OAAA,MAAAC,YACA,KAAA,OAAA,MAAAC,YAEA,KAAA,OAAA,MAAAC,YACA,KAAA,OAAA,MAAAC,YAEA,KAAA,MAAA,IAAA,OAAA,MAAAV,YACA,KAAA,OAAA,IAAA,OAAA,MAAAT,YACA,KAAA,OAAA,IAAA,OAAA,MAAAE,YACA,KAAA,OAAA,IAAA,OAAA,MAAAE,cAQA,QAAAiB,eAAAC,GAAAC,WAAAlD,MAEAx/B,KAAAyiC,GAAAA,GACAziC,KAAAw/B,KAAAA,KACAx/B,KAAA2iC,SAAAlB,kBAAAiB,WAAAtH,MAMA,QAAAwH,kBAAAH,GAAAC,WAAAlD,MAEAx/B,KAAAyiC,GAAAA,GACAziC,KAAAw/B,KAAAA,KACAx/B,KAAA+hC,KAAAW,WAAAX,KACA/hC,KAAA2iC,SAAAJ,mBAAAG,WAAAtH,MAMA,QAAAyH,mBAAAJ,IAEAziC,KAAAyiC,GAAAA,GAEAnE,iBAAA13B,KAAA5G,MAmCA,QAAA8iC,YAAAC,UAAAC,eAEAD,UAAAxE,IAAAr+B,KAAA8iC,eACAD,UAAAv4B,IAAAw4B,cAAAP,IAAAO,cAIA,QAAAC,cAAAP,WAAAlD,KAAAuD,WAEA,GAAAG,MAAAR,WAAA9kC,KACAulC,WAAAD,KAAAtjC,MAKA,KAFAwjC,WAAAhuB,UAAA,IAEA,CAEA,GAAAT,OAAAyuB,WAAApf,KAAAkf,MACAG,SAAAD,WAAAhuB,UAEAqtB,GAAA9tB,MAAA,GACA2uB,UAAA,MAAA3uB,MAAA,GACA4uB,UAAA5uB,MAAA,EAIA,IAFA2uB,YAAAb,IAAA,OAEAt1B,KAAAo2B,WAAA,MAAAA,WAAAF,SAAA,IAAAF,WAAA,CAIAL,WAAAC,cAAA51B,KAAAo2B,UACA,GAAAf,eAAAC,GAAAC,WAAAlD,MACA,GAAAoD,kBAAAH,GAAAC,WAAAlD,MAEA,OAMA,GAAAh1B,KAAAu4B,UAAAv4B,IAAAqV,KAAArV,IAAAi4B,QAEAt1B,KAAA0S,OAEAA,KAAA,GAAAgjB,mBAAAJ,IACAK,WAAAC,UAAAljB,OAIAkjB,UAAAljB,MAUA,QAAA2jB,eAAAnE,GAAAoE,QAAAzE,UAEAV,iBAAA13B,KAAA5G,MAEAA,KAAAg/B,SAAAA,QAIA,KAAA,GAFAznB,GAAA8nB,GAAAqE,oBAAAD,QAAApE,GAAAsE,iBAEA7/B,EAAA,EAAAA,EAAAyT,IAAAzT,EAAA,CAEA,GAAA8/B,MAAAvE,GAAAwE,iBAAAJ,QAAA3/B,GACAo/B,KAAAU,KAAAhmC,IAGAqlC,cAAAW,KAFAvE,GAAAyE,mBAAAL,QAAAP,MAEAljC,OAuFA,QAAA+jC,OAAAnF,EAAAoB,EAAAn1B,GAEA,WAAAsC,KAAA6yB,OAAA7yB,KAAAtC,EAGA7K,KAAA6Q,IAAA+tB,GAIA5+B,KAAAgkC,OAAApF,EAAAoB,EAAAn1B,GAmxCA,QAAAo5B,MAAAz0B,IAAA0E,KAEAlU,KAAAwP,QAAArC,KAAAqC,IAAAA,IAAA,GAAAorB,SAAAsJ,EAAAA,EAAAA,EAAAA,GACAlkC,KAAAkU,QAAA/G,KAAA+G,IAAAA,IAAA,GAAA0mB,UAAAsJ,EAAAA,GAAAA,EAAAA,GAuNA,QAAAC,oBAAAnF,SAAAK,GAAA+E,MAAAC,SAAAC,cAOA,QAAA97B,QAEA,GAAA+7B,UAAA,GAAAzF,gBACA,GAAA,EAAA,EAAA,EACA,GAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,IAGA0F,MAAA,GAAAC,cACA,EAAA,EAAA,EACA,EAAA,EAAA,GAKAC,cAAArF,GAAAsF,eACAC,cAAAvF,GAAAsF,eAEAtF,GAAAwF,WAAAxF,GAAAyF,aAAAJ,cACArF,GAAA0F,WAAA1F,GAAAyF,aAAAP,SAAAlF,GAAA2F,aAEA3F,GAAAwF,WAAAxF,GAAA4F,qBAAAL,eACAvF,GAAA0F,WAAA1F,GAAA4F,qBAAAT,MAAAnF,GAAA2F,aAIAE,YAAA7F,GAAA8F,gBACAC,iBAAA/F,GAAA8F,gBAEAf,MAAAiB,YAAAhG,GAAAiG,WAAAJ,aACA7F,GAAAkG,WAAAlG,GAAAiG,WAAA,EAAAjG,GAAAmG,IAAA,GAAA,GAAA,EAAAnG,GAAAmG,IAAAnG,GAAAoG,cAAA,MACApG,GAAAqG,cAAArG,GAAAiG,WAAAjG,GAAAsG,eAAAtG,GAAAuG,eACAvG,GAAAqG,cAAArG,GAAAiG,WAAAjG,GAAAwG,eAAAxG,GAAAuG,eACAvG,GAAAqG,cAAArG,GAAAiG,WAAAjG,GAAAyG,mBAAAzG,GAAA0G,SACA1G,GAAAqG,cAAArG,GAAAiG,WAAAjG,GAAA2G,mBAAA3G,GAAA0G,SAEA3B,MAAAiB,YAAAhG,GAAAiG,WAAAF,kBACA/F,GAAAkG,WAAAlG,GAAAiG,WAAA,EAAAjG,GAAA4G,KAAA,GAAA,GAAA,EAAA5G,GAAA4G,KAAA5G,GAAAoG,cAAA,MACApG,GAAAqG,cAAArG,GAAAiG,WAAAjG,GAAAsG,eAAAtG,GAAAuG,eACAvG,GAAAqG,cAAArG,GAAAiG,WAAAjG,GAAAwG,eAAAxG,GAAAuG,eACAvG,GAAAqG,cAAArG,GAAAiG,WAAAjG,GAAAyG,mBAAAzG,GAAA0G,SACA1G,GAAAqG,cAAArG,GAAAiG,WAAAjG,GAAA2G,mBAAA3G,GAAA0G,SAEAG,QAEAC,cAEA,+BAEA,+BACA,sBACA,0BAEA,kCAEA,2BACA,qBAEA,oBACA,6BAEA,gBAEA,YAEA,uBAEA,2BAEA,iEACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DAEA,2CACA,2CACA,2CACA,2CAEA,uEACA,uEAEA,IAEA,uFAEA,KAEA71B,KAAA,MAEA81B,gBAEA,+BAEA,yBACA,yBACA,sBAEA,oBACA,6BAEA,gBAIA,2BAEA,6CAIA,kCAEA,wCAIA,WAEA,wCACA,sCACA,0BACA,6BAEA,IAEA,KAEA91B,KAAA,OAIAmzB,QAAA4C,cAAAH,QAEAv+B,YACA2+B,OAAAjH,GAAAkH,kBAAA9C,QAAA,YACA+C,GAAAnH,GAAAkH,kBAAA9C,QAAA,OAGAgD,UACAC,WAAArH,GAAAyE,mBAAAL,QAAA,cACAj5B,IAAA60B,GAAAyE,mBAAAL,QAAA,OACAkD,aAAAtH,GAAAyE,mBAAAL,QAAA,gBACAmD,QAAAvH,GAAAyE,mBAAAL,QAAA,WACAoD,MAAAxH,GAAAyE,mBAAAL,QAAA,SACAqD,MAAAzH,GAAAyE,mBAAAL,QAAA,SACAsD,SAAA1H,GAAAyE,mBAAAL,QAAA,YACAuD,eAAA3H,GAAAyE,mBAAAL,QAAA,mBA8LA,QAAA4C,eAAAH,QAEA,GAAAzC,SAAApE,GAAAgH,gBAEAD,eAAA/G,GAAA4H,aAAA5H,GAAA6H,iBACAf,aAAA9G,GAAA4H,aAAA5H,GAAA8H,eAEA5Y,OAAA,aAAA+V,aAAA8C,UAAA,WAaA,OAXA/H,IAAAgI,aAAAjB,eAAA7X,OAAA2X,OAAAE,gBACA/G,GAAAgI,aAAAlB,aAAA5X,OAAA2X,OAAAC,cAEA9G,GAAAiI,cAAAlB,gBACA/G,GAAAiI,cAAAnB,cAEA9G,GAAAkI,aAAA9D,QAAA2C,gBACA/G,GAAAkI,aAAA9D,QAAA0C,cAEA9G,GAAAmI,YAAA/D,SAEAA,QAhXA,GAAAiB,cAAAE,cACAsB,OAAAzC,QAAA97B,WAAA8+B,SAEAvB,YAAAE,gBAsKAplC,MAAAynC,OAAA,SAAAC,OAAAC,MAAAC,OAAA1K,UAEA,GAAA,IAAAwK,OAAA9nC,OAAA,CAEA,GAAAioC,cAAA,GAAA/J,SAEAgK,UAAA5K,SAAAna,EAAAma,SAAAN,EACAmL,kBAAA,GAAA7K,SAAAN,EACAoL,mBAAA,GAAA9K,SAAAna,EAEAgf,KAAA,GAAA7E,SAAAna,EACA+jB,MAAA,GAAAlM,SAAAmH,KAAA+F,UAAA/F,MAEAiF,eAAA,GAAAlJ,SAAA,EAAA,EAAA,GACAmK,qBAAA,GAAArN,SAAA,EAAA,GAEAsN,UAAA,GAAAjE,KAEAiE,WAAA14B,IAAAqB,IAAAqsB,SAAA1lB,EAAA0lB,SAAAjjB,GACAiuB,UAAAh0B,IAAArD,IAAAqsB,SAAA1lB,GAAA0lB,SAAAN,EAAA,IAAAM,SAAAjjB,GAAAijB,SAAAna,EAAA,SAEA5V,KAAAs2B,SAEAj7B,OAIA47B,MAAA+D,WAAA1E,SAEAW,MAAAgE,iBACAhE,MAAAiE,gBAAA1gC,WAAA2+B,QACAlC,MAAAiE,gBAAA1gC,WAAA6+B,IACApC,MAAAkE,0BAKAjJ,GAAAK,UAAA+G,SAAAE,aAAA,GACAtH,GAAAK,UAAA+G,SAAAj8B,IAAA,GAEA60B,GAAAwF,WAAAxF,GAAAyF,aAAAJ,cACArF,GAAAkJ,oBAAA5gC,WAAA2+B,OAAA,EAAAjH,GAAAmJ,OAAA,EAAA,GAAA,GACAnJ,GAAAkJ,oBAAA5gC,WAAA6+B,GAAA,EAAAnH,GAAAmJ,OAAA,EAAA,GAAA,GAEAnJ,GAAAwF,WAAAxF,GAAA4F,qBAAAL,eAEAR,MAAAqE,QAAApJ,GAAAqJ,WACAtE,MAAAuE,QAAAC,MAAAC,SAAA,EAEA,KAAA,GAAA/kC,GAAA,EAAA4f,EAAAgkB,OAAA9nC,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEAi+B,KAAA,GAAA7E,SAAAna,EACA+jB,MAAAj2B,IAAAkxB,KAAA+F,UAAA/F,KAIA,IAAA+G,OAAApB,OAAA5jC,EAkBA,IAhBA+jC,aAAAh3B,IAAAi4B,MAAAC,YAAApqC,SAAA,IAAAmqC,MAAAC,YAAApqC,SAAA,IAAAmqC,MAAAC,YAAApqC,SAAA,KAEAkpC,aAAAmB,aAAApB,OAAAqB,oBACApB,aAAAmB,aAAApB,OAAAsB,kBAIAlC,eAAAmC,KAAAtB,cAIAI,qBAAAzwB,EAAA0lB,SAAA1lB,EAAAwvB,eAAAxvB,EAAAuwB,kBAAAA,kBAAA,EACAE,qBAAAhuB,EAAAijB,SAAAjjB,EAAA+sB,eAAA/sB,EAAA+tB,mBAAAA,mBAAA,GAIA,IAAAE,UAAAkB,cAAAnB,sBAAA,CAIA7D,MAAAiF,cAAAhK,GAAAiK,UACAlF,MAAAiB,YAAAhG,GAAAiG,WAAA,MACAlB,MAAAiF,cAAAhK,GAAAkK,UACAnF,MAAAiB,YAAAhG,GAAAiG,WAAAJ,aACA7F,GAAAmK,eAAAnK,GAAAiG,WAAA,EAAAjG,GAAAmG,IAAAyC,qBAAAzwB,EAAAywB,qBAAAhuB,EAAA,GAAA,GAAA,GAKAolB,GAAAK,UAAA+G,SAAAC,WAAA,GACArH,GAAAQ,UAAA4G,SAAAK,MAAAA,MAAAtvB,EAAAsvB,MAAA7sB,GACAolB,GAAAU,UAAA0G,SAAAO,eAAAA,eAAAxvB,EAAAwvB,eAAA/sB,EAAA+sB,eAAApK,GAEAwH,MAAAqE,QAAApJ,GAAAoK,OACArF,MAAAsF,OAAArK,GAAAsK,YAEAtK,GAAAuK,aAAAvK,GAAAwK,UAAA,EAAAxK,GAAAyK,eAAA,GAKA1F,MAAAiF,cAAAhK,GAAAiK,UACAlF,MAAAiB,YAAAhG,GAAAiG,WAAAF,kBACA/F,GAAAmK,eAAAnK,GAAAiG,WAAA,EAAAjG,GAAA4G,KAAAgC,qBAAAzwB,EAAAywB,qBAAAhuB,EAAA,GAAA,GAAA,GAKAolB,GAAAK,UAAA+G,SAAAC,WAAA,GACAtC,MAAAqE,QAAApJ,GAAAsK,YAEAvF,MAAAiF,cAAAhK,GAAAkK,UACAnF,MAAAiB,YAAAhG,GAAAiG,WAAAJ,aACA7F,GAAAuK,aAAAvK,GAAAwK,UAAA,EAAAxK,GAAAyK,eAAA,GAKAhB,MAAAiB,eAAAZ,KAAAnC,gBAEA8B,MAAAkB,qBAEAlB,MAAAkB,qBAAAlB,OAIAA,MAAAmB,mBAMA5K,GAAAK,UAAA+G,SAAAC,WAAA,GACAtC,MAAAsF,OAAArK,GAAAoK,MAEA,KAAA,GAAA7pB,GAAA,EAAAsqB,GAAApB,MAAAqB,WAAAvqC,OAAAggB,EAAAsqB,GAAAtqB,IAAA,CAEA,GAAAwqB,QAAAtB,MAAAqB,WAAAvqB,EAEAwqB,QAAAxD,QAAA,MAAAwD,OAAAtD,MAAA,OAEAE,eAAAxvB,EAAA4yB,OAAA5yB,EACAwvB,eAAA/sB,EAAAmwB,OAAAnwB,EACA+sB,eAAApK,EAAAwN,OAAAxN,EAEAmF,KAAAqI,OAAArI,KAAAqI,OAAAtD,MAAA5J,SAAAna,EAEA+jB,MAAAtvB,EAAAuqB,KAAA+F,UACAhB,MAAA7sB,EAAA8nB,KAEA1C,GAAAU,UAAA0G,SAAAO,eAAAA,eAAAxvB,EAAAwvB,eAAA/sB,EAAA+sB,eAAApK,GACAyC,GAAAQ,UAAA4G,SAAAK,MAAAA,MAAAtvB,EAAAsvB,MAAA7sB,GACAolB,GAAAE,UAAAkH,SAAAM,SAAAqD,OAAArD,UAEA1H,GAAAE,UAAAkH,SAAAG,QAAAwD,OAAAxD,SACAvH,GAAAU,UAAA0G,SAAAI,MAAAuD,OAAAvD,MAAAjI,EAAAwL,OAAAvD,MAAA7G,EAAAoK,OAAAvD,MAAAh8B,GAEAu5B,MAAAiG,YAAAD,OAAAE,SAAAF,OAAAG,cAAAH,OAAAI,SAAAJ,OAAAK,UAEApG,SAAAvD,aAAAsJ,OAAAjN,QAAA,GAEAkC,GAAAuK,aAAAvK,GAAAwK,UAAA,EAAAxK,GAAAyK,eAAA,MAYA1F,MAAAsF,OAAArK,GAAAqJ,WACAtE,MAAAsF,OAAArK,GAAAsK,YACAvF,MAAAuE,QAAAC,MAAAC,SAAA,GAEAzE,MAAAsG,UAkCA,QAAAC,eAAAC,OAAA7P,QAAAC,MAAAC,MAAAC,UAAAC,UAAAlwB,OAAAmwB,KAAAC,YAEAR,QAAAj0B,KAAA5G,KAAA4qC,OAAA7P,QAAAC,MAAAC,MAAAC,UAAAC,UAAAlwB,OAAAmwB,KAAAC,YAEAr7B,KAAA6qC,aAAA,EAYA,QAAAC,qBAAA9L,SAAAK,GAAA+E,MAAAC,SAAAC,cAaA,QAAA97B,QAEA,GAAA+7B,UAAA,GAAAzF,gBACA,IAAA,GAAA,EAAA,EACA,IAAA,GAAA,EAAA,EACA,GAAA,GAAA,EAAA,GACA,GAAA,GAAA,EAAA,IAGA0F,MAAA,GAAAC,cACA,EAAA,EAAA,EACA,EAAA,EAAA,GAGAC,cAAArF,GAAAsF,eACAC,cAAAvF,GAAAsF,eAEAtF,GAAAwF,WAAAxF,GAAAyF,aAAAJ,cACArF,GAAA0F,WAAA1F,GAAAyF,aAAAP,SAAAlF,GAAA2F,aAEA3F,GAAAwF,WAAAxF,GAAA4F,qBAAAL,eACAvF,GAAA0F,WAAA1F,GAAA4F,qBAAAT,MAAAnF,GAAA2F,aAEAvB,QAAA4C,gBAEA1+B,YACAojC,SAAA1L,GAAAkH,kBAAA9C,QAAA,YACA+C,GAAAnH,GAAAkH,kBAAA9C,QAAA,OAGAgD,UACAuE,SAAA3L,GAAAyE,mBAAAL,QAAA,YACAwH,QAAA5L,GAAAyE,mBAAAL,QAAA,WAEAsD,SAAA1H,GAAAyE,mBAAAL,QAAA,YACAqD,MAAAzH,GAAAyE,mBAAAL,QAAA,SAEAoD,MAAAxH,GAAAyE,mBAAAL,QAAA,SACAj5B,IAAA60B,GAAAyE,mBAAAL,QAAA,OACAmD,QAAAvH,GAAAyE,mBAAAL,QAAA,WAEAyH,gBAAA7L,GAAAyE,mBAAAL,QAAA,mBACAyF,iBAAA7J,GAAAyE,mBAAAL,QAAA,oBAEA0H,QAAA9L,GAAAyE,mBAAAL,QAAA,WACA2H,WAAA/L,GAAAyE,mBAAAL,QAAA,cACA4H,QAAAhM,GAAAyE,mBAAAL,QAAA,WACA6H,OAAAjM,GAAAyE,mBAAAL,QAAA,UACA8H,SAAAlM,GAAAyE,mBAAAL,QAAA,YAEA+H,UAAAnM,GAAAyE,mBAAAL,QAAA,aAGA,IAAAmH,QAAArvC,SAAAkwC,gBAAA,+BAAA,SACAb,QAAA1rC,MAAA,EACA0rC,OAAA9N,OAAA,CAEA,IAAA4O,SAAAd,OAAAe,WAAA,KACAD,SAAAE,UAAA,QACAF,QAAAG,SAAA,EAAA,EAAA,EAAA,GAEA1O,QAAA,GAAAwN,eAAAC,QAgKA,QAAAvE,iBAEA,GAAA5C,SAAApE,GAAAgH,gBAEAF,aAAA9G,GAAA4H,aAAA5H,GAAA8H,eACAf,eAAA/G,GAAA4H,aAAA5H,GAAA6H,gBAsGA,OApGA7H,IAAAgI,aAAAlB,cAEA,aAAA7B,aAAA8C,UAAA,UAEA,qCAEA,gCACA,iCACA,0BACA,sBACA,yBACA,wBAEA,2BACA,qBAEA,oBAEA,gBAEA,iCAEA,2CAEA,wBACA,iGACA,iGAEA,sBAEA,gEACA,uCACA,oDAEA,+BAEA,KAEA92B,KAAA,OAEA+uB,GAAAgI,aAAAjB,gBAEA,aAAA9B,aAAA8C,UAAA,UAEA,qCAEA,sBACA,yBACA,yBAEA,uBACA,yBACA,4BACA,yBACA,wBACA,2BAEA,oBAEA,gBAEA,wCAEA,wCAEA,mEAEA,uBAEA,iDACA,yBAEA,wBAEA,oDAEA,WAEA,+BACA,wEACA,kDAEA,IAEA,mFAEA,IAEA,KAEA92B,KAAA,OAEA+uB,GAAAiI,cAAAnB,cACA9G,GAAAiI,cAAAlB,gBAEA/G,GAAAkI,aAAA9D,QAAA0C,cACA9G,GAAAkI,aAAA9D,QAAA2C,gBAEA/G,GAAAmI,YAAA/D,SAEAA,QAIA,QAAAqI,mBAAAlhC,EAAAC,GAEA,MAAAD,GAAAmhC,cAAAlhC,EAAAkhC,YAEAnhC,EAAAmhC,YAAAlhC,EAAAkhC,YAEAnhC,EAAAgyB,IAAA/xB,EAAA+xB,EAEA/xB,EAAA+xB,EAAAhyB,EAAAgyB,EAIA/xB,EAAA43B,GAAA73B,EAAA63B,GAnWA,GAAAiC,cAAAE,cACAnB,QAAA97B,WAAA8+B,SAEAtJ,QAIA6O,eAAA,GAAAlO,SACAmO,eAAA,GAAAvO,YACAwO,YAAA,GAAApO,QAmEA99B,MAAAynC,OAAA,SAAA0E,QAAAxE,MAAAC,QAEA,GAAA,IAAAuE,QAAAvsC,OAAA,KAIAuN,KAAAs2B,SAEAj7B,OAIA47B,MAAA+D,WAAA1E,SAEAW,MAAAgE,iBACAhE,MAAAiE,gBAAA1gC,WAAAojC,UACA3G,MAAAiE,gBAAA1gC,WAAA6+B,IACApC,MAAAkE,0BAEAlE,MAAAqE,QAAApJ,GAAAqJ,WACAtE,MAAAsF,OAAArK,GAAAoK,OAEApK,GAAAwF,WAAAxF,GAAAyF,aAAAJ,cACArF,GAAAkJ,oBAAA5gC,WAAAojC,SAAA,EAAA1L,GAAAmJ,OAAA,EAAA,GAAA,GACAnJ,GAAAkJ,oBAAA5gC,WAAA6+B,GAAA,EAAAnH,GAAAmJ,OAAA,EAAA,GAAA,GAEAnJ,GAAAwF,WAAAxF,GAAA4F,qBAAAL,eAEAvF,GAAAsB,iBAAA8F,SAAAyC,kBAAA,EAAAtB,OAAAsB,iBAAAvqC,UAEAylC,MAAAiF,cAAAhK,GAAAiK,UACAjK,GAAAK,UAAA+G,SAAAj8B,IAAA,EAEA,IAAA4hC,YAAA,EACAC,aAAA,EACAC,IAAA3E,MAAA2E,GAEAA,MAEAjN,GAAAU,UAAA0G,SAAA8E,SAAAe,IAAAzF,MAAAjI,EAAA0N,IAAAzF,MAAA7G,EAAAsM,IAAAzF,MAAAh8B,GAEAyhC,IAAAC,OAEAlN,GAAAE,UAAAkH,SAAA4E,QAAAiB,IAAAE,MACAnN,GAAAE,UAAAkH,SAAA6E,OAAAgB,IAAAG,KAEApN,GAAAK,UAAA+G,SAAA0E,QAAA,GACAiB,WAAA,EACAC,aAAA,GAEAC,IAAAI,YAEArN,GAAAE,UAAAkH,SAAA2E,WAAAkB,IAAAK,SAEAtN,GAAAK,UAAA+G,SAAA0E,QAAA,GACAiB,WAAA,EACAC,aAAA,KAMAhN,GAAAK,UAAA+G,SAAA0E,QAAA,GACAiB,WAAA,EACAC,aAAA,EAOA,KAAA,GAAAvoC,GAAA,EAAA4f,EAAAyoB,QAAAvsC,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAsmC,QAAA+B,QAAAroC,EAEAsmC,QAAAc,gBAAA0B,iBAAAhF,OAAAqB,mBAAAmB,OAAArB,aACAqB,OAAAxN,GAAAwN,OAAAc,gBAAAvsC,SAAA,IAIAwtC,QAAAx4B,KAAAm4B,kBAMA,KAAA,GAFAhF,UAEAhjC,EAAA,EAAA4f,EAAAyoB,QAAAvsC,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAsmC,QAAA+B,QAAAroC,GACA+oC,SAAAzC,OAAAyC,QAEA,KAAA,IAAAA,SAAAzpC,QAAA,CAEAgnC,OAAA0C,eAAA9N,SAAA2I,MAAAC,WAAAz6B,GAAA0/B,aAAA1/B,IAEAkyB,GAAAE,UAAAkH,SAAA+E,UAAAqB,SAAArB,WACAnM,GAAAsB,iBAAA8F,SAAAyE,iBAAA,EAAAd,OAAAc,gBAAAvsC,UAEAyrC,OAAArB,YAAAgE,UAAAf,eAAAC,eAAAC,aAEApF,MAAA,GAAAoF,YAAA10B,EACAsvB,MAAA,GAAAoF,YAAAjyB,CAEA,IAAAkxB,SAAA,CAEAxD,OAAA2E,KAAAO,SAAAP,MAEAnB,QAAAkB,cAIAD,aAAAjB,UAEA9L,GAAAK,UAAA+G,SAAA0E,QAAAA,SACAiB,WAAAjB,SAIA,OAAA0B,SAAAriC,KAEA60B,GAAAQ,UAAA4G,SAAAuE,SAAA6B,SAAAriC,IAAA2e,OAAA3R,EAAAq1B,SAAAriC,IAAA2e,OAAAlP,GACAolB,GAAAQ,UAAA4G,SAAAwE,QAAA4B,SAAAriC,IAAA4xB,OAAA5kB,EAAAq1B,SAAAriC,IAAA4xB,OAAAniB,KAIAolB,GAAAQ,UAAA4G,SAAAuE,SAAA,EAAA,GACA3L,GAAAQ,UAAA4G,SAAAwE,QAAA,EAAA,IAIA5L,GAAAE,UAAAkH,SAAAG,QAAAiG,SAAAjG,SACAvH,GAAAU,UAAA0G,SAAAI,MAAAgG,SAAAhG,MAAAjI,EAAAiO,SAAAhG,MAAA7G,EAAA6M,SAAAhG,MAAAh8B,GAEAw0B,GAAAE,UAAAkH,SAAAM,SAAA8F,SAAA9F,UACA1H,GAAAO,WAAA6G,SAAAK,MAAAA,OAEA1C,MAAAiG,YAAAwC,SAAAvC,SAAAuC,SAAAtC,cAAAsC,SAAArC,SAAAqC,SAAApC,SAAAoC,SAAAG,mBAAAH,SAAAI,cAAAJ,SAAAK,cAAAL,SAAAM,oBACA/I,MAAAuE,QAAAC,MAAAwE,QAAAP,SAAAQ,WACAjJ,MAAAuE,QAAAC,MAAAC,QAAAgE,SAAAS,YAEAjJ,SAAAvD,aAAA+L,SAAAriC,KAAA2yB,QAAA,GAEAkC,GAAAuK,aAAAvK,GAAAwK,UAAA,EAAAxK,GAAAyK,eAAA,GAEAM,OAAAmD,cAAAvO,SAAA2I,MAAAC,WAAAz6B,GAAA0/B,aAAA1/B,KAMAi3B,MAAAsF,OAAArK,GAAAqJ,WAEAtE,MAAAsG,UA8IA,QAAA8C,YAEA3jC,OAAA0xB,eAAAv7B,KAAA,MAAAkP,MAAAu+B,eAEAztC,KAAAy7B,KAAAC,MAAAC,eAEA37B,KAAApC,KAAA,GACAoC,KAAAo7B,KAAA,WAEAp7B,KAAAssC,KAAA,EACAtsC,KAAA0tC,QAAA,EAEA1tC,KAAAsqC,SAAAqD,eACA3tC,KAAA4tC,KAAAC,UACA7tC,KAAA8tC,aAAA,EACA9tC,KAAA+tC,aAAAC,SAEAhuC,KAAA4mC,QAAA,EACA5mC,KAAAiuC,aAAA,EAEAjuC,KAAAwqC,SAAA0D,eACAluC,KAAAyqC,SAAA0D,uBACAnuC,KAAAuqC,cAAA6D,YACApuC,KAAAitC,cAAA,KACAjtC,KAAAktC,cAAA,KACAltC,KAAAgtC,mBAAA,KAEAhtC,KAAAquC,UAAAC,eACAtuC,KAAAqtC,WAAA,EACArtC,KAAAstC,YAAA,EAEAttC,KAAAuuC,eAAA,KACAvuC,KAAAwuC,kBAAA,EACAxuC,KAAAyuC,aAAA,EAEAzuC,KAAA0uC,YAAA,EAEA1uC,KAAAonC,UAAA,KAEApnC,KAAA2uC,eAAA,EACA3uC,KAAA4uC,oBAAA,EACA5uC,KAAA6uC,mBAAA,EAEA7uC,KAAA8uC,WAAA,EAEA9uC,KAAAwrC,UAAA,EACAxrC,KAAAmtC,oBAAA,EAEAntC,KAAA+uC,SAAA,EAEA/uC,KAAAoD,SAAA,EAEApD,KAAAgvC,YAEAhvC,KAAA6qC,aAAA,EAqTA,QAAAoE,gBAAAC,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,iBAEAp7B,KAAAmvC,WACAnvC,KAAAymC,YAEAzmC,KAAAmmC,aAAA,gGACAnmC,KAAAomC,eAAA,iEAEApmC,KAAAovC,UAAA,EAEApvC,KAAAqvC,WAAA,EACArvC,KAAAsvC,mBAAA,EAEAtvC,KAAAssC,KAAA,EACAtsC,KAAA0tC,QAAA,EACA1tC,KAAAuvC,UAAA,EAEAvvC,KAAAwvC,UAAA,EACAxvC,KAAAyvC,cAAA,EACAzvC,KAAA0vC,cAAA,EAEA1vC,KAAA2vC,YACAC,aAAA,EACAC,WAAA,EACAC,aAAA,EACAC,kBAAA,GAKA/vC,KAAAgwC,wBACAnJ,OAAA,EAAA,EAAA,GACAL,IAAA,EAAA,GACAyJ,KAAA,EAAA,IAGAjwC,KAAAkwC,wBAAA/iC,OAEAA,KAAA+hC,iBAEA/hC,KAAA+hC,WAAAvnC,YAEAoI,QAAAiuB,MAAA,2FAIAh+B,KAAAmwC,UAAAjB,aA0EA,QAAAkB,mBAAAlB,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,oBAEAp7B,KAAAqwC,aAAAC,kBAEAtwC,KAAAwvC,UAAA,EACAxvC,KAAAyvC,cAAA,EAEAzvC,KAAAwK,IAAA,KAEAxK,KAAAuwC,SAAA,KAEAvwC,KAAAwwC,gBAAA,KACAxwC,KAAAywC,kBAAA,EACAzwC,KAAA0wC,iBAAA,EAEA1wC,KAAAqvC,WAAA,EACArvC,KAAAsvC,mBAAA,EAEAtvC,KAAAssC,KAAA,EACAtsC,KAAA0tC,QAAA,EAEA1tC,KAAAmwC,UAAAjB,YAwDA,QAAAyB,sBAAAzB,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,uBAEAp7B,KAAA4wC,kBAAA,GAAA9S,SACA99B,KAAA6wC,aAAA,EACA7wC,KAAA8wC,YAAA,IAEA9wC,KAAAwvC,UAAA,EACAxvC,KAAAyvC,cAAA,EAEAzvC,KAAAwK,IAAA,KAEAxK,KAAAuwC,SAAA,KAEAvwC,KAAAwwC,gBAAA,KACAxwC,KAAAywC,kBAAA,EACAzwC,KAAA0wC,iBAAA,EAEA1wC,KAAAssC,KAAA,EACAtsC,KAAA0tC,QAAA,EAEA1tC,KAAAmwC,UAAAjB,YAqCA,QAAA6B,MAAAvhC,IAAA0E,KAEAlU,KAAAwP,QAAArC,KAAAqC,IAAAA,IAAA,GAAAsuB,SAAAoG,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACAlkC,KAAAkU,QAAA/G,KAAA+G,IAAAA,IAAA,GAAA4pB,UAAAoG,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GA6dA,QAAA8M,QAAAC,OAAAC,QAEAlxC,KAAAixC,WAAA9jC,KAAA8jC,OAAAA,OAAA,GAAAnT,SACA99B,KAAAkxC,WAAA/jC,KAAA+jC,OAAAA,OAAA,EAoKA,QAAAC,WAEAnxC,KAAArB,UAEA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,EAAA,GAIAsB,UAAAL,OAAA,GAEAmQ,QAAAiuB,MAAA,iFAwTA,QAAAoT,OAAAC,OAAAC,UAIAtxC,KAAAqxC,WAAAlkC,KAAAkkC,OAAAA,OAAA,GAAAvT,SAAA,EAAA,EAAA,GACA99B,KAAAsxC,aAAAnkC,KAAAmkC,SAAAA,SAAA,EA8NA,QAAAC,SAAAC,GAAAz7B,GAAAC,GAAAC,GAAAC,GAAAu7B,IAEAzxC,KAAA0xC,YAEAvkC,KAAAqkC,GAAAA,GAAA,GAAAJ,WACAjkC,KAAA4I,GAAAA,GAAA,GAAAq7B,WACAjkC,KAAA6I,GAAAA,GAAA,GAAAo7B,WACAjkC,KAAA8I,GAAAA,GAAA,GAAAm7B,WACAjkC,KAAA+I,GAAAA,GAAA,GAAAk7B,WACAjkC,KAAAskC,GAAAA,GAAA,GAAAL,QAyLA,QAAAO,gBAAAC,UAAAC,SAAAC,gBAwPA,QAAAC,kBAAAC,OAAAnF,SAAAoF,aAAAC,mBAAAC,iBAAAC,iBAEA,GAAAC,UAAAL,OAAAK,SAEAxtB,OAAA,KAEAytB,iBAAAC,gBACAC,eAAAR,OAAAS,mBASA,IAPAR,eAEAK,iBAAAI,mBACAF,eAAAR,OAAAW,wBAIAH,eAmCA3tB,OAAA2tB,mBAnCA,CAEA,GAAAI,cAAA,CAEA/F,UAAA4C,eAEA4C,UAAAA,SAAAQ,iBAEAD,YAAAP,SAAAS,iBAAAT,SAAAS,gBAAA/H,UAAAsH,SAAAS,gBAAA/H,SAAAnrC,OAAA,EAEAyyC,UAAAA,SAAAU,aAEAH,YAAAP,SAAA5C,cAAA4C,SAAA5C,aAAA7vC,OAAA,IAMAoyC,OAAAgB,gBAAA,IAAAnG,SAAA2C,UAEAz/B,QAAAH,KAAA,+EAAAoiC,OAIA,IAAAiB,aAAAjB,OAAAgB,eAAAnG,SAAA2C,SAEA0D,aAAA,CAEAN,eAAAM,cAAAC,eACAF,cAAAC,cAAAE,eAEAvuB,OAAAytB,iBAAAY,cAQA,GAAAtB,UAAAyB,uBACA,IAAAxG,SAAA4B,aACA,IAAA5B,SAAA0B,eAAA3uC,OAAA,CAKA,GAAA0zC,MAAAzuB,OAAA4W,KAAA8X,KAAA1G,SAAApR,KAEA+X,oBAAAC,eAAAH,UAEAnmC,KAAAqmC,sBAEAA,uBACAC,eAAAH,MAAAE,oBAIA,IAAAE,gBAAAF,oBAAAD,UAEApmC,KAAAumC,iBAEAA,eAAA7uB,OAAAkF,QACAypB,oBAAAD,MAAAG,gBAIA7uB,OAAA6uB,eAIA7uB,OAAAzhB,QAAAypC,SAAAzpC,QACAyhB,OAAAwqB,UAAAxC,SAAAwC,SAEA,IAAAzB,MAAAf,SAAAe,IAgCA,OA9BA+F,OAAAC,mBAAAhG,MAAAiG,aAEAjG,KAAAC,WAIA8F,MAAAG,qBAEAlG,OAAAC,UAAAD,KAAAmG,SACAnG,OAAAmG,WAAAnG,KAAAC,YAIAhpB,OAAA+oB,KAAAA,KAEA/oB,OAAA4pB,YAAA5B,SAAA4B,YACA5pB,OAAA0pB,eAAA1B,SAAA0B,eACA1pB,OAAA2pB,iBAAA3B,SAAA2B,iBAEA3pB,OAAAyqB,mBAAAzC,SAAAyC,mBACAzqB,OAAAuqB,UAAAvC,SAAAuC,UAEA6C,cAAAptB,OAAAmvB,yBAEAnvB,OAAA+rB,kBAAAzH,KAAA+I,oBACArtB,OAAAgsB,aAAAsB,iBACAttB,OAAAisB,YAAAsB,iBAIAvtB,OAIA,QAAAovB,cAAAjC,OAAApK,OAAAsM,aAAAjC,cAEA,IAAA,IAAAD,OAAA5uC,QAAA,CAIA,GAFA4uC,OAAAmC,OAAAt3C,KAAA+qC,OAAAuM,UAEAnC,OAAAoC,QAAApC,OAAAqC,QAAArC,OAAAsC,WAEAtC,OAAAuC,cAAAvC,OAAAwC,eAAAC,SAAAC,iBAAA1C,SAAA,CAEAA,OAAA9G,gBAAA0B,iBAAAsH,aAAAjL,mBAAA+I,OAAAjJ,YAEA,IAAAsJ,UAAAR,SAAA8C,OAAA3C,QACAnF,SAAAmF,OAAAnF,QAEA,IAAAtwC,MAAAoN,QAAAkjC,UAIA,IAAA,GAFA+H,QAAAvC,SAAAuC,OAEAzqC,EAAA,EAAA0qC,GAAAD,OAAAh1C,OAAAuK,EAAA0qC,GAAA1qC,IAAA,CAEA,GAAA2qC,OAAAF,OAAAzqC,GACA4qC,cAAAlI,SAAAiI,MAAAE,cAEA,IAAAD,eAAAA,cAAA3xC,QAAA,CAEA,GAAA6xC,eAAAlD,iBAAAC,OAAA+C,cAAA9C,aAAAiD,oBAAAhB,aAAA1H,KAAA0H,aAAAzH,IACAmF,WAAAuD,mBAAAjB,aAAA,KAAA7B,SAAA4C,cAAAjD,OAAA8C,YAMA,IAAAjI,SAAAzpC,QAAA,CAEA,GAAA6xC,eAAAlD,iBAAAC,OAAAnF,SAAAoF,aAAAiD,oBAAAhB,aAAA1H,KAAA0H,aAAAzH,IACAmF,WAAAuD,mBAAAjB,aAAA,KAAA7B,SAAA4C,cAAAjD,OAAA,OAUA,IAAA,GAFAoD,UAAApD,OAAAoD,SAEAtxC,EAAA,EAAA4f,EAAA0xB,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAEAmwC,aAAAmB,SAAAtxC,GAAA8jC,OAAAsM,aAAAjC,eA/XA,IAAA,GApCAwC,UAAA,GAAAlD,SACA8D,kBAAA,GAAAtX,SAEAuX,eAAA,GAAA1a,SACA2a,kBAAA,GAAA3a,SAAAkX,eAAAA,gBAEA0D,YAAA,GAAA1X,SACAoX,oBAAA,GAAApX,SAEAqV,cAAA,EACAC,cAAA,EAEAqC,0BAAA,GAAAtC,cAAAC,eAEAb,gBAAA,GAAAh2C,OAAAk5C,2BACA/C,mBAAA,GAAAn2C,OAAAk5C,2BAEAhC,kBAEAiC,gBACA,GAAA5X,SAAA,EAAA,EAAA,GAAA,GAAAA,UAAA,EAAA,EAAA,GAAA,GAAAA,SAAA,EAAA,EAAA,GACA,GAAAA,SAAA,EAAA,GAAA,GAAA,GAAAA,SAAA,EAAA,EAAA,GAAA,GAAAA,SAAA,GAAA,EAAA,IAGA6X,SACA,GAAA7X,SAAA,EAAA,EAAA,GAAA,GAAAA,SAAA,EAAA,EAAA,GAAA,GAAAA,SAAA,EAAA,EAAA,GACA,GAAAA,SAAA,EAAA,EAAA,GAAA,GAAAA,SAAA,EAAA,EAAA,GAAA,GAAAA,SAAA,EAAA,GAAA,IAGA8X,iBACA,GAAAjZ,SAAA,GAAAA,SAAA,GAAAA,SACA,GAAAA,SAAA,GAAAA,SAAA,GAAAA,UAKA74B,EAAA,EAAAA,IAAA2xC,4BAAA3xC,EAAA,CAEA,GAAA8uC,aAAA,IAAA9uC,EAAAqvC,eACAF,YAAA,IAAAnvC,EAAAsvC,eAEA6B,cAAA,GAAA7E,oBAEAC,aAAAwF,iBAEApG,aAAAmD,YACApD,SAAAyD,aAIAV,iBAAAzuC,GAAAmxC,aAIA,IAAAa,kBAAA,GAAAnF,uBAEAlB,aAAAmD,YACApD,SAAAyD,aAIAP,oBAAA5uC,GAAAgyC,iBAMA,GAAAnC,OAAA3zC,IAEAA,MAAA+1C,SAAA,EAEA/1C,KAAAg2C,YAAA,EACAh2C,KAAA6qC,aAAA,EAEA7qC,KAAAo7B,KAAA6a,aAEAj2C,KAAA8zC,oBAAA,EACA9zC,KAAA4zC,mBAAA,EAEA5zC,KAAAynC,OAAA,SAAAiG,OAAA/F,MAAAC,QAEA,IAAA,IAAA+L,MAAAoC,WACA,IAAApC,MAAAqC,aAAA,IAAArC,MAAA9I,cAEA,IAAA6C,OAAA9tC,OAAA,CAGA,GAAAs2C,KAAAtE,UAAAlG,QACAyK,OAAAvE,UAAAxN,KAGA+R,QAAA1N,QAAAyN,IAAAzM,OACA0M,OAAAxN,QAAA9B,MAAAuP,SAAA,EAAA,EAAA,EAAA,GACAD,OAAAxN,QAAAC,MAAAwE,SAAA,GACA+I,OAAAE,gBAAA,EAMA,KAAA,GAFAC,WAEAxyC,EAAA,EAAAyyC,GAAA7I,OAAA9tC,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAA0yC,OAAA9I,OAAA5pC,GACA2yC,OAAAD,MAAAC,OACAxE,aAAAuE,OAAAA,MAAAvE,YAEA,QAAA9kC,KAAAspC,OAAA,CAOA,GAAAvC,cAAAuC,OAAA7O,MAKA,IAHA0N,eAAAnM,KAAAsN,OAAAC,SACApB,eAAA9lC,IAAA+lC,mBAEAtD,aAAA,CAEA,GAAA0E,SAAArB,eAAA99B,EACAo/B,SAAAtB,eAAAr7B,CAgBA27B,iBAAA,GAAA/kC,IAAA,EAAA8lC,QAAAC,SAAAD,QAAAC,UAEAhB,gBAAA,GAAA/kC,IAAA,EAAA+lC,SAAAD,QAAAC,UAEAhB,gBAAA,GAAA/kC,IAAA,EAAA8lC,QAAAC,SAAAD,QAAAC,UAEAhB,gBAAA,GAAA/kC,IAAA8lC,QAAAC,SAAAD,QAAAC,UAEAhB,gBAAA,GAAA/kC,IAAA,EAAA8lC,QAAA,EAAAA,QAAAC,UAEAhB,gBAAA,GAAA/kC,IAAA8lC,QAAA,EAAAA,QAAAC,UAEAtB,eAAA99B,GAAA,EACA89B,eAAAr7B,GAAA,EAIA,GAAA,OAAAw8B,OAAAjsC,IAAA,CAEA,GAAAqsC,OAAA1b,UAAA+C,cAAAhD,UAAAgD,cAAAjzB,OAAAixB,WAEAua,QAAAjsC,IAAA,GAAAqyB,mBAAAyY,eAAA99B,EAAA89B,eAAAr7B,EAAA48B,MACAJ,OAAAjsC,IAAA2yB,QAAAv/B,KAAA44C,MAAA54C,KAAA,aAEAs2C,aAAA4C,yBAIAL,OAAAM,mBAEAN,OAAA9B,OAAA6B,MAIA,IAAAQ,WAAAP,OAAAjsC,IACAysC,aAAAR,OAAAS,MAEAhC,qBAAAiC,sBAAAX,MAAAzN;8DACAmL,aAAAnJ,SAAA5B,KAAA+L,qBAEAjD,cAEAqE,UAAA,EAKAW,aAAAG,iBAAAlC,oBAAA19B,GAAA09B,oBAAAj7B,GAAAi7B,oBAAAtY,KAIA0Z,UAAA,EAEAd,YAAA2B,sBAAAX,MAAAxzC,OAAA+lC,aACAmL,aAAAmD,OAAA7B,aACAtB,aAAAoD,oBAIAL,aAAApmC,IACA,GAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,EAAA,GAGAomC,aAAAM,SAAArD,aAAAhL,kBACA+N,aAAAM,SAAArD,aAAAjL,qBAIA2I,UAAA4F,gBAAAR,WACApF,UAAA6F,OAKA,KAAA,GAAAC,MAAA,EAAAA,KAAApB,UAAAoB,OAAA,CAEA,GAAAzF,aAAA,CAEAuD,YAAArM,KAAA+K,aAAAnJ,UACAyK,YAAAj4C,IAAAm4C,eAAAgC,OACAxD,aAAAyD,GAAAxO,KAAAwM,QAAA+B,OACAxD,aAAAmD,OAAA7B,aACAtB,aAAAoD,mBAEA,IAAAM,cAAAhC,gBAAA8B,KACAvB,QAAAjZ,SAAA0a,cAMAvC,kBAAAzI,iBAAAsH,aAAAhL,iBAAAgL,aAAAjL,oBACAwL,SAAAoD,cAAAxC,mBAIApB,aAAAtM,MAAAC,OAAAsM,aAAAjC,mBAhIAliC,SAAAH,KAAA,wBAAA4mC,MAAA,kBAsIA7C,MAAA9I,aAAA,IA6LA,QAAAiN,iBAAAzY,IAIA,QAAAsF,cAAAoT,UAAAC,YAEA,GAAAnjC,OAAAkjC,UAAAljC,MACAojC,MAAAF,UAAAG,QAAA7Y,GAAA8Y,aAAA9Y,GAAA2F,YAEAoT,OAAA/Y,GAAAsF,cAEAtF,IAAAwF,WAAAmT,WAAAI,QACA/Y,GAAA0F,WAAAiT,WAAAnjC,MAAAojC,OAEAF,UAAAM,kBAEA,IAAAjd,MAAAiE,GAAAmJ,KAoCA,OAlCA3zB,iBAAAiqB,cAEA1D,KAAAiE,GAAAmJ,MAEA3zB,gBAAAyjC,cAEAvoC,QAAAH,KAAA,wEAEAiF,gBAAA4vB,aAEArJ,KAAAiE,GAAAyK,eAEAj1B,gBAAA0jC,YAEAnd,KAAAiE,GAAAmZ,MAEA3jC,gBAAA4jC,aAEArd,KAAAiE,GAAAqZ,aAEA7jC,gBAAAqqB,YAEA9D,KAAAiE,GAAAsZ,IAEA9jC,gBAAA+jC,WAEAxd,KAAAiE,GAAAwZ,KAEAhkC,gBAAAikC,cAEA1d,KAAAiE,GAAAoG,gBAKA2S,OAAAA,OACAhd,KAAAA,KACA2d,gBAAAlkC,MAAAmkC,kBACA/e,QAAA8d,UAAA9d,SAKA,QAAAgf,cAAAb,OAAAL,UAAAC,YAEA,GAAAnjC,OAAAkjC,UAAAljC,MACAqkC,YAAAnB,UAAAmB,WAEA7Z,IAAAwF,WAAAmT,WAAAI,SAEA,IAAAL,UAAAG,QAEA7Y,GAAA0F,WAAAiT,WAAAnjC,MAAAwqB,GAAA2F,cAEA,IAAAkU,YAAAC,MAIA9Z,GAAA+Z,cAAApB,WAAA,EAAAnjC,OAEA,IAAAqkC,YAAAC,MAEAppC,QAAAiuB,MAAA,4KAIAqB,GAAA+Z,cAAApB,WAAAkB,YAAA/vB,OAAAtU,MAAAmkC,kBACAnkC,MAAAwkC,SAAAH,YAAA/vB,OAAA+vB,YAAA/vB,OAAA+vB,YAAAC,QAEAD,YAAAC,OAAA,GAQA,QAAAniC,KAAA+gC,WAIA,MAFAA,WAAAuB,+BAAAvB,UAAAA,UAAAx3B,MAEAooB,QAAAoP,UAAAtc,MAIA,QAAA8d,QAAAxB,WAEAA,UAAAuB,+BAAAvB,UAAAA,UAAAx3B,KAEA,IAAAA,MAAAooB,QAAAoP,UAAAtc,KAEAlb,QAEA8e,GAAAma,aAAAj5B,KAAA63B,cAEAzP,SAAAoP,UAAAtc,OAMA,QAAAkZ,QAAAoD,UAAAC,YAEAD,UAAAuB,+BAAAvB,UAAAA,UAAAx3B,KAEA,IAAAA,MAAAooB,QAAAoP,UAAAtc,UAEAtuB,KAAAoT,KAEAooB,QAAAoP,UAAAtc,MAAAkJ,aAAAoT,UAAAC,YAEAz3B,KAAA0Z,QAAA8d,UAAA9d,UAEAgf,aAAA14B,KAAA63B,OAAAL,UAAAC,YAEAz3B,KAAA0Z,QAAA8d,UAAA9d,SAnIA,GAAA0O,WAyIA,QAEA3xB,IAAAA,IACAuiC,OAAAA,OACA5E,OAAAA,QAYA,QAAA8E,OAAAjiC,EAAAyC,EAAA2iB,EAAA8c,OAEA15C,KAAA29B,GAAAnmB,GAAA,EACAxX,KAAA49B,GAAA3jB,GAAA,EACAja,KAAA69B,GAAAjB,GAAA,EACA58B,KAAA25C,OAAAD,OAAAD,MAAAG,aAkVA,QAAAC,UAEA75C,KAAA85C,KAAA,EAgDA,QAAAC,YAmBA,QAAAC,oBAEAC,WAAAC,aAAAnT,UAAA,GAIA,QAAAoT,sBAEApT,SAAAqT,kBAAAH,eAAA9sC,IAAA,GAzBAtD,OAAA0xB,eAAAv7B,KAAA,MAAAkP,MAAAmrC,eAEAr6C,KAAAy7B,KAAAC,MAAAC,eAEA37B,KAAApC,KAAA,GACAoC,KAAAo7B,KAAA,WAEAp7B,KAAAf,OAAA,KACAe,KAAAo1C,YAEAp1C,KAAA23C,GAAAoC,SAAAO,UAAAvwB,OAEA,IAAAghB,UAAA,GAAAjN,SACAiJ,SAAA,GAAA0S,OACAQ,WAAA,GAAAvc,YACAoJ,MAAA,GAAAhJ,SAAA,EAAA,EAAA,EAcAiJ,UAAAwT,SAAAP,kBACAC,WAAAM,SAAAJ,oBAEAtwC,OAAA2wC,iBAAAx6C,MACA+qC,UACA0P,YAAA,EACAvrC,MAAA67B,UAEAhE,UACA0T,YAAA,EACAvrC,MAAA63B,UAEAkT,YACAQ,YAAA,EACAvrC,MAAA+qC,YAEAnT,OACA2T,YAAA,EACAvrC,MAAA43B,OAEAoE,iBACAh8B,MAAA,GAAA6uB,UAEA2c,cACAxrC,MAAA,GAAAiiC,YAIAnxC,KAAAk3C,OAAA,GAAAnZ,SACA/9B,KAAA+oC,YAAA,GAAAhL,SAEA/9B,KAAA26C,iBAAAZ,SAAAa,wBACA56C,KAAA66C,wBAAA,EAEA76C,KAAAm0C,OAAA,GAAA0F,QACA75C,KAAAoD,SAAA,EAEApD,KAAAu0C,YAAA,EACAv0C,KAAA86C,eAAA,EAEA96C,KAAAw0C,eAAA,EACAx0C,KAAA+rC,YAAA,EAEA/rC,KAAAgvC,YAwqBA,QAAA+L,UAEAhB,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,SAEAp7B,KAAAipC,mBAAA,GAAAlL,SACA/9B,KAAAkpC,iBAAA,GAAAnL,SA0DA,QAAAid,oBAAAx3C,KAAAC,MAAAC,IAAAC,OAAA6oC,KAAAC,KAEAsO,OAAAn0C,KAAA5G,MAEAA,KAAAo7B,KAAA,qBAEAp7B,KAAAi7C,KAAA,EACAj7C,KAAAk7C,KAAA,KAEAl7C,KAAAwD,KAAAA,KACAxD,KAAAyD,MAAAA,MACAzD,KAAA0D,IAAAA,IACA1D,KAAA2D,OAAAA,OAEA3D,KAAAwsC,SAAAr/B,KAAAq/B,KAAAA,KAAA,GACAxsC,KAAAysC,QAAAt/B,KAAAs/B,IAAAA,IAAA,IAEAzsC,KAAA82C,yBA2GA,QAAAqE,mBAAAC,IAAAC,OAAA7O,KAAAC,KAEAsO,OAAAn0C,KAAA5G,MAEAA,KAAAo7B,KAAA,oBAEAp7B,KAAAo7C,QAAAjuC,KAAAiuC,IAAAA,IAAA,GACAp7C,KAAAi7C,KAAA,EAEAj7C,KAAAwsC,SAAAr/B,KAAAq/B,KAAAA,KAAA,GACAxsC,KAAAysC,QAAAt/B,KAAAs/B,IAAAA,IAAA,IACAzsC,KAAAs7C,MAAA,GAEAt7C,KAAAq7C,WAAAluC,KAAAkuC,OAAAA,OAAA,EACAr7C,KAAAk7C,KAAA,KAEAl7C,KAAAu7C,UAAA,GACAv7C,KAAAw7C,WAAA,EAEAx7C,KAAA82C,yBAsMA,QAAA2E,OAAA7wC,EAAAC,EAAAkX,EAAAsvB,OAAAxK,MAAAmO,eAEAh1C,KAAA4K,EAAAA,EACA5K,KAAA6K,EAAAA,EACA7K,KAAA+hB,EAAAA,EAEA/hB,KAAAqxC,OAAAA,QAAAA,OAAAqK,UAAArK,OAAA,GAAAvT,SACA99B,KAAA27C,cAAAp/C,MAAAoN,QAAA0nC,QAAAA,UAEArxC,KAAA6mC,MAAAA,OAAAA,MAAA+U,QAAA/U,MAAA,GAAA9C,OACA/jC,KAAA+tC,aAAAxxC,MAAAoN,QAAAk9B,OAAAA,SAEA7mC,KAAAg1C,kBAAA7nC,KAAA6nC,cAAAA,cAAA,EAmDA,QAAA6G,mBAAA,MAAA1C,SAEA,QAAA2C,YAEAjyC,OAAA0xB,eAAAv7B,KAAA,MAAAkP,MAAA2sC,oBAEA77C,KAAAy7B,KAAAC,MAAAC,eAEA37B,KAAApC,KAAA,GACAoC,KAAAo7B,KAAA,WAEAp7B,KAAAukC,YACAvkC,KAAA+7C,UACA/7C,KAAAwkC,SACAxkC,KAAAg8C,mBAEAh8C,KAAAyvC,gBACAzvC,KAAA0vC,gBAEA1vC,KAAAi8C,eACAj8C,KAAAk8C,eAEAl8C,KAAAm8C,iBAEAn8C,KAAAo8C,YAAA,KACAp8C,KAAAq8C,eAAA,KAIAr8C,KAAAs8C,oBAAA,EACAt8C,KAAAu8C,oBAAA,EACAv8C,KAAAw8C,eAAA,EACAx8C,KAAAy8C,mBAAA,EACAz8C,KAAA08C,kBAAA,EACA18C,KAAA28C,yBAAA,EACA38C,KAAA48C,kBAAA,EAu2CA,QAAAC,iBAAAhoC,MAAAioC,SAAAC,YAEA,GAAAxgD,MAAAoN,QAAAkL,OAEA,KAAA,IAAAmoC,WAAA,wDAIAh9C,MAAAy7B,KAAAC,MAAAC,eACA37B,KAAApC,KAAA,GAEAoC,KAAA6U,MAAAA,MACA7U,KAAA88C,SAAAA,SACA98C,KAAAm5C,UAAAhsC,KAAA0H,MAAAA,MAAAjV,OAAAk9C,SAAA,EACA98C,KAAA+8C,YAAA,IAAAA,WAEA/8C,KAAAk4C,SAAA,EACAl4C,KAAAk5C,aAAA/vB,OAAA,EAAAgwB,OAAA,GAEAn5C,KAAAq4C,iBAAA,aAEAr4C,KAAAi6B,QAAA,EAyTA,QAAAgjB,qBAAApoC,MAAAioC,UAEAD,gBAAAj2C,KAAA5G,KAAA,GAAA44C,WAAA/jC,OAAAioC,UAQA,QAAAI,sBAAAroC,MAAAioC,UAEAD,gBAAAj2C,KAAA5G,KAAA,GAAA84C,YAAAjkC,OAAAioC,UAQA,QAAAK,6BAAAtoC,MAAAioC,UAEAD,gBAAAj2C,KAAA5G,KAAA,GAAAo9C,mBAAAvoC,OAAAioC,UAQA,QAAAO,sBAAAxoC,MAAAioC,UAEAD,gBAAAj2C,KAAA5G,KAAA,GAAAu4C,YAAA1jC,OAAAioC,UAQA,QAAAQ,uBAAAzoC,MAAAioC,UAEAD,gBAAAj2C,KAAA5G,KAAA,GAAAykC,aAAA5vB,OAAAioC,UAQA,QAAAS,sBAAA1oC,MAAAioC,UAEAD,gBAAAj2C,KAAA5G,KAAA,GAAAk/B,YAAArqB,OAAAioC,UAQA,QAAAU,uBAAA3oC,MAAAioC,UAEAD,gBAAAj2C,KAAA5G,KAAA,GAAAy4C,aAAA5jC,OAAAioC,UAQA,QAAAW,wBAAA5oC,MAAAioC,UAEAD,gBAAAj2C,KAAA5G,KAAA,GAAA8+B,cAAAjqB,OAAAioC,UAQA,QAAAY,wBAAA7oC,MAAAioC,UAEAD,gBAAAj2C,KAAA5G,KAAA,GAAAs4C,cAAAzjC,OAAAioC,UAWA,QAAAa,kBAEA39C,KAAA49C,WACA59C,KAAAukC,YACAvkC,KAAA69C,WACA79C,KAAA+7C,UACA/7C,KAAA89C,OACA99C,KAAA+9C,QAEA/9C,KAAA40C,UAEA50C,KAAAyvC,gBAEAzvC,KAAAi8C,eACAj8C,KAAAk8C,eAIAl8C,KAAAo8C,YAAA,KACAp8C,KAAAq8C,eAAA,KAIAr8C,KAAAu8C,oBAAA,EACAv8C,KAAAy8C,mBAAA,EACAz8C,KAAA08C,kBAAA,EACA18C,KAAAw8C,eAAA,EACAx8C,KAAA48C,kBAAA,EAwOA,QAAAoB,UAAAnpC,OAEA,GAAA,IAAAA,MAAAjV,OAAA,OAAAskC,EAAAA,CAIA,KAAA,GAFAhwB,KAAAW,MAAA,GAEA/Q,EAAA,EAAA4f,EAAA7O,MAAAjV,OAAAkE,EAAA4f,IAAA5f,EAEA+Q,MAAA/Q,GAAAoQ,MAAAA,IAAAW,MAAA/Q,GAIA,OAAAoQ,KASA,QAAA+pC,kBAEAp0C,OAAA0xB,eAAAv7B,KAAA,MAAAkP,MAAA2sC,oBAEA77C,KAAAy7B,KAAAC,MAAAC,eAEA37B,KAAApC,KAAA,GACAoC,KAAAo7B,KAAA,iBAEAp7B,KAAA+wB,MAAA,KACA/wB,KAAA2H,cAEA3H,KAAA8yC,mBAEA9yC,KAAA40C,UAEA50C,KAAAo8C,YAAA,KACAp8C,KAAAq8C,eAAA,KAEAr8C,KAAAk+C,WAAAC,MAAA,EAAAhF,MAAAjV,EAAAA,GAijCA,QAAAka,aAAAl/C,MAAA49B,OAAA8L,MAAAyV,cAAAC,eAAAC,eAEAzC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,cAEAp7B,KAAAkvC,YACAhwC,MAAAA,MACA49B,OAAAA,OACA8L,MAAAA,MACAyV,cAAAA,cACAC,eAAAA,eACAC,cAAAA,eAGAv+C,KAAAw+C,mBAAA,GAAAC,mBAAAv/C,MAAA49B,OAAA8L,MAAAyV,cAAAC,eAAAC,gBACAv+C,KAAA0+C,gBASA,QAAAD,mBAAAv/C,MAAA49B,OAAA8L,MAAAyV,cAAAC,eAAAC,eAmDA,QAAAI,YAAAjrC,EAAA4rB,EAAAvc,EAAA67B,KAAAC,KAAA3/C,MAAA49B,OAAA8L,MAAAkW,MAAAC,MAAA/J,eAEA,GAaAgK,IAAAC,GAbAC,aAAAhgD,MAAA4/C,MACAK,cAAAriB,OAAAiiB,MAEAK,UAAAlgD,MAAA,EACAmgD,WAAAviB,OAAA,EACAwiB,UAAA1W,MAAA,EAEA2W,OAAAT,MAAA,EACAU,OAAAT,MAAA,EAEAU,cAAA,EACAC,WAAA,EAIAC,OAAA,GAAA7hB,QAIA,KAAAmhB,GAAA,EAAAA,GAAAO,OAAAP,KAAA,CAEA,GAAAhlC,GAAAglC,GAAAE,cAAAE,UAEA,KAAAL,GAAA,EAAAA,GAAAO,OAAAP,KAAA,CAEA,GAAAxnC,GAAAwnC,GAAAE,aAAAE,SAIAO,QAAAjsC,GAAA8D,EAAAonC,KACAe,OAAArgB,GAAArlB,EAAA4kC,KACAc,OAAA58B,GAAAu8B,UAIA/a,SAAArkC,KAAAy/C,OAAAnoC,EAAAmoC,OAAA1lC,EAAA0lC,OAAA/iB,GAIA+iB,OAAAjsC,GAAA,EACAisC,OAAArgB,GAAA,EACAqgB,OAAA58B,GAAA6lB,MAAA,EAAA,GAAA,EAIAiV,QAAA39C,KAAAy/C,OAAAnoC,EAAAmoC,OAAA1lC,EAAA0lC,OAAA/iB,GAIAkhB,IAAA59C,KAAA8+C,GAAAF,OACAhB,IAAA59C,KAAA,EAAA++C,GAAAF,OAIAU,eAAA,GAYA,IAAAR,GAAA,EAAAA,GAAAF,MAAAE,KAEA,IAAAD,GAAA,EAAAA,GAAAF,MAAAE,KAAA,CAEA,GAAAp0C,GAAAg1C,iBAAAZ,GAAAO,OAAAN,GACAp0C,EAAA+0C,iBAAAZ,GAAAO,QAAAN,GAAA,GACAl9B,EAAA69B,kBAAAZ,GAAA,GAAAO,QAAAN,GAAA,GACA/kC,EAAA0lC,kBAAAZ,GAAA,GAAAO,OAAAN,EAIArB,SAAA19C,KAAA0K,EAAAC,EAAAqP,GACA0jC,QAAA19C,KAAA2K,EAAAkX,EAAA7H,GAIAwlC,YAAA,EAQA/L,MAAAkM,SAAAC,WAAAJ,WAAA1K,eAIA8K,YAAAJ,WAIAE,kBAAAH,cArJAxB,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,oBAEAp7B,KAAAkvC,YACAhwC,MAAAA,MACA49B,OAAAA,OACA8L,MAAAA,MACAyV,cAAAA,cACAC,eAAAA,eACAC,cAAAA,cAGA,IAAA5K,OAAA3zC,IAIAq+C,eAAAzvC,KAAAE,MAAAuvC,gBAAA,EACAC,eAAA1vC,KAAAE,MAAAwvC,iBAAA,EACAC,cAAA3vC,KAAAE,MAAAyvC,gBAAA,CAIA,IAAAX,YACArZ,YACAsZ,WACAC,OAIA8B,iBAAA,EACAE,WAAA,CAIAnB,YAAA,IAAA,IAAA,KAAA,GAAA,EAAA/V,MAAA9L,OAAA59B,MAAAq/C,cAAAD,eAAA,GACAK,WAAA,IAAA,IAAA,IAAA,GAAA,EAAA/V,MAAA9L,QAAA59B,MAAAq/C,cAAAD,eAAA,GACAK,WAAA,IAAA,IAAA,IAAA,EAAA,EAAAz/C,MAAA0pC,MAAA9L,OAAAuhB,cAAAE,cAAA,GACAI,WAAA,IAAA,IAAA,IAAA,GAAA,EAAAz/C,MAAA0pC,OAAA9L,OAAAuhB,cAAAE,cAAA,GACAI,WAAA,IAAA,IAAA,IAAA,GAAA,EAAAz/C,MAAA49B,OAAA8L,MAAAyV,cAAAC,eAAA,GACAK,WAAA,IAAA,IAAA,KAAA,GAAA,EAAAz/C,MAAA49B,QAAA8L,MAAAyV,cAAAC,eAAA,GAIAt+C,KAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IAsHA,QAAAmC,eAAA/gD,MAAA49B,OAAAuhB,cAAAC,gBAEAxC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,gBAEAp7B,KAAAkvC,YACAhwC,MAAAA,MACA49B,OAAAA,OACAuhB,cAAAA,cACAC,eAAAA,gBAGAt+C,KAAAw+C,mBAAA,GAAA0B,qBAAAhhD,MAAA49B,OAAAuhB,cAAAC,iBACAt+C,KAAA0+C,gBASA,QAAAwB,qBAAAhhD,MAAA49B,OAAAuhB,cAAAC,gBAEAL,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,sBAEAp7B,KAAAkvC,YACAhwC,MAAAA,MACA49B,OAAAA,OACAuhB,cAAAA,cACAC,eAAAA,eAGA,IAYAU,IAAAC,GAZAkB,WAAAjhD,MAAA,EACAkhD,YAAAtjB,OAAA,EAEAgiB,MAAAlwC,KAAAE,MAAAuvC,gBAAA,EACAU,MAAAnwC,KAAAE,MAAAwvC,iBAAA,EAEAiB,OAAAT,MAAA,EACAU,OAAAT,MAAA,EAEAsB,cAAAnhD,MAAA4/C,MACAwB,eAAAxjB,OAAAiiB,MAMAnB,WACArZ,YACAsZ,WACAC,MAIA,KAAAmB,GAAA,EAAAA,GAAAO,OAAAP,KAAA,CAEA,GAAAhlC,GAAAglC,GAAAqB,eAAAF,WAEA,KAAApB,GAAA,EAAAA,GAAAO,OAAAP,KAAA,CAEA,GAAAxnC,GAAAwnC,GAAAqB,cAAAF,UAEA5b,UAAArkC,KAAAsX,GAAAyC,EAAA,GAEA4jC,QAAA39C,KAAA,EAAA,EAAA,GAEA49C,IAAA59C,KAAA8+C,GAAAF,OACAhB,IAAA59C,KAAA,EAAA++C,GAAAF,QAQA,IAAAE,GAAA,EAAAA,GAAAF,MAAAE,KAEA,IAAAD,GAAA,EAAAA,GAAAF,MAAAE,KAAA,CAEA,GAAAp0C,GAAAo0C,GAAAO,OAAAN,GACAp0C,EAAAm0C,GAAAO,QAAAN,GAAA,GACAl9B,EAAAi9B,GAAA,EAAAO,QAAAN,GAAA,GACA/kC,EAAA8kC,GAAA,EAAAO,OAAAN,EAIArB,SAAA19C,KAAA0K,EAAAC,EAAAqP,GACA0jC,QAAA19C,KAAA2K,EAAAkX,EAAA7H,GAQAla,KAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IA0CA,QAAAyC,mBAAArR,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,oBAEAp7B,KAAA6mC,MAAA,GAAA9C,OAAA,UAEA/jC,KAAAwK,IAAA,KAEAxK,KAAAwgD,SAAA,KACAxgD,KAAAygD,kBAAA,EAEAzgD,KAAA0gD,MAAA,KACA1gD,KAAA2gD,eAAA,EAEA3gD,KAAA4gD,YAAA,KAEA5gD,KAAAuwC,SAAA,KAEAvwC,KAAA6gD,OAAA,KACA7gD,KAAA8gD,QAAAC,kBACA/gD,KAAAghD,aAAA,EACAhhD,KAAAihD,gBAAA,IAEAjhD,KAAAqvC,WAAA,EACArvC,KAAAsvC,mBAAA,EACAtvC,KAAAkhD,iBAAA,QACAlhD,KAAAmhD,kBAAA,QAEAnhD,KAAAwvC,UAAA,EACAxvC,KAAAyvC,cAAA,EAEAzvC,KAAA0tC,QAAA,EAEA1tC,KAAAmwC,UAAAjB,YAgDA,QAAAkS,KAAAC,OAAA90B,WAEAvsB,KAAAqhD,WAAAl0C,KAAAk0C,OAAAA,OAAA,GAAAvjB,SACA99B,KAAAusB,cAAApf,KAAAof,UAAAA,UAAA,GAAAuR,SA+gBA,QAAAwjB,OAAAnD,MAAAoD,KAEAvhD,KAAAm+C,UAAAhxC,KAAAgxC,MAAAA,MAAA,GAAArgB,SACA99B,KAAAuhD,QAAAp0C,KAAAo0C,IAAAA,IAAA,GAAAzjB,SA2HA,QAAA0jB,UAAA52C,EAAAC,EAAAkX,GAEA/hB,KAAA4K,MAAAuC,KAAAvC,EAAAA,EAAA,GAAAkzB,SACA99B,KAAA6K,MAAAsC,KAAAtC,EAAAA,EAAA,GAAAizB,SACA99B,KAAA+hB,MAAA5U,KAAA4U,EAAAA,EAAA,GAAA+b,SA0PA,QAAA2jB,MAAApP,SAAAxF,UAEAkN,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,OAEAp7B,KAAAqyC,aAAAllC,KAAAklC,SAAAA,SAAA,GAAA4L,gBACAj+C,KAAA6sC,aAAA1/B,KAAA0/B,SAAAA,SAAA,GAAA0T,oBAAA1Z,MAAA,SAAAj4B,KAAA8yC,WAEA1hD,KAAA2hD,SAAAC,kBAEA5hD,KAAA6hD,qBAwWA,QAAAC,iBAAA9iB,SAAAoF,MAAA2d,WAAA5U,oBAQA,QAAA1F,QAAAua,WAAAra,MAAAC,OAAAqa,YAEA,GAAAC,YAAAva,MAAAua,UAEA,QAAAA,WAEA9L,SAAA+L,WAAAC,YAEAF,YAAAA,WAAAtG,UAEAxF,SAAA8L,WAAA,GACAD,YAAA,IAIAjjB,SAAAqjB,WAAAJ,aAEAjjB,SAAAyY,MAAAzY,SAAAsjB,eAAAtjB,SAAAujB,eAAAvjB,SAAAwjB,kBAIAN,YAAAA,WAAAO,mBAEAt1C,KAAAu1C,UAEAA,QAAA,GAAAjB,MACA,GAAAhD,mBAAA,EAAA,EAAA,GACA,GAAAxP,iBACAxI,SAAAkc,UAAAC,KAAAnc,SACAN,aAAAwc,UAAAC,KAAAzc,aACAC,eAAAuc,UAAAC,KAAAxc,eACAwH,KAAAmG,SACA1G,WAAA,EACAC,YAAA,EACAqB,eAAA,EACArC,KAAA,KAIAoW,QAAArQ,SAAAwQ,gBAAA,UACAH,QAAArQ,SAAAwQ,gBAAA,MAEAH,QAAA5V,eAAA,SAAA9N,SAAA2I,MAAAC,QAEA,GAAAd,OAAAc,OAAA6E,GAEAzsC,MAAA+oC,YAAA+Z,UAAAhc,MAAAA,MAAAA,OACA9mC,KAAA+oC,YAAAga,aAAAnb,OAAAmB,aAEA/oC,KAAA6sC,SAAAgC,mBAAA,GAAA/H,OAIAib,WAAApN,OAAA+N,QAAArQ,WAIAqQ,QAAA7V,SAAApG,SAAAuc,MAAA9zC,MAAAgzC,WAEAF,WAAA9hD,KAAAwiD,QAAAA,QAAArQ,SAAAqQ,QAAA7V,SAAA,EAAA,OAEAqV,YAAAA,WAAAe,gBAEA91C,KAAA+1C,cAEAA,YAAA,GAAAlI,qBAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAEAmI,UAAA,GAAA1B,MACA,GAAAvB,qBAAA,EAAA,GACA,GAAAK,oBAAAlT,WAAA,EAAAC,YAAA,EAAAhB,KAAA,KAGAyV,WAAApN,OAAAwO,UAAA9Q,WAIA8Q,UAAAtW,SAAAriC,IAAA03C,WAIAljB,SAAAmW,mBAAA+N,YAAA,KAAAC,UAAA9Q,SAAA8Q,UAAAtW,SAAAsW,UAAA,OAMA,QAAA/M,UAAAvP,MAAAuc,OAEAhf,MAAAuE,QAAA9B,MAAAuP,SAAAvP,MAAAjI,EAAAiI,MAAA7G,EAAA6G,MAAAh8B,EAAAu4C,MAAAjW,oBA9FA,GAGA+V,aAAAC,UACAT,QAJAP,WAAA,GAAApe,OAAA,GACAqe,WAAA,CAiGA,QAEAiB,cAAA,WAEA,MAAAlB,aAGAmB,cAAA,SAAAzc,MAAAuc,OAEAjB,WAAAtxC,IAAAg2B,OACAub,eAAAj1C,KAAAi2C,MAAAA,MAAA,EACAhN,SAAA+L,WAAAC,aAGAmB,cAAA,WAEA,MAAAnB,aAGAoB,cAAA,SAAAJ,OAEAhB,WAAAgB,MACAhN,SAAA+L,WAAAC,aAGA3a,OAAAA,QAUA,QAAAqE,mBAAAlhC,EAAAC,GAEA,MAAAD,GAAAmhC,cAAAlhC,EAAAkhC,YAEAnhC,EAAAmhC,YAAAlhC,EAAAkhC,YAEAnhC,EAAA64B,SAAA54B,EAAA44B,SAAA74B,EAAA64B,UAAA54B,EAAA44B,QAEA74B,EAAA64B,QAAAhB,GAAA53B,EAAA44B,QAAAhB,GAEA73B,EAAAiiC,SAAApK,KAAA53B,EAAAgiC,SAAApK,GAEA73B,EAAAiiC,SAAApK,GAAA53B,EAAAgiC,SAAApK,GAEA73B,EAAAgyB,IAAA/xB,EAAA+xB,EAEAhyB,EAAAgyB,EAAA/xB,EAAA+xB,EAIAhyB,EAAA63B,GAAA53B,EAAA43B,GAMA,QAAAghB,0BAAA74C,EAAAC,GAEA,MAAAD,GAAAmhC,cAAAlhC,EAAAkhC,YAEAnhC,EAAAmhC,YAAAlhC,EAAAkhC,YAEAnhC,EAAAgyB,IAAA/xB,EAAA+xB,EAEA/xB,EAAA+xB,EAAAhyB,EAAAgyB,EAIAhyB,EAAA63B,GAAA53B,EAAA43B,GAMA,QAAAihB,mBAQA,QAAAl7C,QAEAm7C,iBAAA,EAEAC,OAAAhkD,OAAA,EACAquC,YAAAruC,OAAA,EAIA,QAAAM,MAAA8xC,OAAAK,SAAAxF,SAAAjQ,EAAAkY,OAEA,GAAA+O,YAAAC,YAAAH,sBAEAx2C,KAAA02C,YAEAA,YACAphB,GAAAuP,OAAAvP,GACAuP,OAAAA,OACAK,SAAAA,SACAxF,SAAAA,SACApJ,QAAAoJ,SAAApJ,QACAsI,YAAAiG,OAAAjG,YACAnP,EAAAA,EACAkY,MAAAA,OAGAgP,YAAAH,kBAAAE,aAIAA,WAAAphB,GAAAuP,OAAAvP,GACAohB,WAAA7R,OAAAA,OACA6R,WAAAxR,SAAAA,SACAwR,WAAAhX,SAAAA,SACAgX,WAAApgB,QAAAoJ,SAAApJ,QACAogB,WAAA9X,YAAAiG,OAAAjG,YACA8X,WAAAjnB,EAAAA,EACAinB,WAAA/O,MAAAA,SAIA,IAAAjI,SAAAoB,YAAAA,YAAA2V,QAAA1jD,KAAA2jD,YAEAF,mBAIA,QAAAhwC,QAEAiwC,OAAAhkD,OAAA,GAAAgkD,OAAAjwC,KAAAm4B,mBACAmC,YAAAruC,OAAA,GAAAquC,YAAAt6B,KAAA8vC,0BAxDA,GAAAK,gBACAH,iBAAA,EAEAC,UACA3V,cAwDA,QACA2V,OAAAA,OACA3V,YAAAA,YAEAzlC,KAAAA,KACAtI,KAAAA,KAEAyT,KAAAA,MAKA,QAAAowC,oBAIA,QAAA/sC,KAAA2wB,MAAAC,QAEA,GAAAoc,MAAArc,MAAAlF,GAAA,IAAAmF,OAAAnF,GACAwhB,KAAAC,MAAAF,KAWA,YATA72C,KAAA82C,OAIAA,KAAA,GAAAP,iBACAQ,MAAAF,MAAAC,MAIAA,KAIA,QAAAE,WAEAD,SAtBA,GAAAA,SA0BA,QACAltC,IAAAA,IACAmtC,QAAAA,SASA,QAAAC,kBAAAx5C,EAAAC,GAEA,MAAA+D,MAAAc,IAAA7E,EAAA,IAAA+D,KAAAc,IAAA9E,EAAA,IAIA,QAAAy5C,mBAAAhlB,IAKA,QAAAsV,QAAA3C,OAAAK,SAAAxF,SAAApJ,SAEA,GAAA6gB,kBAAAtS,OAAAuS,sBAEA3kD,OAAA0kD,iBAAA1kD,OAEA4kD,WAAAC,eAAApS,SAAA5P,GAEA,QAAAt1B,KAAAq3C,WAAA,CAIAA,aAEA,KAAA,GAAA1gD,GAAA,EAAAA,EAAAlE,OAAAkE,IAEA0gD,WAAA1gD,IAAAA,EAAA,EAIA2gD,gBAAApS,SAAA5P,IAAA+hB,WASA,IAAA,GALA/U,cAAA5C,SAAA4C,cAAA4C,SAAAS,gBAAA/H,SACA2E,aAAA7C,SAAA6C,cAAA2C,SAAAS,gBAAAzB,OAIAvtC,EAAA,EAAAA,EAAAlE,OAAAkE,IAAA,CAEA,GAAA4gD,WAAAF,WAAA1gD,EAEA,KAAA4gD,UAAA,KAEAjV,cAAA4C,SAAAwQ,gBAAA,cAAA/+C,GACA4rC,cAAA2C,SAAAwQ,gBAAA,cAAA/+C,IAQA,IAAA,GAAAA,GAAA,EAAAA,EAAAlE,OAAAkE,IAAA,CAEA,GAAA4gD,WAAAF,WAAA1gD,EAEA4gD,WAAA,GAAA5gD,EACA4gD,UAAA,GAAAJ,iBAAAxgD,GAIA0gD,WAAA7wC,KAAAywC,iBAIA,KAAA,GAAAtgD,GAAA,EAAAA,EAAA,EAAAA,IAAA,CAEA,GAAA4gD,WAAAF,WAAA1gD,EAEA,IAAA4gD,UAAA,CAEA,GAAA3zB,OAAA2zB,UAAA,GACAx1C,MAAAw1C,UAAA,EAEA,IAAAx1C,MAAA,CAEAugC,cAAA4C,SAAA2N,aAAA,cAAAl8C,EAAA2rC,aAAA1e,QACA2e,cAAA2C,SAAA2N,aAAA,cAAAl8C,EAAA4rC,aAAA3e,QAEA4zB,gBAAA7gD,GAAAoL,KACA,WAMAy1C,gBAAA7gD,GAAA,EAIA2/B,QAAAmhB,cAAAjiB,SAAAtD,GAAA,wBAAAslB,iBArFA,GAAAF,mBACAE,gBAAA,GAAA7lB,cAAA,EAwFA,QAEA6V,OAAAA,QAUA,QAAAkQ,4BAAAxlB,GAAAsQ,WAAAmV,YAIA,QAAAC,SAAA71C,OAEA81C,KAAA91C,MAMA,QAAA6wC,UAAA7wC,OAEAksB,KAAAlsB,MAAAksB,KACA2d,gBAAA7pC,MAAA6pC,gBAIA,QAAAtR,QAAA0W,MAAAhF,OAEA9Z,GAAAuK,aAAAob,KAAA7L,MAAA/d,KAAA+iB,MAAApF,iBAEA+L,WAAAG,QACAH,WAAAvgB,UAAA4U,MAEA6L,OAAA3lB,GAAAwK,UAAAib,WAAAtgB,OAAA2U,MAAA,EACA6L,OAAA3lB,GAAA6lB,SAAAJ,WAAAK,QAAAhM,OAIA,QAAAiM,iBAAA/S,SAAA8L,MAAAhF,OAEA,GAAAkM,WAAA1V,WAAA34B,IAAA,yBAEA,IAAA,OAAAquC,UAGA,WADAt1C,SAAAiuB,MAAA,wIAKAqnB,WAAAC,2BAAAN,KAAA7L,MAAA/d,KAAA+iB,MAAApF,gBAAA1G,SAAAkT,mBAEAT,WAAAG,QACAH,WAAAvgB,UAAA4U,MAAA9G,SAAAkT,kBAEAP,OAAA3lB,GAAAwK,UAAAib,WAAAtgB,OAAA6N,SAAAkT,kBAAApM,MAAA,EACA6L,OAAA3lB,GAAA6lB,SAAAJ,WAAAK,QAAA9S,SAAAkT,kBAAApM,OA9CA,GAAA6L,MAQA5pB,KAAA2d,eA4CA/4C,MAAA+kD,QAAAA,QACA/kD,KAAA+/C,SAAAA,SACA//C,KAAAynC,OAAAA,OACAznC,KAAAolD,gBAAAA,gBAQA,QAAAI,qBAAAnmB,GAAAsQ,WAAAmV,YAIA,QAAAC,SAAA71C,OAEA81C,KAAA91C,MAIA,QAAAu4B,QAAA0W,MAAAhF,OAEA9Z,GAAAomB,WAAAT,KAAA7G,MAAAhF,OAEA2L,WAAAG,QACAH,WAAAvgB,UAAA4U,MAEA6L,OAAA3lB,GAAAwK,UAAAib,WAAAtgB,OAAA2U,MAAA,EACA6L,OAAA3lB,GAAA6lB,SAAAJ,WAAAK,QAAAhM,OAIA,QAAAiM,iBAAA/S,SAAA8L,MAAAhF,OAEA,GAAAkM,WAAA1V,WAAA34B,IAAA,yBAEA,IAAA,OAAAquC,UAGA,WADAt1C,SAAAiuB,MAAA,iIAKA,IAAA+M,UAAAsH,SAAA1qC,WAAAojC,QAEAA,UAAAuO,8BAEAH,MAAApO,SAAAxqB,KAAA44B,MAEAkM,UAAAK,yBAAAV,KAAA,EAAA7L,MAAA9G,SAAAkT,oBAIAF,UAAAK,yBAAAV,KAAA7G,MAAAhF,MAAA9G,SAAAkT,mBAIAT,WAAAG,QACAH,WAAAvgB,UAAA4U,MAAA9G,SAAAkT,kBAEAP,OAAA3lB,GAAAwK,UAAAib,WAAAtgB,OAAA6N,SAAAkT,kBAAApM,MAAA,EACA6L,OAAA3lB,GAAA6lB,SAAAJ,WAAAK,QAAA9S,SAAAkT,kBAAApM,OAjDA,GAAA6L,KAuDAhlD,MAAA+kD,QAAAA,QACA/kD,KAAAynC,OAAAA,OACAznC,KAAAolD,gBAAAA,gBAQA,QAAAO,iBAAAtmB,GAAA13B,WAAAi+C,YAKA,QAAAC,mBAAA7nD,OAEA,GAAAq0C,UAAAr0C,MAAAgF,OACA8iD,eAAA/D,WAAA1P,SAAA5P,GAEA,QAAAqjB,eAAA/0B,OAEAppB,WAAA4xC,OAAAuM,eAAA/0B,MAIA,KAAA,GAAAnzB,QAAAkoD,gBAAAn+C,WAEAA,WAAA4xC,OAAAuM,eAAAn+C,WAAA/J,MAIAy0C,UAAA0T,oBAAA,UAAAF,yBAEA9D,YAAA1P,SAAA5P,GAIA,IAAAsV,WAAAiO,oBAAA3T,SAAA5P,GAEAsV,aAEApwC,WAAA4xC,OAAAxB,iBACAiO,qBAAA3T,SAAA5P,KAIAsV,UAAAiO,oBAAAF,eAAArjB,IAEAsV,YAEApwC,WAAA4xC,OAAAxB,iBACAiO,qBAAAF,eAAArjB,KAMAmjB,WAAA7D,aAIA,QAAA/qC,KAAAg7B,OAAAK,UAEA,GAAAyT,gBAAA/D,WAAA1P,SAAA5P,GAEA,OAAAqjB,kBAEAzT,SAAAt2C,iBAAA,UAAA8pD,mBAEAxT,SAAAQ,iBAEAiT,eAAAzT,SAEAA,SAAAU,iBAEA5lC,KAAAklC,SAAA4T,kBAEA5T,SAAA4T,iBAAA,GAAAhI,iBAAAiI,cAAAlU,SAIA8T,eAAAzT,SAAA4T,iBAIAlE,WAAA1P,SAAA5P,IAAAqjB,eAEAF,WAAA7D,aAEA+D,gBAIA,QAAAnR,QAAAtC,UAEA,GAAAthB,OAAAshB,SAAAthB,MACAo1B,mBAAA9T,SAAA1qC,UAEA,QAAAopB,OAEAppB,WAAAgtC,OAAA5jB,MAAAsO,GAAA4F,qBAIA,KAAA,GAAArnC,QAAAuoD,oBAEAx+C,WAAAgtC,OAAAwR,mBAAAvoD,MAAAyhC,GAAAyF,aAMA,IAAAgO,iBAAAT,SAAAS,eAEA,KAAA,GAAAl1C,QAAAk1C,iBAIA,IAAA,GAFAj+B,OAAAi+B,gBAAAl1C,MAEAkG,EAAA,EAAA4f,EAAA7O,MAAAjV,OAAAkE,EAAA4f,EAAA5f,IAEA6D,WAAAgtC,OAAA9/B,MAAA/Q,GAAAu7B,GAAAyF,cAQA,QAAAshB,uBAAA/T,UAEA,GAAA0F,WAAAiO,oBAAA3T,SAAA5P,GAEA,IAAAsV,UAAA,MAAAA,UAEA,IAAA6F,YAEAyI,cAAAhU,SAAAthB,MACAo1B,mBAAA9T,SAAA1qC,UAIA,IAAA,OAAA0+C,cAIA,IAAA,GAFAxxC,OAAAwxC,cAAAxxC,MAEA/Q,EAAA,EAAA4f,EAAA7O,MAAAjV,OAAAkE,EAAA4f,EAAA5f,GAAA,EAAA,CAEA,GAAA8G,GAAAiK,MAAA/Q,EAAA,GACA+G,EAAAgK,MAAA/Q,EAAA,GACAie,EAAAlN,MAAA/Q,EAAA,EAEA85C,SAAA19C,KAAA0K,EAAAC,EAAAA,EAAAkX,EAAAA,EAAAnX,OAQA,KAAA,GAFAiK,OAAAsxC,mBAAApb,SAAAl2B,MAEA/Q,EAAA,EAAA4f,EAAA7O,MAAAjV,OAAA,EAAA,EAAAkE,EAAA4f,EAAA5f,GAAA,EAAA,CAEA,GAAA8G,GAAA9G,EAAA,EACA+G,EAAA/G,EAAA,EACAie,EAAAje,EAAA,CAEA85C,SAAA19C,KAAA0K,EAAAC,EAAAA,EAAAkX,EAAAA,EAAAnX,GAcA,MANAmtC,WAAA,IAAAiG,SAAAJ,SAAA,MAAAJ,sBAAAF,uBAAAM,QAAA,GAEAj2C,WAAAgtC,OAAAoD,UAAA1Y,GAAA4F,sBAEA+gB,oBAAA3T,SAAA5P,IAAAsV,UAEAA,UAxKA,GAAAgK,eACAiE,sBA2KA,QAEAhvC,IAAAA,IACA29B,OAAAA,OAEAyR,sBAAAA,uBAUA,QAAAE,iBAEA,GAAA5Y,UAEA,QAEA12B,IAAA,SAAAw/B,OAEA,OAAArpC,KAAAugC,OAAA8I,MAAA/T,IAEA,MAAAiL,QAAA8I,MAAA/T,GAIA,IAAAgE,SAEA,QAAA+P,MAAApb,MAEA,IAAA,mBACAqL,UACAla,UAAA,GAAAuR,SACA+I,MAAA,GAAA9C,OAEA0S,QAAA,EACA8P,WAAA,EACAC,aAAA,EACAC,cAAA,GAAA7rB,SAEA,MAEA,KAAA,YACA6L,UACAsE,SAAA,GAAAjN,SACAvR,UAAA,GAAAuR,SACA+I,MAAA,GAAA9C,OACA2iB,SAAA,EACAC,QAAA,EACAC,YAAA,EACAC,MAAA,EAEApQ,QAAA,EACA8P,WAAA,EACAC,aAAA,EACAC,cAAA,GAAA7rB,SAEA,MAEA,KAAA,aACA6L,UACAsE,SAAA,GAAAjN,SACA+I,MAAA,GAAA9C,OACA2iB,SAAA,EACAG,MAAA,EAEApQ,QAAA,EACA8P,WAAA,EACAC,aAAA,EACAC,cAAA,GAAA7rB,SACAuX,iBAAA,EACAC,gBAAA,IAEA,MAEA,KAAA,kBACA3L,UACAla,UAAA,GAAAuR,SACAgpB,SAAA,GAAA/iB,OACAgjB,YAAA,GAAAhjB,OAEA,MAEA,KAAA,gBACA0C,UACAI,MAAA,GAAA9C,OACAgH,SAAA,GAAAjN,SACAkpB,UAAA,GAAAlpB,SACAmpB,WAAA,GAAAnpB,UASA,MAFA4P,QAAA8I,MAAA/T,IAAAgE,SAEAA,WAQA,QAAAygB,eA2BA,QAAAC,OAAAzZ,OAAA0Z,QAAAxf,QAYA,IAAA,GAVAhJ,GAAA,EAAAoB,EAAA,EAAAn1B,EAAA,EAEAw8C,kBAAA,EACAC,YAAA,EACAC,WAAA,EACAC,eAAA,EACAC,WAAA,EAEAC,WAAA9f,OAAAqB,mBAEAnlC,EAAA,EAAA4f,EAAAgqB,OAAA9tC,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA0yC,OAAA9I,OAAA5pC,GAEA+iC,MAAA2P,MAAA3P,MACA8gB,UAAAnR,MAAAmR,UACAjB,SAAAlQ,MAAAkQ,SAEA1P,UAAAR,MAAAC,QAAAD,MAAAC,OAAAjsC,IAAAgsC,MAAAC,OAAAjsC,IAAA2yB,QAAA,IAEA,IAAAqZ,MAAAoR,eAEAhpB,GAAAiI,MAAAjI,EAAA+oB,UACA3nB,GAAA6G,MAAA7G,EAAA2nB,UACA98C,GAAAg8B,MAAAh8B,EAAA88C,cAEA,IAAAnR,MAAAqR,mBAAA,CAEA,GAAAphB,UAAAqhB,MAAA9wC,IAAAw/B,MAUA,IARA/P,SAAAI,MAAAsC,KAAAqN,MAAA3P,OAAAkhB,eAAAvR,MAAAmR,WACAlhB,SAAAla,UAAA4qB,sBAAAX,MAAAzN,aACAif,QAAA7Q,sBAAAX,MAAAxzC,OAAA+lC,aACAtC,SAAAla,UAAA07B,IAAAD,SACAvhB,SAAAla,UAAA27B,mBAAAR,YAEAjhB,SAAAgQ,OAAAD,MAAAjC,WAEAiC,MAAAjC,WAAA,CAEA,GAAAkC,QAAAD,MAAAC,MAEAhQ,UAAA8f,WAAA9P,OAAA0R,KACA1hB,SAAA+f,aAAA/P,OAAAvF,OACAzK,SAAAggB,cAAAhQ,OAAAC,QAIAtS,MAAAgkB,qBAAAf,mBAAArQ,UACA5S,MAAAikB,wBAAAhB,mBAAA7Q,MAAAC,OAAAS,OACA9S,MAAAkkB,YAAAjB,mBAAA5gB,SAEA4gB,wBAEA,IAAA7Q,MAAA+R,YAAA,CAEA,GAAA9hB,UAAAqhB,MAAA9wC,IAAAw/B,MAmBA,IAjBA/P,SAAAsE,SAAAoM,sBAAAX,MAAAzN,aACAtC,SAAAsE,SAAA/B,aAAA0e,YAEAjhB,SAAAI,MAAAsC,KAAAtC,OAAAkhB,eAAAJ,WACAlhB,SAAAigB,SAAAA,SAEAjgB,SAAAla,UAAA4qB,sBAAAX,MAAAzN,aACAif,QAAA7Q,sBAAAX,MAAAxzC,OAAA+lC,aACAtC,SAAAla,UAAA07B,IAAAD,SACAvhB,SAAAla,UAAA27B,mBAAAR,YAEAjhB,SAAAkgB,QAAA/3C,KAAA45C,IAAAhS,MAAAiS,OACAhiB,SAAAmgB,YAAAh4C,KAAA45C,IAAAhS,MAAAiS,OAAA,EAAAjS,MAAAkS,WACAjiB,SAAAogB,MAAA,IAAArQ,MAAAkQ,SAAA,EAAAlQ,MAAAqQ,MAEApgB,SAAAgQ,OAAAD,MAAAjC,WAEAiC,MAAAjC,WAAA,CAEA,GAAAkC,QAAAD,MAAAC,MAEAhQ,UAAA8f,WAAA9P,OAAA0R,KACA1hB,SAAA+f,aAAA/P,OAAAvF,OACAzK,SAAAggB,cAAAhQ,OAAAC,QAIAtS,MAAAukB,cAAApB,YAAAvQ,UACA5S,MAAAwkB,iBAAArB,YAAA/Q,MAAAC,OAAAS,OACA9S,MAAAykB,KAAAtB,YAAA9gB,SAEA8gB,iBAEA,IAAA/Q,MAAAsS,gBAAA,CAEA,GAAAriB,UAAAqhB,MAAA9wC,IAAAw/B,MAGA/P,UAAAI,MACAsC,KAAAtC,OACAkhB,eAAAJ,WAAAnR,MAAAt3C,MAAAs3C,MAAA1Z,SAKA2J,SAAAsE,SAAAoM,sBAAAX,MAAAzN,aACAtC,SAAAsE,SAAA/B,aAAA0e,YAGAqB,SAAAC,WACAC,QAAA9f,KAAAqN,MAAAzN,aACAkgB,QAAAC,YAAAxB,YACAqB,SAAAI,gBAAAF,SAEAxiB,SAAAugB,UAAAn2C,IAAA,GAAA2lC,MAAAt3C,MAAA,EAAA,GACAunC,SAAAwgB,WAAAp2C,IAAA,EAAA,GAAA2lC,MAAA1Z,OAAA,GAEA2J,SAAAugB,UAAAhe,aAAA+f,UACAtiB,SAAAwgB,WAAAje,aAAA+f,UAKA3kB,MAAAglB,SAAA5B,gBAAA/gB,SAEA+gB,qBAEA,IAAAhR,MAAAvE,aAAA,CAEA,GAAAxL,UAAAqhB,MAAA9wC,IAAAw/B,MAWA,IATA/P,SAAAsE,SAAAoM,sBAAAX,MAAAzN,aACAtC,SAAAsE,SAAA/B,aAAA0e,YAEAjhB,SAAAI,MAAAsC,KAAAqN,MAAA3P,OAAAkhB,eAAAvR,MAAAmR,WACAlhB,SAAAigB,SAAAlQ,MAAAkQ,SACAjgB,SAAAogB,MAAA,IAAArQ,MAAAkQ,SAAA,EAAAlQ,MAAAqQ,MAEApgB,SAAAgQ,OAAAD,MAAAjC,WAEAiC,MAAAjC,WAAA,CAEA,GAAAkC,QAAAD,MAAAC,MAEAhQ,UAAA8f,WAAA9P,OAAA0R,KACA1hB,SAAA+f,aAAA/P,OAAAvF,OACAzK,SAAAggB,cAAAhQ,OAAAC,QACAjQ,SAAA0L,iBAAAsE,OAAA7O,OAAA4E,KACA/F,SAAA2L,gBAAAqE,OAAA7O,OAAA6E,IAIArI,MAAAilB,eAAA/B,aAAAtQ,UACA5S,MAAAklB,kBAAAhC,aAAA9Q,MAAAC,OAAAS,OACA9S,MAAAmlB,MAAAjC,aAAA7gB,SAEA6gB,kBAEA,IAAA9Q,MAAAgT,kBAAA,CAEA,GAAA/iB,UAAAqhB,MAAA9wC,IAAAw/B,MAEA/P,UAAAla,UAAA4qB,sBAAAX,MAAAzN,aACAtC,SAAAla,UAAA27B,mBAAAR,YACAjhB,SAAAla,UAAAk9B,YAEAhjB,SAAAqgB,SAAA3d,KAAAqN,MAAA3P,OAAAkhB,eAAAJ,WACAlhB,SAAAsgB,YAAA5d,KAAAqN,MAAAuQ,aAAAgB,eAAAJ,WAEAvjB,MAAAslB,KAAAjC,YAAAhhB,SAEAghB,cAMArjB,MAAAulB,QAAA,GAAA/qB,EACAwF,MAAAulB,QAAA,GAAA3pB,EACAoE,MAAAulB,QAAA,GAAA9+C,EAEAu5B,MAAAkkB,YAAA1oD,OAAAynD,kBACAjjB,MAAAykB,KAAAjpD,OAAA2nD,WACAnjB,MAAAglB,SAAAxpD,OAAA4nD,eACApjB,MAAAmlB,MAAA3pD,OAAA0nD,YACAljB,MAAAslB,KAAA9pD,OAAA6nD,WAGArjB,MAAA4f,KAAAqD,kBAAA,IAAAC,YAAA,IAAAC,WAAA,IAAAC,eAAA,IAAAC,WAAA,IAAAL,QAAAxnD,OArNA,GAAAkoD,OAAA,GAAAxB,eAEAliB,OAEA4f,KAAA,GAEA2F,SAAA,EAAA,EAAA,GACArB,eACAF,wBACAC,2BACAQ,QACAF,iBACAC,oBACAQ,YACAG,SACAF,kBACAC,qBACAI,SAIA1B,QAAA,GAAAlqB,SACAmrB,QAAA,GAAAlrB,SACAgrB,SAAA,GAAAhrB,QAkMA,QACAopB,MAAAA,MACA/iB,MAAAA,OASA,QAAAwlB,cAAA7H,WAAA+C,YAIA,QAAAnQ,QAAA3C,QAEA,GAAA6X,OAAA/E,WAAA+E,MAEAxX,SAAAL,OAAAK,SACAyT,eAAA/D,WAAA/qC,IAAAg7B,OAAAK,SAkBA,OAdAyX,YAAAhE,eAAArjB,MAAAonB,QAEAxX,SAAAU,YAEA+S,eAAAiE,iBAAA/X,QAIA+P,WAAApN,OAAAmR,gBAEAgE,WAAAhE,eAAArjB,IAAAonB,OAIA/D,eAIA,QAAArO,SAEAqS,cA/BA,GAAAA,cAmCA,QAEAnV,OAAAA,OACA8C,MAAAA,OAUA,QAAAuS,gBAAA53C,QAIA,IAAA,GAFA63C,OAAA73C,OAAA0N,MAAA,MAEAhc,EAAA,EAAAA,EAAAmmD,MAAArqD,OAAAkE,IAEAmmD,MAAAnmD,GAAAA,EAAA,EAAA,KAAAmmD,MAAAnmD,EAIA,OAAAmmD,OAAA35C,KAAA,MAIA,QAAA45C,aAAA7qB,GAAAjE,KAAAhpB,QAEA,GAAA8zB,QAAA7G,GAAA4H,aAAA7L,KAoBA,OAlBAiE,IAAAgI,aAAAnB,OAAA9zB,QACAitB,GAAAiI,cAAApB,SAEA,IAAA7G,GAAA8qB,mBAAAjkB,OAAA7G,GAAA+qB,iBAEAr6C,QAAAiuB,MAAA,+CAIA,KAAAqB,GAAAgrB,iBAAAnkB,SAEAn2B,QAAAH,KAAA,2CAAAwrB,OAAAiE,GAAA8H,cAAA,SAAA,WAAA9H,GAAAgrB,iBAAAnkB,QAAA8jB,eAAA53C,SAOA8zB,OAUA,QAAAokB,uBAAAhvB,UAEA,OAAAA,UAEA,IAAAmB,gBACA,OAAA,SAAA,YACA,KAAA8tB,cACA,OAAA,OAAA,YACA,KAAAC,cACA,OAAA,OAAA,YACA,KAAAC,eACA,OAAA,OAAA,iBACA,KAAAC,gBACA,OAAA,OAAA,kBACA,KAAAC,cACA,OAAA,OAAA,mBACA,KAAAC,eACA,OAAA,QAAA,mCACA,SACA,KAAA,IAAAr6C,OAAA,yBAAA+qB,WAMA,QAAAuvB,0BAAAC,aAAAxvB,UAEA,GAAAyvB,YAAAT,sBAAAhvB,SACA,OAAA,QAAAwvB,aAAA,2BAAAC,WAAA,GAAA,WAAAA,WAAA,GAAA,MAIA,QAAAC,0BAAAF,aAAAxvB,UAEA,GAAAyvB,YAAAT,sBAAAhvB,SACA,OAAA,QAAAwvB,aAAA,mCAAAC,WAAA,GAAAA,WAAA,GAAA,MAIA,QAAAE,wBAAAH,aAAAI,aAEA,GAAAC,gBAEA,QAAAD,aAEA,IAAAE,mBACAD,gBAAA,QACA,MAEA,KAAAE,qBACAF,gBAAA,UACA,MAEA,KAAAG,uBACAH,gBAAA,YACA,MAEA,KAAAI,mBACAJ,gBAAA,iBACA,MAEA,SACA,KAAA,IAAA56C,OAAA,4BAAA26C,aAIA,MAAA,QAAAJ,aAAA,2BAAAK,gBAAA,0BAIA,QAAAK,oBAAA7b,WAAAT,WAAAuc,oBAWA,MATA9b,YAAAA,gBAGAA,WAAAC,aAAAV,WAAAwc,cAAAxc,WAAAyc,SAAAzc,WAAA0c,WAAA1c,WAAApB,YAAA,kDAAA,IACA6B,WAAAE,WAAAX,WAAA2c,yBAAAJ,mBAAAz0C,IAAA,kBAAA,wCAAA,GACA24B,WAAA,aAAA8b,mBAAAz0C,IAAA,sBAAA,2CAAA,IACA24B,WAAAI,kBAAAb,WAAA2R,SAAA4K,mBAAAz0C,IAAA,0BAAA,gDAAA,IAGA80C,OAAAC,iBAAAz7C,KAAA,MAIA,QAAA07C,iBAAA7c,SAEA,GAAA8c,UAEA,KAAA,GAAAruD,QAAAuxC,SAAA,CAEA,GAAAjgC,OAAAigC,QAAAvxC,OAEA,IAAAsR,OAEA+8C,OAAA/rD,KAAA,WAAAtC,KAAA,IAAAsR,OAIA,MAAA+8C,QAAA37C,KAAA,MAIA,QAAA47C,yBAAA7sB,GAAAoE,QAAA0oB,aAMA,IAAA,GAJAxkD,eAEA4P,EAAA8nB,GAAAqE,oBAAAD,QAAApE,GAAA+sB,mBAEAtoD,EAAA,EAAAA,EAAAyT,EAAAzT,IAAA;0FAEA,GAAA8/B,MAAAvE,GAAAgtB,gBAAA5oB,QAAA3/B,GACAlG,KAAAgmC,KAAAhmC,IAIA+J,YAAA/J,MAAAyhC,GAAAkH,kBAAA9C,QAAA7lC,MAIA,MAAA+J,YAIA,QAAAokD,iBAAA35C,QAEA,MAAA,KAAAA,OAIA,QAAAk6C,kBAAAl6C,OAAA88B,YAEA,MAAA98B,QACAjV,QAAA,kBAAA+xC,WAAAqd,cACApvD,QAAA,mBAAA+xC,WAAAsd,eACArvD,QAAA,wBAAA+xC,WAAAud,mBACAtvD,QAAA,oBAAA+xC,WAAAwd,gBACAvvD,QAAA,mBAAA+xC,WAAAyd,eAIA,QAAAC,eAAAx6C,QAIA,QAAAjV,SAAAwX,MAAAk4C,SAEA,GAAA1vD,SAAA2vD,YAAAD,QAEA,QAAA1/C,KAAAhQ,QAEA,KAAA,IAAAoT,OAAA,6BAAAs8C,QAAA,IAIA,OAAAD,eAAAzvD,SAZA,GAAA4vD,SAAA,iCAgBA,OAAA36C,QAAAjV,QAAA4vD,QAAA5vD,SAIA,QAAA6vD,aAAA56C,QAIA,QAAAjV,SAAAwX,MAAAwpC,MAAAoD,IAAA0L,SAIA,IAAA,GAFAC,QAAA,GAEAppD,EAAAuY,SAAA8hC,OAAAr6C,EAAAuY,SAAAklC,KAAAz9C,IAEAopD,QAAAD,QAAA9vD,QAAA,WAAA,KAAA2G,EAAA,KAIA,OAAAopD,QAZA,GAAAH,SAAA,qEAgBA,OAAA36C,QAAAjV,QAAA4vD,QAAA5vD,SAIA,QAAAgwD,cAAAnuB,SAAA2Q,WAAAyd,KAAAvgB,SAAA3G,OAAAgJ,YAEA,GAAA7P,IAAAL,SAAA0M,QAEAyD,QAAAtC,SAAAsC,QAEAhJ,aAAAD,OAAAC,aACAC,eAAAF,OAAAE,eAEAinB,oBAAA,sBAEAne,YAAAoe,gBAAArX,aAEAoX,oBAAA,qBAEAne,WAAAoe,gBAAAC,mBAEAF,oBAAA,0BAIA,IAAAG,kBAAA,mBACAC,iBAAA,yBACAC,qBAAA,0BAEA,IAAAxe,WAAA2R,OAAA,CAEA,OAAAhU,SAAAgU,OAAA9lB,SAEA,IAAAsD,uBACA,IAAAsvB,uBACAH,iBAAA,kBACA,MAEA,KAAAI,yBACA,IAAAC,yBACAL,iBAAA,qBACA,MAEA,KAAAM,kCACA,IAAAC,kCACAP,iBAAA,qBACA,MAEA,KAAAQ,4BACAR,iBAAA,qBAKA,OAAA3gB,SAAAgU,OAAA9lB,SAEA,IAAA4yB,uBACA,IAAAI,kCACAN,iBAAA,yBAKA,OAAA5gB,SAAAiU,SAEA,IAAAC,mBACA2M,qBAAA,0BACA,MAEA,KAAAO,cACAP,qBAAA,qBACA,MAEA,KAAAQ,cACAR,qBAAA,uBAOA,GAcAS,cAAAC,eAdAC,kBAAArvB,SAAAsvB,YAAA,EAAAtvB,SAAAsvB,YAAA,EAMAC,iBAAA/C,mBAAA3e,SAAA8C,WAAAT,WAAAS,YAEA6e,cAAAxC,gBAAA7c,SAIA1L,QAAApE,GAAAgH,eAIAwG,UAAA4hB,qBAEAN,cAEAK,cAEA,MAEA1C,OAAAC,iBAAAz7C,KAAA,MAEA89C,gBAEAG,iBACAC,cAEA,MAEA1C,OAAAC,iBAAAz7C,KAAA,QAIA69C,cAEA,aAAAjf,WAAA9H,UAAA,UACA,aAAA8H,WAAA9H,UAAA,QAEA,uBAAAlB,OAAAtoC,KAEA4wD,cAEAtf,WAAAwf,uBAAA,0BAAA,GAEA,wBAAAL,kBAEA,qBAAAnf,WAAAyf,SACAzf,WAAA0f,QAAA1f,WAAA5C,IAAA,kBAAA,GACA4C,WAAA0f,QAAA1f,WAAA2f,OAAA,mBAAA,GAEA3f,WAAA1kC,IAAA,kBAAA,GACA0kC,WAAA2R,OAAA,qBAAA,GACA3R,WAAA2R,OAAA,WAAA4M,iBAAA,GACAve,WAAAsR,SAAA,uBAAA,GACAtR,WAAAwR,MAAA,oBAAA,GACAxR,WAAA4f,YAAA,0BAAA,GACA5f,WAAAyc,QAAA,sBAAA,GACAzc,WAAA0c,UAAA,wBAAA,GACA1c,WAAAsB,iBAAAtB,WAAAwf,uBAAA,8BAAA,GACAxf,WAAA0R,YAAA,0BAAA,GACA1R,WAAA6f,aAAA,2BAAA,GACA7f,WAAA8f,aAAA,2BAAA,GACA9f,WAAAqB,SAAA,uBAAA,GACArB,WAAAnB,aAAA,oBAAA,GAEAmB,WAAApB,YAAA,sBAAA,GAEAoB,WAAAM,SAAA,uBAAA,GACAN,WAAA+f,iBAAA,uBAAA,GAEA/f,WAAAO,aAAA,2BAAA,GACAP,WAAAQ,eAAA,IAAAR,WAAApB,YAAA,2BAAA,GACAoB,WAAAggB,YAAA,uBAAA,GACAhgB,WAAAigB,UAAA,qBAAA,GAEA,+BAAAjgB,WAAAkgB,kBAEAlgB,WAAAmgB,iBAAA,wBAAA,GACAngB,WAAAmgB,iBAAA,WAAAhC,oBAAA,GAEAne,WAAAogB,gBAAA,8BAAA,GAEApgB,WAAA2c,uBAAA,0BAAA,GACA3c,WAAA2c,wBAAAlc,WAAA34B,IAAA,kBAAA,8BAAA,GAEA,4BACA,gCACA,iCACA,2BACA,6BACA,+BAEA,2BACA,yBACA,qBAEA,mBAEA,0BAEA,SAEA,0BAEA,iCACA,iCACA,iCACA,iCAEA,4BAEA,mCACA,mCACA,mCACA,mCAEA,UAEA,mCACA,mCACA,mCACA,mCAEA,WAEA,SAEA,sBAEA,8BACA,+BAEA,SAEA,MAEA80C,OAAAC,iBAAAz7C,KAAA,MAEA89C,gBAEAG,iBAEA,aAAArf,WAAA9H,UAAA,UACA,aAAA8H,WAAA9H,UAAA,QAEA,uBAAAlB,OAAAtoC,KAEA4wD,cAEAtf,WAAA1D,UAAA,qBAAA0D,WAAA1D,UAAA,GAEA,wBAAA6iB,kBAEAnf,WAAA0f,QAAA1f,WAAA5C,IAAA,kBAAA,GACA4C,WAAA0f,QAAA1f,WAAA2f,OAAA,mBAAA,GAEA3f,WAAA1kC,IAAA,kBAAA,GACA0kC,WAAA2R,OAAA,qBAAA,GACA3R,WAAA2R,OAAA,WAAA2M,iBAAA,GACAte,WAAA2R,OAAA,WAAA4M,iBAAA,GACAve,WAAA2R,OAAA,WAAA6M,qBAAA,GACAxe,WAAAsR,SAAA,uBAAA,GACAtR,WAAAwR,MAAA,oBAAA,GACAxR,WAAA4f,YAAA,0BAAA,GACA5f,WAAAyc,QAAA,sBAAA,GACAzc,WAAA0c,UAAA,wBAAA,GACA1c,WAAA0R,YAAA,0BAAA,GACA1R,WAAA6f,aAAA,2BAAA,GACA7f,WAAA8f,aAAA,2BAAA,GACA9f,WAAAqB,SAAA,uBAAA,GACArB,WAAAnB,aAAA,oBAAA,GAEAmB,WAAAqgB,YAAA,0BAAA,GAEArgB,WAAApB,YAAA,sBAAA,GAEAoB,WAAAggB,YAAA,uBAAA,GACAhgB,WAAAigB,UAAA,qBAAA,GAEA,+BAAAjgB,WAAAkgB,kBACA,kCAAAlgB,WAAAkgB,kBAAAlgB,WAAAsgB,qBAEAtgB,WAAAmgB,iBAAA,wBAAA,GACAngB,WAAAmgB,iBAAA,WAAAhC,oBAAA,GAEAne,WAAA/B,mBAAA,8BAAA,GAEA+B,WAAAugB,wBAAA,oCAAA,GAEAvgB,WAAA2c,uBAAA,0BAAA,GACA3c,WAAA2c,wBAAAlc,WAAA34B,IAAA,kBAAA,8BAAA,GAEAk4B,WAAA2R,QAAAlR,WAAA34B,IAAA,0BAAA,0BAAA,GAEA,2BACA,+BAEAk4B,WAAAgc,cAAAwE,cAAA,uBAAA,GACAxgB,WAAAgc,cAAAwE,cAAA5C,YAAA,0BAAA,GACA5d,WAAAgc,cAAAwE,cAAAzE,uBAAA,cAAA/b,WAAAgc,aAAA,GAEAhc,WAAAJ,UAAA,oBAAA,GAEAI,WAAAygB,gBAAAzgB,WAAA0gB,aAAA1gB,WAAA2gB,gBAAA3gB,WAAA4gB,oBAAAhD,YAAA,wBAAA,GACA5d,WAAA0gB,YAAA/E,yBAAA,mBAAA3b,WAAA0gB,aAAA,GACA1gB,WAAA2gB,eAAAhF,yBAAA,sBAAA3b,WAAA2gB,gBAAA,GACA3gB,WAAA4gB,oBAAAjF,yBAAA,2BAAA3b,WAAA4gB,qBAAA,GACA5gB,WAAAygB,eAAA3E,yBAAA,sBAAA9b,WAAAygB,gBAAA,GAEAzgB,WAAAmB,aAAA,yBAAAxD,SAAAwD,aAAA,GAEA,MAEAyb,OAAAC,iBAAAz7C,KAAA,OAIA61B,aAAAymB,cAAAzmB,cACAA,aAAAmmB,iBAAAnmB,aAAA+I,YAEA9I,eAAAwmB,cAAAxmB,gBACAA,eAAAkmB,iBAAAlmB,eAAA8I,YAEArC,SAAAkjB,mBAEA5pB,aAAA6mB,YAAA7mB,cACAC,eAAA4mB,YAAA5mB,gBAIA,IAAA4pB,YAAA7B,aAAAhoB,aACA8pB,aAAA7B,eAAAhoB,eAKA8pB,eAAAhG,YAAA7qB,GAAAA,GAAA8H,cAAA6oB,YACAG,iBAAAjG,YAAA7qB,GAAAA,GAAA6H,gBAAA+oB,aAEA5wB,IAAAkI,aAAA9D,QAAAysB,gBACA7wB,GAAAkI,aAAA9D,QAAA0sB,sBAIAhjD,KAAA0/B,SAAAqD,oBAEA7Q,GAAA+wB,mBAAA3sB,QAAA,EAAAoJ,SAAAqD,sBAEA,IAAAhB,WAAAO,cAGApQ,GAAA+wB,mBAAA3sB,QAAA,EAAA,YAIApE,GAAAmI,YAAA/D,QAEA,IAAA4sB,YAAAhxB,GAAAixB,kBAAA7sB,SACA8sB,UAAAlxB,GAAAgrB,iBAAA6F,gBACAM,YAAAnxB,GAAAgrB,iBAAA8F,kBAEAM,UAAA,EACAC,iBAAA,GAKA,IAAArxB,GAAAqE,oBAAAD,QAAApE,GAAAsxB,cAEAF,UAAA,EAEA1gD,QAAAiuB,MAAA,qCAAAqB,GAAAuxB,WAAA,qBAAAvxB,GAAAqE,oBAAAD,QAAApE,GAAAwxB,iBAAA,uBAAAR,WAAAE,UAAAC,cAEA,KAAAH,WAEAtgD,QAAAH,KAAA,6CAAAygD,YAEA,KAAAE,WAAA,KAAAC,cAEAE,iBAAA,GAIAA,kBAEA1wD,KAAA8wD,aAEAL,SAAAA,SACA5jB,SAAAA,SAEAwjB,WAAAA,WAEAlqB,cAEA4qB,IAAAR,UACAhiC,OAAA4/B,cAIA/nB,gBAEA2qB,IAAAP,YACAjiC,OAAA6/B,kBAUA/uB,GAAA2xB,aAAAd,gBACA7wB,GAAA2xB,aAAAb,iBAIA,IAAAc,eAEAjxD,MAAA4kD,YAAA,WAQA,WANAz3C,KAAA8jD,iBAEAA,eAAA,GAAAztB,eAAAnE,GAAAoE,QAAAzE,WAIAiyB,eAMA,IAAAC,iBAyDA,OAvDAlxD,MAAAmxD,cAAA,WAQA,WANAhkD,KAAA+jD,mBAEAA,iBAAAhF,wBAAA7sB,GAAAoE,UAIAytB,kBAMAlxD,KAAAoxD,QAAA,WAEA/xB,GAAAgyB,cAAA5tB,SACAzjC,KAAAyjC,YAAAt2B,IAMAtD,OAAA2wC,iBAAAx6C,MAEAymC,UACAzvB,IAAA,WAGA,MADAjH,SAAAH,KAAA,wDACA5P,KAAA4kD,gBAKAj9C,YACAqP,IAAA,WAGA,MADAjH,SAAAH,KAAA,4DACA5P,KAAAmxD,oBAUAnxD,KAAAyiC,GAAA6uB,iBACAtxD,KAAAotD,KAAAA,KACAptD,KAAAuxD,UAAA,EACAvxD,KAAAyjC,QAAAA,QACAzjC,KAAAmmC,aAAA+pB,eACAlwD,KAAAomC,eAAA+pB,iBAEAnwD,KAQA,QAAAwxD,eAAAxyB,SAAA2Q,WAAArL,cAkCA,QAAAmtB,eAAAzf,QAEA,GAAA0f,UAAA1f,OAAA0f,SACAC,MAAAD,SAAAC,KAEA,IAAArtB,aAAAstB,oBAEA,MAAA,KAWA,IAAAC,iBAAAvtB,aAAAwtB,kBACAC,gBAAAnjD,KAAAE,OAAA+iD,gBAAA,IAAA,GAEAlD,SAAA//C,KAAAY,IAAAuiD,gBAAAJ,MAAA/xD,OAEA,OAAA+uD,UAAAgD,MAAA/xD,QAEAmQ,QAAAH,KAAA,qCAAA+hD,MAAA/xD,OAAA,6BAAA+uD,SAAA,KACA,GAIAA,SAMA,QAAAqD,2BAAAxnD,IAAAynD,qBAEA,GAAA32B,SAwBA,OAtBA9wB,KAIAA,IAAAy4C,UAEA3nB,SAAA9wB,IAAA8wB,SAEA9wB,IAAA0nD,sBAEAniD,QAAAH,KAAA,6HACA0rB,SAAA9wB,IAAA2yB,QAAA7B,UATAA,SAAAmB,eAcAnB,WAAAmB,gBAAAw1B,sBAEA32B,SAAAsvB,eAIAtvB,SA9FA,GAAA62B,aAEAC,WACAhiB,kBAAA,QACAO,qBAAA,eACA0hB,mBAAA,SACA9R,kBAAA,QACA+R,oBAAA,UACAC,kBAAA,QACAC,iBAAA,QACAC,qBAAA,WACAC,qBAAA,WACAC,kBAAA,QACAC,mBAAA,SACAC,eAAA,SACAC,eAAA,UAGAC,gBACA,YAAA,yBAAA,MAAA,cAAA,SAAA,aAAA,iBACA,WAAA,QAAA,cAAA,sBAAA,UAAA,YAAA,kBAAA,cACA,eAAA,eAAA,cACA,WAAA,UAAA,eAAA,MAAA,SAAA,SACA,cAAA,kBAAA,yBAAA,WACA,WAAA,mBAAA,eAAA,eACA,kBAAA,kBAAA,qBACA,eAAA,iBAAA,gBAAA,gBAAA,oBACA,mBAAA,gBAAA,cAAA,0BACA,YAAA,cAAA,YAAA,oBAAA,sBAAA,eAAA,YAsEA/yD,MAAAgzD,cAAA,SAAAnmB,SAAAa,OAAA0Z,QAAA9a,IAAA2mB,YAAAC,kBAAAlhB,QAEA,GAAAmhB,UAAAf,UAAAvlB,SAAAzR,MAKAuzB,SAAA3c,OAAAgB,cAAAye,cAAAzf,QAAA,EACA5K,UAAA9C,aAAA8C,SAEA,QAAAyF,SAAAzF,YAEAA,UAAA9C,aAAA8uB,gBAAAvmB,SAAAzF,cAEAyF,SAAAzF,WAEAr3B,QAAAH,KAAA,oCAAAi9B,SAAAzF,UAAA,uBAAAA,UAAA,WAMA,IAAAisB,qBAAAr0B,SAAAs0B,iBA8EA,QA1EAH,SAAAA,SAEA/rB,UAAAA,UACAsnB,uBAAApqB,aAAAivB,eACA5D,eAAAqC,0BAAAqB,oBAAAA,oBAAAl2B,QAAA,KAAA6B,SAAAw0B,aACAhpD,MAAAqiC,SAAAriC,IACAolD,YAAAoC,0BAAAnlB,SAAAriC,IAAAw0B,SAAAy0B,YACA5S,SAAAhU,SAAAgU,OACA6S,WAAA7mB,SAAAgU,QAAAhU,SAAAgU,OAAA9lB,QACA80B,eAAAmC,0BAAAnlB,SAAAgU,OAAA7hB,SAAAy0B,YACA/H,eAAA7e,SAAAgU,SAAAhU,SAAAgU,OAAA9lB,UAAA6yB,yBAAA/gB,SAAAgU,OAAA9lB,UAAA8yB,yBACArN,WAAA3T,SAAA2T,SACAE,QAAA7T,SAAA6T,MACAoO,cAAAjiB,SAAAiiB,YACAgB,oBAAAkC,0BAAAnlB,SAAAiiB,YAAA9vB,SAAAy0B,YACA9H,UAAA9e,SAAA8e,QACAC,YAAA/e,SAAA+e,UACApb,kBAAA3D,SAAA2D,gBACAue,eAAAliB,SAAAkiB,aACAC,eAAAniB,SAAAmiB,aACApO,cAAA/T,SAAA+T,YACArQ,WAAA1D,SAAA0D,SAEAgf,cAAA1iB,SAAA0iB,YAEAzO,QAAAjU,SAAAiU,QAEA/S,aAAAlB,SAAAkB,aAEAzB,MAAAA,IACAsiB,OAAA/hB,SAAAP,IACAuiB,OAAAviB,KAAAA,IAAAI,UAEAoB,YAAAjB,SAAAiB,YAEAwhB,gBAAAziB,SAAAyiB,gBACAzD,uBAAAvnB,aAAAunB,uBAEArc,SAAA3C,SAAA2C,UAAAmf,SAAA,EACAA,SAAAA,SACAM,iBAAA3qB,aAAAstB,oBAEAniB,aAAA5C,SAAA4C,aACAC,aAAA7C,SAAA6C,aACAikB,gBAAA30B,SAAA20B,gBACAC,gBAAA50B,SAAA40B,gBAEArH,aAAA7e,OAAA4a,YAAA1oD,OACA8sD,eAAAhf,OAAA6b,MAAA3pD,OACA4sD,cAAA9e,OAAAmb,KAAAjpD,OACA6sD,kBAAA/e,OAAA0b,SAAAxpD,OACA+sD,cAAAjf,OAAAgc,KAAA9pD,OAEAwvD,kBAAA6D,YACAzD,oBAAA0D,kBAEApkB,UAAAjC,SAAAiC,UAEAugB,iBAAArwB,SAAAgY,UAAAjB,SAAA/D,OAAA8I,eAAAsM,QAAAxnD,OAAA,EACA0tD,cAAAtuB,SAAAgY,UAAA5b,KAEA8vB,YAAAlsB,SAAAksB,YACAuE,wBAAAzwB,SAAAywB,wBAEAtiB,mBAAAN,SAAAM,mBAEA3B,UAAAqB,SAAArB,UACA0jB,YAAAriB,SAAAe,OAAAiG,WACAsb,UAAAtiB,SAAAe,OAAAmG,SAEA1D,iBAAAljC,KAAA0/B,SAAAwD,cAAAxD,SAAAwD,eAQArwC,KAAA6zD,eAAA,SAAAhnB,SAAAqC,YAEA,GAAAr6B,SAaA,IAXAq6B,WAAAikB,SAEAt+C,MAAA3U,KAAAgvC,WAAAikB,WAIAt+C,MAAA3U,KAAA2sC,SAAAzG,gBACAvxB,MAAA3U,KAAA2sC,SAAA1G,mBAIAh5B,KAAA0/B,SAAAsC,QAEA,IAAA,GAAAvxC,QAAAivC,UAAAsC,QAEAt6B,MAAA3U,KAAAtC,MACAiX,MAAA3U,KAAA2sC,SAAAsC,QAAAvxC,MAMA,KAAA,GAAAkG,GAAA,EAAAA,EAAAivD,eAAAnzD,OAAAkE,IAEA+Q,MAAA3U,KAAAgvC,WAAA6jB,eAAAjvD,IAQA,OAJA+Q,OAAA3U,KAAA2sC,SAAAinB,gBAAAhqD,YAEA+K,MAAA3U,KAAA8+B,SAAAw0B,aAEA3+C,MAAAvE,QAIAtQ,KAAA+zD,eAAA,SAAAlnB,SAAA3G,OAAAgJ,WAAAke,MAKA,IAAA,GAHA3pB,SAGAuwB,EAAA,EAAAC,GAAA9B,SAAAvyD,OAAAo0D,EAAAC,GAAAD,IAAA,CAEA,GAAAE,aAAA/B,SAAA6B,EAEA,IAAAE,YAAA9G,OAAAA,KAAA,CAEA3pB,QAAAywB,cACAzwB,QAAA8tB,SAEA,QAaA,WAPApkD,KAAAs2B,UAEAA,QAAA,GAAA0pB,cAAAnuB,SAAA2Q,WAAAyd,KAAAvgB,SAAA3G,OAAAgJ,YACAijB,SAAAjyD,KAAAujC,UAIAA,SAIAzjC,KAAAm0D,eAAA,SAAA1wB,SAEA,GAAA,KAAAA,QAAA8tB,UAAA,CAGA,GAAAztD,GAAAquD,SAAAz5C,QAAA+qB,QACA0uB,UAAAruD,GAAAquD,SAAAA,SAAAvyD,OAAA,GACAuyD,SAAAiC,MAGA3wB,QAAA2tB,YAOApxD,KAAAmyD,SAAAA,SAQA,QAAAkC,eAAAne,IAAAvG,WAAAvL,MAAAkwB,WAAAhwB,aAAAiwB,MAAA3O,YAMA,QAAA4O,gBAAA15B,MAAA25B,SAEA,GAAA35B,MAAA57B,MAAAu1D,SAAA35B,MAAAgC,OAAA23B,QAAA,CAKA,GAAA3tB,OAAA2tB,QAAA7lD,KAAAsF,IAAA4mB,MAAA57B,MAAA47B,MAAAgC,QAEA8N,OAAArvC,SAAAkwC,gBAAA,+BAAA,SACAb,QAAA1rC,MAAA0P,KAAAE,MAAAgsB,MAAA57B,MAAA4nC,OACA8D,OAAA9N,OAAAluB,KAAAE,MAAAgsB,MAAAgC,OAAAgK,MAOA,OALA8D,QAAAe,WAAA,MACA+oB,UAAA55B,MAAA,EAAA,EAAAA,MAAA57B,MAAA47B,MAAAgC,OAAA,EAAA,EAAA8N,OAAA1rC,MAAA0rC,OAAA9N,QAEA/sB,QAAAH,KAAA,0CAAAkrB,MAAA57B,MAAA,IAAA47B,MAAAgC,OAAA,iBAAA8N,OAAA1rC,MAAA,IAAA0rC,OAAA9N,OAAAhC,OAEA8P,OAIA,MAAA9P,OAIA,QAAA65B,cAAA75B,OAEA,MAAAY,OAAAi5B,aAAA75B,MAAA57B,QAAAw8B,MAAAi5B,aAAA75B,MAAAgC,QAIA,QAAA83B,gBAAA95B,OAEA,GAAAA,gBAAA+5B,mBAAA/5B,gBAAAg6B,mBAAA,CAEA,GAAAlqB,QAAArvC,SAAAkwC,gBAAA,+BAAA,SACAb,QAAA1rC,MAAAw8B,MAAAq5B,kBAAAj6B,MAAA57B,OACA0rC,OAAA9N,OAAApB,MAAAq5B,kBAAAj6B,MAAAgC,OAOA,OALA8N,QAAAe,WAAA,MACA+oB,UAAA55B,MAAA,EAAA,EAAA8P,OAAA1rC,MAAA0rC,OAAA9N,QAEA/sB,QAAAH,KAAA,mDAAAkrB,MAAA57B,MAAA,IAAA47B,MAAAgC,OAAA,iBAAA8N,OAAA1rC,MAAA,IAAA0rC,OAAA9N,OAAAhC,OAEA8P,OAIA,MAAA9P,OAIA,QAAAk6B,wBAAA73B,SAEA,MAAAA,SAAAnC,QAAAe,qBAAAoB,QAAAlC,QAAAc,qBACAoB,QAAAhC,YAAA+C,eAAAf,QAAAhC,YAAAa,aAIA,QAAAi5B,6BAAA93B,QAAAw3B,cAEA,MAAAx3B,SAAAd,iBAAAs4B,cACAx3B,QAAAhC,YAAA+C,eAAAf,QAAAhC,YAAAa,aAMA,QAAAk5B,gBAAAC,GAEA,MAAAA,KAAAj3B,eAAAi3B,IAAAC,4BAAAD,IAAAE,0BAEAnf,IAAAnQ,QAIAmQ,IAAAof,OAMA,QAAAC,kBAAAv3D,OAEA,GAAAm/B,SAAAn/B,MAAAgF,MAEAm6B,SAAA4oB,oBAAA,UAAAwP,kBAEAC,kBAAAr4B,SAEAyoB,WAAAvhB,WAKA,QAAAoxB,uBAAAz3D,OAEA,GAAA03D,cAAA13D,MAAAgF,MAEA0yD,cAAA3P,oBAAA,UAAA0P,uBAEAE,uBAAAD,cAEA9P,WAAAvhB,WAMA,QAAAmxB,mBAAAr4B,SAEA,GAAAy4B,mBAAAtB,WAAAt9C,IAAAmmB,QAEA,IAAAA,QAAArC,OAAA86B,kBAAAC,0BAIA3f,IAAA4f,cAAAF,kBAAAC,+BAEA,CAIA,OAAA1oD,KAAAyoD,kBAAAG,YAAA,MAEA7f,KAAA4f,cAAAF,kBAAAI,gBAKA1B,WAAA/a,OAAApc,SAIA,QAAAw4B,wBAAAD,cAEA,GAAAO,wBAAA3B,WAAAt9C,IAAA0+C,cACAE,kBAAAtB,WAAAt9C,IAAA0+C,aAAAv4B,QAEA,IAAAu4B,aAAA,CAcA,OAZAvoD,KAAAyoD,kBAAAI,gBAEA9f,IAAA4f,cAAAF,kBAAAI,gBAIAN,aAAAp4B,cAEAo4B,aAAAp4B,aAAA6mB,UAIAuR,aAAAQ,wBAEA,IAAA,GAAApyD,GAAA,EAAAA,EAAA,EAAAA,IAEAoyC,IAAAigB,kBAAAF,uBAAAG,mBAAAtyD,IACAmyD,uBAAAI,oBAAAngB,IAAAogB,mBAAAL,uBAAAI,mBAAAvyD,QAMAoyC,KAAAigB,kBAAAF,uBAAAG,oBACAH,uBAAAI,oBAAAngB,IAAAogB,mBAAAL,uBAAAI,mBAIA/B,YAAA/a,OAAAmc,aAAAv4B,SACAm3B,WAAA/a,OAAAmc,eAQA,QAAA50B,cAAA3D,QAAAo5B,MAEA,GAAAX,mBAAAtB,WAAAt9C,IAAAmmB,QAEA,IAAAA,QAAAlD,QAAA,GAAA27B,kBAAAY,YAAAr5B,QAAAlD,QAAA,CAEA,GAAAa,OAAAqC,QAAArC,KAEA,QAAA3tB,KAAA2tB,MAEA/qB,QAAAH,KAAA,wEAAAutB,aAEA,CAAA,IAAA,IAAArC,MAAA/zB,SAOA,WADA0vD,eAAAb,kBAAAz4B,QAAAo5B,KAJAxmD,SAAAH,KAAA,yEAAAutB,UAWAiH,MAAAiF,cAAA6M,IAAA5M,SAAAitB,MACAnyB,MAAAiB,YAAA6Q,IAAA5Q,WAAAswB,kBAAAI,gBAIA,QAAA/0B,gBAAA9D,QAAAo5B,MAEA,GAAAX,mBAAAtB,WAAAt9C,IAAAmmB,QAEA,IAAA,IAAAA,QAAArC,MAAAl7B,OAEA,GAAAu9B,QAAAlD,QAAA,GAAA27B,kBAAAY,YAAAr5B,QAAAlD,QAAA,CAEA27B,kBAAAC,4BAEA14B,QAAAphC,iBAAA,UAAAw5D,kBAEAK,kBAAAC,0BAAA3f,IAAA/Q,gBAEAygB,WAAAvhB,YAIAD,MAAAiF,cAAA6M,IAAA5M,SAAAitB,MACAnyB,MAAAiB,YAAA6Q,IAAAwgB,iBAAAd,kBAAAC,2BAEA3f,IAAAygB,YAAAzgB,IAAA0gB,oBAAAz5B,QAAAZ,MAOA,KAAA,GALAs6B,cAAA15B,SAAAA,QAAA25B,oBACAC,cAAA55B,QAAArC,MAAA,IAAAqC,QAAArC,MAAA,GAAAi8B,cAEAC,aAEAlzD,EAAA,EAAAA,EAAA,EAAAA,IAQAkzD,UAAAlzD,GANA+yD,cAAAE,cAMAA,cAAA55B,QAAArC,MAAAh3B,GAAAg3B,MAAAqC,QAAArC,MAAAh3B,GAJA0wD,eAAAr3B,QAAArC,MAAAh3B,GAAAwgC,aAAA2yB,eAUA,IAAAn8B,OAAAk8B,UAAA,GACAE,kBAAAvC,aAAA75B,OACAq8B,SAAA5C,MAAA6C,QAAAj6B,QAAAlyB,QACAosD,OAAA9C,MAAA6C,QAAAj6B,QAAA/B,KAEAk8B,sBAAAphB,IAAAwgB,iBAAAv5B,QAAA+5B,kBAEA,KAAA,GAAApzD,GAAA,EAAAA,EAAA,EAAAA,IAEA,GAAA+yD,aAgBA,IAAA,GAFAU,QAAA17B,QAAAm7B,UAAAlzD,GAAA+3B,QAEAjc,EAAA,EAAAsqB,GAAArO,QAAAj8B,OAAAggB,EAAAsqB,GAAAtqB,IAEA23C,OAAA17B,QAAAjc,GAEAud,QAAAlyB,SAAAixB,YAAAiB,QAAAlyB,SAAAusD,UAEApzB,MAAAqzB,8BAAA/+C,QAAAy+C,WAAA,EAEA/yB,MAAAszB,qBAAAxhB,IAAAyhB,4BAAA7zD,EAAA8b,EAAAu3C,SAAAI,OAAAr4D,MAAAq4D,OAAAz6B,OAAA,EAAAy6B,OAAAh3C,MAIAxQ,QAAAH,KAAA,mGAMAw0B,MAAAmB,WAAA2Q,IAAAyhB,4BAAA7zD,EAAA8b,EAAAu3C,SAAAI,OAAAr4D,MAAAq4D,OAAAz6B,OAAA,EAAAq6B,SAAAE,OAAAE,OAAAh3C,UAhCAw2C,eAEA3yB,MAAAmB,WAAA2Q,IAAAyhB,4BAAA7zD,EAAA,EAAAqzD,SAAAH,UAAAlzD,GAAA5E,MAAA83D,UAAAlzD,GAAAg5B,OAAA,EAAAq6B,SAAAE,OAAAL,UAAAlzD,GAAAyc,MAIA6jB,MAAAmB,WAAA2Q,IAAAyhB,4BAAA7zD,EAAA,EAAAqzD,SAAAA,SAAAE,OAAAL,UAAAlzD,GAoCAmxD,6BAAA93B,QAAA+5B,oBAEAhhB,IAAA0hB,eAAA1hB,IAAAwgB,kBAIAd,kBAAAY,UAAAr5B,QAAAlD,QAEAkD,QAAAT,UAAAS,QAAAT,SAAAS,aAIAiH,OAAAiF,cAAA6M,IAAA5M,SAAAitB,MACAnyB,MAAAiB,YAAA6Q,IAAAwgB,iBAAAd,kBAAAC,2BAQA,QAAAgC,uBAAA16B,QAAAo5B,MAEAnyB,MAAAiF,cAAA6M,IAAA5M,SAAAitB,MACAnyB,MAAAiB,YAAA6Q,IAAAwgB,iBAAApC,WAAAt9C,IAAAmmB,SAAA64B,gBAIA,QAAAsB,sBAAAQ,YAAA36B,QAAA+5B,mBAEA,GAAA7R,UAkCA,IAhCA6R,mBAEAhhB,IAAAxQ,cAAAoyB,YAAA5hB,IAAAvQ,eAAA4uB,MAAA6C,QAAAj6B,QAAAnC,QACAkb,IAAAxQ,cAAAoyB,YAAA5hB,IAAArQ,eAAA0uB,MAAA6C,QAAAj6B,QAAAlC,QAEAib,IAAAxQ,cAAAoyB,YAAA5hB,IAAApQ,mBAAAyuB,MAAA6C,QAAAj6B,QAAAjC,YACAgb,IAAAxQ,cAAAoyB,YAAA5hB,IAAAlQ,mBAAAuuB,MAAA6C,QAAAj6B,QAAAhC,cAIA+a,IAAAxQ,cAAAoyB,YAAA5hB,IAAAvQ,eAAAuQ,IAAAtQ,eACAsQ,IAAAxQ,cAAAoyB,YAAA5hB,IAAArQ,eAAAqQ,IAAAtQ,eAEAzI,QAAAnC,QAAAe,qBAAAoB,QAAAlC,QAAAc,qBAEAhsB,QAAAH,KAAA,gIAAAutB,SAIA+Y,IAAAxQ,cAAAoyB,YAAA5hB,IAAApQ,mBAAAovB,eAAA/3B,QAAAjC,YACAgb,IAAAxQ,cAAAoyB,YAAA5hB,IAAAlQ,mBAAAkvB,eAAA/3B,QAAAhC,YAEAgC,QAAAhC,YAAA+C,eAAAf,QAAAhC,YAAAa,cAEAjsB,QAAAH,KAAA,kIAAAutB,UAMAkoB,UAAA1V,WAAA34B,IAAA,kCAEA,CAEA,GAAAmmB,QAAA/B,OAAA28B,WAAA,OAAApoB,WAAA34B,IAAA,4BAAA,MACA,IAAAmmB,QAAA/B,OAAA48B,eAAA,OAAAroB,WAAA34B,IAAA,iCAAA,QAEAmmB,QAAA9B,WAAA,GAAAi5B,WAAAt9C,IAAAmmB,SAAA86B,uBAEA/hB,IAAAgiB,cAAAJ,YAAAzS,UAAA8S,2BAAAvpD,KAAAY,IAAA2tB,QAAA9B,WAAAiJ,aAAA8zB,qBACA9D,WAAAt9C,IAAAmmB,SAAA86B,oBAAA96B,QAAA9B,aAQA,QAAAo7B,eAAAb,kBAAAz4B,QAAAo5B,UAEAppD,KAAAyoD,kBAAAG,cAEAH,kBAAAG,aAAA,EAEA54B,QAAAphC,iBAAA,UAAAw5D,kBAEAK,kBAAAI,eAAA9f,IAAA/Q,gBAEAygB,WAAAvhB,YAIAD,MAAAiF,cAAA6M,IAAA5M,SAAAitB,MACAnyB,MAAAiB,YAAA6Q,IAAA5Q,WAAAswB,kBAAAI,gBAEA9f,IAAAygB,YAAAzgB,IAAA0gB,oBAAAz5B,QAAAZ,OACA2Z,IAAAygB,YAAAzgB,IAAAmiB,+BAAAl7B,QAAAb,kBACA4Z,IAAAygB,YAAAzgB,IAAAoiB,iBAAAn7B,QAAAX,gBAEA,IAAA1B,OAAA05B,eAAAr3B,QAAArC,MAAAwJ,aAAAwN,eAEAkjB,wBAAA73B,WAAA,IAAAw3B,aAAA75B,SAEAA,MAAA85B,eAAA95B,OAIA,IAAAo8B,mBAAAvC,aAAA75B,OACAq8B,SAAA5C,MAAA6C,QAAAj6B,QAAAlyB,QACAosD,OAAA9C,MAAA6C,QAAAj6B,QAAA/B,KAEAk8B,sBAAAphB,IAAA5Q,WAAAnI,QAAA+5B,kBAEA,IAAAK,QAAA17B,QAAAsB,QAAAtB,OAEA,IAAAsB,QAAAo7B,eAAA,CAIA,GAAAC,gBAAAtiB,IAAAuiB,eAEA,IAAAt7B,QAAA/B,OAAA28B,UAAA,CAEA,IAAAW,UAAA,KAAA,IAAAnoD,OAAA,iDACAioD,gBAAAtiB,IAAAyiB,uBAEAD,aAGAF,eAAAtiB,IAAA0iB,kBAIAz7B,SAAAlyB,SAAA4tD,aAAAL,iBAAAtiB,IAAAuiB,iBAKAt7B,QAAA/B,OAAA09B,mBAAA37B,QAAA/B,OAAA29B,kBAEAhpD,QAAAH,KAAA,+FAEAutB,QAAA/B,KAAA09B,kBACAzB,OAAA9C,MAAA6C,QAAAj6B,QAAA/B,OAQA+B,QAAAlyB,SAAA+tD,qBAEAR,eAAAtiB,IAAA+iB,cAKA97B,QAAA/B,OAAA89B,qBAEAnpD,QAAAH,KAAA,oFAEAutB,QAAA/B,KAAA89B,mBACA7B,OAAA9C,MAAA6C,QAAAj6B,QAAA/B,QAMAgJ,MAAAmB,WAAA2Q,IAAA5Q,WAAA,EAAAkzB,eAAA19B,MAAA57B,MAAA47B,MAAAgC,OAAA,EAAAq6B,SAAAE,OAAA,UAEA,IAAAl6B,QAAA45B,cAMA,GAAAl7B,QAAAj8B,OAAA,GAAAs3D,kBAAA,CAEA,IAAA,GAAApzD,GAAA,EAAAyyC,GAAA1a,QAAAj8B,OAAAkE,EAAAyyC,GAAAzyC,IAEAyzD,OAAA17B,QAAA/3B,GACAsgC,MAAAmB,WAAA2Q,IAAA5Q,WAAAxhC,EAAAqzD,SAAAI,OAAAr4D,MAAAq4D,OAAAz6B,OAAA,EAAAq6B,SAAAE,OAAAE,OAAAh3C,KAIA4c,SAAAd,iBAAA,MAIA+H,OAAAmB,WAAA2Q,IAAA5Q,WAAA,EAAA6xB,SAAAr8B,MAAA57B,MAAA47B,MAAAgC,OAAA,EAAAq6B,SAAAE,OAAAv8B,MAAAva,UAIA,IAAA4c,QAAA25B,oBAEA,IAAA,GAAAhzD,GAAA,EAAAyyC,GAAA1a,QAAAj8B,OAAAkE,EAAAyyC,GAAAzyC,IAEAyzD,OAAA17B,QAAA/3B,GAEAq5B,QAAAlyB,SAAAixB,YAAAiB,QAAAlyB,SAAAusD,UAEApzB,MAAAqzB,8BAAA/+C,QAAAy+C,WAAA,EAEA/yB,MAAAszB,qBAAAxhB,IAAA5Q,WAAAxhC,EAAAqzD,SAAAI,OAAAr4D,MAAAq4D,OAAAz6B,OAAA,EAAAy6B,OAAAh3C,MAIAxQ,QAAAH,KAAA,kGAMAw0B,MAAAmB,WAAA2Q,IAAA5Q,WAAAxhC,EAAAqzD,SAAAI,OAAAr4D,MAAAq4D,OAAAz6B,OAAA,EAAAq6B,SAAAE,OAAAE,OAAAh3C,UAcA,IAAAsb,QAAAj8B,OAAA,GAAAs3D,kBAAA,CAEA,IAAA,GAAApzD,GAAA,EAAAyyC,GAAA1a,QAAAj8B,OAAAkE,EAAAyyC,GAAAzyC,IAEAyzD,OAAA17B,QAAA/3B,GACAsgC,MAAAmB,WAAA2Q,IAAA5Q,WAAAxhC,EAAAqzD,SAAAA,SAAAE,OAAAE,OAIAp6B,SAAAd,iBAAA,MAIA+H,OAAAmB,WAAA2Q,IAAA5Q,WAAA,EAAA6xB,SAAAA,SAAAE,OAAAv8B,MAMAm6B,6BAAA93B,QAAA+5B,oBAAAhhB,IAAA0hB,eAAA1hB,IAAA5Q,YAEAswB,kBAAAY,UAAAr5B,QAAAlD,QAEAkD,QAAAT,UAAAS,QAAAT,SAAAS,SAOA,QAAAg8B,yBAAAC,YAAA1D,aAAA2D,WAAAC,eAEA,GAAAnC,UAAA5C,MAAA6C,QAAA1B,aAAAv4B,QAAAlyB,QACAosD,OAAA9C,MAAA6C,QAAA1B,aAAAv4B,QAAA/B,KACAgJ,OAAAmB,WAAA+zB,cAAA,EAAAnC,SAAAzB,aAAAx2D,MAAAw2D,aAAA54B,OAAA,EAAAq6B,SAAAE,OAAA,MACAnhB,IAAAqjB,gBAAArjB,IAAAsjB,YAAAJ,aACAljB,IAAAujB,qBAAAvjB,IAAAsjB,YAAAH,WAAAC,cAAAhF,WAAAt9C,IAAA0+C,aAAAv4B,SAAA64B,eAAA,GACA9f,IAAAqjB,gBAAArjB,IAAAsjB,YAAA,MAKA,QAAAE,0BAAAC,aAAAjE,cAEAxf,IAAA0jB,iBAAA1jB,IAAA2jB,aAAAF,cAEAjE,aAAAt4B,cAAAs4B,aAAAr4B,eAEA6Y,IAAA4jB,oBAAA5jB,IAAA2jB,aAAA3jB,IAAA0iB,kBAAAlD,aAAAx2D,MAAAw2D,aAAA54B,QACAoZ,IAAA6jB,wBAAA7jB,IAAAsjB,YAAAtjB,IAAA8jB,iBAAA9jB,IAAA2jB,aAAAF,eAEAjE,aAAAt4B,aAAAs4B,aAAAr4B,eAEA6Y,IAAA4jB,oBAAA5jB,IAAA2jB,aAAA3jB,IAAA+iB,cAAAvD,aAAAx2D,MAAAw2D,aAAA54B,QACAoZ,IAAA6jB,wBAAA7jB,IAAAsjB,YAAAtjB,IAAA+jB,yBAAA/jB,IAAA2jB,aAAAF,eAKAzjB,IAAA4jB,oBAAA5jB,IAAA2jB,aAAA3jB,IAAAgkB,MAAAxE,aAAAx2D,MAAAw2D,aAAA54B,QAIAoZ,IAAA0jB,iBAAA1jB,IAAA2jB,aAAA,MAKA,QAAAM,mBAAAf,YAAA1D,cAGA,GADAA,cAAAA,aAAAQ,wBACA,KAAA,IAAA3lD,OAAA,0DAIA,IAFA2lC,IAAAqjB,gBAAArjB,IAAAsjB,YAAAJ,cAEA1D,aAAAp4B,eAAAo4B,aAAAp4B,aAAAi7B,eAEA,KAAA,IAAAhoD,OAAA,sEAKA+jD,YAAAt9C,IAAA0+C,aAAAp4B,cAAA04B,gBACAN,aAAAp4B,aAAAxC,MAAA57B,QAAAw2D,aAAAx2D,OACAw2D,aAAAp4B,aAAAxC,MAAAgC,SAAA44B,aAAA54B,SACA44B,aAAAp4B,aAAAxC,MAAA57B,MAAAw2D,aAAAx2D,MACAw2D,aAAAp4B,aAAAxC,MAAAgC,OAAA44B,aAAA54B,OACA44B,aAAAp4B,aAAAuN,aAAA,GAGA/J,aAAA40B,aAAAp4B,aAAA,EAEA,IAAA88B,mBAAA9F,WAAAt9C,IAAA0+C,aAAAp4B,cAAA04B,cAEA,IAAAN,aAAAp4B,aAAAryB,SAAA4tD,YAEA3iB,IAAAujB,qBAAAvjB,IAAAsjB,YAAAtjB,IAAA8jB,iBAAA9jB,IAAA5Q,WAAA80B,kBAAA,OAEA,CAAA,GAAA1E,aAAAp4B,aAAAryB,SAAA+tD,mBAMA,KAAA,IAAAzoD,OAAA,8BAJA2lC,KAAAujB,qBAAAvjB,IAAAsjB,YAAAtjB,IAAA+jB,yBAAA/jB,IAAA5Q,WAAA80B,kBAAA,IAWA,QAAAC,wBAAA3E,cAEA,GAAAO,wBAAA3B,WAAAt9C,IAAA0+C,cAEA4E,QAAA,IAAA5E,aAAAQ,uBAEA,IAAAR,aAAAp4B,aAAA,CAEA,GAAAg9B,OAAA,KAAA,IAAA/pD,OAAA,2DAEA4pD,mBAAAlE,uBAAAG,mBAAAV,kBAIA,IAAA4E,OAAA,CAEArE,uBAAAI,qBAEA,KAAA,GAAAvyD,GAAA,EAAAA,EAAA,EAAAA,IAEAoyC,IAAAqjB,gBAAArjB,IAAAsjB,YAAAvD,uBAAAG,mBAAAtyD,IACAmyD,uBAAAI,mBAAAvyD,GAAAoyC,IAAAqkB,qBACAb,yBAAAzD,uBAAAI,mBAAAvyD,GAAA4xD,kBAMAxf,KAAAqjB,gBAAArjB,IAAAsjB,YAAAvD,uBAAAG,oBACAH,uBAAAI,mBAAAngB,IAAAqkB,qBACAb,yBAAAzD,uBAAAI,mBAAAX,aAMAxf,KAAAqjB,gBAAArjB,IAAAsjB,YAAA,MAKA,QAAAgB,mBAAA9E,cAEA,GAAAO,wBAAA3B,WAAAt9C,IAAA0+C,cACAE,kBAAAtB,WAAAt9C,IAAA0+C,aAAAv4B,QAEAu4B,cAAA35D,iBAAA,UAAA05D,uBAEAG,kBAAAI,eAAA9f,IAAA/Q,gBAEAygB,WAAAvhB,UAEA,IAAAi2B,SAAA,IAAA5E,aAAAQ,wBACAuE,mBAAA9F,aAAAe;mGAIA,IAAA4E,OAAA,CAEArE,uBAAAG,qBAEA,KAAA,GAAAtyD,GAAA,EAAAA,EAAA,EAAAA,IAEAmyD,uBAAAG,mBAAAtyD,GAAAoyC,IAAAwkB,wBAMAzE,wBAAAG,mBAAAlgB,IAAAwkB,mBAMA,IAAAJ,OAAA,CAEAl2B,MAAAiB,YAAA6Q,IAAAwgB,iBAAAd,kBAAAI,gBACAsB,qBAAAphB,IAAAwgB,iBAAAhB,aAAAv4B,QAAAs9B,mBAEA,KAAA,GAAA32D,GAAA,EAAAA,EAAA,EAAAA,IAEAq1D,wBAAAlD,uBAAAG,mBAAAtyD,GAAA4xD,aAAAxf,IAAAykB,kBAAAzkB,IAAAyhB,4BAAA7zD,EAIAmxD,6BAAAS,aAAAv4B,QAAAs9B,qBAAAvkB,IAAA0hB,eAAA1hB,IAAAwgB,kBACAtyB,MAAAiB,YAAA6Q,IAAAwgB,iBAAA,UAIAtyB,OAAAiB,YAAA6Q,IAAA5Q,WAAAswB,kBAAAI,gBACAsB,qBAAAphB,IAAA5Q,WAAAowB,aAAAv4B,QAAAs9B,oBACAtB,wBAAAlD,uBAAAG,mBAAAV,aAAAxf,IAAAykB,kBAAAzkB,IAAA5Q,YAEA2vB,4BAAAS,aAAAv4B,QAAAs9B,qBAAAvkB,IAAA0hB,eAAA1hB,IAAA5Q,YACAlB,MAAAiB,YAAA6Q,IAAA5Q,WAAA,KAMAowB,cAAAt4B,aAEAi9B,uBAAA3E,cAMA,QAAAkF,0BAAAlF,cAEA,GAAAv4B,SAAAu4B,aAAAv4B,OAGA,IAAA83B,4BAAA93B,QAFAw3B,aAAAe,eAEA,CAEA,GAAA1yD,QAAA0yD,aAAAQ,wBAAAhgB,IAAAwgB,iBAAAxgB,IAAA5Q,WACAu1B,aAAAvG,WAAAt9C,IAAAmmB,SAAA64B,cAEA5xB,OAAAiB,YAAAriC,OAAA63D,cACA3kB,IAAA0hB,eAAA50D,QACAohC,MAAAiB,YAAAriC,OAAA,OAnwBA,GAAA01D,WAAA,mBAAAoC,yBAAA5kB,cAAA4kB,uBAywBA96D,MAAA8gC,aAAAA,aACA9gC,KAAAihC,eAAAA,eACAjhC,KAAA63D,sBAAAA,sBACA73D,KAAAw6D,kBAAAA,kBACAx6D,KAAA46D,yBAAAA,yBAQA,QAAAG,mBAIA,QAAA/jD,KAAAg7B,QAEA,GAAAvW,MAAAuW,OAAAvW,KACAjxB,IAAA8pD,WAAA74B,KASA,YAPAtuB,KAAA3C,MAEAA,OACA8pD,WAAA74B,MAAAjxB,KAIAA,IAIA,QAAA+uC,QAAAvH,cAEAsiB,YAAAtiB,OAAAvW,MAIA,QAAAgc,SAEA6c,cA1BA,GAAAA,cA8BA,QACAt9C,IAAAA,IACAuiC,OAAAA,OACA9B,MAAAA,OASA,QAAAujB,YAAA37B,GAAAsQ,WAAA4kB,OAEA,QAAA0G,eAEA,GAAAC,SAAA,EAEAr0B,MAAA,GAAAlK,SACAw+B,iBAAA,KACAC,kBAAA,GAAAz+B,SAAA,EAAA,EAAA,EAAA,EAEA,QAEAkM,QAAA,SAAAwyB,WAEAF,mBAAAE,WAAAH,SAEA77B,GAAAg8B,UAAAA,UAAAA,UAAAA,UAAAA,WACAF,iBAAAE,YAMAC,UAAA,SAAAC,MAEAL,OAAAK,MAIAnlB,SAAA,SAAAxX,EAAAoB,EAAAn1B,EAAAD,EAAAuiC,qBAEA,IAAAA,qBAEAvO,GAAAh0B,EAAAo1B,GAAAp1B,EAAAC,GAAAD,GAIAi8B,MAAAh2B,IAAA+tB,EAAAoB,EAAAn1B,EAAAD,IAEA,IAAAwwD,kBAAAI,OAAA30B,SAEAxH,GAAA8iB,WAAAvjB,EAAAoB,EAAAn1B,EAAAD,GACAwwD,kBAAAjyB,KAAAtC,SAMA6D,MAAA,WAEAwwB,QAAA,EAEAC,iBAAA,KACAC,kBAAAvqD,KAAA,EAAA,EAAA,EAAA,KAQA,QAAA4qD,eAEA,GAAAP,SAAA,EAEAQ,iBAAA,KACAC,iBAAA,KACAC,kBAAA,IAEA,QAEAxuB,QAAA,SAAAC,WAEAA,UAEA3D,OAAArK,GAAAsK,YAIAlB,QAAApJ,GAAAsK,aAMAd,QAAA,SAAAgzB,WAEAH,mBAAAG,WAAAX,SAEA77B,GAAAw8B,UAAAA,WACAH,iBAAAG,YAMAC,QAAA,SAAAztB,WAEA,GAAAstB,mBAAAttB,UAAA,CAEA,GAAAA,UAEA,OAAAA,WAEA,IAAA0tB,YAEA18B,GAAAgP,UAAAhP,GAAA28B,MACA,MAEA,KAAAC,aAEA58B,GAAAgP,UAAAhP,GAAA68B,OACA,MAEA,KAAAC,WAEA98B,GAAAgP,UAAAhP,GAAA+8B,KACA,MAEA,KAAA9tB,gBAEAjP,GAAAgP,UAAAhP,GAAAg9B,OACA,MAEA,KAAAC,YAEAj9B,GAAAgP,UAAAhP,GAAAk9B,MACA,MAEA,KAAAC,mBAEAn9B,GAAAgP,UAAAhP,GAAAo9B,OACA,MAEA,KAAAC,cAEAr9B,GAAAgP,UAAAhP,GAAAs9B,QACA,MAEA,KAAAC,eAEAv9B,GAAAgP,UAAAhP,GAAAw9B,SACA,MAEA,SAEAx9B,GAAAgP,UAAAhP,GAAAg9B,YAMAh9B,IAAAgP,UAAAhP,GAAAg9B,OAIAV,kBAAAttB,YAMAitB,UAAA,SAAAC,MAEAL,OAAAK,MAIAnlB,SAAA,SAAAxN,OAEAgzB,oBAAAhzB,QAEAvJ,GAAAy9B,WAAAl0B,OACAgzB,kBAAAhzB,QAMA8B,MAAA,WAEAwwB,QAAA,EAEAQ,iBAAA,KACAC,iBAAA,KACAC,kBAAA,OAQA,QAAAmB,iBAEA,GAAA7B,SAAA,EAEA8B,mBAAA,KACAC,mBAAA,KACAC,kBAAA,KACAC,uBAAA,KACAC,mBAAA,KACAC,oBAAA,KACAC,oBAAA,KACAC,oBAAA,IAEA,QAEAnwB,QAAA,SAAAowB,aAEAA,YAEA9zB,OAAArK,GAAAo+B,cAIAh1B,QAAApJ,GAAAo+B,eAMA50B,QAAA,SAAA60B,aAEAV,qBAAAU,aAAAxC,SAEA77B,GAAAq+B,YAAAA,aACAV,mBAAAU,cAMA5B,QAAA,SAAA6B,YAAAC,WAAAF,aAEAT,qBAAAU,aACAT,oBAAAU,YACAT,yBAAAO,cAEAr+B,GAAAs+B,YAAAA,YAAAC,WAAAF,aAEAT,mBAAAU,YACAT,kBAAAU,WACAT,uBAAAO,cAMAG,MAAA,SAAAC,YAAAC,aAAAC,cAEAZ,qBAAAU,aACAT,sBAAAU,cACAT,sBAAAU,eAEA3+B,GAAA4+B,UAAAH,YAAAC,aAAAC,cAEAZ,mBAAAU,YACAT,oBAAAU,aACAT,oBAAAU,eAMA1C,UAAA,SAAAC,MAEAL,OAAAK,MAIAnlB,SAAA,SAAA8nB,SAEAX,sBAAAW,UAEA7+B,GAAA8+B,aAAAD,SACAX,oBAAAW,UAMAxzB,MAAA,WAEAwwB,QAAA,EAEA8B,mBAAA,KACAC,mBAAA,KACAC,kBAAA,KACAC,uBAAA,KACAC,mBAAA,KACAC,oBAAA,KACAC,oBAAA,KACAC,oBAAA,OAqDA,QAAAp4B,eAAA/J,KAAAp4B,OAAAm2C,OAEA,GAAA54B,MAAA,GAAAu4B,YAAA,GACA3b,QAAAkC,GAAA8F,eAEA9F,IAAAgG,YAAAjK,KAAA+B,SACAkC,GAAAqG,cAAAtK,KAAAiE,GAAA2G,mBAAA3G,GAAA0G,SACA1G,GAAAqG,cAAAtK,KAAAiE,GAAAyG,mBAAAzG,GAAA0G,QAEA,KAAA,GAAAjiC,GAAA,EAAAA,EAAAq1C,MAAAr1C,IAEAu7B,GAAAkG,WAAAviC,OAAAc,EAAA,EAAAu7B,GAAA4G,KAAA,EAAA,EAAA,EAAA5G,GAAA4G,KAAA5G,GAAAoG,cAAAllB,KAIA,OAAA4c,SA0BA,QAAAiL,kBAEA,IAAA,GAAAtkC,GAAA,EAAA4f,EAAA06C,cAAAx+D,OAAAkE,EAAA4f,EAAA5f,IAEAs6D,cAAAt6D,GAAA,EAMA,QAAAukC,iBAAA0P,WAWA,GATAqmB,cAAArmB,WAAA,EAEA,IAAAsmB,kBAAAtmB,aAEA1Y,GAAAi/B,wBAAAvmB,WACAsmB,kBAAAtmB,WAAA,GAIA,IAAAwmB,kBAAAxmB,WAAA,CAEApI,WAAA34B,IAAA,0BAEAwnD,yBAAAzmB,UAAA,GACAwmB,kBAAAxmB,WAAA,GAMA,QAAA0mB,2BAAA1mB,UAAA2mB,kBAWA,GATAN,cAAArmB,WAAA,EAEA,IAAAsmB,kBAAAtmB,aAEA1Y,GAAAi/B,wBAAAvmB,WACAsmB,kBAAAtmB,WAAA,GAIAwmB,kBAAAxmB,aAAA2mB,iBAAA,CAEA/uB,WAAA34B,IAAA,0BAEAwnD,yBAAAzmB,UAAA2mB,kBACAH,kBAAAxmB,WAAA2mB,kBAMA,QAAAp2B,2BAEA,IAAA,GAAAxkC,GAAA,EAAA4f,EAAA26C,kBAAAz+D,OAAAkE,IAAA4f,IAAA5f,EAEAu6D,kBAAAv6D,KAAAs6D,cAAAt6D,KAEAu7B,GAAAs/B,yBAAA76D,GACAu6D,kBAAAv6D,GAAA,GAQA,QAAA4lC,QAAAjH,KAEA,IAAA6B,aAAA7B,MAEApD,GAAAqK,OAAAjH,IACA6B,aAAA7B,KAAA,GAMA,QAAAgG,SAAAhG,KAEA,IAAA6B,aAAA7B,MAEApD,GAAAoJ,QAAAhG,IACA6B,aAAA7B,KAAA,GAMA,QAAAg1B,+BAEA,GAAA,OAAAmH,2BAEAA,4BAEAjvB,WAAA34B,IAAA,mCACA24B,WAAA34B,IAAA,kCACA24B,WAAA34B,IAAA,kCAIA,IAAA,GAFAgW,SAAAqS,GAAAw/B,aAAAx/B,GAAAy/B,4BAEAh7D,EAAA,EAAAA,EAAAkpB,QAAAptB,OAAAkE,IAEA86D,yBAAA1+D,KAAA8sB,QAAAlpB,GAQA,OAAA86D,0BAIA,QAAAz2B,YAAA1E,SAEA,MAAAs7B,kBAAAt7B,UAEApE,GAAA8I,WAAA1E,SAEAs7B,eAAAt7B,SAEA,GAQA,QAAA4G,aAAAC,SAAAC,cAAAC,SAAAC,SAAAuC,mBAAAC,cAAAC,cAAAC,oBAYA,GAVA7C,WAAA00B,WAEAt1B,OAAArK,GAAAoK,OAIAhB,QAAApJ,GAAAoK,OAIAa,WAAA20B,eAAA,CAEA,GAAA30B,WAAA40B,iBAAA/xB,qBAAAgyB,yBAEA,OAAA70B,UAEA,IAAA80B,kBAEAjyB,oBAEA9N,GAAAggC,sBAAAhgC,GAAAigC,SAAAjgC,GAAAigC,UACAjgC,GAAAkgC,kBAAAlgC,GAAAmgC,IAAAngC,GAAAmgC,IAAAngC,GAAAmgC,IAAAngC,GAAAmgC,OAIAngC,GAAAkL,cAAAlL,GAAAigC,UACAjgC,GAAAogC,UAAApgC,GAAAqgC,UAAArgC,GAAAmgC,KAGA,MAEA,KAAAG,qBAEAxyB,oBAEA9N,GAAAggC,sBAAAhgC,GAAAigC,SAAAjgC,GAAAigC,UACAjgC,GAAAkgC,kBAAAlgC,GAAAugC,KAAAvgC,GAAAugC,KAAAvgC,GAAAwgC,oBAAAxgC,GAAAygC,uBAIAzgC,GAAAkL,cAAAlL,GAAAigC,UACAjgC,GAAAogC,UAAApgC,GAAAugC,KAAAvgC,GAAAwgC,qBAGA,MAEA,KAAAE,kBAEA5yB,oBAEA9N,GAAAggC,sBAAAhgC,GAAAigC,SAAAjgC,GAAAigC,UACAjgC,GAAAkgC,kBAAAlgC,GAAAugC,KAAAvgC,GAAA2gC,UAAA3gC,GAAAugC,KAAAvgC,GAAAqgC,aAIArgC,GAAAkL,cAAAlL,GAAAigC,UACAjgC,GAAAogC,UAAApgC,GAAAugC,KAAAvgC,GAAA2gC,WAGA,MAEA,SAEA7yB,oBAEA9N,GAAAggC,sBAAAhgC,GAAAigC,SAAAjgC,GAAAigC,UACAjgC,GAAAkgC,kBAAAlgC,GAAAmgC,IAAAngC,GAAAygC,oBAAAzgC,GAAAmgC,IAAAngC,GAAAygC,uBAIAzgC,GAAAggC,sBAAAhgC,GAAAigC,SAAAjgC,GAAAigC,UACAjgC,GAAAkgC,kBAAAlgC,GAAAqgC,UAAArgC,GAAAygC,oBAAAzgC,GAAAmgC,IAAAngC,GAAAygC,sBAQAG,qBAAA,KACAC,gBAAA,KACAC,gBAAA,KACAC,0BAAA,KACAC,qBAAA,KACAC,qBAAA,SAIAtzB,oBAAAA,oBAAAzC,cACA0C,cAAAA,eAAAzC,SACA0C,cAAAA,eAAAzC,SAEAF,gBAAA01B,sBAAAjzB,qBAAAozB,4BAEA/gC,GAAAggC,sBAAA9K,MAAA6C,QAAA7sB,eAAAgqB,MAAA6C,QAAApqB,qBAEAizB,qBAAA11B,cACA61B,0BAAApzB,oBAIAxC,WAAA01B,iBAAAz1B,WAAA01B,iBAAAlzB,gBAAAozB,sBAAAnzB,gBAAAozB,uBAEAjhC,GAAAkgC,kBAAAhL,MAAA6C,QAAA5sB,UAAA+pB,MAAA6C,QAAA3sB,UAAA8pB,MAAA6C,QAAAnqB,eAAAsnB,MAAA6C,QAAAlqB,gBAEAgzB,gBAAA11B,SACA21B,gBAAA11B,SACA41B,qBAAApzB,cACAqzB,qBAAApzB,cAMAgyB,iBAAA50B,SACA60B,yBAAAhyB,mBAIA,QAAAozB,aAAA1zB,UAEAA,SAAAe,OAAAiG,WACApL,QAAApJ,GAAAqJ,WACAgB,OAAArK,GAAAqJ,WAEA83B,aAAA3zB,SAAAe,OAAAmG,WAEA,IAAAlH,SAAAoB,YACA5D,YAAAwC,SAAAvC,SAAAuC,SAAAtC,cAAAsC,SAAArC,SAAAqC,SAAApC,SAAAoC,SAAAG,mBAAAH,SAAAI,cAAAJ,SAAAK,cAAAL,SAAAM,oBACA9C,YAAA20B,YAEA5hC,YAAA0+B,QAAAjvB,SAAAwB,WACAjR,YAAAgQ,QAAAP,SAAAQ,WACAjQ,YAAAyL,QAAAgE,SAAAS,YACAmzB,YAAA53B,QAAAgE,SAAA6B,YAEAgyB,iBAAA7zB,SAAA8B,cAAA9B,SAAA+B,oBAAA/B,SAAAgC,oBAMA,QAAA2xB,cAAArR,WAEAwR,mBAAAxR,YAEAA,UAEA9vB,GAAAuhC,UAAAvhC,GAAAwhC,IAIAxhC,GAAAuhC,UAAAvhC,GAAAyhC,KAIAH,iBAAAxR,WAMA,QAAA4R,aAAAC,UAEAA,WAAAC,cAEAv3B,OAAArK,GAAAqJ,WAEAs4B,WAAAE,kBAEAF,WAAAG,aAEA9hC,GAAA2hC,SAAA3hC,GAAA+hC,MAEAJ,WAAAK,cAEAhiC,GAAA2hC,SAAA3hC,GAAAiiC,OAIAjiC,GAAA2hC,SAAA3hC,GAAAkiC,kBAQA94B,QAAApJ,GAAAqJ,WAIAw4B,gBAAAF,SAIA,QAAAQ,cAAAtiE,OAEAA,QAAAuiE,mBAEAC,oBAAAriC,GAAAsiC,UAAAziE,OAEAuiE,iBAAAviE,OAMA,QAAAwhE,kBAAA/xB,cAAAizB,OAAA5uD,OAEA27B,eAEAjF,OAAArK,GAAAwiC,qBAEAC,6BAAAF,QAAAG,4BAAA/uD,QAEAqsB,GAAAsP,cAAAizB,OAAA5uD,OAEA8uD,2BAAAF,OACAG,0BAAA/uD,QAMAy1B,QAAApJ,GAAAwiC,qBAMA,QAAAxrB,gBAAApZ,aAEAA,YAEAyM,OAAArK,GAAA2iC,cAIAv5B,QAAApJ,GAAA2iC,cAQA,QAAA34B,eAAA44B,eAEA90D,KAAA80D,YAAAA,UAAA5iC,GAAAiK,SAAA44B,YAAA,GAEAC,qBAAAF,YAEA5iC,GAAAgK,cAAA44B,WACAE,mBAAAF,WAMA,QAAA58B,aAAA+8B,UAAAvH,cAEA,OAAAsH,oBAEA94B,eAIA,IAAAg5B,cAAAC,qBAAAH,wBAEAh1D,KAAAk1D,eAEAA,cAAAjnC,SAAAjuB,GAAAgwB,YAAAhwB,IACAm1D,qBAAAH,oBAAAE,cAIAA,aAAAjnC,OAAAgnC,WAAAC,aAAAllC,UAAA09B,eAEAx7B,GAAAgG,YAAA+8B,UAAAvH,cAAA0H,cAAAH,YAEAC,aAAAjnC,KAAAgnC,UACAC,aAAAllC,QAAA09B,cAMA,QAAAnD,wBAEA,IAEAr4B,GAAAq4B,qBAAA53D,MAAAu/B,GAAAp/B,WAEA,MAAA+9B,OAEAjuB,QAAAiuB,MAAA,oBAAAA,QAMA,QAAAuH,cAEA,IAEAlG,GAAAkG,WAAAzlC,MAAAu/B,GAAAp/B,WAEA,MAAA+9B,OAEAjuB,QAAAiuB,MAAA,oBAAAA,QAQA,QAAAhB,SAAAA,UAEA,IAAAwlC,eAAAhH,OAAAx+B,WAEAqC,GAAArC,QAAAA,QAAAxlB,EAAAwlB,QAAA/iB,EAAA+iB,QAAAJ,EAAAI,QAAAja,GACAy/C,eAAAr5B,KAAAnM,UAMA,QAAAE,UAAAA,WAEA,IAAAulC,gBAAAjH,OAAAt+B,YAEAmC,GAAAnC,SAAAA,SAAA1lB,EAAA0lB,SAAAjjB,EAAAijB,SAAAN,EAAAM,SAAAna,GACA0/C,gBAAAt5B,KAAAjM,WAQA,QAAAwN,SAEA,IAAA,GAAA5mC,GAAA,EAAAA,EAAAu6D,kBAAAz+D,OAAAkE,IAEA,IAAAu6D,kBAAAv6D,KAEAu7B,GAAAs/B,yBAAA76D,GACAu6D,kBAAAv6D,GAAA,EAMAwgC,iBAEAs6B,yBAAA,KAEAuD,mBAAA,KACAG,wBAEAvD,eAAA,KAEAG,gBAAA,KAEAyB,iBAAA,KACAO,gBAAA,KAEAT,YAAA/1B,QACAtN,YAAAsN,QACArN,cAAAqN,QA9kBA,GAAA+1B,aAAA,GAAAxF,aACA79B,YAAA,GAAAq+B,aACAp+B,cAAA,GAAA0/B,eAEA2F,oBAAArjC,GAAAw/B,aAAAx/B,GAAAsjC,oBACAvE,cAAA,GAAAtlB,YAAA4pB,qBACArE,kBAAA,GAAAvlB,YAAA4pB,qBACAnE,kBAAA,GAAAzlB,YAAA4pB,qBAEAp+B,gBAEAs6B,yBAAA,KAEAG,eAAA,KAEAG,gBAAA,KACAe,qBAAA,KACAC,gBAAA,KACAC,gBAAA,KACAC,0BAAA,KACAC,qBAAA,KACAC,qBAAA,KACAnB,0BAAA,EAEAwB,iBAAA,KACAO,gBAAA,KAEAO,iBAAA,KAEAK,2BAAA,KACAC,0BAAA,KAEAG,YAAA7iC,GAAAw/B,aAAAx/B,GAAAujC,kCAEA3oC,QAAAlS,WAAA,kBAAA/D,KAAAqb,GAAAw/B,aAAAx/B,GAAAwjC,UAAA,IACAnB,mBAAA35C,WAAAkS,UAAA,EAEAkoC,mBAAA,KACAG,wBAEAE,eAAA,GAAA7lC,SACA8lC,gBAAA,GAAA9lC,SAqBA4lC,gBAohBA,OAnhBAA,eAAAljC,GAAAiG,YAAAH,cAAA9F,GAAAiG,WAAAjG,GAAAiG,WAAA,GACAi9B,cAAAljC,GAAAq3B,kBAAAvxB,cAAA9F,GAAAq3B,iBAAAr3B,GAAAs4B,4BAAA,GAIA8I,YAAArqB,SAAA,EAAA,EAAA,EAAA,GACAhZ,YAAAgZ,SAAA,GACA/Y,cAAA+Y,SAAA,GAEA1M,OAAArK,GAAAsK,YACAvM,YAAA0+B,QAAAxtB,gBAEAkyB,cAAA,GACAO,YAAAI,cACAz3B,OAAArK,GAAAqJ,WAEAgB,OAAArK,GAAAoK,OACAY,YAAAsD,iBAogBAhF,SACA9B,MAAA45B,YACA73B,MAAAxL,YACA8gC,QAAA7gC,eAGA+K,eAAAA,eACAC,gBAAAA,gBACAo2B,0BAAAA,0BACAn2B,wBAAAA,wBACAoB,OAAAA,OACAjB,QAAAA,QACAgvB,4BAAAA,4BAEAtvB,WAAAA,WAEAkC,YAAAA,YACAk2B,YAAAA,YAEAC,aAAAA,aACAO,YAAAA,YAEAS,aAAAA,aACAd,iBAAAA,iBAEArqB,eAAAA,eAEAhN,cAAAA,cACAhE,YAAAA,YACAqyB,qBAAAA,qBACAnyB,WAAAA,WAEAvI,QAAAA,QACAE,SAAAA,SAEAwN,MAAAA,OAUA,QAAAo4B,mBAAAzjC,GAAAsQ,WAAAT,YAIA,QAAAkpB,oBAEA,OAAAjrD,KAAA41D,cAAA,MAAAA,cAEA,IAAA1d,WAAA1V,WAAA34B,IAAA,iCAYA,OARA+rD,eAFA,OAAA1d,UAEAhmB,GAAAw/B,aAAAxZ,UAAA2d,gCAIA,EAQA,QAAA5P,iBAAAhsB,WAEA,GAAA,UAAAA,UAAA,CAEA,GAAA/H,GAAA4jC,yBAAA5jC,GAAA8H,cAAA9H,GAAA6jC,YAAA97B,UAAA,GACA/H,GAAA4jC,yBAAA5jC,GAAA6H,gBAAA7H,GAAA6jC,YAAA97B,UAAA,EAEA,MAAA,OAIAA,WAAA,UAIA,MAAA,YAAAA,WAEA/H,GAAA4jC,yBAAA5jC,GAAA8H,cAAA9H,GAAA8jC,cAAA/7B,UAAA,GACA/H,GAAA4jC,yBAAA5jC,GAAA6H,gBAAA7H,GAAA8jC,cAAA/7B,UAAA,EAEA,UAMA,OAhDA,GAAA27B,eAoDA37B,cAAAj6B,KAAA+hC,WAAA9H,UAAA8H,WAAA9H,UAAA,QACAg8B,aAAAhQ,gBAAAhsB,UAEAg8B,gBAAAh8B,YAEAr3B,QAAAH,KAAA,uBAAAw3B,UAAA,uBAAAg8B,aAAA,YACAh8B,UAAAg8B,aAIA,IAAAvX,yBAAA,IAAA3c,WAAA2c,0BAAAlc,WAAA34B,IAAA,kBAEAkrD,YAAA7iC,GAAAw/B,aAAAx/B,GAAAgkC,yBACAC,kBAAAjkC,GAAAw/B,aAAAx/B,GAAAkkC,gCACAzxB,eAAAzS,GAAAw/B,aAAAx/B,GAAAmkC,kBACAvM,eAAA53B,GAAAw/B,aAAAx/B,GAAAokC,2BAEAC,cAAArkC,GAAAw/B,aAAAx/B,GAAAsjC,oBACA7Q,kBAAAzyB,GAAAw/B,aAAAx/B,GAAAskC,4BACAC,YAAAvkC,GAAAw/B,aAAAx/B,GAAAwkC,qBACAC,oBAAAzkC,GAAAw/B,aAAAx/B,GAAA0kC,8BAEAxQ,eAAA+P,kBAAA,EACAU,wBAAAr0B,WAAA34B,IAAA,oBAGA,QAEAohD,iBAAAA,iBACAhF,gBAAAA,gBAEAhsB,UAAAA,UACAykB,uBAAAA,uBAEAqW,YAAAA,YACAoB,kBAAAA,kBACAxxB,eAAAA,eACAmlB,eAAAA,eAEAyM,cAAAA,cACA5R,kBAAAA,kBACA8R,YAAAA,YACAE,oBAAAA,oBAEAvQ,eAAAA,eACAyQ,sBAAAA,sBACApS,oBAtBA2B,gBAAAyQ,uBAgCA,QAAAC,aAAApvD,OAEAsmC,kBAAAv0C,KAAA5G,MAEAA,KAAAkkE,QAAArvD,UAgBA,QAAAsvD,cAAAnlC,UAkCA,QAAAolC,4BAEA,GAAA,OAAAC,QAAAA,OAAAC,aAAA,CAEA,GAAAC,eAAAF,OAAAG,iBAAA,QACAC,YAAAF,cAAAE,YACAC,aAAAH,cAAAG,YAEAC,mBAAA3lC,SAAA4lC,gBACAC,YAAA7lC,SAAA8lC,UAEA9lC,SAAA+lC,qBAAA,EAAAN,YAAAC,aAAA,OAEA/wB,OAAAoC,SAEA/W,SAAA+lC,qBAAAF,YAAA3lE,MAAA2lE,YAAA/nC,OAAA6nC,mBA/CA,GAAAhxB,OAAA3zC,KAEAqkE,OAAA,KACAW,UAAA,IAEA,gBAAA5pE,UAEA4pE,UAAA,GAAA5pE,QAAA6pE,YAIA,IAAAh8B,oBAAA,GAAAlL,SAEAmnC,eAAA,GAAAnnC,SACAonC,sBAAA,GAAApnC,SAEAqnC,QAAA,GAAAjqB,kBACAiqB,SAAAC,OAAA,GAAA1oC,SAAA,EAAA,EAAA,GAAA,GACAyoC,QAAAjxB,OAAAzK,OAAA,EAEA,IAAA47B,SAAA,GAAAnqB,kBACAmqB,SAAAD,OAAA,GAAA1oC,SAAA,GAAA,EAAA,GAAA,GACA2oC,QAAAnxB,OAAAzK,OAAA,EAEA,IAAA67B,UAAA,GAAAtB,cAAAmB,QAAAE,SACAC,UAAApxB,OAAAzK,OAAA,GACA67B,SAAApxB,OAAAzK,OAAA,EAIA,IAAAm7B,aAAAF,iBAuBAvpE,QAAAW,iBAAA,yBAAAqoE,0BAAA,GAIApkE,KAAA+1C,SAAA,EACA/1C,KAAAwlE,UAAA,EAEAxlE,KAAAylE,UAAA,WAEA,MAAApB,SAIArkE,KAAA0lE,UAAA,SAAAx2D,WAEA/B,KAAA+B,QAAAm1D,OAAAn1D,QAIAlP,KAAA2lE,UAAA,SAAA/9B,QAEA,GAAA,OAAAy8B,OAAA,MAAAz8B,OAEAy8B,QAAAuB,UAAAh+B,OAAA4E,KACA63B,OAAAwB,SAAAj+B,OAAA6E,IAEA43B,OAAAyB,aAAAd,UAIA,IAAAe,MAAAf,UAAAe,IAEA,QAAAA,KAAAh7B,SAEAnD,OAAAmD,SAAAi7B,UAAAD,KAAAh7B,UAIAnD,OAAAmD,SAAAl6B,IAAA,EAAA,EAAA,GAIA,OAAAk1D,KAAAE,aAEAr+B,OAAAqS,WAAA+rB,UAAAD,KAAAE,aAIAr+B,OAAA0P,mBAEA,IAAA4uB,iBAAA7B,OAAA6B,eAYA,IAVAlmE,KAAAwlE,UAAAU,kBAEAhB,eAAAc,UAAAE,gBAAAC,4BACAhB,sBAAAiB,WAAAlB,gBAEAt9B,OAAAmB,YAAAwO,SAAA2tB,gBACAt9B,OAAAqB,mBAAAsO,SAAA4tB,yBAIA,IAAAd,OAAAC,aAAA,MAAA18B,OAIAw9B,SAAA54B,KAAA5E,OAAA4E,KACA84B,QAAA94B,KAAA5E,OAAA4E,KAEA44B,QAAA34B,IAAA7E,OAAA6E,IACA64B,QAAA74B,IAAA7E,OAAA6E,IAEA84B,SAAAx8B,YAAAI,KAAAvB,OAAAmB,aACAw8B,SAAAt8B,mBAAAE,KAAAvB,OAAAqB,oBAEAm8B,QAAAn8B,mBAAA+8B,UAAAhB,UAAAqB,gBACAf,QAAAr8B,mBAAA+8B,UAAAhB,UAAAsB,iBAEAtmE,KAAAwlE,UAAAU,kBAEAd,QAAAn8B,mBAAAsO,SAAA4tB,uBACAG,QAAAr8B,mBAAAsO,SAAA4tB,uBAIA,IAAAlmE,QAAA2oC,OAAA3oC,MAEA,QAAAA,SAEAgqC,mBAAAm9B,WAAAnnE,OAAA8pC,aAEAq8B,QAAAn8B,mBAAAsO,SAAAtO,oBACAq8B,QAAAr8B,mBAAAsO,SAAAtO,qBAMAm8B,QAAAr8B,YAAAq9B,WAAAhB,QAAAn8B,oBACAq8B,QAAAv8B,YAAAq9B,WAAAd,QAAAr8B,oBAEAm8B,QAAAl8B,iBAAA88B,UAAAhB,UAAAuB,sBACAjB,QAAAp8B,iBAAA88B,UAAAhB,UAAAwB,uBAKAjB,SAAAr8B,iBAAAC,KAAAi8B,QAAAl8B,iBAIA,IAAAiL,QAAAkwB,OAAAoC,WAEA,IAAAtyB,OAAAv0C,OAAA,CAEA,GAAA8mE,OAAAvyB,OAAA,EAEA,QAAAuyB,MAAAC,YAAA,IAAAD,MAAAC,WAAA/mE,QAEAwlE,QAAAC,OAAAW,UAAAU,MAAAC,YAIA,OAAAD,MAAAE,aAAA,IAAAF,MAAAE,YAAAhnE,QAEA0lE,QAAAD,OAAAW,UAAAU,MAAAE,aAMA,MAAArB,WAIAvlE,KAAA6mE,kBAAA,WAEA,MAAA3B,iBAIAllE,KAAA8mE,YAAA,WAEAzC,QAAAA,OAAAC,cAAAD,OAAAyC,eAIA9mE,KAAAmkD,QAAA,WAEA/oD,OAAA2qD,oBAAA,yBAAAqe,2BAUA,QAAA2C,iBAAA1nC,IAEA,GAAAsQ,cAEA,QAEA34B,IAAA,SAAApZ,MAEA,OAAAuP,KAAAwiC,WAAA/xC,MAEA,MAAA+xC,YAAA/xC,KAIA,IAAAynD,UAEA,QAAAznD,MAEA,IAAA,sBACAynD,UAAAhmB,GAAA2nC,aAAA,wBAAA3nC,GAAA2nC,aAAA,4BAAA3nC,GAAA2nC,aAAA,6BACA,MAEA,KAAA,iCACA3hB,UAAAhmB,GAAA2nC,aAAA,mCAAA3nC,GAAA2nC,aAAA,uCAAA3nC,GAAA2nC,aAAA,wCACA,MAEA,KAAA,gCACA3hB,UAAAhmB,GAAA2nC,aAAA,kCAAA3nC,GAAA2nC,aAAA,sCAAA3nC,GAAA2nC,aAAA,uCACA,MAEA,KAAA,iCACA3hB,UAAAhmB,GAAA2nC,aAAA,mCAAA3nC,GAAA2nC,aAAA,wCACA,MAEA,KAAA,gCACA3hB,UAAAhmB,GAAA2nC,aAAA,gCACA,MAEA,SACA3hB,UAAAhmB,GAAA2nC,aAAAppE,MAYA,MARA,QAAAynD,WAEAt1C,QAAAH,KAAA,wBAAAhS,KAAA,6BAIA+xC,WAAA/xC,MAAAynD,UAEAA,YAYA,QAAA4hB,iBA8FA,QAAAC,oBAEAC,QAAAj4D,QAAAk4D,cAEAD,QAAAj4D,MAAAk4D,YACAD,QAAAt8B,YAAAw8B,gBAAA,GAIA1zB,MAAA2zB,UAAAD,gBACA1zB,MAAA4zB,gBAAA,EAIA,QAAAC,eAAA91B,OAAA9J,OAAA6/B,UAAAC,eAEA,GAAAC,SAAA,OAAAj2B,OAAAA,OAAA9xC,OAAA,EACAgoE,SAAA,IAEA,IAAA,IAAAD,QAAA,CAIA,GAFAC,SAAAT,QAAAj4D,OAEA,IAAAw4D,eAAA,OAAAE,SAAA,CAEA,GAAAC,UAAAJ,UAAA,EAAAE,QACAjgB,WAAA9f,OAAAqB,kBAEA6+B,kBAAAC,gBAAArgB,aAEA,OAAAkgB,UAAAA,SAAAhoE,OAAAioE,YAEAD,SAAA,GAAA9oC,cAAA+oC,UAIA,KAAA,GAAA/jE,GAAA,EAAAkkE,GAAAP,UACA3jE,IAAA6jE,UAAA7jE,EAAAkkE,IAAA,EAEAC,MAAA9+B,KAAAuI,OAAA5tC,IACAklC,aAAA0e,WAAAogB,kBAEAG,MAAA52B,OAAA9lB,QAAAq8C,SAAAI,IACAJ,SAAAI,GAAA,GAAAC,MAAA32B,SAMA61B,QAAAj4D,MAAA04D,SACAT,QAAAt8B,aAAA,EAMA,MAFA8I,OAAA2zB,UAAAK,QAEAC,SApJA,GAAAj0B,OAAA3zC,KAEAonE,YAAA,KACAC,gBAAA,EACAh0B,sBAAA,EACA60B,kBAAA,EAEAD,MAAA,GAAA72B,OACA02B,iBAAA,GAAA32B,SAEAg2B,SAAAj4D,MAAA,KAAA27B,aAAA,EAEA7qC,MAAAmnE,QAAAA,QACAnnE,KAAAsnE,UAAA,EACAtnE,KAAAunE,gBAAA,EAEAvnE,KAAAwI,KAAA,SAAAkpC,OAAAy2B,oBAAAvgC,QAEA,GAAAmO,SACA,IAAArE,OAAA9xC,QACAuoE,qBAGA,IAAAd,iBACAh0B,oBAOA,OALAA,sBAAA80B,oBAEAf,YAAAI,cAAA91B,OAAA9J,OAAA,GACAy/B,gBAAA31B,OAAA9xC,OAEAm2C,SAIA/1C,KAAAooE,aAAA,WAEAF,kBAAA,EACAV,cAAA,OAIAxnE,KAAAqoE,WAAA,WAEAH,kBAAA,EACAhB,oBAIAlnE,KAAAsoE,SAAA,SAAA52B,OAAAlD,iBAAAC,YAAA7G,OAAAkgB,MAAAygB,WAEA,IAAAl1B,sBACA,OAAA3B,QAAA,IAAAA,OAAA9xC,QACAsoE,mBAAAz5B,YAGAy5B,iBAGAV,cAAA,MAIAN,uBAGA,CAEA,GAAAsB,SAAAN,iBAAA,EAAAb,gBACAoB,QAAA,EAAAD,QAEAZ,SAAA9f,MAAA4gB,eAAA,IAEAvB,SAAAj4D,MAAA04D,SAEAA,SAAAJ,cAAA91B,OAAA9J,OAAA6gC,QAAAF,UAEA,KAAA,GAAAzkE,GAAA,EAAAA,IAAA2kE,UAAA3kE,EAEA8jE,SAAA9jE,GAAAsjE,YAAAtjE,EAIAgkD,OAAA4gB,cAAAd,SACA5nE,KAAAunE,gBAAA/4B,iBAAAxuC,KAAAsnE,UAAA,EACAtnE,KAAAsnE,WAAAkB,UAyEA,QAAAG,YAAAtpC,GAAAsQ,YAEA,QAAAynB,SAAApD,GAEA,GAAA3O,UAEA,IAAA2O,IAAA4U,eAAA,MAAAvpC,IAAAwpC,MACA,IAAA7U,IAAAj4B,oBAAA,MAAAsD,IAAAuG,aACA,IAAAouB,IAAA8U,uBAAA,MAAAzpC,IAAA0pC,eAEA,IAAA/U,IAAA91B,cAAA,MAAAmB,IAAA0G,OACA,IAAAiuB,IAAAoB,2BAAA,MAAA/1B,IAAA2pC,sBACA,IAAAhV,IAAAqB,0BAAA,MAAAh2B,IAAA4pC,qBAEA,IAAAjV,IAAAh4B,aAAA,MAAAqD,IAAAi2B,MACA,IAAAtB,IAAAkV,0BAAA,MAAA7pC,IAAA8pC,qBACA,IAAAnV,IAAA/3B,yBAAA,MAAAoD,IAAA+pC,oBAEA,IAAApV,IAAA73B,iBAAA,MAAAkD,IAAAoG,aACA,IAAAuuB,IAAAqV,sBAAA,MAAAhqC,IAAAiqC,sBACA,IAAAtV,IAAAuV,sBAAA,MAAAlqC,IAAAmqC,sBACA,IAAAxV,IAAAyV,qBAAA,MAAApqC,IAAAqqC,oBAEA,IAAA1V,IAAA2V,SAAA,MAAAtqC,IAAAwZ,IACA,IAAAmb,IAAA4V,UAAA,MAAAvqC,IAAAmZ,KACA,IAAAwb,IAAA8E,kBAAA,MAAAz5B,IAAAyK,cACA,IAAAkqB,IAAA6V,QAAA,MAAAxqC,IAAAsZ,GACA,IAAAqb,IAAA+E,gBAAA,MAAA15B,IAAAqZ,YACA,IAAAsb,IAAA+D,UAAA,MAAA14B,IAAAmJ,KAEA,IAAAwrB,IAAAgE,eAIA,QAFA3S,UAAA1V,WAAA34B,IAAA,2BAEA,MAAAquC,WAAAykB,cAIA,IAAA9V,IAAA+V,YAAA,MAAA1qC,IAAA2qC,KACA,IAAAhW,IAAAwD,UAAA,MAAAn4B,IAAAmG,GACA,IAAAwuB,IAAA93B,WAAA,MAAAmD,IAAA4G,IACA,IAAA+tB,IAAAiW,gBAAA,MAAA5qC,IAAA6qC,SACA,IAAAlW,IAAAmW,qBAAA,MAAA9qC,IAAA+qC,eACA,IAAApW,IAAA6E,YAAA,MAAAx5B,IAAAo5B,eACA,IAAAzE,IAAAgF,mBAAA,MAAA35B,IAAA45B,aAEA,IAAAjF,IAAA5lB,YAAA,MAAA/O,IAAAigC,QACA,IAAAtL,IAAAqW,iBAAA,MAAAhrC,IAAAirC,aACA,IAAAtW,IAAAuW,wBAAA,MAAAlrC,IAAAmrC,qBAEA,IAAAxW,IAAAyW,WAAA,MAAAprC,IAAAugC,IACA,IAAA5L,IAAA0W,UAAA,MAAArrC,IAAAmgC,GACA,IAAAxL,IAAA2W,eAAA,MAAAtrC,IAAA2gC,SACA,IAAAhM,IAAA4W,uBAAA,MAAAvrC,IAAAwgC,mBACA,IAAA7L,IAAA9lB,eAAA,MAAA7O,IAAAqgC,SACA,IAAA1L,IAAA7lB,uBAAA,MAAA9O,IAAAygC,mBACA,IAAA9L,IAAA6W,eAAA,MAAAxrC,IAAAyrC,SACA,IAAA9W,IAAA+W,uBAAA,MAAA1rC,IAAA2rC,mBAEA,IAAAhX,IAAAiX,eAAA,MAAA5rC,IAAA6rC,SACA,IAAAlX,IAAAmX,uBAAA,MAAA9rC,IAAA+rC,mBACA,IAAApX,IAAAqX,uBAAA,MAAAhsC,IAAAisC,kBAEA,KAAAtX,IAAAuX,sBAAAvX,IAAAwX,uBACAxX,IAAAyX,uBAAAzX,IAAA0X,wBAIA,QAFArmB,UAAA1V,WAAA34B,IAAA,kCAEA,CAEA,GAAAg9C,IAAAuX,qBAAA,MAAAlmB,WAAAsmB,4BACA,IAAA3X,IAAAwX,sBAAA,MAAAnmB,WAAAumB,6BACA,IAAA5X,IAAAyX,sBAAA,MAAApmB,WAAAwmB,6BACA,IAAA7X,IAAA0X,sBAAA,MAAArmB,WAAAymB,8BAMA,IAAA9X,IAAA+X,yBAAA/X,IAAAgY,yBACAhY,IAAAiY,0BAAAjY,IAAAkY,2BAIA,QAFA7mB,UAAA1V,WAAA34B,IAAA,mCAEA,CAEA,GAAAg9C,IAAA+X,wBAAA,MAAA1mB,WAAA8mB,+BACA,IAAAnY,IAAAgY,wBAAA,MAAA3mB,WAAA+mB,+BACA,IAAApY,IAAAiY,yBAAA,MAAA5mB,WAAAgnB,gCACA,IAAArY,IAAAkY,yBAAA,MAAA7mB,WAAAinB,iCAMA,GAAAtY,IAAAuY,iBAIA,QAFAlnB,UAAA1V,WAAA34B,IAAA,kCAEA,MAAAquC,WAAAmnB,yBAIA,KAAAxY,IAAAyY,aAAAzY,IAAA0Y,cAIA,QAFArnB,UAAA1V,WAAA34B,IAAA,qBAEA,CAEA,GAAAg9C,IAAAyY,YAAA,MAAApnB,WAAAsnB,OACA,IAAA3Y,IAAA0Y,YAAA,MAAArnB,WAAAunB,QAMA,MAAA5Y,KAAAkF,oBAIA,QAFA7T,UAAA1V,WAAA34B,IAAA,wBAEAquC,UAAAwnB,wBAIA,EAIA,OAAAzV,QAAAA,SAaA,QAAA0V,eAAA59B,YA8IA,QAAA69B,uBAEA,MAAA,QAAAC,qBAAAC,YAAA,EAiEA,QAAAC,iBAEAv9B,WAAA,GAAAo3B,iBAAA7wB,KACAvG,WAAA34B,IAAA,uBACA24B,WAAA34B,IAAA,qBACA24B,WAAA34B,IAAA,4BACA24B,WAAA34B,IAAA,0BACA24B,WAAA34B,IAAA,iCACA24B,WAAA34B,IAAA,4BACA24B,WAAA34B,IAAA,0BAEA24B,WAAA34B,IAAA,4BAEAinC,eAAAkvB,SAAA,YAIA5Y,MAAA,GAAAoU,YAAAzyB,IAAAvG,YAEArL,aAAA,GAAAw+B,mBAAA5sB,IAAAvG,WAAAT,YAEA9K,MAAA,GAAA42B,YAAA9kB,IAAAvG,WAAA4kB,OACAnwB,MAAApH,QAAAowC,gBAAAjkC,KAAAkkC,UAAAtlB,eAAAklB,cACA7oC,MAAAlH,SAAAowC,iBAAAnkC,KAAAokC,WAAAxlB,eAAAklB,cAEA3Y,WAAA,GAAAyG,iBACA12B,SAAA,GAAAgwB,eAAAne,IAAAvG,WAAAvL,MAAAkwB,WAAAhwB,aAAAiwB,MAAAiZ,aACA7lE,WAAA,GAAAmwC,iBAAA5B,KACA6L,WAAA,GAAA4D,iBAAAzP,IAAAvuC,WAAA6lE,aACAC,QAAA,GAAA7jB,cAAA7H,WAAA2rB,aACAC,aAAA,GAAAtpB,mBAAAnO,KACA03B,aAAA,GAAApc,eAAAqc,MAAAl+B,WAAArL,cACAoJ,OAAA,GAAAwZ,aACA4mB,YAAA,GAAA/pB,kBAEA7B,WAAA,GAAAJ,iBAAA+rB,MAAAzpC,MAAA2d,WAAAgsB,qBAEAC,eAAA,GAAAxoB,qBAAAtP,IAAAvG,WAAA+9B,aACAO,sBAAA,GAAAppB,4BAAA3O,IAAAvG,WAAA+9B,aAEAQ,cAAA,GAAA/pC,oBAAA0pC,MAAA33B,IAAA9R,MAAAC,SAAAC,cACA6pC,eAAA,GAAArjC,qBAAA+iC,MAAA33B,IAAA9R,MAAAC,SAAAC,cAEAupC,MAAAjqC,KAAAuuB,SAAAyb,aAAAzb,SAEA0b,MAAAniC,QAAAwK,IACA23B,MAAAvpC,aAAAA,aACAupC,MAAAl+B,WAAAA,WACAk+B,MAAAvZ,WAAAA,WACAuZ,MAAAC,YAAAA,YACAD,MAAAzpC,MAAAA,MAyMA,QAAAgqC,eAAApwE,OAEAA,MAAAqwE,iBAEAt+D,QAAAghD,IAAA,sCAEAud,gBAAA,EAIA,QAAAC,kBAAAvwE,OAEA+R,QAAAghD,IAAA,0CAEAud,gBAAA,EAEApB,gBAIA,QAAAsB,mBAAAxwE,OAEA,GAAA6uC,UAAA7uC,MAAAgF,MAEA6pC,UAAAkZ,oBAAA,UAAAyoB,mBAEAC,mBAAA5hC,UAMA,QAAA4hC,oBAAA5hC,UAEA6hC,gCAAA7hC,UAEAynB,WAAA/a,OAAA1M,UAKA,QAAA6hC,iCAAA7hC,UAEA,GAAAqnB,aAAAI,WAAAt9C,IAAA61B,UAAApJ,OAEAoJ,UAAApJ,YAAAt2B,OAEAA,KAAA+mD,aAEA0Z,aAAAzZ,eAAAD,aAQA,QAAAya,uBAAA38B,OAAAvO,QAAAoJ,UAEAmF,OAAAvK,OAAA,SAAAuK,QAEA67B,MAAAe,sBAAA58B,OAAAvO,QAAAoJ,YAsQA,QAAAgiC,uBAAAhiC,SAAApJ,QAAA4O,SAAAy8B,YAEA,GAAAz8B,UAAAA,SAAA08B,2BAEA,OAAAp/B,WAAA34B,IAAA,0BAGA,WADAjH,SAAAiuB,MAAA,sJAOA7wB,KAAA2hE,aAAAA,WAAA,GAEA1qC,MAAAgE,gBAEA,IAAA+d,oBAAA9T,SAAA1qC,WAEAqnE,kBAAAvrC,QAAA0tB,gBAEA8d,+BAAApiC,SAAAmD,sBAEA,KAAA,GAAApyC,QAAAoxE,mBAAA,CAEA,GAAAE,kBAAAF,kBAAApxE,KAEA,IAAAsxE,kBAAA,EAAA,CAEA,GAAAC,mBAAAhpB,mBAAAvoD,KAEA,QAAAuP,KAAAgiE,kBAAA,CAEA,GAAApyB,YAAAoyB,kBAAApyB,WACAhb,KAAAotC,kBAAAryB,SAEA/E,UAAApwC,WAAAqP,IAAAm4D,kBAIA,QAAAhiE,KAAA4qC,UAAA,QAEA,IAAAK,QAAAL,UAAAK,OACAhd,KAAA2c,UAAA3c,KACA2d,gBAAAhB,UAAAgB,eAEA,IAAAo2B,kBAAA71B,6BAAA,CAEA,GAAA/4B,MAAA4uD,kBAAA5uD,KACA6uD,OAAA7uD,KAAA6uD,OACAjmD,OAAAgmD,kBAAAhmD,MAEA5I,OAAAA,KAAA8uD,8BAEAjrC,MAAAq6B,0BAAAyQ,iBAAA3uD,KAAAm+C,sBAEAvxD,KAAAklC,SAAAkT,oBAEAlT,SAAAkT,kBAAAhlC,KAAAm+C,iBAAAn+C,KAAA44B,QAMA/U,MAAAiE,gBAAA6mC,kBAIAh5B,IAAArR,WAAAqR,IAAApR,aAAAsT,QACAlC,IAAA3N,oBAAA2mC,iBAAAntC,KAAA3G,KAAA2hB,WAAAqyB,OAAAr2B,iBAAA+1B,WAAAM,OAAAjmD,QAAA4vB,qBAIAo2B,mBAAAG,4BAEAlrC,MAAAq6B,0BAAAyQ,iBAAAC,kBAAAzQ,sBAEAvxD,KAAAklC,SAAAkT,oBAEAlT,SAAAkT,kBAAA4pB,kBAAAzQ,iBAAAyQ,kBAAAh2B,QAMA/U,MAAAiE,gBAAA6mC;sKAIAh5B,IAAArR,WAAAqR,IAAApR,aAAAsT,QACAlC,IAAA3N,oBAAA2mC,iBAAAntC,KAAA3G,KAAA2hB,WAAA,EAAA+xB,WAAA/sC,KAAAgX,qBAIA,QAAA5rC,KAAA8hE,+BAAA,CAEA,GAAA//D,OAAA+/D,+BAAArxE,KAEA,QAAAuP,KAAA+B,MAEA,OAAAA,MAAAtP,QAEA,IAAA,GACAs2C,IAAAq5B,gBAAAL,iBAAAhgE,MACA,MAEA,KAAA,GACAgnC,IAAAs5B,gBAAAN,iBAAAhgE,MACA,MAEA,KAAA,GACAgnC,IAAAu5B,gBAAAP,iBAAAhgE,MACA,MAEA,SACAgnC,IAAAw5B,gBAAAR,iBAAAhgE,UAYAk1B,MAAAkE,0BA0DA,QAAA6V,SAEAwxB,eACAC,GAAAnK,aAAArqE,QAAAa,sBAAA4zE,MACAF,aAAA,GAIA,QAAAE,MAAA9iD,MAEA,OAAA+iD,kBAAAA,iBAAA/iD,OACA6iD,GAAAnK,aAAArqE,QAAAa,sBAAA4zE,MA+MA,QAAAE,eAAA/9B,OAAApK,OAAAooC,aAEA,GAAAh+B,OAAA5uC,QAAA,CAIA,GAFA4uC,OAAAmC,OAAAt3C,KAAA+qC,OAAAuM,QAIA,GAAAnC,OAAAi+B,QAEAC,YAAAhwE,KAAA8xC,QAEAA,OAAAuC,YAEA47B,aAAAjwE,KAAA8xC,YAIA,IAAAA,OAAAo+B,SAEAp+B,OAAAwC,gBAAAC,SAAA47B,iBAAAr+B,SAEAs+B,aAAApwE,KAAA8xC,YAIA,IAAAA,OAAAu+B,YAEAC,YAAAtwE,KAAA8xC,YAEA,IAAAA,OAAAy+B,wBAEAT,aAEAU,SAAAv5B,sBAAAnF,OAAAjJ,aACAC,aAAAqM,mBAIAs7B,kBAAAzwE,KAAA8xC,OAAA,KAAAA,OAAAnF,SAAA6jC,SAAA9zC,EAAA,UAEA,KAAAoV,OAAAoC,QAAApC,OAAAqC,QAAArC,OAAAsC,YAEAtC,OAAAgB,eAEAhB,OAAA0f,SAAA/c,UAIA3C,OAAAwC,eAAAC,SAAAC,iBAAA1C,SAAA,CAEAg+B,aAEAU,SAAAv5B,sBAAAnF,OAAAjJ,aACAC,aAAAqM,kBAIA,IAAAhD,UAAAo7B,QAAA94B,OAAA3C,QACAnF,SAAAmF,OAAAnF,QAEA,IAAAtwC,MAAAoN,QAAAkjC,UAIA,IAAA,GAFA+H,QAAAvC,SAAAuC,OAEA9wC,EAAA,EAAA4f,EAAAkxB,OAAAh1C,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAgxC,OAAAF,OAAA9wC,GACAixC,cAAAlI,SAAAiI,MAAAE,cAEAD,gBAAAA,cAAA3xC,SAEAutE,kBAAAzwE,KAAA8xC,OAAAK,SAAA0C,cAAA27B,SAAA9zC,EAAAkY,WAMAjI,UAAAzpC,SAEAutE,kBAAAzwE,KAAA8xC,OAAAK,SAAAxF,SAAA6jC,SAAA9zC,EAAA,MAYA,IAAA,GAFAwY,UAAApD,OAAAoD,SAEAtxC,EAAA,EAAA4f,EAAA0xB,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAEAisE,cAAA36B,SAAAtxC,GAAA8jC,OAAAooC,cAMA,QAAAY,eAAA5uB,WAAAra,MAAAC,OAAAipC,kBAEA,IAAA,GAAA/sE,GAAA,EAAA4f,EAAAs+B,WAAApiD,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA+/C,YAAA7B,WAAAl+C,GAEAkuC,OAAA6R,WAAA7R,OACAK,SAAAwR,WAAAxR,SACAxF,aAAA1/B,KAAA0jE,iBAAAhtB,WAAAhX,SAAAgkC,iBACA/7B,MAAA+O,WAAA/O,KAEA,IAAAlN,OAAAkpC,cAAA,CAEAC,oBAAAnpC,MAIA,KAAA,GAFAs8B,SAAAt8B,OAAAs8B,QAEAtkD,EAAA,EAAAsqB,GAAAg6B,QAAAtkE,OAAAggB,EAAAsqB,GAAAtqB,IAAA,CAEA,GAAAoxD,SAAA9M,QAAAtkD,EAEA,IAAAoyB,OAAAmC,OAAAt3C,KAAAm0E,QAAA78B,QAAA,CAEA,GAAAkxB,QAAA2L,QAAA3L,OAEA7tD,EAAA6tD,OAAA7tD,EAAAy5D,OACAh3D,EAAAorD,OAAAprD,EAAAi3D,QACAhyE,MAAAmmE,OAAAzoC,EAAAq0C,OACAn0C,OAAAuoC,OAAAtiD,EAAAmuD,OAEA9sC,OAAAlH,SAAAowC,iBAAAz8D,IAAA2G,EAAAyC,EAAA/a,MAAA49B,QAAAirB,eAAAklB,cAEAh5B,aAAAjC,OAAArK,MAAAqpC,QAAA3+B,SAAAxF,SAAAiI,aAQAi8B,qBAAA,KAEA98B,aAAAjC,OAAArK,MAAAC,OAAAyK,SAAAxF,SAAAiI,QAQA,QAAAb,cAAAjC,OAAArK,MAAAC,OAAAyK,SAAAxF,SAAAiI,OAOA,GALA9C,OAAAlF,eAAA+gC,MAAAlmC,MAAAC,OAAAyK,SAAAxF,SAAAiI,OAEA9C,OAAA9G,gBAAA0B,iBAAAhF,OAAAqB,mBAAA+I,OAAAjJ,aACAiJ,OAAA0I,aAAAqtB,gBAAA/1B,OAAA9G,iBAEA8G,OAAAy+B,wBAAA,CAEArsC,MAAAm8B,YAAA1zB,SAEA,IAAApJ,SAAA0tC,WAAAvpC,OAAAD,MAAA2E,IAAAO,SAAAmF,OAEAo/B,yBAAA,GAEAzC,sBAAA38B,OAAAvO,QAAAoJ,cAIAghC,OAAA14B,mBAAAvN,OAAAD,MAAA2E,IAAA+F,SAAAxF,SAAAmF,OAAA8C,MAIA9C,QAAAzE,cAAAsgC,MAAAlmC,MAAAC,OAAAyK,SAAAxF,SAAAiI,OAIA,QAAAu8B,cAAAxkC,SAAAP,IAAA0F,QAEA,GAAAs/B,oBAAAhd,WAAAt9C,IAAA61B,UAEAqC,WAAA0+B,aAAA5a,cACAnmB,SAAAa,OAAAtJ,MAAA+rC,aAAA7jC,IAAAilC,UAAAjK,UAAAiK,UAAAhK,gBAAAv1B,QAEAob,KAAAwgB,aAAA/Z,eAAAhnB,SAAAqC,YAEAzL,QAAA6tC,mBAAA7tC,QACA+tC,eAAA,CAEA,QAAArkE,KAAAs2B,QAGAoJ,SAAA9wC,iBAAA,UAAAyyE,uBAEA,IAAA/qC,QAAA2pB,OAAAA,KAGAshB,gCAAA7hC,cAEA,CAAA,OAAA1/B,KAAA+hC,WAAAikB,SAGA,MAKAqe,gBAAA,EAIA,GAAAA,cAAA,CAEA,GAAAtiC,WAAAikB,SAAA,CAEA,GAAAjtB,QAAAyc,UAAAzT,WAAAikB,SAEAme,oBAAAprC,QACAtoC,KAAAivC,SAAAzR,KACAqL,SAAAgrC,cAAA1nD,MAAAmc,OAAAO,UACAN,aAAAD,OAAAC,aACAC,eAAAF,OAAAE,oBAKAkrC,oBAAAprC,QACAtoC,KAAAivC,SAAAzR,KACAqL,SAAAoG,SAAApG,SACAN,aAAA0G,SAAA1G,aACAC,eAAAyG,SAAAzG,eAKAyG,UAAAinB,gBAAAwd,mBAAAprC,QAEAzC,QAAAmqC,aAAA7Z,eAAAlnB,SAAAykC,mBAAAprC,OAAAgJ,WAAAke,MAEAkkB,mBAAA7tC,QAAAA,QACAoJ,SAAApJ,QAAAA,QAIA,GAAAurC,mBAAAvrC,QAAA0tB,eAEA,IAAAtkB,SAAA4C,aAAA,CAEA5C,SAAA6kC,yBAAA,CAEA,KAAA,GAAA5tE,GAAA,EAAAA,EAAA+pE,MAAAla,gBAAA7vD,IAEAkrE,kBAAA,cAAAlrE,IAAA,GAEA+oC,SAAA6kC,2BAQA,GAAA7kC,SAAA6C,aAAA,CAEA7C,SAAA8kC,yBAAA,CAEA,KAAA,GAAA7tE,GAAA,EAAAA,EAAA+pE,MAAAja,gBAAA9vD,IAEAkrE,kBAAA,cAAAlrE,IAAA,GAEA+oC,SAAA8kC,2BAQA,GAAAlrC,UAAA6qC,mBAAAprC,OAAAO,UAEAoG,SAAAkjB,kBACAljB,SAAA4hB,uBACA,IAAA5hB,SAAA0C,WAEA+hC,mBAAAliB,kBAAAmiB,UAAAjK,UACAgK,mBAAA/J,gBAAAgK,UAAAhK,gBACA9gC,SAAA8H,eAAAgjC,UAAApK,SAIAmK,mBAAAhlC,IAAAA,IAIAglC,mBAAAM,WAAAlkC,OAAAtJ,MAAA4f,KAEAnX,SAAAa,SAIAjH,SAAAorC,kBAAA3iE,MAAAw+B,OAAAtJ,MAAAulB,QACAljB,SAAAqrC,kBAAA5iE,MAAAw+B,OAAAtJ,MAAAkkB,YACA7hB,SAAAsrC,WAAA7iE,MAAAw+B,OAAAtJ,MAAAykB,KACApiB,SAAAurC,eAAA9iE,MAAAw+B,OAAAtJ,MAAAglB,SACA3iB,SAAAwrC,YAAA/iE,MAAAw+B,OAAAtJ,MAAAmlB,MACA9iB,SAAAyrC,iBAAAhjE,MAAAw+B,OAAAtJ,MAAAslB,KAEAjjB,SAAA2hB,qBAAAl5C,MAAAw+B,OAAAtJ,MAAAgkB,qBACA3hB,SAAA4hB,wBAAAn5C,MAAAw+B,OAAAtJ,MAAAikB,wBACA5hB,SAAAkiB,cAAAz5C,MAAAw+B,OAAAtJ,MAAAukB,cACAliB,SAAAmiB,iBAAA15C,MAAAw+B,OAAAtJ,MAAAwkB,iBACAniB,SAAA4iB,eAAAn6C,MAAAw+B,OAAAtJ,MAAAilB,eACA5iB,SAAA6iB,kBAAAp6C,MAAAw+B,OAAAtJ,MAAAklB,kBAKA,IAAA6oB,cAAAb,mBAAA7tC,QAAAmhB,cACAwtB,aACA5uC,cAAA6uC,aAAAF,aAAA5zC,IAAAkI,SAEA6qC,oBAAAc,aAAAA,aAIA,QAAAjB,YAAAvpC,OAAA0E,IAAAO,SAAAmF,QAEAsgC,kBAAA,CAEA,IAAAhB,oBAAAhd,WAAAt9C,IAAA61B,SAEA,IAAA0lC,mBAEAC,uBAAA5qC,SAAA6qC,gBAAA,CAEA,GAAAC,UACA9qC,SAAA6qC,gBACA5lC,SAAApK,KAAAkwC,kBAKApB,WAAAjJ,SACAz7B,SAAA0B,eAAA1B,SAAA2B,iBAAA3B,SAAA4B,YACA7G,OAAA0pC,mBAAAoB,WAMA,IAAA7lC,SAAAhC,kBAEA19B,KAAAmkE,mBAAA7tC,QAEAoJ,SAAAhC,aAAA,EAEAgC,SAAAP,KAAAglC,mBAAAhlC,MAAAA,IAEAO,SAAAhC,aAAA,EAEAgC,SAAAa,QAAA4jC,mBAAAM,aAAAlkC,OAAAtJ,MAAA4f,KAEAnX,SAAAhC,aAAA,MAEA19B,KAAAmkE,mBAAAliB,mBACAkiB,mBAAAliB,oBAAAmiB,UAAAjK,WACAgK,mBAAA/J,kBAAAgK,UAAAhK,kBAEA16B,SAAAhC,aAAA,IAMAgC,SAAAhC,cAEAwmC,aAAAxkC,SAAAP,IAAA0F,QACAnF,SAAAhC,aAAA,EAIA,IAAA+nC,iBAAA,EACAC,iBAAA,EACAC,eAAA,EAEArvC,QAAA6tC,mBAAA7tC,QACAsvC,WAAAtvC,QAAAmhB,cACAouB,WAAA1B,mBAAAprC,OAAAO,QAkBA,IAhBArC,MAAA+D,WAAA1E,QAAAA,WAEAmvC,gBAAA,EACAC,iBAAA,EACAC,eAAA,GAIAjmC,SAAApK,KAAAkwC,qBAEAA,mBAAA9lC,SAAApK,GAEAowC,iBAAA,GAIAD,gBAAAhrC,SAAA6qC,eAAA,CA6BA,GA3BAM,WAAApwC,SAAAuT,IAAA,mBAAAtO,OAAAsB,kBAEA5E,aAAAunB,wBAEAknB,WAAApwC,SAAAuT,IAAA,gBACA,GAAAtnC,KAAAmiD,IAAAnpB,OAAA6E,IAAA,GAAA79B,KAAAqkE,MAMAR,kBAAA1B,qBAAAnpC,UAEA6qC,eAAA1B,qBAAAnpC,OAMAirC,iBAAA,EACAC,eAAA,GAOAjmC,SAAAkjB,kBACAljB,SAAAqmC,qBACArmC,SAAAsmC,wBACAtmC,SAAAgU,OAAA,CAEA,GAAAuyB,SAAAL,WAAAvoE,IAAA6oE,mBAEAlmE,KAAAimE,SAEAA,QAAAzwC,SAAAuT,IACAw6B,SAAAv5B,sBAAAvP,OAAAmB,eAMA8D,SAAAqmC,qBACArmC,SAAAymC,uBACAzmC,SAAA0mC,qBACA1mC,SAAAsmC,wBACAtmC,SAAAkjB,kBACAljB,SAAA2C,WAEAujC,WAAApwC,SAAAuT,IAAA,aAAAtO,OAAAqB,oBAUA,GAAA4D,SAAA2C,SAAA,CAEAujC,WAAAS,YAAAt9B,IAAAlE,OAAA,cACA+gC,WAAAS,YAAAt9B,IAAAlE,OAAA,oBAEA,IAAA0f,UAAA1f,OAAA0f,QAEA,IAAAA,SAAA,CAEA,GAAAC,OAAAD,SAAAC,KAEA,IAAArtB,aAAAstB,oBAAA,CAEA,OAAAzkD,KAAAukD,SAAA+hB,YAAA,CAUA,GAAA1xC,MAAAnzB,KAAA8kE,KAAA,EAAA/hB,MAAA/xD,OACAmiC,MAAArG,MAAAi4C,eAAA/kE,KAAAC,KAAAkzB,OACAA,KAAAnzB,KAAAsF,IAAA6tB,KAAA,EAEA,IAAA6xC,cAAA,GAAA90C,cAAAiD,KAAAA,KAAA,EACA6xC,cAAA/iE,IAAA6gD,SAAAkiB,aAEA,IAAAH,aAAA,GAAAx1C,aAAA21C,aAAA7xC,KAAAA,KAAA7F,WAAA67B,UAEArG,UAAAkiB,aAAAA,aACAliB,SAAA+hB,YAAAA,YACA/hB,SAAAmiB,gBAAA9xC,KAIAgxC,WAAApwC,SAAAuT,IAAA,cAAAwb,SAAA+hB,aACAV,WAAApwC,SAAAuT,IAAA,kBAAAwb,SAAAmiB,qBAIAd,YAAAS,YAAAt9B,IAAAwb,SAAA,iBA+HA,MAvHAmhB,mBAEAE,WAAApwC,SAAAuT,IAAA,sBAAA23B,MAAAiG,qBACAf,WAAApwC,SAAAuT,IAAA,wBAAA23B,MAAAkG,uBAEAlnC,SAAAa,QAWAsmC,8BAAAhB,WAAAF,eAMAxmC,KAAAO,SAAAP,KAEA2nC,mBAAAjB,WAAA1mC,KAIAO,SAAA0mC,oBAEAW,sBAAAlB,WAAAnmC,UAEAA,SAAAymC,uBAEAY,sBAAAlB,WAAAnmC,UACAsnC,uBAAAnB,WAAAnmC,WAEAA,SAAAqmC,qBAEAgB,sBAAAlB,WAAAnmC,UAEAA,SAAAunC,mBAEAC,oBAAArB,WAAAnmC,UAIAynC,qBAAAtB,WAAAnmC,WAIAA,SAAAsmC,wBAEAe,sBAAAlB,WAAAnmC,UAEAA,SAAA0nC,uBAEAC,wBAAAxB,WAAAnmC,UAIA4nC,wBAAAzB,WAAAnmC,WAIAA,SAAA6nC,qBAEAR,sBAAAlB,WAAAnmC,UACA8nC,qBAAA3B,WAAAnmC,WAEAA,SAAAmH,wBAEAkgC,sBAAAlB,WAAAnmC,UACA+nC,wBAAA5B,WAAAnmC,WAEAA,SAAAgoC,sBAEAX,sBAAAlB,WAAAnmC,UACAioC,sBAAA9B,WAAAnmC,WAEAA,SAAAkoC,qBAEAC,oBAAAhC,WAAAnmC,UAEAA,SAAAooC,sBAEAC,oBAAAlC,WAAAnmC,WAIAA,SAAAsoC,iBAEAC,sBAAApC,WAAAnmC,UAEAA,SAAAwoC,mBAEArC,WAAAnsC,MAAA33B,MAAA29B,SAAAhG,MACAmsC,WAAApsC,QAAA13B,MAAA29B,SAAAjG,aAOAz5B,KAAA6lE,WAAAsC,SAAAtC,WAAAsC,OAAApmE,MAAAqmE,YAAAC,qBACAroE,KAAA6lE,WAAAyC,SAAAzC,WAAAyC,OAAAvmE,MAAAqmE,YAAAG,iBAEAlyC,cAAAmyC,OACAz/B,IAAAo7B,mBAAAc,aAAAY,WAAAnF,QAOAkF,WAAApwC,SAAAuT,IAAA,kBAAAlE,OAAA9G,iBACA6nC,WAAApwC,SAAAuT,IAAA,eAAAlE,OAAA0I,cACAq4B,WAAApwC,SAAAuT,IAAA,cAAAlE,OAAAjJ,aAEAtF,QAMA,QAAAywC,uBAAAztC,SAAAoG,UAEApG,SAAAG,QAAA13B,MAAA29B,SAAAjG,QAEAiG,SAAAhG,QAEAJ,SAAAmvC,QAAA1mE,MAAA29B,SAAAhG,OAIAgG,SAAAgpC,UAEApvC,SAAAovC,SAAA3mE,MAAAi6B,KAAA0D,SAAAgpC,UAAA9tB,eAAAlb,SAAAipC,mBAIAjpC,SAAAriC,MAEAi8B,SAAAj8B,IAAA0E,MAAA29B,SAAAriC,KAIAqiC,SAAA0D,WAEA9J,SAAA8J,SAAArhC,MAAA29B,SAAA0D,UAIA1D,SAAA+T,cAEAna,SAAAma,YAAA1xC,MAAA29B,SAAA+T,aAIA/T,SAAAgU,SAEApa,SAAAoa,OAAA3xC,MAAA29B,SAAAgU,OAMApa,SAAAsvC,WAAA7mE,MAAA29B,SAAAgU,QAAAhU,SAAAgU,OAAA4B,eAAA,EAAA,EAEAhc,SAAAua,aAAA9xC,MAAA29B,SAAAmU,aACAva,SAAAwa,gBAAA/xC,MAAA29B,SAAAoU,iBAIApU,SAAA2T,WAEA/Z,SAAA+Z,SAAAtxC,MAAA29B,SAAA2T,SACA/Z,SAAAga,kBAAAvxC,MAAA29B,SAAA4T,mBAIA5T,SAAA6T,QAEAja,SAAAia,MAAAxxC,MAAA29B,SAAA6T,MACAja,SAAAka,eAAAzxC,MAAA29B,SAAA8T,eAYA,IAAAq1B,WAwCA,IAtCAnpC,SAAAriC,IAEAwrE,WAAAnpC,SAAAriC,IAEAqiC,SAAA+T,YAEAo1B,WAAAnpC,SAAA+T,YAEA/T,SAAA2D,gBAEAwlC,WAAAnpC,SAAA2D,gBAEA3D,SAAA+e,UAEAoqB,WAAAnpC,SAAA+e,UAEA/e,SAAA8e,QAEAqqB,WAAAnpC,SAAA8e,QAEA9e,SAAAkiB,aAEAinB,WAAAnpC,SAAAkiB,aAEAliB,SAAAmiB,aAEAgnB,WAAAnpC,SAAAmiB,aAEAniB,SAAA0D,SAEAylC,WAAAnpC,SAAA0D,SAEA1D,SAAAiiB,cAEAknB,WAAAnpC,SAAAiiB,iBAIA3hD,KAAA6oE,WAAA,CAGAA,WAAA9jB,sBAEA8jB,WAAAA,WAAA74C,QAIA,IAAAhU,QAAA6sD,WAAA7sD,OACAiT,OAAA45C,WAAA55C,MAEAqK,UAAAwvC,aAAA/mE,MAAA2B,IAAAsY,OAAA3R,EAAA2R,OAAAlP,EAAAmiB,OAAA5kB,EAAA4kB,OAAAniB,IAMA,QAAA+6D,qBAAAvuC,SAAAoG,UAEApG,SAAAmvC,QAAA1mE,MAAA29B,SAAAhG,MACAJ,SAAAG,QAAA13B,MAAA29B,SAAAjG,QAIA,QAAAsuC,qBAAAzuC,SAAAoG,UAEApG,SAAAyvC,SAAAhnE,MAAA29B,SAAAqpC,SACAzvC,SAAA0vC,UAAAjnE,MAAA29B,SAAAqpC,SAAArpC,SAAAupC,QACA3vC,SAAAK,MAAA53B,MAAA29B,SAAA/F,MAIA,QAAAsuC,uBAAA3uC,SAAAoG,UASA,GAPApG,SAAAmvC,QAAA1mE,MAAA29B,SAAAhG,MACAJ,SAAAG,QAAA13B,MAAA29B,SAAAjG,QACAH,SAAA1E,KAAA7yB,MAAA29B,SAAA9K,KAAAkrC,YACAxmC,SAAAK,MAAA53B,MAAA,GAAAgiE,QAEAzqC,SAAAj8B,IAAA0E,MAAA29B,SAAAriC,IAEA,OAAAqiC,SAAAriC,IAAA,CAEA,GAAA2e,QAAA0jB,SAAAriC,IAAA2e,OACAiT,OAAAyQ,SAAAriC,IAAA4xB,MAEAqK,UAAAwvC,aAAA/mE,MAAA2B,IAAAsY,OAAA3R,EAAA2R,OAAAlP,EAAAmiB,OAAA5kB,EAAA4kB,OAAAniB,IAMA,QAAAg6D,oBAAAxtC,SAAA6F,KAEA7F,SAAA8E,SAAAr8B,MAAAo9B,IAAAzF,MAEAyF,IAAAC,OAEA9F,SAAA4E,QAAAn8B,MAAAo9B,IAAAE,KACA/F,SAAA6E,OAAAp8B,MAAAo9B,IAAAG,KAEAH,IAAAI,YAEAjG,SAAA2E,WAAAl8B,MAAAo9B,IAAAK,SAMA,QAAAwnC,wBAAA1tC,SAAAoG,UAEAA,SAAAiiB,cAEAroB,SAAAqoB,YAAA5/C,MAAA29B,SAAAiiB,aAMA,QAAAwlB,sBAAA7tC,SAAAoG,UAEApG,SAAA4vC,SAAAnnE,MAAA29B,SAAAwpC,SACA5vC,SAAA6vC,UAAApnE,MAAAN,KAAAsF,IAAA24B,SAAAypC,UAAA,MAEAzpC,SAAAiiB,cAEAroB,SAAAqoB,YAAA5/C,MAAA29B,SAAAiiB,aAIAjiB,SAAA8e,UAEAllB,SAAAklB,QAAAz8C,MAAA29B,SAAA8e,QACAllB,SAAA8vC,UAAArnE,MAAA29B,SAAA0pC,WAIA1pC,SAAA+e,YAEAnlB,SAAAmlB,UAAA18C,MAAA29B,SAAA+e,UACAnlB,SAAA+vC,YAAAtnE,MAAAi6B,KAAA0D,SAAA2pC,cAIA3pC,SAAA2D,kBAEA/J,SAAA+J,gBAAAthC,MAAA29B,SAAA2D,gBACA/J,SAAAgK,kBAAAvhC,MAAA29B,SAAA4D,kBACAhK,SAAAiK,iBAAAxhC,MAAA29B,SAAA6D,kBAMA,QAAA2jC,qBAAA5tC,SAAAoG,UAEAynC,qBAAA7tC,SAAAoG,UAEAA,SAAA0iB,cAEA9oB,SAAA8oB,YAAArgD,MAAA29B,SAAA0iB,aAMA,QAAAklB,yBAAAhuC,SAAAoG,UAEApG,SAAAgwC,UAAAvnE,MAAA29B,SAAA4pC,UACAhwC,SAAAiwC,UAAAxnE,MAAA29B,SAAA6pC,UAEA7pC,SAAAkiB,eAEAtoB,SAAAsoB,aAAA7/C,MAAA29B,SAAAkiB,cAIAliB,SAAAmiB,eAEAvoB,SAAAuoB,aAAA9/C,MAAA29B,SAAAmiB,cAIAniB,SAAAiiB,cAEAroB,SAAAqoB,YAAA5/C,MAAA29B,SAAAiiB,aAIAjiB,SAAA8e,UAEAllB,SAAAklB,QAAAz8C,MAAA29B,SAAA8e,QACAllB,SAAA8vC,UAAArnE,MAAA29B,SAAA0pC,WAIA1pC,SAAA+e,YAEAnlB,SAAAmlB,UAAA18C,MAAA29B,SAAA+e,UACAnlB,SAAA+vC,YAAAtnE,MAAAi6B,KAAA0D,SAAA2pC,cAIA3pC,SAAA2D,kBAEA/J,SAAA+J,gBAAAthC,MAAA29B,SAAA2D,gBACA/J,SAAAgK,kBAAAvhC,MAAA29B,SAAA4D,kBACAhK,SAAAiK,iBAAAxhC,MAAA29B,SAAA6D,kBAIA7D,SAAAgU,SAGApa,SAAAkwC,gBAAAznE,MAAA29B,SAAA8pC,iBAMA,QAAAnC,yBAAA/tC,SAAAoG,UAEApG,SAAAmwC,UAAA1nE,MAAA29B,SAAA+pC,UACAnwC,SAAAowC,mBAAA3nE,MAAA29B,SAAAgqC,mBAEApC,wBAAAhuC,SAAAoG,UAIA,QAAA8nC,sBAAAluC,SAAAoG,UAEAA,SAAA2D,kBAEA/J,SAAA+J,gBAAAthC,MAAA29B,SAAA2D,gBACA/J,SAAAgK,kBAAAvhC,MAAA29B,SAAA4D,kBACAhK,SAAAiK,iBAAAxhC,MAAA29B,SAAA6D,kBAMA,QAAAkkC,yBAAAnuC,SAAAoG,UAEAA,SAAA2D,kBAEA/J,SAAA+J,gBAAAthC,MAAA29B,SAAA2D,gBACA/J,SAAAgK,kBAAAvhC,MAAA29B,SAAA4D,kBACAhK,SAAAiK,iBAAAxhC,MAAA29B,SAAA6D,kBAIAjK,SAAAmK,kBAAA1hC,MAAAi6B,KAAA0D,SAAA+D,mBACAnK,SAAAoK,aAAA3hC,MAAA29B,SAAAgE,aACApK,SAAAqK,YAAA5hC,MAAA29B,SAAAiE,YAIA,QAAAgkC,uBAAAruC,SAAAoG,UAEAA,SAAA8e,UAEAllB,SAAAklB,QAAAz8C,MAAA29B,SAAA8e,QACAllB,SAAA8vC,UAAArnE,MAAA29B,SAAA0pC,WAIA1pC,SAAA+e,YAEAnlB,SAAAmlB,UAAA18C,MAAA29B,SAAA+e,UACAnlB,SAAA+vC,YAAAtnE,MAAAi6B,KAAA0D,SAAA2pC,cAIA3pC,SAAA2D,kBAEA/J,SAAA+J,gBAAAthC,MAAA29B,SAAA2D,gBACA/J,SAAAgK,kBAAAvhC,MAAA29B,SAAA4D,kBACAhK,SAAAiK,iBAAAxhC,MAAA29B,SAAA6D,kBAQA,QAAAsjC,+BAAAvtC,SAAAv3B,OAEAu3B,SAAAorC,kBAAAhnC,YAAA37B,MAEAu3B,SAAAqrC,kBAAAjnC,YAAA37B,MACAu3B,SAAAwrC,YAAApnC,YAAA37B,MACAu3B,SAAAsrC,WAAAlnC,YAAA37B,MACAu3B,SAAAurC,eAAAnnC,YAAA37B,MACAu3B,SAAAyrC,iBAAArnC,YAAA37B,MAeA,QAAAiwB,oBAEA,GAAA23C,aAAAxE,iBAUA,OARAwE,cAAAxyC,aAAA49B,aAEAnyD,QAAAH,KAAA,sCAAAknE,YAAA,+CAAAxyC,aAAA49B,aAIAoQ,mBAAA,EAEAwE,YA3qEA/mE,QAAAghD,IAAA,sBAAAgmB,UAEA7nC,WAAAA,cAEA,IAAA8nC,aAAA7pE,KAAA+hC,WAAAtE,OAAAsE,WAAAtE,OAAArvC,SAAAkwC,gBAAA,+BAAA,UACAwrC,aAAA9pE,KAAA+hC,WAAAxD,QAAAwD,WAAAxD,QAAA,KAEAwrC,WAAA/pE,KAAA+hC,WAAAkU,OAAAlU,WAAAkU,MACA+zB,WAAAhqE,KAAA+hC,WAAAtG,OAAAsG,WAAAtG,MACAwuC,aAAAjqE,KAAA+hC,WAAAgvB,SAAAhvB,WAAAgvB,QACAmZ,eAAAlqE,KAAA+hC,WAAAooC,WAAApoC,WAAAooC,UACAvJ,wBAAA5gE,KAAA+hC,WAAA/B,oBAAA+B,WAAA/B,mBACAoqC,2BAAApqE,KAAA+hC,WAAAsoC,uBAAAtoC,WAAAsoC,sBAEAtH,eACAC,gBAEAQ,kBAAA,KAEAL,gBACAE,cAIAxwE,MAAAy3E,WAAAT,QACAh3E,KAAA0rC,QAAA,KAIA1rC,KAAAqiD,WAAA,EACAriD,KAAAsiD,gBAAA,EACAtiD,KAAAuiD,gBAAA,EACAviD,KAAAwiD,kBAAA,EAIAxiD,KAAAgwE,aAAA,EAIAhwE,KAAAuuC,kBACAvuC,KAAAqzC,sBAAA,EAIArzC,KAAAsuD,YAAA,EACAtuD,KAAAyzD,YAAA,EACAzzD,KAAAwzD,aAAA,EAIAxzD,KAAAyvD,yBAAA,EAIAzvD,KAAAkrD,YAAAE,kBACAprD,KAAA8zE,oBAAA,EACA9zE,KAAA+zE,sBAAA,EAIA/zE,KAAA2zD,gBAAA,EACA3zD,KAAA4zD,gBAAA,CAIA,IAAAia,OAAA7tE,KAEAsuE,gBAAA,EAIAtB,qBAAA,KACA0K,oBAAA,KACA/E,oBAAA,EACAvB,wBAAA,GAEAqB,eAAA,KACA1B,oBAAA,KAEAzD,iBAAA,GAAA3wC,SACAywC,gBAAA,GAAAzwC,SACAg7C,oBAAA,KAIArF,kBAAA,EAIArB,OAAA+F,QAAA93E,MACAgyE,QAAA8F,QAAAl6C,OAEAmwC,YAAA,EAEAM,UAAA,GAAA5wC,SAAA,EAAA,EAAAs0C,OAAAC,SACA7D,SAAA,GAAA1wC,SAAA,EAAA,EAAAs0C,OAAAC,SACA0G,cAAA,EAIAnjC,SAAA,GAAAlD,SAIAggC,UAAA,GAAAtK,eACAsL,kBAAA,EACAC,uBAAA,EAIAn9B,kBAAA,GAAAtX,SAEA2yC,SAAA,GAAA5yC,SAIA0vC,aACAzrB,WAAA,EACA1d,SAAA,GAGAqpC,aAEA7jB,MAAA,EACA5E,MAAA,EACA1gB,SAAA,EACAC,MAAA,EACA2gB,OAAA,EAIAnlD,MAAA4jC,MAEA6D,OAAAimC,YACAmK,OAAArK,YACArb,SAAA,KAYA,IAAAjc,IAEA,KAEA,GAAA4hC,oBACA10B,MAAA8zB,OACAtuC,MAAAuuC,OACAjZ,QAAAkZ,SACAE,UAAAD,WACAlqC,mBAAA4gC,oBACAyJ,sBAAAD,uBAKA,IAAA,QAFArhC,IAAA+gC,UAAAD,QAAArrC,WAAA,QAAAmsC,oBAAAd,QAAArrC,WAAA,qBAAAmsC,oBAIA,KAAA,QAAAd,QAAArrC,WAAA,SAEA,8DAIA,oCAQAx+B,KAAA+oC,IAAA+sB,2BAEA/sB,IAAA+sB,yBAAA,WAEA,OAAA8U,SAAA,EAAAC,SAAA,EAAA5wC,UAAA,KAMA4vC,QAAAj7E,iBAAA,mBAAAqyE,eAAA,GACA4I,QAAAj7E,iBAAA,uBAAAwyE,kBAAA,GAEA,MAAAvwC,OAEAjuB,QAAAiuB,MAAA,wBAAAA,OAIA,GAAA2R,YAAArL,aAAAF,MACAkwB,WAAAjwB,SAAA18B,WAAAo6C,WAAA0rB,QAAA//B,OACAkgC,aAAAE,YAEA5rB,WAAAyrB,aAAAK,eAAAC,sBACAC,cAAAC,eAEA5Z,KAwDA2Y,gBAIA,IAAA0C,IAAA,GAAAzL,cAAA0J,MAEA7tE,MAAA4vE,GAAAA,EAIA,IAAA54B,WAAA,GAAArF,gBAAAk8B,MAAAJ,QAAAnpC,aAAAwN,eAEA9xC,MAAAg3C,UAAAA,UAIAh3C,KAAA2rC,WAAA,WAEA,MAAAuK,MAIAl2C,KAAAi4E,qBAAA,WAEA,MAAA/hC,KAAA+hC,wBAIAj4E,KAAAk4E,iBAAA,WAEA,GAAA7yB,WAAA1V,WAAA34B,IAAA,qBACAquC,YAAAA,UAAA8yB,eAIAn4E,KAAAo4E,oBAAA,WAEA,GAAA/yB,WAAA1V,WAAA34B,IAAA,qBACAquC,YAAAA,UAAAgzB,kBAIAr4E,KAAA4kE,cAAA,WAEA,MAAAqI,cAIAjtE,KAAAs4E,cAAA,SAAAppE,WAEA/B,KAAA+B,QAEA+9D,YAAA/9D,MAEAlP,KAAAu4E,QAAAtH,OAAAC,SAAA,KAIAlxE,KAAA8kE,QAAA,WAEA,OACA5lE,MAAA+xE,OACAn0C,OAAAo0C,UAKAlxE,KAAAu4E,QAAA,SAAAr5E,MAAA49B,OAAA07C,aAEA,GAAAnU,QAAAuL,GAAAnK,WAEA,IAAApB,QAAAA,OAAAC,aAGA,WADAv0D,SAAAH,KAAA,wEAKAqhE,QAAA/xE,MACAgyE,QAAAp0C,OAEAk6C,QAAA93E,MAAAA,MAAA+tE,YACA+J,QAAAl6C,OAAAA,OAAAmwC,aAEA,IAAAuL,cAEAxB,QAAAl4E,MAAAI,MAAAA,MAAA,KACA83E,QAAAl4E,MAAAg+B,OAAAA,OAAA,MAIA98B,KAAAy4E,YAAA,EAAA,EAAAv5E,MAAA49B,SAIA98B,KAAA04E,qBAAA,WAEA,OACAx5E,MAAA+xE,OAAAhE,YACAnwC,OAAAo0C,QAAAjE,cAKAjtE,KAAA+kE,qBAAA,SAAA7lE,MAAA49B,OAAA67C,YAEA1H,OAAA/xE,MACAgyE,QAAAp0C,OAEAmwC,YAAA0L,WAEA3B,QAAA93E,MAAAA,MAAAy5E,WACA3B,QAAAl6C,OAAAA,OAAA67C,WAEA34E,KAAAy4E,YAAA,EAAA,EAAAv5E,MAAA49B,SAIA98B,KAAAy4E,YAAA,SAAAjhE,EAAAyC,EAAA/a,MAAA49B,QAEAywC,UAAA18D,IAAA2G,EAAA05D,QAAAj3D,EAAA6iB,OAAA59B,MAAA49B,QACAsH,MAAAlH,SAAAowC,iBAAAnkC,KAAAokC,WAAAxlB,eAAAklB,eAIAjtE,KAAA44E,WAAA,SAAAphE,EAAAyC,EAAA/a,MAAA49B,QAEAuwC,SAAAx8D,IAAA2G,EAAA05D,QAAAj3D,EAAA6iB,OAAA59B,MAAA49B,QACAsH,MAAApH,QAAAowC,gBAAAjkC,KAAAkkC,UAAAtlB,eAAAklB,eAIAjtE,KAAAq2C,eAAA,SAAAwiC,SAEAz0C,MAAAiS,eAAAuhC,aAAAiB,UAMA74E,KAAAqjD,cAAAnB,WAAAmB,cACArjD,KAAAsjD,cAAApB,WAAAoB,cACAtjD,KAAAujD,cAAArB,WAAAqB,cACAvjD,KAAAwjD,cAAAtB,WAAAsB,cAEAxjD,KAAAy3C,MAAA,SAAA5Q,MAAA+B,MAAAs1B,SAEA,GAAA4a,MAAA,OAEA3rE,KAAA05B,OAAAA,SAAAiyC,MAAA5iC,IAAA6iC,uBACA5rE,KAAAy7B,OAAAA,SAAAkwC,MAAA5iC,IAAA8iC,uBACA7rE,KAAA+wD,SAAAA,WAAA4a,MAAA5iC,IAAA+iC,oBAEA/iC,IAAAuB,MAAAqhC,OAIA94E,KAAAmiD,WAAA,WAEAniD,KAAAy3C,OAAA,GAAA,GAAA,IAIAz3C,KAAA88D,WAAA,WAEA98D,KAAAy3C,OAAA,GAAA,GAAA,IAIAz3C,KAAAm+D,aAAA,WAEAn+D,KAAAy3C,OAAA,GAAA,GAAA,IAIAz3C,KAAAk5E,YAAA,SAAAxjB,aAAA7uB,MAAA+B,MAAAs1B,SAEAl+D,KAAAw3C,gBAAAke,cACA11D,KAAAy3C,MAAA5Q,MAAA+B,MAAAs1B,UAMAl+D,KAAAmkD,QAAA,WAEA6yB,QAAAjxB,oBAAA,mBAAAqoB,eAAA,GACA4I,QAAAjxB,oBAAA,uBAAAwoB,kBAAA,GAEAT,YAAA3pB,UAEAyrB,GAAAzrB,WAyEAnkD,KAAA4uE,sBAAA,SAAA58B,OAAAvO,QAAAoJ,UAEAzI,MAAAgE,gBAEA,IAAAO,SAAA2rB,WAAAt9C,IAAAg7B,OAEAA,QAAAmnC,eAAAxwC,QAAAoC,WAAApC,QAAAoC,SAAAmL,IAAAvR,gBACAqN,OAAAonC,aAAAzwC,QAAA0I,SAAA1I,QAAA0I,OAAA6E,IAAAvR,gBACAqN,OAAAqnC,SAAA1wC,QAAAnC,KAAAmC,QAAAnC,GAAA0P,IAAAvR,gBACAqN,OAAAsnC,YAAA3wC,QAAA9B,QAAA8B,QAAA9B,MAAAqP,IAAAvR,eAEA,IAAAqqC,mBAAAvrC,QAAA0tB,eAYA,IAVAnf,OAAAmnC,eAEAjjC,IAAArR,WAAAqR,IAAApR,aAAA6D,QAAAoC,UACAmL,IAAAnR,WAAAmR,IAAApR,aAAAkN,OAAAunC,cAAArjC,IAAAiC,cAEA/T,MAAAiE,gBAAA2mC,kBAAAjkC,UACAmL,IAAA3N,oBAAAymC,kBAAAjkC,SAAA,EAAAmL,IAAA1N,OAAA,EAAA,EAAA,IAIAwJ,OAAAonC,WAAA,CAIA,GAFAljC,IAAArR,WAAAqR,IAAApR,aAAA6D,QAAA0I,SAEAxE,SAAAqmC,sBACArmC,SAAAsmC,yBACAtmC,SAAAgoC,uBACA,IAAAhoC,SAAAiB,YAEA,IAAA,GAAAhqC,GAAA,EAAA4f,EAAA,EAAAsuB,OAAAmH,MAAAr1C,EAAA4f,EAAA5f,GAAA,EAAA,CAEA,GAAA+Q,OAAAm9B,OAAAwnC,YAEAC,IAAA5kE,MAAA/Q,EAAA,GAAA+Q,MAAA/Q,EAAA,GAAA+Q,MAAA/Q,EAAA,IAAA,EACA41E,IAAA7kE,MAAA/Q,EAAA,GAAA+Q,MAAA/Q,EAAA,GAAA+Q,MAAA/Q,EAAA,IAAA,EACA61E,IAAA9kE,MAAA/Q,EAAA,GAAA+Q,MAAA/Q,EAAA,GAAA+Q,MAAA/Q,EAAA,IAAA,CAEA+Q,OAAA/Q,EAAA,GAAA21E,GACA5kE,MAAA/Q,EAAA,GAAA41E,GACA7kE,MAAA/Q,EAAA,GAAA61E,GAEA9kE,MAAA/Q,EAAA,GAAA21E,GACA5kE,MAAA/Q,EAAA,GAAA41E,GACA7kE,MAAA/Q,EAAA,GAAA61E,GAEA9kE,MAAA/Q,EAAA,GAAA21E,GACA5kE,MAAA/Q,EAAA,GAAA41E,GACA7kE,MAAA/Q,EAAA,GAAA61E,GAMAzjC,IAAAnR,WAAAmR,IAAApR,aAAAkN,OAAAwnC,YAAAtjC,IAAAiC,cAEA/T,MAAAiE,gBAAA2mC,kBAAA39B,QAEA6E,IAAA3N,oBAAAymC,kBAAA39B,OAAA,EAAA6E,IAAA1N,OAAA,EAAA,EAAA,GAIAwJ,OAAAqnC,QAAAxsC,SAAAriC,MAEA0rC,IAAArR,WAAAqR,IAAApR,aAAA6D,QAAAnC,IACA0P,IAAAnR,WAAAmR,IAAApR,aAAAkN,OAAA4nC,QAAA1jC,IAAAiC,cAEA/T,MAAAiE,gBAAA2mC,kBAAAxoC,IAEA0P,IAAA3N,oBAAAymC,kBAAAxoC,GAAA,EAAA0P,IAAA1N,OAAA,EAAA,EAAA,IAIAwJ,OAAAsnC,WAAAzsC,SAAAkB,eAAAC,WAEAkI,IAAArR,WAAAqR,IAAApR,aAAA6D,QAAA9B,OACAqP,IAAAnR,WAAAmR,IAAApR,aAAAkN,OAAA6nC,WAAA3jC,IAAAiC,cAEA/T,MAAAiE,gBAAA2mC,kBAAAnoC,OAEAqP,IAAA3N,oBAAAymC,kBAAAnoC,MAAA,EAAAqP,IAAA1N,OAAA,EAAA,EAAA,IAIApE,MAAAkE,0BAEA4N,IAAAuP,WAAAvP,IAAArM,UAAA,EAAAmI,OAAAmH,OAEAnH,OAAAmH,MAAA,GAIAn5C,KAAAm1C,mBAAA,SAAAvN,OAAA0E,IAAA+F,SAAAxF,SAAAmF,OAAA8C,OAEA1Q,MAAAm8B,YAAA1zB,SAEA,IAAApJ,SAAA0tC,WAAAvpC,OAAA0E,IAAAO,SAAAmF,QACA8nC,gBAAAznC,SAAA5P,GAAA,IAAAgB,QAAAhB,GAAA,MAAA,IAAAoK,SAAAwC,WAEA0qC,eAAA,CAEAD,mBAAA1I,0BAEAA,wBAAA0I,gBACAC,eAAA,GAIA/nC,OAAAuS,wBAEAopB,aAAAh5B,OAAA3C,OAAAK,SAAAxF,SAAApJ,SAEAs2C,eAAA,EAMA,IAAAhpD,OAAAshB,SAAAthB,MACAga,SAAAsH,SAAA1qC,WAAAojC,SACAivC,YAAA,GAEA,IAAAntC,SAAAwC,YAEAte,MAAAgxB,WAAAqE,sBAAA/T,UACA2nC,YAAA,EAIA,IAAAjiC,WACA/Y,SAAAgvC,cAEA,QAAAj9C,QAEAgnB,UAAApwC,WAAAqP,IAAA+Z,OAEAiO,SAAAivC,sBACAjvC,SAAA+gB,SAAAhI,YAIAgiC,gBAEAlL,sBAAAhiC,SAAApJ,QAAA4O,UAEA,OAAAthB,OAEAmlB,IAAArR,WAAAqR,IAAAjR,qBAAA8S,UAAAK,QAQA,IAAA6hC,WAAA,CAEA,QAAAlpD,MAEAkpD,UAAAlpD,MAAAooB,UAEAhsC,KAAA49B,WAEAkvC,UAAAlvC,SAAAoO,MAIA,IAAA+gC,YAAA7nC,SAAA6L,UAAAC,MAAA67B,YACAG,WAAA9nC,SAAA6L,UAAA/E,MAAA6gC,YAEAl6B,WAAA,OAAAhL,MAAAA,MAAAqJ,MAAA67B,YAAA,EACAt6B,WAAA,OAAA5K,MAAAA,MAAAqE,MAAA6gC,YAAA91C,EAAAA,EAEAk2C,UAAAxrE,KAAAsF,IAAAgmE,WAAAp6B,YACAu6B,QAAAzrE,KAAAY,IAAAyqE,UAAAC,WAAAC,WAAAr6B,WAAAJ,YAAA,EAEA46B,UAAA1rE,KAAAsF,IAAA,EAAAmmE,QAAAD,UAAA,EAEA,IAAA,IAAAE,UAAA,CAIA,GAAAtoC,OAAAoC,OAEA,IAAA,IAAAvH,SAAAwC,UAEAjL,MAAAo9B,aAAA30B,SAAAyC,mBAAAy9B,uBACA/tC,SAAA+lB,QAAA7O,IAAAqkC,WAIA,QAAAvoC,OAAA2P,UAEA,IAAAC,mBACA5iB,SAAA+lB,QAAA7O,IAAArM,UACA,MAEA,KAAA2wC,uBACAx7C,SAAA+lB,QAAA7O,IAAAukC,eACA,MAEA,KAAAC,qBACA17C,SAAA+lB,QAAA7O,IAAAykC,kBAQA,IAAA3oC,OAAAqC,OAAA,CAEA,GAAAstB,WAAA90B,SAAAuC,cAEAjiC,KAAAw0D,YAAAA,UAAA,GAEAv9B,MAAAo9B,aAAAG,UAAAoL,uBAEA/6B,OAAA4oC,eAEA57C,SAAA+lB,QAAA7O,IAAAqkC,OAEAvoC,OAAA6oC,WAEA77C,SAAA+lB,QAAA7O,IAAA4kC,WAIA97C,SAAA+lB,QAAA7O,IAAA6kC,gBAIA/oC,QAAAsC,UAEAtV,SAAA+lB,QAAA7O,IAAAgP,OAIA7S,WAAAA,SAAA08B,0BAEA18B,SAAAkT,kBAAA,GAEAvmB,SAAAomB,gBAAA/S,SAAA+nC,UAAAE,WAMAt7C,SAAAyI,OAAA2yC,UAAAE,aA2IAt6E,KAAAg7E,QAAA,SAAArzC,MAAAC,QAEAsoC,YAAAtwE,OAAA,EACAuwE,aAAAvwE,OAAA,EAEA+nC,MAAAszC,SAAA,SAAAjpC,QAEAA,OAAAi+B,UAEAC,YAAAhwE,KAAA8xC,QAEAA,OAAAuC,YAEA47B,aAAAjwE,KAAA8xC,WAQAtE,OAAAyZ,MAAA+oB,YAAAC,aAAAvoC,QAEAD,MAAAszC,SAAA,SAAAjpC,QAEA,GAAAA,OAAAnF,SAEA,GAAAtwC,MAAAoN,QAAAqoC,OAAAnF,UAEA,IAAA,GAAA/oC,GAAA,EAAAA,EAAAkuC,OAAAnF,SAAAjtC,OAAAkE,IAEAutE,aAAAr/B,OAAAnF,SAAA/oC,GAAA6jC,MAAA2E,IAAA0F,YAMAq/B,cAAAr/B,OAAAnF,SAAAlF,MAAA2E,IAAA0F,UAYA,IAAA29B,cAAA,EACAG,iBAAA,IAiBA9vE,MAAAk7E,QAAA,SAAA3mE,UAEAu7D,iBAAAv7D,SACA4pC,SAMAn+C,KAAAynC,OAAA,SAAAE,MAAAC,OAAA8tB,aAAAzT,YAEA,IAAAra,SAAAA,OAAAuzC,SAGA,WADAprE,SAAAiuB,MAAA,yEAKA,KAAAswC,eAAA,CAIA8C,wBAAA,GACAuB,oBAAA,EACAF,eAAA,MAIA,IAAA9qC,MAAAqO,YAAArO,MAAA2P,oBAIA,OAAA1P,OAAA3oC,QAAA2oC,OAAA0P,oBAEAs4B,GAAA75B,UAEAnO,OAAAgoC,GAAAjK,UAAA/9B,SAIAyN,kBAAAzI,iBAAAhF,OAAAsB,iBAAAtB,OAAAqB,oBACAwL,SAAAoD,cAAAxC,mBAEA66B,YAAAtwE,OAAA,EACAuwE,aAAAvwE,OAAA,EAEA0wE,aAAA1wE,OAAA,EACA4wE,YAAA5wE,OAAA,EAEA4yE,sBAAAxyE,KAAAqzC,qBACAk/B,iBAAAhB,UAAA/oE,KAAAxI,KAAAuuC,eAAAikC,sBAAA5qC,QAEA+oC,kBAAA7C,YAAA92D,IAAA2wB,MAAAC,QACA+oC,kBAAAnoE,OAEAunE,cAAApoC,MAAAC,OAAAimC,MAAAmC,cAEA,IAAAnC,MAAAmC,aAEAW,kBAAAh9D,OAMA4+D,kBAAAhB,UAAAnJ,eAEApxB,UAAAvP,OAAA0oC,aAAAxoC,MAAAC,QAEA8F,OAAAyZ,MAAA+oB,YAAAC,aAAAvoC,QAEA2qC,kBAAAhB,UAAAlJ,aAIAqF,YAAA7jB,QACA6jB,YAAAzoB,MAAA,EACAyoB,YAAAnpC,SAAA,EACAmpC,YAAAlpC,MAAA,EACAkpC,YAAAvoB,OAAA,MAEAh4C,KAAAuoD,eAEAA,aAAA,MAIA11D,KAAAw3C,gBAAAke,cAIAxT,WAAAza,OAAAkpC,kBAAAhpC,MAAAC,OAAAqa,WAIA,IAAAm5B,eAAAzK,kBAAA/sB,OACAy3B,mBAAA1K,kBAAA1iC,WAEA,IAAAtG,MAAAkpC,iBAAA,CAEA,GAAAA,kBAAAlpC,MAAAkpC,gBAEAuK,eAAAx7E,QAAAgxE,cAAAwK,cAAAzzC,MAAAC,OAAAipC,kBACAwK,mBAAAz7E,QAAAgxE,cAAAyK,mBAAA1zC,MAAAC,OAAAipC,sBAMAuK,eAAAx7E,QAAAgxE,cAAAwK,cAAAzzC,MAAAC,QAIAyzC,mBAAAz7E,QAAAgxE,cAAAyK,mBAAA1zC,MAAAC,OAMAumC,gBAAA1mC,OAAA6oC,aAAA3oC,MAAAC,QACAsmC,cAAAzmC,OAAA+oC,YAAA7oC,MAAAC,OAAA0lC,kBAIA5X,cAEArxB,SAAAu2B,yBAAAlF,cAMAtxB,MAAAuE,QAAAC,MAAAwE,SAAA,GACAhJ,MAAAuE,QAAAC,MAAAC,SAAA,GACAzE,MAAAuE,QAAA9B,MAAAgC,SAAA,GAEAzE,MAAAs8B,kBAAA,GAEAkP,GAAA75B,SAEA65B,GAAA9I,gBAqjCA9mE,KAAAs7E,eAAA,SAAAta,SAAAua,oBAEAn3C,MAAA28B,YAAAC,UACA58B,MAAAo8B,aAAA+a,qBAAAC,uBAsBAx7E,KAAAm/B,iBAAAA,iBAGAn/B,KAAA8gC,aAAA,WAEA,GAAA26C,SAAA,CAGA,OAAA,UAAAt+C,QAAAo5B,MAEAp5B,SAAAA,QAAA+0B,sBAEAupB,SAEA1rE,QAAAH,KAAA,gHACA6rE,QAAA,GAIAt+C,QAAAA,QAAAA,SAIAkH,SAAAvD,aAAA3D,QAAAo5B,UAMAv2D,KAAA07E,WAAA,WAEA,GAAAD,SAAA,CAEA,OAAA,UAAAt+C,QAAAo5B,MAEAklB,SAEA1rE,QAAAH,KAAA,6EACA6rE,QAAA,GAIAp3C,SAAAvD,aAAA3D,QAAAo5B,UAMAv2D,KAAAihC,eAAA,WAEA,GAAAw6C,SAAA,CAEA,OAAA,UAAAt+C,QAAAo5B,MAGAp5B,SAAAA,QAAA+4B,0BAEAulB,SAEA1rE,QAAAH,KAAA,uHACA6rE,QAAA,GAIAt+C,QAAAA,QAAAA,SAMAA,SAAAA,QAAAslB,eACAlmD,MAAAoN,QAAAwzB,QAAArC,QAAA,IAAAqC,QAAArC,MAAAl7B,OAKAykC,SAAApD,eAAA9D,QAAAo5B,MAMAlyB,SAAAwzB,sBAAA16B,QAAAo5B,UAQAv2D,KAAAszD,gBAAA,WAEA,MAAA0Z,uBAIAhtE,KAAAw3C,gBAAA,SAAAke,cAEAsX,qBAAAtX,aAEAA,kBAAAvoD,KAAAmnD,WAAAt9C,IAAA0+C,cAAAU,oBAEA/xB,SAAAm2B,kBAAA9E,aAIA,IAAA0D,aAAA,KACAkB,QAAA,CAEA,IAAA5E,aAAA,CAEA,GAAAU,oBAAA9B,WAAAt9C,IAAA0+C,cAAAU,kBAEAV,cAAAQ,yBAEAkD,YAAAhD,mBAAAV,aAAAl4B,gBACA88B,QAAA,GAIAlB,YAAAhD,mBAIAkX,iBAAAnkC,KAAAusB,aAAAx4B,UACAkwC,gBAAAjkC,KAAAusB,aAAA14B;2CACA26C,oBAAAjiB,aAAAz4B,gBAIAqwC,kBAAAnkC,KAAAokC,WAAAxlB,eAAAklB,aACAG,gBAAAjkC,KAAAkkC,UAAAtlB,eAAAklB,aACA0K,oBAAAC,YAeA,IAXAF,sBAAAte,cAEAljB,IAAAqjB,gBAAArjB,IAAAsjB,YAAAJ,aACAse,oBAAAte,aAIAh1B,MAAAlH,SAAAowC,kBACAlpC,MAAApH,QAAAowC,iBACAhpC,MAAAiS,eAAAshC,qBAEArd,OAAA,CAEA,GAAA1E,mBAAAtB,WAAAt9C,IAAA0+C,aAAAv4B,QACA+Y,KAAAujB,qBAAAvjB,IAAAsjB,YAAAtjB,IAAAykB,kBAAAzkB,IAAAyhB,4BAAAjC,aAAAl4B,eAAAo4B,kBAAAI,eAAAN,aAAAj4B,qBAMAz9B,KAAA27E,uBAAA,SAAAjmB,aAAAl+C,EAAAyC,EAAA/a,MAAA49B,OAAAsb,QAEA,IAAAsd,eAAAA,aAAAxD,oBAGA,WADAniD,SAAAiuB,MAAA,2FAKA,IAAAo7B,aAAA9E,WAAAt9C,IAAA0+C,cAAAU,kBAEA,IAAAgD,YAAA,CAEA,GAAAwiB,UAAA,CAEAxiB,eAAAse,sBAEAxhC,IAAAqjB,gBAAArjB,IAAAsjB,YAAAJ,aAEAwiB,SAAA,EAIA,KAEA,GAAAz+C,SAAAu4B,aAAAv4B,QACA0+C,cAAA1+C,QAAAlyB,OACA6sD,YAAA36B,QAAA/B,IAEA,IAAAygD,gBAAA3/C,YAAAq4B,MAAA6C,QAAAykB,iBAAA3lC,IAAA2oB,aAAA3oB,IAAA4lC,kCAGA,WADA/rE,SAAAiuB,MAAA,4GAKA,MAAA85B,cAAA37B,kBAAAo4B,MAAA6C,QAAAU,eAAA5hB,IAAA2oB,aAAA3oB,IAAA6lC,iCACAjkB,cAAAC,YAAApoB,WAAA34B,IAAA,sBAAA24B,WAAA34B,IAAA,8BACA8gD,cAAAE,eAAAroB,WAAA34B,IAAA,gCAGA,WADAjH,SAAAiuB,MAAA,sHAKAkY,KAAA8lC,uBAAA9lC,IAAAsjB,eAAAtjB,IAAA+lC,qBAIAzkE,GAAA,GAAAA,GAAAk+C,aAAAx2D,MAAAA,OAAA+a,GAAA,GAAAA,GAAAy7C,aAAA54B,OAAAA,QAEAoZ,IAAAgmC,WAAA1kE,EAAAyC,EAAA/a,MAAA49B,OAAAy3B,MAAA6C,QAAAykB,eAAAtnB,MAAA6C,QAAAU,aAAA1f,QAMAroC,QAAAiuB,MAAA,8GAIA,QAEA49C,SAEA1lC,IAAAqjB,gBAAArjB,IAAAsjB,YAAAke,wBAiBA,QAAAyE,SAAAt1C,MAAA8F,SAEA3sC,KAAApC,KAAA,GAEAoC,KAAA6mC,MAAA,GAAA9C,OAAA8C,OACA7mC,KAAA2sC,YAAAx/B,KAAAw/B,QAAAA,QAAA,MA2BA,QAAAyvC,KAAAv1C,MAAA2F,KAAAC,KAEAzsC,KAAApC,KAAA,GAEAoC,KAAA6mC,MAAA,GAAA9C,OAAA8C,OAEA7mC,KAAAwsC,SAAAr/B,KAAAq/B,KAAAA,KAAA,EACAxsC,KAAAysC,QAAAt/B,KAAAs/B,IAAAA,IAAA,IA2BA,QAAA4vC,SAEAtiC,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,QAEAp7B,KAAAkiD,WAAA,KACAliD,KAAAssC,IAAA,KACAtsC,KAAA6wE,iBAAA,KAEA7wE,KAAAg2C,YAAA,EAyCA,QAAAsmC,WAAAn/C,QAAA4E,KAAA2kB,SAAApc,SAAAzD,OAEAkT,SAAAnzC,KAAA5G,MAEAA,KAAAmqC,cAEAnqC,KAAA+pC,eAAA,GAAAjM,SACA99B,KAAAgqC,yBAAA78B,OAEAA,KAAAgwB,SAEAn9B,KAAAzC,IAAA4/B,QAAA4E,KAAA2kB,SAAApc,SAAAzD,OA8FA,QAAA01C,gBAAArtC,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,iBAEAp7B,KAAA6mC,MAAA,GAAA9C,OAAA,UACA/jC,KAAAwK,IAAA,KAEAxK,KAAA+mC,SAAA,EAEA/mC,KAAAssC,KAAA,EACAtsC,KAAA0tC,QAAA,EAEA1tC,KAAAmwC,UAAAjB,YA0BA,QAAAstC,QAAA3vC,UAEAkN,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,SAEAp7B,KAAA6sC,aAAA1/B,KAAA0/B,SAAAA,SAAA,GAAA0vC,gBAyDA,QAAAE,OAEA1iC,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,MAEAvxB,OAAA2wC,iBAAAx6C,MACA08E,QACAjiC,YAAA,EACAvrC,YAmKA,QAAAytE,UAAAhrB,MAAAirB,cAWA,GAPAjrB,MAAAA,UAEA3xD,KAAA2xD,MAAAA,MAAAthD,MAAA,GACArQ,KAAA4zE,aAAA,GAAA90C,cAAA,GAAA9+B,KAAA2xD,MAAA/xD,YAIAuN,KAAAyvE,aAEA58E,KAAA68E,wBAIA,IAAA78E,KAAA2xD,MAAA/xD,SAAAg9E,aAAAh9E,OAEAI,KAAA48E,aAAAA,aAAAvsE,MAAA,OAEA,CAEAN,QAAAH,KAAA,oDAEA5P,KAAA48E,eAEA,KAAA,GAAA94E,GAAA,EAAAyyC,GAAAv2C,KAAA2xD,MAAA/xD,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAA48E,aAAA18E,KAAA,GAAA69B,WA8HA,QAAA++C,QAEA/iC,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,OAkBA,QAAA2hD,aAAA1qC,SAAAxF,UAEA4U,KAAA76C,KAAA5G,KAAAqyC,SAAAxF,UAEA7sC,KAAAo7B,KAAA,cAEAp7B,KAAAg9E,SAAA,WACAh9E,KAAAi9E,WAAA,GAAAl/C,SACA/9B,KAAAk9E,kBAAA,GAAAn/C,QAEA,IAAA4zB,OAAA3xD,KAAAm9E,YACAzrB,SAAA,GAAAirB,UAAAhrB,MAEA3xD,MAAAo9E,KAAA1rB,SAAA1xD,KAAA+oC,aAEA/oC,KAAAq9E,uBAkMA,QAAA1qB,mBAAAzjB,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,oBAEAp7B,KAAA6mC,MAAA,GAAA9C,OAAA,UAEA/jC,KAAAovC,UAAA,EACApvC,KAAAs9E,QAAA,QACAt9E,KAAAu9E,SAAA,QAEAv9E,KAAA0tC,QAAA,EAEA1tC,KAAAmwC,UAAAjB,YA2BA,QAAAsuC,MAAAnrC,SAAAxF,SAAAmY,MAEA,GAAA,IAAAA,KAGA,MADAj1C,SAAAH,KAAA,mGACA,GAAA6tE,cAAAprC,SAAAxF,SAIAkN,UAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,OAEAp7B,KAAAqyC,aAAAllC,KAAAklC,SAAAA,SAAA,GAAA4L,gBACAj+C,KAAA6sC,aAAA1/B,KAAA0/B,SAAAA,SAAA,GAAA8lB,oBAAA9rB,MAAA,SAAAj4B,KAAA8yC,WA2KA,QAAA+7B,cAAAprC,SAAAxF,UAEA2wC,KAAA52E,KAAA5G,KAAAqyC,SAAAxF,UAEA7sC,KAAAo7B,KAAA,eAgBA,QAAAsiD,UAAArrC,SAAAxF,UAEA2wC,KAAA52E,KAAA5G,KAAAqyC,SAAAxF,UAEA7sC,KAAAo7B,KAAA,WA0BA,QAAAy3B,gBAAA3jB,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,iBAEAp7B,KAAA6mC,MAAA,GAAA9C,OAAA,UAEA/jC,KAAAwK,IAAA,KAEAxK,KAAA+hC,KAAA,EACA/hC,KAAAsvD,iBAAA,EAEAtvD,KAAA0tC,QAAA,EAEA1tC,KAAAmwC,UAAAjB,YA4BA,QAAAyuC,QAAAtrC,SAAAxF,UAEAkN,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,SAEAp7B,KAAAqyC,aAAAllC,KAAAklC,SAAAA,SAAA,GAAA4L,gBACAj+C,KAAA6sC,aAAA1/B,KAAA0/B,SAAAA,SAAA,GAAAgmB,iBAAAhsB,MAAA,SAAAj4B,KAAA8yC,WAkIA,QAAAk8B,SAEA7jC,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,QAcA,QAAAyiD,cAAAC,MAAA/iD,QAAAC,MAAAC,MAAAC,UAAAC,UAAAlwB,OAAAmwB,KAAAC,YAQA,QAAAsZ,UAEA14C,sBAAA04C,QAEAmpC,MAAAj2E,YAAAi2E,MAAAC,oBAEApqC,MAAA9I,aAAA,GAZAhQ,QAAAj0B,KAAA5G,KAAA89E,MAAA/iD,QAAAC,MAAAC,MAAAC,UAAAC,UAAAlwB,OAAAmwB,KAAAC,YAEAr7B,KAAAq8B,iBAAA,CAEA,IAAAsX,OAAA3zC,IAcA20C,UAWA,QAAAqpC,mBAAAniD,QAAA38B,MAAA49B,OAAA7xB,OAAAmwB,KAAAL,QAAAC,MAAAC,MAAAC,UAAAC,UAAAE,WAAAC,UAEAT,QAAAj0B,KAAA5G,KAAA,KAAA+6B,QAAAC,MAAAC,MAAAC,UAAAC,UAAAlwB,OAAAmwB,KAAAC,WAAAC,UAEAt7B,KAAA86B,OAAA57B,MAAAA,MAAA49B,OAAAA,QACA98B,KAAA67B,QAAAA,QAKA77B,KAAAu8B,OAAA,EAKAv8B,KAAAq8B,iBAAA,EAcA,QAAA4hD,cAAA/+E,MAAA49B,OAAA1B,KAAAL,QAAAC,MAAAC,MAAAC,UAAAC,UAAAE,WAAApwB,QAIA,IAFAA,WAAAkC,KAAAlC,OAAAA,OAAA4tD,eAEAA,aAAA5tD,SAAA+tD,mBAEA,KAAA,IAAAzoD,OAAA,wFAIApD,KAAAiuB,MAAAnwB,SAAA4tD,cAAAz9B,KAAA09B,uBACA3rD,KAAAiuB,MAAAnwB,SAAA+tD,qBAAA59B,KAAA89B,oBAEAr+B,QAAAj0B,KAAA5G,KAAA,KAAA+6B,QAAAC,MAAAC,MAAAC,UAAAC,UAAAlwB,OAAAmwB,KAAAC,YAEAr7B,KAAA86B,OAAA57B,MAAAA,MAAA49B,OAAAA,QAEA98B,KAAAk7B,cAAA/tB,KAAA+tB,UAAAA,UAAAgD,cACAl+B,KAAAm7B,cAAAhuB,KAAAguB,UAAAA,UAAA+C,cAEAl+B,KAAAu8B,OAAA,EACAv8B,KAAAq8B,iBAAA,EAaA,QAAA6hD,mBAAA7rC,UAEA4L,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,mBAIA,IAIAt3B,GAAA8b,EAAA8D,EAAAiT,EAAAwnD,GACAp7E,EAAAq7E,MAAAC,MACAjuE,IACAk2B,OAPA/B,YAKA+5C,MAAA,EAAA,GAAAC,SACAv9D,MAAA,IAAA,IAAA,IAKA,IAAAqxB,UAAAA,SAAAU,WAAA,CAIA,GAAAvO,OAAA6N,SAAA7N,KAEA,KAAA1gC,EAAA,EAAA4f,EAAA8gB,MAAA5kC,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA4zC,MAAAlT,MAAA1gC,EAEA,KAAA8b,EAAA,EAAAA,EAAA,EAAAA,IAEAw+D,MAAA1mC,KAAA12B,KAAApB,IACAy+D,MAAA3mC,KAAA12B,MAAApB,EAAA,GAAA,IACA0+D,KAAA,GAAA1vE,KAAAY,IAAA4uE,MAAAC,OACAC,KAAA,GAAA1vE,KAAAsF,IAAAkqE,MAAAC,OAEAjuE,IAAAkuE,KAAA,GAAA,IAAAA,KAAA,OAEAnxE,KAAAoxE,MAAAnuE,OAEAmuE,MAAAnuE,MAAAouE,OAAAF,KAAA,GAAAG,OAAAH,KAAA,KAUA,IAAAluE,MAAAmuE,OAEAx7E,EAAAw7E,MAAAnuE,KAEAk2B,OAAA+L,SAAA9N,SAAAxhC,EAAAy7E,QACAj6C,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAEA0J,OAAA+L,SAAA9N,SAAAxhC,EAAA07E,QACAl6C,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,OAIA,IAAAyV,UAAAA,SAAAQ,iBAAA,CAEA,GAAA9H,UAAA6S,QAAAhJ,OACAE,MAAAqJ,MAAAhF,MACAqlC,OAAAC,MAIA,IAFAn4C,OAAA,GAAAxI,SAEA,OAAAuU,SAAAthB,MAAA,CAgBA,IAZAga,SAAAsH,SAAA1qC,WAAAojC,SACA6S,QAAAvL,SAAAthB,MACA6jB,OAAAvC,SAAAuC,OAEA,IAAAA,OAAAh1C,SAEAg1C,SAAAuJ,MAAA,EAAAhF,MAAAyE,QAAAzE,MAAAnE,cAAA,KAMAre,EAAA,EAAAwnD,GAAAvpC,OAAAh1C,OAAA+2B,EAAAwnD,KAAAxnD,EAOA,IALAme,MAAAF,OAAAje,GAEAwnB,MAAArJ,MAAAqJ,MACAhF,MAAArE,MAAAqE,MAEAr1C,EAAAq6C,MAAAz6B,EAAAy6B,MAAAhF,MAAAr1C,EAAA4f,EAAA5f,GAAA,EAEA,IAAA8b,EAAA,EAAAA,EAAA,EAAAA,IAEAw+D,MAAAxgC,QAAA8gC,KAAA56E,EAAA8b,GACAy+D,MAAAzgC,QAAA8gC,KAAA56E,GAAA8b,EAAA,GAAA,GACA0+D,KAAA,GAAA1vE,KAAAY,IAAA4uE,MAAAC,OACAC,KAAA,GAAA1vE,KAAAsF,IAAAkqE,MAAAC,OAEAjuE,IAAAkuE,KAAA,GAAA,IAAAA,KAAA,OAEAnxE,KAAAoxE,MAAAnuE,OAEAmuE,MAAAnuE,MAAAouE,OAAAF,KAAA,GAAAG,OAAAH,KAAA,IAYA,KAAAluE,MAAAmuE,OAEAx7E,EAAAw7E,MAAAnuE,KAEAk2B,OAAAq4C,oBAAA5zC,SAAAhoC,EAAAy7E,QACAj6C,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAEA0J,OAAAq4C,oBAAA5zC,SAAAhoC,EAAA07E,QACAl6C,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,OAUA,KAFAmO,SAAAsH,SAAA1qC,WAAAojC,SAEAjnC,EAAA,EAAA4f,EAAAqnB,SAAAoO,MAAA,EAAAr1C,EAAA4f,EAAA5f,IAEA,IAAA8b,EAAA,EAAAA,EAAA,EAAAA,IAKA4+D,OAAA,EAAA16E,EAAA8b,EACA0mB,OAAAq4C,oBAAA5zC,SAAAyzC,QACAj6C,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAEA6hD,OAAA,EAAA36E,GAAA8b,EAAA,GAAA,EACA0mB,OAAAq4C,oBAAA5zC,SAAA0zC,QACAl6C,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAYA58B,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IAiBA,QAAAq6C,oBAAA19E,KAAA29E,OAAAC,QAEAhjC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,qBAEAp7B,KAAAkvC,YACAhuC,KAAAA,KACA29E,OAAAA,OACAC,OAAAA,QAGA9+E,KAAAw+C,mBAAA,GAAAugC,0BAAA79E,KAAA29E,OAAAC,SACA9+E,KAAA0+C,gBASA,QAAAqgC,0BAAA79E,KAAA29E,OAAAC,QAEA7gC,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,2BAEAp7B,KAAAkvC,YACAhuC,KAAAA,KACA29E,OAAAA,OACAC,OAAAA,OAKA,IAYAh7E,GAAA8b,EAZAg+B,WACArZ,YACAsZ,WACAC,OAIAzM,OAAA,GAAAvT,SAEA0T,GAAA,GAAA1T,SAAA/nB,GAAA,GAAA+nB,SACAkhD,GAAA,GAAAlhD,SAAAmhD,GAAA,GAAAnhD,SAMAohD,WAAAL,OAAA,CAEA,KAAA/6E,EAAA,EAAAA,GAAAg7E,OAAAh7E,IAAA,CAEA,GAAAw7B,GAAAx7B,EAAAg7E,MAEA,KAAAl/D,EAAA,EAAAA,GAAAi/D,OAAAj/D,IAAA,CAEA,GAAAlM,GAAAkM,EAAAi/D,MAIArtC,IAAAtwC,KAAAwS,EAAA4rB,EAAAkS,IACAjN,SAAArkC,KAAAsxC,GAAAh6B,EAAAg6B,GAAAv3B,EAAAu3B,GAAA5U,GAMAlpB,EA9BA,MA8BA,GAEAqC,GAAA7U,KAAAwS,EAhCA,KAgCA4rB,EAAAvpB,IACAipE,GAAAG,WAAA3tC,GAAAz7B,MAIAA,GAAA7U,KAAAwS,EArCA,KAqCA4rB,EAAAvpB,IACAipE,GAAAG,WAAAppE,GAAAy7B,KAIAlS,EA1CA,MA0CA,GAEAvpB,GAAA7U,KAAAwS,EAAA4rB,EA5CA,KA4CAvpB,IACAkpE,GAAAE,WAAA3tC,GAAAz7B,MAIAA,GAAA7U,KAAAwS,EAAA4rB,EAjDA,KAiDAvpB,IACAkpE,GAAAE,WAAAppE,GAAAy7B,KAMAH,OAAA+tC,aAAAJ,GAAAC,IAAAx1B,YACA5L,QAAA39C,KAAAmxC,OAAA75B,EAAA65B,OAAAp3B,EAAAo3B,OAAAzU,GAIAkhB,IAAA59C,KAAAwT,EAAA4rB,IAQA,IAAAx7B,EAAA,EAAAA,EAAAg7E,OAAAh7E,IAEA,IAAA8b,EAAA,EAAAA,EAAAi/D,OAAAj/D,IAAA,CAEA,GAAAhV,GAAA9G,EAAAo7E,WAAAt/D,EACA/U,EAAA/G,EAAAo7E,WAAAt/D,EAAA,EACAmC,GAAAje,EAAA,GAAAo7E,WAAAt/D,EAAA,EACA1F,GAAApW,EAAA,GAAAo7E,WAAAt/D,CAIAg+B,SAAA19C,KAAA0K,EAAAC,EAAAqP,GACA0jC,QAAA19C,KAAA2K,EAAAkX,EAAA7H,GAQAla,KAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IAgBA,QAAAuhC,oBAAA96C,SAAAqZ,QAAA1M,OAAArzC,QAEAi+C,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,qBAEAp7B,KAAAkvC,YACA3K,SAAAA,SACAqZ,QAAAA,QACA1M,OAAAA,OACArzC,OAAAA,QAGAmC,KAAAw+C,mBAAA,GAAA8gC,0BAAA/6C,SAAAqZ,QAAA1M,OAAArzC,SACAmC,KAAA0+C,gBASA,QAAA4gC,0BAAA/6C,SAAAqZ,QAAA1M,OAAArzC,QA2EA,QAAA0hF,eAAA30E,EAAAC,EAAAkX,EAAAlkB,QAEA,GAMAiG,GAAA8b,EANA4/D,KAAA5wE,KAAAqF,IAAA,EAAApW,QAIAyhC,IAMA,KAAAx7B,EAAA,EAAAA,GAAA07E,KAAA17E,IAAA,CAEAw7B,EAAAx7B,KAEA,IAAA27E,IAAA70E,EAAAmf,QAAA21D,KAAA39D,EAAAje,EAAA07E,MACAG,GAAA90E,EAAAkf,QAAA21D,KAAA39D,EAAAje,EAAA07E,MAEAI,KAAAJ,KAAA17E,CAEA,KAAA8b,EAAA,EAAAA,GAAAggE,KAAAhgE,IAIA0f,EAAAx7B,GAAA8b,GAFA,IAAAA,GAAA9b,IAAA07E,KAEAC,GAIAA,GAAA11D,QAAA21D,KAAAC,GAAA//D,EAAAggE,MAUA,IAAA97E,EAAA,EAAAA,EAAA07E,KAAA17E,IAEA,IAAA8b,EAAA,EAAAA,EAAA,GAAA4/D,KAAA17E,GAAA,EAAA8b,IAAA,CAEA,GAAAzV,GAAAyE,KAAAE,MAAA8Q,EAAA,EAEAA,GAAA,GAAA,GAEAigE,WAAAvgD,EAAAx7B,GAAAqG,EAAA,IACA01E,WAAAvgD,EAAAx7B,EAAA,GAAAqG,IACA01E,WAAAvgD,EAAAx7B,GAAAqG,MAIA01E,WAAAvgD,EAAAx7B,GAAAqG,EAAA,IACA01E,WAAAvgD,EAAAx7B,EAAA,GAAAqG,EAAA,IACA01E,WAAAvgD,EAAAx7B,EAAA,GAAAqG,MAsDA,QAAA21E,eAIA,IAAA,GAAAh8E,GAAA,EAAAA,EAAAi8E,SAAAngF,OAAAkE,GAAA,EAAA,CAIA,GAAAk8E,IAAAD,SAAAj8E,EAAA,GACAm8E,GAAAF,SAAAj8E,EAAA,GACAo8E,GAAAH,SAAAj8E,EAAA,GAEAoQ,IAAAtF,KAAAsF,IAAA8rE,GAAAC,GAAAC,IACA1wE,IAAAZ,KAAAY,IAAAwwE,GAAAC,GAAAC,GAIAhsE,KAAA,IAAA1E,IAAA,KAEAwwE,GAAA,KAAAD,SAAAj8E,EAAA,IAAA,GACAm8E,GAAA,KAAAF,SAAAj8E,EAAA,IAAA,GACAo8E,GAAA,KAAAH,SAAAj8E,EAAA,IAAA,KAQA,QAAA+7E,YAAAv5C,QAEA5B,aAAAxkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAIA,QAAAujD,kBAAApvD,MAAAuV,QAEA,GAAA8oC,QAAA,EAAAr+C,KAEAuV,QAAA9uB,EAAA+sB,SAAA6qC,OAAA,GACA9oC,OAAArsB,EAAAsqB,SAAA6qC,OAAA,GACA9oC,OAAA1J,EAAA2H,SAAA6qC,OAAA,GAIA,QAAAgR,cAYA,IAAA,GAVAx1E,GAAA,GAAAkzB,SACAjzB,EAAA,GAAAizB,SACA/b,EAAA,GAAA+b,SAEAuiD,SAAA,GAAAviD,SAEAwiD,IAAA,GAAA1lD,SACA2lD,IAAA,GAAA3lD,SACA4lD,IAAA,GAAA5lD,SAEA92B,EAAA,EAAA8b,EAAA,EAAA9b,EAAA4gC,aAAA9kC,OAAAkE,GAAA,EAAA8b,GAAA,EAAA,CAEAhV,EAAAiG,IAAA6zB,aAAA5gC,EAAA,GAAA4gC,aAAA5gC,EAAA,GAAA4gC,aAAA5gC,EAAA,IACA+G,EAAAgG,IAAA6zB,aAAA5gC,EAAA,GAAA4gC,aAAA5gC,EAAA,GAAA4gC,aAAA5gC,EAAA,IACAie,EAAAlR,IAAA6zB,aAAA5gC,EAAA,GAAA4gC,aAAA5gC,EAAA,GAAA4gC,aAAA5gC,EAAA,IAEAw8E,IAAAzvE,IAAAkvE,SAAAngE,EAAA,GAAAmgE,SAAAngE,EAAA,IACA2gE,IAAA1vE,IAAAkvE,SAAAngE,EAAA,GAAAmgE,SAAAngE,EAAA,IACA4gE,IAAA3vE,IAAAkvE,SAAAngE,EAAA,GAAAmgE,SAAAngE,EAAA,IAEAygE,SAAAl3C,KAAAv+B,GAAArN,IAAAsN,GAAAtN,IAAAwkB,GAAA0+D,aAAA,EAEA,IAAAC,KAAAC,QAAAN,SAEAO,WAAAN,IAAA1gE,EAAA,EAAAhV,EAAA81E,KACAE,UAAAL,IAAA3gE,EAAA,EAAA/U,EAAA61E,KACAE,UAAAJ,IAAA5gE,EAAA,EAAAmC,EAAA2+D,MAMA,QAAAE,WAAAp6C,GAAA4oC,OAAAzvB,OAAAghC,SAEAA,QAAA,GAAA,IAAAn6C,GAAAhvB,IAEAuoE,SAAA3Q,QAAA5oC,GAAAhvB,EAAA,GAIA,IAAAmoC,OAAAnoC,GAAA,IAAAmoC,OAAA/iB,IAEAmjD,SAAA3Q,QAAAuR,QAAA,EAAA/xE,KAAAiyE,GAAA,IAQA,QAAAF,SAAAhhC,QAEA,MAAA/wC,MAAAkyE,MAAAnhC,OAAA/iB,GAAA+iB,OAAAnoC,GAOA,QAAAupE,aAAAphC,QAEA,MAAA/wC,MAAAkyE,OAAAnhC,OAAA1lC,EAAArL,KAAA8kE,KAAA/zB,OAAAnoC,EAAAmoC,OAAAnoC,EAAAmoC,OAAA/iB,EAAA+iB,OAAA/iB,IAlSAqhB,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,2BAEAp7B,KAAAkvC,YACA3K,SAAAA,SACAqZ,QAAAA,QACA1M,OAAAA,OACArzC,OAAAA,QAGAqzC,OAAAA,QAAA,EACArzC,OAAAA,QAAA,CAIA,IAAA6mC,iBACAq7C,aAgCA,SAAAliF,QAQA,IAAA,GANA+M,GAAA,GAAAkzB,SACAjzB,EAAA,GAAAizB,SACA/b,EAAA,GAAA+b,SAIAh6B,EAAA,EAAAA,EAAA85C,QAAAh+C,OAAAkE,GAAA,EAIAq8E,iBAAAviC,QAAA95C,EAAA,GAAA8G,GACAu1E,iBAAAviC,QAAA95C,EAAA,GAAA+G,GACAs1E,iBAAAviC,QAAA95C,EAAA,GAAAie,GAIAw9D,cAAA30E,EAAAC,EAAAkX,EAAAlkB,SA9CAA,QAqHA,SAAAqzC,QAMA,IAAA,GAJA5K,QAAA,GAAAxI,SAIAh6B,EAAA,EAAAA,EAAA4gC,aAAA9kC,OAAAkE,GAAA,EAEAwiC,OAAA9uB,EAAAktB,aAAA5gC,EAAA,GACAwiC,OAAArsB,EAAAyqB,aAAA5gC,EAAA,GACAwiC,OAAA1J,EAAA8H,aAAA5gC,EAAA,GAEAwiC,OAAAmjB,YAAA1B,eAAA7W,QAEAxM,aAAA5gC,EAAA,GAAAwiC,OAAA9uB,EACAktB,aAAA5gC,EAAA,GAAAwiC,OAAArsB,EACAyqB,aAAA5gC,EAAA,GAAAwiC,OAAA1J,GAjIAsU,QAuIA,WAIA,IAAA,GAFA5K,QAAA,GAAAxI,SAEAh6B,EAAA,EAAAA,EAAA4gC,aAAA9kC,OAAAkE,GAAA,EAAA,CAEAwiC,OAAA9uB,EAAAktB,aAAA5gC,EAAA,GACAwiC,OAAArsB,EAAAyqB,aAAA5gC,EAAA,GACAwiC,OAAA1J,EAAA8H,aAAA5gC,EAAA,EAEA,IAAA4P,GAAAitE,QAAAr6C,QAAA,EAAA13B,KAAAiyE,GAAA,GACAvhD,EAAAyhD,YAAAz6C,QAAA13B,KAAAiyE,GAAA,EACAd,UAAA7/E,KAAAwT,EAAA,EAAA4rB,GAIA8gD,aAEAN,iBAjJA9/E,KAAAggD,aAAA,WAAA,GAAAvC,wBAAA/Y,aAAA,IACA1kC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAA/Y,aAAAr0B,QAAA,IACArQ,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAsiC,SAAA,IAEA,IAAAliF,OAEAmC,KAAAghF,uBAIAhhF,KAAAihF,mBAuQA,QAAAC,qBAAAhwC,OAAArzC,QAEAi+C,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,sBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACArzC,OAAAA,QAGAmC,KAAAw+C,mBAAA,GAAA2iC,2BAAAjwC,OAAArzC,SACAmC,KAAA0+C,gBASA,QAAAyiC,2BAAAjwC,OAAArzC,QAEA,GAAA0mC,WACA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAGAqZ,SACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAGA0hC,0BAAA14E,KAAA5G,KAAAukC,SAAAqZ,QAAA1M,OAAArzC,QAEAmC,KAAAo7B,KAAA,4BAEAp7B,KAAAkvC,YACAgC,OAAAA,OACArzC,OAAAA,QAeA,QAAAujF,oBAAAlwC,OAAArzC,QAEAi+C,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,qBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACArzC,OAAAA,QAGAmC,KAAAw+C,mBAAA,GAAA6iC,0BAAAnwC,OAAArzC,SACAmC,KAAA0+C,gBASA,QAAA2iC,0BAAAnwC,OAAArzC,QAEA,GAAA0mC,WACA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGAqZ,SACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAGA0hC,0BAAA14E,KAAA5G,KAAAukC,SAAAqZ,QAAA1M,OAAArzC,QAEAmC,KAAAo7B,KAAA,2BAEAp7B,KAAAkvC,YACAgC,OAAAA,OACArzC,OAAAA,QAeA,QAAAyjF,qBAAApwC,OAAArzC,QAEAi+C,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,sBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACArzC,OAAAA,QAGAmC,KAAAw+C,mBAAA,GAAA+iC,2BAAArwC,OAAArzC,SACAmC,KAAA0+C,gBASA,QAAA6iC,2BAAArwC,OAAArzC,QAEA,GAAAq2B,IAAA,EAAAtlB,KAAA8kE,KAAA,IAAA,EAEAnvC,WACA,EAAArQ,EAAA,EAAA,EAAAA,EAAA,GAAA,GAAAA,EAAA,EAAA,GAAAA,EAAA,EACA,GAAA,EAAAA,EAAA,EAAA,EAAAA,EAAA,GAAA,GAAAA,EAAA,EAAA,GAAAA,EACAA,EAAA,GAAA,EAAAA,EAAA,EAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,EAAA,GAGA0pB,SACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAGA0hC,0BAAA14E,KAAA5G,KAAAukC,SAAAqZ,QAAA1M,OAAArzC,QAEAmC,KAAAo7B,KAAA,4BAEAp7B,KAAAkvC,YACAgC,OAAAA,OACArzC,OAAAA,QAeA,QAAA2jF,sBAAAtwC,OAAArzC,QAEAi+C,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,uBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACArzC,OAAAA,QAGAmC,KAAAw+C,mBAAA,GAAAijC,4BAAAvwC,OAAArzC,SACAmC,KAAA0+C,gBASA,QAAA+iC,4BAAAvwC,OAAArzC,QAEA,GAAAq2B,IAAA,EAAAtlB,KAAA8kE,KAAA,IAAA,EACA90C,EAAA,EAAA1K,EAEAqQ,WAGA,GAAA,GAAA,GAAA,GAAA,EAAA,GACA,EAAA,GAAA,GAAA,EAAA,EAAA,EACA,GAAA,GAAA,EAAA,GAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAGA,GAAA3F,GAAA1K,EAAA,GAAA0K,EAAA1K,EACA,EAAA0K,GAAA1K,EAAA,EAAA0K,EAAA1K,GAGA0K,GAAA1K,EAAA,GAAA0K,EAAA1K,EAAA,EACA0K,GAAA1K,EAAA,EAAA0K,EAAA1K,EAAA,GAGAA,EAAA,GAAA0K,EAAA1K,EAAA,GAAA0K,GACA1K,EAAA,EAAA0K,EAAA1K,EAAA,EAAA0K,GAGAgfhC,0BAAA14E,KAAA5G,KAAAukC,SAAAqZ,QAAA1M,OAAArzC,QAEAmC,KAAAo7B,KAAA,6BAEAp7B,KAAAkvC,YACAgC,OAAAA,OACArzC,OAAAA,QAoBA,QAAA6jF,cAAAx+C,KAAAy+C,gBAAAzwC,OAAA0wC,eAAAC,OAAAC,OAEAhmC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,eAEAp7B,KAAAkvC,YACAhM,KAAAA,KACAy+C,gBAAAA,gBACAzwC,OAAAA,OACA0wC,eAAAA,eACAC,OAAAA,YAGA10E,KAAA20E,OAAA/xE,QAAAH,KAAA,8CAEA,IAAAmyE,gBAAA,GAAAC,oBAAA9+C,KAAAy+C,gBAAAzwC,OAAA0wC,eAAAC,OAIA7hF,MAAAiiF,SAAAF,eAAAE,SACAjiF,KAAA69C,QAAAkkC,eAAAlkC,QACA79C,KAAAkiF,UAAAH,eAAAG,UAIAliF,KAAAw+C,mBAAAujC,gBACA/hF,KAAA0+C,gBASA,QAAAsjC,oBAAA9+C,KAAAy+C,gBAAAzwC,OAAA0wC,eAAAC,QAiFA,QAAAM,iBAAAr+E,GAIA,GAAAs+E,GAAAl/C,KAAAm/C,WAAAv+E,EAAA69E,iBAIAW,EAAAC,OAAA1kC,QAAA/5C,GACA0+E,EAAAD,OAAAL,UAAAp+E,EAIA,KAAA8b,EAAA,EAAAA,GAAAgiE,eAAAhiE,IAAA,CAEA,GAAA0f,GAAA1f,EAAAgiE,eAAAhzE,KAAAiyE,GAAA,EAEA4B,IAAA7zE,KAAA6zE,IAAAnjD,GACAkpB,KAAA55C,KAAA45C,IAAAlpB,EAIA+R,QAAA75B,EAAAgxC,IAAA85B,EAAA9qE,EAAAirE,IAAAD,EAAAhrE,EACA65B,OAAAp3B,EAAAuuC,IAAA85B,EAAAroE,EAAAwoE,IAAAD,EAAAvoE,EACAo3B,OAAAzU,EAAA4rB,IAAA85B,EAAA1lD,EAAA6lD,IAAAD,EAAA5lD,EACAyU,OAAAoY,YAEA5L,QAAA39C,KAAAmxC,OAAA75B,EAAA65B,OAAAp3B,EAAAo3B,OAAAzU,GAIA0J,OAAA9uB,EAAA4qE,EAAA5qE,EAAA05B,OAAAG,OAAA75B,EACA8uB,OAAArsB,EAAAmoE,EAAAnoE,EAAAi3B,OAAAG,OAAAp3B,EACAqsB,OAAA1J,EAAAwlD,EAAAxlD,EAAAsU,OAAAG,OAAAzU,EAEA2H,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,IAMA,QAAA8lD,mBAEA,IAAA9iE,EAAA,EAAAA,GAAA+hE,gBAAA/hE,IAEA,IAAA9b,EAAA,EAAAA,GAAA89E,eAAA99E,IAAA,CAEA,GAAA8G,IAAAg3E,eAAA,IAAAhiE,EAAA,IAAA9b,EAAA,GACA+G,GAAA+2E,eAAA,GAAAhiE,GAAA9b,EAAA,GACAie,GAAA6/D,eAAA,GAAAhiE,EAAA9b,EACAoW,GAAA0nE,eAAA,IAAAhiE,EAAA,GAAA9b,CAIA85C,SAAA19C,KAAA0K,EAAAC,EAAAqP,GACA0jC,QAAA19C,KAAA2K,EAAAkX,EAAA7H,IAQA,QAAAyoE,eAEA,IAAA7+E,EAAA,EAAAA,GAAA69E,gBAAA79E,IAEA,IAAA8b,EAAA,EAAAA,GAAAgiE,eAAAhiE,IAEA4mB,GAAAhvB,EAAA1T,EAAA69E,gBACAn7C,GAAAvsB,EAAA2F,EAAAgiE,eAEA9jC,IAAA59C,KAAAsmC,GAAAhvB,EAAAgvB,GAAAvsB,GAvJAgkC,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,qBAEAp7B,KAAAkvC,YACAhM,KAAAA,KACAy+C,gBAAAA,gBACAzwC,OAAAA,OACA0wC,eAAAA,eACAC,OAAAA,QAGAF,gBAAAA,iBAAA,GACAzwC,OAAAA,QAAA,EACA0wC,eAAAA,gBAAA,EACAC,OAAAA,SAAA,CAEA,IAAAU,QAAAr/C,KAAA0/C,oBAAAjB,gBAAAE,OAIA7hF,MAAAiiF,SAAAM,OAAAN,SACAjiF,KAAA69C,QAAA0kC,OAAA1kC,QACA79C,KAAAkiF,UAAAK,OAAAL,SAIA,IAIAp+E,GAAA8b,EAJA0mB,OAAA,GAAAxI,SACAuT,OAAA,GAAAvT,SACA0I,GAAA,GAAA5L,SAMA2J,YACAsZ,WACAC,OACAF,YAeA,WAEA,IAAA95C,EAAA,EAAAA,EAAA69E,gBAAA79E,IAEAq+E,gBAAAr+E,EASAq+E,kBAAA,IAAAN,OAAAF,gBAAA,GAKAgB,cAIAD,qBA7BA1iF,KAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IA4HA,QAAA+kC,mBAAA3xC,OAAA4xC,KAAAnB,gBAAAC,eAAA5tB,EAAA+uB,EAAAC,aAEAlnC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,oBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACA4xC,KAAAA,KACAnB,gBAAAA,gBACAC,eAAAA,eACA5tB,EAAAA,EACA+uB,EAAAA,OAGA51E,KAAA61E,aAAAjzE,QAAAH,KAAA,4FAEA5P,KAAAw+C,mBAAA,GAAAykC,yBAAA/xC,OAAA4xC,KAAAnB,gBAAAC,eAAA5tB,EAAA+uB,IACA/iF,KAAA0+C,gBASA,QAAAukC,yBAAA/xC,OAAA4xC,KAAAnB,gBAAAC,eAAA5tB,EAAA+uB,GAqIA,QAAAG,0BAAAxvE,EAAAsgD,EAAA+uB,EAAA7xC,OAAAnG,UAEA,GAAAo4C,IAAAv0E,KAAA45C,IAAA90C,GACA0vE,GAAAx0E,KAAA6zE,IAAA/uE,GACA2vE,QAAAN,EAAA/uB,EAAAtgD,EACA4vE,GAAA10E,KAAA45C,IAAA66B,QAEAt4C,UAAAvzB,EAAA05B,QAAA,EAAAoyC,IAAA,GAAAH,GACAp4C,SAAA9wB,EAAAi3B,QAAA,EAAAoyC,IAAAF,GAAA,GACAr4C,SAAAnO,EAAAsU,OAAAtiC,KAAA6zE,IAAAY,SAAA,GA5IAplC,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,0BAEAp7B,KAAAkvC,YACAgC,OAAAA,OACA4xC,KAAAA,KACAnB,gBAAAA,gBACAC,eAAAA,eACA5tB,EAAAA,EACA+uB,EAAAA,GAGA7xC,OAAAA,QAAA,IACA4xC,KAAAA,MAAA,GACAnB,gBAAA/yE,KAAAE,MAAA6yE,kBAAA,GACAC,eAAAhzE,KAAAE,MAAA8yE,iBAAA,EACA5tB,EAAAA,GAAA,EACA+uB,EAAAA,GAAA,CAIA,IAOAj/E,GAAA8b,EAPAg+B,WACArZ,YACAsZ,WACAC,OAMAxX,OAAA,GAAAxI,SACAuT,OAAA,GAAAvT,SAEAylD,GAAA,GAAAzlD,SACA0lD,GAAA,GAAA1lD,SAEA0kD,EAAA,GAAA1kD,SACA2lD,EAAA,GAAA3lD,SACAwkD,EAAA,GAAAxkD,QAIA,KAAAh6B,EAAA,EAAAA,GAAA69E,kBAAA79E,EAAA,CAIA,GAAA4P,GAAA5P,EAAA69E,gBAAA3tB,EAAAplD,KAAAiyE,GAAA,CAoBA,KAfAqC,yBAAAxvE,EAAAsgD,EAAA+uB,EAAA7xC,OAAAqyC,IACAL,yBAAAxvE,EAAA,IAAAsgD,EAAA+uB,EAAA7xC,OAAAsyC,IAIAC,EAAAtE,WAAAqE,GAAAD,IACAjB,EAAAoB,WAAAF,GAAAD,IACAf,EAAApD,aAAAqE,EAAAnB,GACAA,EAAAlD,aAAAoD,EAAAiB,GAIAjB,EAAA/4B,YACA64B,EAAA74B,YAEA7pC,EAAA,EAAAA,GAAAgiE,iBAAAhiE,EAAA,CAKA,GAAA0f,GAAA1f,EAAAgiE,eAAAhzE,KAAAiyE,GAAA,EACA8C,IAAAb,KAAAl0E,KAAA45C,IAAAlpB,GACAskD,GAAAd,KAAAl0E,KAAA6zE,IAAAnjD,EAKAgH,QAAA9uB,EAAA+rE,GAAA/rE,GAAAmsE,GAAArB,EAAA9qE,EAAAosE,GAAApB,EAAAhrE,GACA8uB,OAAArsB,EAAAspE,GAAAtpE,GAAA0pE,GAAArB,EAAAroE,EAAA2pE,GAAApB,EAAAvoE,GACAqsB,OAAA1J,EAAA2mD,GAAA3mD,GAAA+mD,GAAArB,EAAA1lD,EAAAgnD,GAAApB,EAAA5lD,GAEA2H,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAIAyU,OAAA8tC,WAAA74C,OAAAi9C,IAAA95B,YAEA5L,QAAA39C,KAAAmxC,OAAA75B,EAAA65B,OAAAp3B,EAAAo3B,OAAAzU,GAIAkhB,IAAA59C,KAAA4D,EAAA69E,iBACA7jC,IAAA59C,KAAA0f,EAAAgiE,iBAQA,IAAAhiE,EAAA,EAAAA,GAAA+hE,gBAAA/hE,IAEA,IAAA9b,EAAA,EAAAA,GAAA89E,eAAA99E,IAAA,CAIA,GAAA8G,IAAAg3E,eAAA,IAAAhiE,EAAA,IAAA9b,EAAA,GACA+G,GAAA+2E,eAAA,GAAAhiE,GAAA9b,EAAA,GACAie,GAAA6/D,eAAA,GAAAhiE,EAAA9b,EACAoW,GAAA0nE,eAAA,IAAAhiE,EAAA,GAAA9b,CAIA85C,SAAA19C,KAAA0K,EAAAC,EAAAqP,GACA0jC,QAAA19C,KAAA2K,EAAAkX,EAAA7H,GAQAla,KAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IA8BA,QAAA+lC,eAAA3yC,OAAA4xC,KAAAlB,eAAAD,gBAAAmC,KAEAhoC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,gBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACA4xC,KAAAA,KACAlB,eAAAA,eACAD,gBAAAA,gBACAmC,IAAAA,KAGA9jF,KAAAw+C,mBAAA,GAAAulC,qBAAA7yC,OAAA4xC,KAAAlB,eAAAD,gBAAAmC,MACA9jF,KAAA0+C,gBASA,QAAAqlC,qBAAA7yC,OAAA4xC,KAAAlB,eAAAD,gBAAAmC,KAEA7lC,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,sBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACA4xC,KAAAA,KACAlB,eAAAA,eACAD,gBAAAA,gBACAmC,IAAAA,KAGA5yC,OAAAA,QAAA,IACA4xC,KAAAA,MAAA,GACAlB,eAAAhzE,KAAAE,MAAA8yE,iBAAA,EACAD,gBAAA/yE,KAAAE,MAAA6yE,kBAAA,EACAmC,IAAAA,KAAA,EAAAl1E,KAAAiyE,EAIA,IAWAjhE,GAAA9b,EAXA85C,WACArZ,YACAsZ,WACAC,OAIA7M,OAAA,GAAAnT,SACAwI,OAAA,GAAAxI,SACAuT,OAAA,GAAAvT,QAMA,KAAAle,EAAA,EAAAA,GAAAgiE,eAAAhiE,IAEA,IAAA9b,EAAA,EAAAA,GAAA69E,gBAAA79E,IAAA,CAEA,GAAA4P,GAAA5P,EAAA69E,gBAAAmC,IACAxkD,EAAA1f,EAAAgiE,eAAAhzE,KAAAiyE,GAAA,CAIAv6C,QAAA9uB,GAAA05B,OAAA4xC,KAAAl0E,KAAA45C,IAAAlpB,IAAA1wB,KAAA45C,IAAA90C,GACA4yB,OAAArsB,GAAAi3B,OAAA4xC,KAAAl0E,KAAA45C,IAAAlpB,IAAA1wB,KAAA6zE,IAAA/uE,GACA4yB,OAAA1J,EAAAkmD,KAAAl0E,KAAA6zE,IAAAnjD,GAEAiF,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAIAqU,OAAAz5B,EAAA05B,OAAAtiC,KAAA45C,IAAA90C,GACAu9B,OAAAh3B,EAAAi3B,OAAAtiC,KAAA6zE,IAAA/uE,GACA29B,OAAA8tC,WAAA74C,OAAA2K,QAAAwY,YAEA5L,QAAA39C,KAAAmxC,OAAA75B,EAAA65B,OAAAp3B,EAAAo3B,OAAAzU,GAIAkhB,IAAA59C,KAAA4D,EAAA69E,iBACA7jC,IAAA59C,KAAA0f,EAAAgiE,gBAQA,IAAAhiE,EAAA,EAAAA,GAAAgiE,eAAAhiE,IAEA,IAAA9b,EAAA,EAAAA,GAAA69E,gBAAA79E,IAAA,CAIA,GAAA8G,IAAA+2E,gBAAA,GAAA/hE,EAAA9b,EAAA,EACA+G,GAAA82E,gBAAA,IAAA/hE,EAAA,GAAA9b,EAAA,EACAie,GAAA4/D,gBAAA,IAAA/hE,EAAA,GAAA9b,EACAoW,GAAAynE,gBAAA,GAAA/hE,EAAA9b,CAIA85C,SAAA19C,KAAA0K,EAAAC,EAAAqP,GACA0jC,QAAA19C,KAAA2K,EAAAkX,EAAA7H,GAQAla,KAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IAstBA,QAAAkmC,iBAAAC,OAAAlnD,SAEA+e,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,kBAEAp7B,KAAAkvC,YACA+0C,OAAAA,OACAlnD,QAAAA,SAGA/8B,KAAAw+C,mBAAA,GAAA0lC,uBAAAD,OAAAlnD,UACA/8B,KAAA0+C,gBASA,QAAAwlC,uBAAAD,OAAAlnD,aAEA,KAAA,SAMAkhB,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,wBAEA6oD,OAAA1nF,MAAAoN,QAAAs6E,QAAAA,QAAAA,QAEAjkF,KAAAmkF,aAAAF,OAAAlnD,SAEA/8B,KAAAghF,wBA2vBA,QAAAoD,cAAAC,KAAAn1C,YAEA4M,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,eAEAp7B,KAAAkvC,YACAm1C,KAAAA,KACAn1C,WAAAA,YAGAlvC,KAAAw+C,mBAAA,GAAA8lC,oBAAAD,KAAAn1C,aACAlvC,KAAA0+C,gBASA,QAAA4lC,oBAAAD,KAAAn1C,YAEAA,WAAAA,cAEA,IAAAq1C,MAAAr1C,WAAAq1C,IAEA,KAAAA,OAAAA,KAAAC,OAGA,MADAz0E,SAAAiuB,MAAA,wEACA,GAAA8d,SAIA,IAAAmoC,QAAAM,KAAAE,eAAAJ,KAAAn1C,WAAAnN,KAAAmN,WAAAw1C,cAIAx1C,YAAAy1C,WAAAx3E,KAAA+hC,WAAApS,OAAAoS,WAAApS,OAAA,OAIA3vB,KAAA+hC,WAAA01C,iBAAA11C,WAAA01C,eAAA,QACAz3E,KAAA+hC,WAAA21C,YAAA31C,WAAA21C,UAAA,OACA13E,KAAA+hC,WAAA41C,eAAA51C,WAAA41C,cAAA,GAEAZ,sBAAAt9E,KAAA5G,KAAAikF,OAAA/0C,YAEAlvC,KAAAo7B,KAAA,qBAeA,QAAA2pD,gBAAA7zC,OAAAmN,cAAAC,eAAA0mC,SAAAC,UAAAC,WAAAC,aAEArpC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,iBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACAmN,cAAAA,cACAC,eAAAA,eACA0mC,SAAAA,SACAC,UAAAA,UACAC,WAAAA,WACAC,YAAAA,aAGAnlF,KAAAw+C,mBAAA,GAAA4mC,sBAAAl0C,OAAAmN,cAAAC,eAAA0mC,SAAAC,UAAAC,WAAAC,cACAnlF,KAAA0+C,gBASA,QAAA0mC,sBAAAl0C,OAAAmN,cAAAC,eAAA0mC,SAAAC,UAAAC,WAAAC,aAEAlnC,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,uBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACAmN,cAAAA,cACAC,eAAAA,eACA0mC,SAAAA,SACAC,UAAAA,UACAC,WAAAA,WACAC,YAAAA,aAGAj0C,OAAAA,QAAA,GAEAmN,cAAAzvC,KAAAsF,IAAA,EAAAtF,KAAAE,MAAAuvC,gBAAA,GACAC,eAAA1vC,KAAAsF,IAAA,EAAAtF,KAAAE,MAAAwvC,iBAAA,GAEA0mC,aAAA73E,KAAA63E,SAAAA,SAAA,EACAC,cAAA93E,KAAA83E,UAAAA,UAAA,EAAAr2E,KAAAiyE,GAEAqE,eAAA/3E,KAAA+3E,WAAAA,WAAA,EACAC,gBAAAh4E,KAAAg4E,YAAAA,YAAAv2E,KAAAiyE,EAEA,IAEA7hC,IAAAC,GAFAomC,SAAAH,WAAAC,YAIAp0D,MAAA,EACAu0D,QAEAh/C,OAAA,GAAAxI,SACAuT,OAAA,GAAAvT,SAIA8f,WACArZ,YACAsZ,WACAC,MAIA,KAAAmB,GAAA,EAAAA,IAAAX,eAAAW,KAAA,CAEA,GAAAsmC,gBAEAjmD,EAAA2f,GAAAX,cAEA,KAAAU,GAAA,EAAAA,IAAAX,cAAAW,KAAA,CAEA,GAAAtrC,GAAAsrC,GAAAX,aAIA/X,QAAA9uB,GAAA05B,OAAAtiC,KAAA45C,IAAAw8B,SAAAtxE,EAAAuxE,WAAAr2E,KAAA6zE,IAAAyC,WAAA5lD,EAAA6lD,aACA7+C,OAAArsB,EAAAi3B,OAAAtiC,KAAA45C,IAAA08B,WAAA5lD,EAAA6lD,aACA7+C,OAAA1J,EAAAsU,OAAAtiC,KAAA6zE,IAAAuC,SAAAtxE,EAAAuxE,WAAAr2E,KAAA6zE,IAAAyC,WAAA5lD,EAAA6lD,aAEA5gD,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAIAyU,OAAAxgC,IAAAy1B,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAAA6sB,YACA5L,QAAA39C,KAAAmxC,OAAA75B,EAAA65B,OAAAp3B,EAAAo3B,OAAAzU,GAIAkhB,IAAA59C,KAAAwT,EAAA,EAAA4rB,GAEAimD,YAAArlF,KAAA6wB,SAIAu0D,KAAAplF,KAAAqlF,aAMA,IAAAtmC,GAAA,EAAAA,GAAAX,eAAAW,KAEA,IAAAD,GAAA,EAAAA,GAAAX,cAAAW,KAAA,CAEA,GAAAp0C,GAAA06E,KAAArmC,IAAAD,GAAA,GACAn0C,EAAAy6E,KAAArmC,IAAAD,IACAj9B,EAAAujE,KAAArmC,GAAA,GAAAD,IACA9kC,EAAAorE,KAAArmC,GAAA,GAAAD,GAAA,IAEA,IAAAC,IAAAimC,WAAA,IAAAtnC,QAAA19C,KAAA0K,EAAAC,EAAAqP,IACA+kC,KAAAX,eAAA,GAAA+mC,SAAAz2E,KAAAiyE,KAAAjjC,QAAA19C,KAAA2K,EAAAkX,EAAA7H,GAQAla,KAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IAcA,QAAA0nC,cAAAC,YAAAC,YAAAC,cAAAC,YAAAV,WAAAC,aAEArpC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,eAEAp7B,KAAAkvC,YACAu2C,YAAAA,YACAC,YAAAA,YACAC,cAAAA,cACAC,YAAAA,YACAV,WAAAA,WACAC,YAAAA,aAGAnlF,KAAAw+C,mBAAA,GAAAqnC,oBAAAJ,YAAAC,YAAAC,cAAAC,YAAAV,WAAAC,cACAnlF,KAAA0+C,gBASA,QAAAmnC,oBAAAJ,YAAAC,YAAAC,cAAAC,YAAAV,WAAAC,aAEAlnC,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,qBAEAp7B,KAAAkvC,YACAu2C,YAAAA,YACAC,YAAAA,YACAC,cAAAA,cACAC,YAAAA,YACAV,WAAAA,WACAC,YAAAA,aAGAM,YAAAA,aAAA,GACAC,YAAAA,aAAA,GAEAR,eAAA/3E,KAAA+3E,WAAAA,WAAA,EACAC,gBAAAh4E,KAAAg4E,YAAAA,YAAA,EAAAv2E,KAAAiyE,GAEA8E,kBAAAx4E,KAAAw4E,cAAA/2E,KAAAsF,IAAA,EAAAyxE,eAAA,EACAC,gBAAAz4E,KAAAy4E,YAAAh3E,KAAAsF,IAAA,EAAA0xE,aAAA,CAIA,IAOAE,SAKAlmE,EAAA9b,EAZA85C,WACArZ,YACAsZ,WACAC,OAKA5M,OAAAu0C,YACAM,YAAAL,YAAAD,aAAAG,YACAt/C,OAAA,GAAAxI,SACA0I,GAAA,GAAA5L,QAKA,KAAAhb,EAAA,EAAAA,GAAAgmE,YAAAhmE,IAAA,CAEA,IAAA9b,EAAA,EAAAA,GAAA6hF,cAAA7hF,IAIAgiF,QAAAZ,WAAAphF,EAAA6hF,cAAAR,YAIA7+C,OAAA9uB,EAAA05B,OAAAtiC,KAAA45C,IAAAs9B,SACAx/C,OAAArsB,EAAAi3B,OAAAtiC,KAAA6zE,IAAAqD,SAEAvhD,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAIAihB,QAAA39C,KAAA,EAAA,EAAA,GAIAsmC,GAAAhvB,GAAA8uB,OAAA9uB,EAAAkuE,YAAA,GAAA,EACAl/C,GAAAvsB,GAAAqsB,OAAArsB,EAAAyrE,YAAA,GAAA,EAEA5nC,IAAA59C,KAAAsmC,GAAAhvB,EAAAgvB,GAAAvsB,EAMAi3B,SAAA60C,WAMA,IAAAnmE,EAAA,EAAAA,EAAAgmE,YAAAhmE,IAAA,CAEA,GAAAomE,mBAAApmE,GAAA+lE,cAAA,EAEA,KAAA7hF,EAAA,EAAAA,EAAA6hF,cAAA7hF,IAAA,CAEAgiF,QAAAhiF,EAAAkiF,iBAEA,IAAAp7E,GAAAk7E,QACAj7E,EAAAi7E,QAAAH,cAAA,EACA5jE,EAAA+jE,QAAAH,cAAA,EACAzrE,EAAA4rE,QAAA,CAIAloC,SAAA19C,KAAA0K,EAAAC,EAAAqP,GACA0jC,QAAA19C,KAAA2K,EAAAkX,EAAA7H,IAQAla,KAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IAgBA,QAAAmoC,eAAA9gC,OAAA+gC,SAAAlB,SAAAC,WAEAnpC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,gBAEAp7B,KAAAkvC,YACAiW,OAAAA,OACA+gC,SAAAA,SACAlB,SAAAA,SACAC,UAAAA,WAGAjlF,KAAAw+C,mBAAA,GAAA2nC,qBAAAhhC,OAAA+gC,SAAAlB,SAAAC,YACAjlF,KAAA0+C,gBASA,QAAAynC,qBAAAhhC,OAAA+gC,SAAAlB,SAAAC,WAEAhnC,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,sBAEAp7B,KAAAkvC,YACAiW,OAAAA,OACA+gC,SAAAA,SACAlB,SAAAA,SACAC,UAAAA,WAGAiB,SAAAt3E,KAAAE,MAAAo3E,WAAA,GACAlB,SAAAA,UAAA,EACAC,UAAAA,WAAA,EAAAr2E,KAAAiyE,GAIAoE,UAAAvpD,MAAA0qD,MAAAnB,UAAA,EAAA,EAAAr2E,KAAAiyE,GAKA,IAMA10D,MAIAroB,EAAA8b,EAVAg+B,WACArZ,YACAuZ,OAKAuoC,gBAAA,EAAAH,SACA5/C,OAAA,GAAAxI,SACA0I,GAAA,GAAA5L,QAKA,KAAA92B,EAAA,EAAAA,GAAAoiF,SAAApiF,IAAA,CAEA,GAAAwiF,KAAAtB,SAAAlhF,EAAAuiF,gBAAApB,UAEAxC,IAAA7zE,KAAA6zE,IAAA6D,KACA99B,IAAA55C,KAAA45C,IAAA89B,IAEA,KAAA1mE,EAAA,EAAAA,GAAAulC,OAAAvlD,OAAA,EAAAggB,IAIA0mB,OAAA9uB,EAAA2tC,OAAAvlC,GAAApI,EAAAirE,IACAn8C,OAAArsB,EAAAkrC,OAAAvlC,GAAA3F,EACAqsB,OAAA1J,EAAAuoB,OAAAvlC,GAAApI,EAAAgxC,IAEAjkB,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAIA4J,GAAAhvB,EAAA1T,EAAAoiF,SACA1/C,GAAAvsB,EAAA2F,GAAAulC,OAAAvlD,OAAA,GAEAk+C,IAAA59C,KAAAsmC,GAAAhvB,EAAAgvB,GAAAvsB,GASA,IAAAnW,EAAA,EAAAA,EAAAoiF,SAAApiF,IAEA,IAAA8b,EAAA,EAAAA,EAAAulC,OAAAvlD,OAAA,EAAAggB,IAAA,CAEAuM,KAAAvM,EAAA9b,EAAAqhD,OAAAvlD,MAEA,IAAAgL,GAAAuhB,KACAthB,EAAAshB,KAAAg5B,OAAAvlD,OACAmiB,EAAAoK,KAAAg5B,OAAAvlD,OAAA,EACAsa,EAAAiS,KAAA,CAIAyxB,SAAA19C,KAAA0K,EAAAC,EAAAqP,GACA0jC,QAAA19C,KAAA2K,EAAAkX,EAAA7H,GAmBA,GAXAla,KAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IAIA99C,KAAAghF,uBAKAiE,YAAA,EAAAr2E,KAAAiyE,GAAA,CAEA,GAAAhjC,SAAA79C,KAAA2H,WAAA0pC,OAAAx8B,MACA0xE,GAAA,GAAAzoD,SACA0oD,GAAA,GAAA1oD,SACAvmB,EAAA,GAAAumB,QAMA,KAFA3R,KAAA+5D,SAAA/gC,OAAAvlD,OAAA,EAEAkE,EAAA,EAAA8b,EAAA,EAAA9b,EAAAqhD,OAAAvlD,OAAAkE,IAAA8b,GAAA,EAIA2mE,GAAA/uE,EAAAqmC,QAAAj+B,EAAA,GACA2mE,GAAAtsE,EAAA4jC,QAAAj+B,EAAA,GACA2mE,GAAA3pD,EAAAihB,QAAAj+B,EAAA,GAIA4mE,GAAAhvE,EAAAqmC,QAAA1xB,KAAAvM,EAAA,GACA4mE,GAAAvsE,EAAA4jC,QAAA1xB,KAAAvM,EAAA,GACA4mE,GAAA5pD,EAAAihB,QAAA1xB,KAAAvM,EAAA,GAIArI,EAAAmsE,WAAA6C,GAAAC,IAAA/8B,YAIA5L,QAAAj+B,EAAA,GAAAi+B,QAAA1xB,KAAAvM,EAAA,GAAArI,EAAAC,EACAqmC,QAAAj+B,EAAA,GAAAi+B,QAAA1xB,KAAAvM,EAAA,GAAArI,EAAA0C,EACA4jC,QAAAj+B,EAAA,GAAAi+B,QAAA1xB,KAAAvM,EAAA,GAAArI,EAAAqlB,GAkBA,QAAA6pD,eAAAxC,OAAAS,eAEA5oC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,gBAEA,gBAAAspD,iBAEA30E,QAAAH,KAAA,4DAEA80E,cAAAA,cAAAA,eAIA1kF,KAAAkvC,YACA+0C,OAAAA,OACAS,cAAAA,eAGA1kF,KAAAw+C,mBAAA,GAAAkoC,qBAAAzC,OAAAS,gBACA1kF,KAAA0+C,gBASA,QAAAgoC,qBAAAzC,OAAAS,eAwDA,QAAAiC,UAAAC,OAEA,GAAA9iF,GAAA4f,EAAAmjE,UAEAC,YAAAviD,SAAA3kC,OAAA,EACAulD,OAAAyhC,MAAAG,cAAArC,eAEAsC,cAAA7hC,OAAAyhC,MACAK,WAAA9hC,OAAA+hC,KAIA,KAAA,IAAAC,WAAAC,YAAAJ,eAMA,IAJAA,cAAAA,cAAAK,UAIAvjF,EAAA,EAAA4f,EAAAujE,WAAArnF,OAAAkE,EAAA4f,EAAA5f,IAEA+iF,UAAAI,WAAAnjF,IAEA,IAAAqjF,WAAAC,YAAAP,aAEAI,WAAAnjF,GAAA+iF,UAAAQ,UAQA,IAAA7iD,OAAA2iD,WAAAG,iBAAAN,cAAAC,WAIA,KAAAnjF,EAAA,EAAA4f,EAAAujE,WAAArnF,OAAAkE,EAAA4f,EAAA5f,IAEA+iF,UAAAI,WAAAnjF,GACAkjF,cAAAA,cAAAO,OAAAV,UAMA,KAAA/iF,EAAA,EAAA4f,EAAAsjE,cAAApnF,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAwiC,QAAA0gD,cAAAljF,EAEAygC,UAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAA,GACA4jC,QAAA39C,KAAA,EAAA,EAAA,GACA49C,IAAA59C,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,GAMA,IAAAnW,EAAA,EAAA4f,EAAA8gB,MAAA5kC,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA4zC,MAAAlT,MAAA1gC,GAEA8G,EAAA8sC,KAAA,GAAAovC,YACAj8E,EAAA6sC,KAAA,GAAAovC,YACA/kE,EAAA21B,KAAA,GAAAovC,WAEAlpC,SAAA19C,KAAA0K,EAAAC,EAAAkX,GACA29B,YAAA,GAxHAzB,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,sBAEAp7B,KAAAkvC,YACA+0C,OAAAA,OACAS,cAAAA,eAGAA,cAAAA,eAAA,EAIA,IAAA9mC,YACArZ,YACAsZ,WACAC,OAIAgC,WAAA,EACAJ,WAAA,CAIA,KAAA,IAAAnjD,MAAAoN,QAAAs6E,QAEA0C,SAAA1C,YAIA,KAAA,GAAAngF,GAAA,EAAAA,EAAAmgF,OAAArkF,OAAAkE,IAEA6iF,SAAA1C,OAAAngF,IAEA9D,KAAA6/C,SAAAC,WAAAJ,WAAA57C;uCAEAg8C,YAAAJ,WACAA,WAAA,CAQA1/C,MAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IAuFA,QAAA0pC,eAAAn1C,SAAAo1C,gBAEAxpC,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,gBAEAp7B,KAAAkvC,YACAu4C,eAAAA,gBAGAA,mBAAAt6E,KAAAs6E,eAAAA,eAAA,CAIA,IAKArJ,OAAAC,MACAjuE,IAIAs3E,UAVAnjD,YAIAojD,aAAA/4E,KAAA45C,IAAA9sB,MAAAksD,QAAAH,gBACAnJ,MAAA,EAAA,GAAAC,SACAv9D,MAAA,IAAA,IAAA,IAMAqxB,UAAAQ,kBAEA60C,UAAA,GAAA5rC,UACA4rC,UAAAlpC,mBAAAnM,WAIAq1C,UAAAr1C,SAAAtoB,QAIA29D,UAAAhpC,gBACAgpC,UAAAG,oBAOA,KAAA,GALAC,gBAAAJ,UAAAnjD,SACAC,MAAAkjD,UAAAljD,MAIA1gC,EAAA,EAAA4f,EAAA8gB,MAAA5kC,OAAAkE,EAAA4f,EAAA5f,IAIA,IAAA,GAFA4zC,MAAAlT,MAAA1gC,GAEA8b,EAAA,EAAAA,EAAA,EAAAA,IAEAw+D,MAAA1mC,KAAA12B,KAAApB,IACAy+D,MAAA3mC,KAAA12B,MAAApB,EAAA,GAAA,IACA0+D,KAAA,GAAA1vE,KAAAY,IAAA4uE,MAAAC,OACAC,KAAA,GAAA1vE,KAAAsF,IAAAkqE,MAAAC,OAEAjuE,IAAAkuE,KAAA,GAAA,IAAAA,KAAA,OAEAnxE,KAAAoxE,MAAAnuE,KAEAmuE,MAAAnuE,MAAAouE,OAAAF,KAAA,GAAAG,OAAAH,KAAA,GAAAyJ,MAAAjkF,EAAAkkF,UAAA76E,IAIAoxE,MAAAnuE,KAAA43E,MAAAlkF,CAUA,KAAAsM,MAAAmuE,OAAA,CAEA,GAAAx7E,GAAAw7E,MAAAnuE,IAIA,QAAAjD,KAAApK,EAAAilF,OAAAxjD,MAAAzhC,EAAAglF,OAAA12C,OAAA42C,IAAAzjD,MAAAzhC,EAAAilF,OAAA32C,SAAAs2C,aAAA,CAEA,GAAArhD,QAAAwhD,eAAA/kF,EAAAy7E,OACAj6C,UAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAEA0J,OAAAwhD,eAAA/kF,EAAA07E,QACAl6C,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,IAQA58B,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IAcA,QAAA2jD,kBAAAC,UAAAC,aAAAtrD,OAAA8kD,eAAAtjC,eAAA+pC,UAAAnD,WAAAC,aAEArpC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,mBAEAp7B,KAAAkvC,YACAi5C,UAAAA,UACAC,aAAAA,aACAtrD,OAAAA,OACA8kD,eAAAA,eACAtjC,eAAAA,eACA+pC,UAAAA,UACAnD,WAAAA,WACAC,YAAAA,aAGAnlF,KAAAw+C,mBAAA,GAAA8pC,wBAAAH,UAAAC,aAAAtrD,OAAA8kD,eAAAtjC,eAAA+pC,UAAAnD,WAAAC,cACAnlF,KAAA0+C,gBASA,QAAA4pC,wBAAAH,UAAAC,aAAAtrD,OAAA8kD,eAAAtjC,eAAA+pC,UAAAnD,WAAAC,aA8JA,QAAAoD,aAAA7kF,KAEA,GAAA8T,GAAAgxE,iBAAAC,eAEAjiD,GAAA,GAAA5L,SACA0L,OAAA,GAAAxI,SAEA4hB,WAAA,EAEAxO,QAAA,IAAAxtC,IAAAykF,UAAAC,aACA9+D,MAAA,IAAA5lB,IAAA,GAAA,CASA,KANA8kF,iBAAAz3D,MAMAvZ,EAAA,EAAAA,GAAAoqE,eAAApqE,IAIA+sB,SAAArkC,KAAA,EAAA+mD,WAAA39B,KAAA,GAIAu0B,QAAA39C,KAAA,EAAAopB,KAAA,GAIAw0B,IAAA59C,KAAA,GAAA,IAIA6wB,OAUA,KAJA03D,eAAA13D,MAIAvZ,EAAA,EAAAA,GAAAoqE,eAAApqE,IAAA,CAEA,GAAA9D,GAAA8D,EAAAoqE,eACA8G,MAAAh1E,EAAAyxE,YAAAD,WAEAyD,SAAA/5E,KAAA45C,IAAAkgC,OACAE,SAAAh6E,KAAA6zE,IAAAiG,MAIApiD,QAAA9uB,EAAA05B,OAAA03C,SACAtiD,OAAArsB,EAAAgtC,WAAA39B,KACAgd,OAAA1J,EAAAsU,OAAAy3C,SACApkD,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAIAihB,QAAA39C,KAAA,EAAAopB,KAAA,GAIAkd,GAAAhvB,EAAA,GAAAmxE,SAAA,GACAniD,GAAAvsB,EAAA,GAAA2uE,SAAAt/D,KAAA,GACAw0B,IAAA59C,KAAAsmC,GAAAhvB,EAAAgvB,GAAAvsB,GAIA8W,QAMA,IAAAvZ,EAAA,EAAAA,EAAAoqE,eAAApqE,IAAA,CAEA,GAAAuK,GAAAymE,iBAAAhxE,EACA1T,EAAA2kF,eAAAjxE,GAEA,IAAA9T,IAIAk6C,QAAA19C,KAAA4D,EAAAA,EAAA,EAAAie,GAMA67B,QAAA19C,KAAA4D,EAAA,EAAAA,EAAAie,GAIA29B,YAAA,EAMA/L,MAAAkM,SAAAC,WAAAJ,YAAA,IAAAh8C,IAAA,EAAA,GAIAo8C,YAAAJ,WAvQAzB,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,yBAEAp7B,KAAAkvC,YACAi5C,UAAAA,UACAC,aAAAA,aACAtrD,OAAAA,OACA8kD,eAAAA,eACAtjC,eAAAA,eACA+pC,UAAAA,UACAnD,WAAAA,WACAC,YAAAA,YAGA,IAAAxxC,OAAA3zC,IAEAmoF,eAAAh7E,KAAAg7E,UAAAA,UAAA,GACAC,iBAAAj7E,KAAAi7E,aAAAA,aAAA,GACAtrD,WAAA3vB,KAAA2vB,OAAAA,OAAA,IAEA8kD,eAAAhzE,KAAAE,MAAA8yE,iBAAA,EACAtjC,eAAA1vC,KAAAE,MAAAwvC,iBAAA,EAEA+pC,cAAAl7E,KAAAk7E,WAAAA,UACAnD,eAAA/3E,KAAA+3E,WAAAA,WAAA,EACAC,gBAAAh4E,KAAAg4E,YAAAA,YAAA,EAAAv2E,KAAAiyE,EAIA,IAAAjjC,YACArZ,YACAsZ,WACAC,OAIA/sB,MAAA,EACA83D,cACA5hC,WAAAnqB,OAAA,EACAgjB,WAAA,GAoBA,WAEA,GAAAtoC,GAAAyC,EACAo3B,OAAA,GAAAvT,SACAwI,OAAA,GAAAxI,SAEA4hB,WAAA,EAGAopC,OAAAV,aAAAD,WAAArrD,MAIA,KAAA7iB,EAAA,EAAAA,GAAAqkC,eAAArkC,IAAA,CAEA,GAAA8uE,aAEAzpD,EAAArlB,EAAAqkC,eAIApN,OAAA5R,GAAA8oD,aAAAD,WAAAA,SAEA,KAAA3wE,EAAA,EAAAA,GAAAoqE,eAAApqE,IAAA,CAEA,GAAA9D,GAAA8D,EAAAoqE,eAEA8G,MAAAh1E,EAAAyxE,YAAAD,WAEA0D,SAAAh6E,KAAA6zE,IAAAiG,OACAC,SAAA/5E,KAAA45C,IAAAkgC,MAIApiD,QAAA9uB,EAAA05B,OAAA03C,SACAtiD,OAAArsB,GAAAqlB,EAAAxC,OAAAmqB,WACA3gB,OAAA1J,EAAAsU,OAAAy3C,SACApkD,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAIAyU,OAAAxgC,IAAA+3E,SAAAE,MAAAH,UAAAl/B,YACA5L,QAAA39C,KAAAmxC,OAAA75B,EAAA65B,OAAAp3B,EAAAo3B,OAAAzU,GAIAkhB,IAAA59C,KAAAwT,EAAA,EAAA4rB,GAIAypD,SAAA7oF,KAAA6wB,SAMA83D,WAAA3oF,KAAA6oF,UAMA,IAAAvxE,EAAA,EAAAA,EAAAoqE,eAAApqE,IAEA,IAAAyC,EAAA,EAAAA,EAAAqkC,eAAArkC,IAAA,CAIA,GAAArP,GAAAi+E,WAAA5uE,GAAAzC,GACA3M,EAAAg+E,WAAA5uE,EAAA,GAAAzC,GACAuK,EAAA8mE,WAAA5uE,EAAA,GAAAzC,EAAA,GACA0C,EAAA2uE,WAAA5uE,GAAAzC,EAAA,EAIAomC,SAAA19C,KAAA0K,EAAAC,EAAAqP,GACA0jC,QAAA19C,KAAA2K,EAAAkX,EAAA7H,GAIAwlC,YAAA,EAQA/L,MAAAkM,SAAAC,WAAAJ,WAAA,GAIAI,YAAAJ,eA1GA,IAAA2oC,YAEAF,UAAA,GAAAI,aAAA,GACAH,aAAA,GAAAG,aAAA,IAMAvoF,KAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IA4NA,QAAAkrC,cAAA93C,OAAApU,OAAA8kD,eAAAtjC,eAAA+pC,UAAAnD,WAAAC,aAEA+C,iBAAAthF,KAAA5G,KAAA,EAAAkxC,OAAApU,OAAA8kD,eAAAtjC,eAAA+pC,UAAAnD,WAAAC,aAEAnlF,KAAAo7B,KAAA,eAEAp7B,KAAAkvC,YACAgC,OAAAA,OACApU,OAAAA,OACA8kD,eAAAA,eACAtjC,eAAAA,eACA+pC,UAAAA,UACAnD,WAAAA,WACAC,YAAAA,aAUA,QAAA8D,oBAAA/3C,OAAApU,OAAA8kD,eAAAtjC,eAAA+pC,UAAAnD,WAAAC,aAEAmD,uBAAA1hF,KAAA5G,KAAA,EAAAkxC,OAAApU,OAAA8kD,eAAAtjC,eAAA+pC,UAAAnD,WAAAC,aAEAnlF,KAAAo7B,KAAA,qBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACApU,OAAAA,OACA8kD,eAAAA,eACAtjC,eAAAA,eACA+pC,UAAAA,UACAnD,WAAAA,WACAC,YAAAA,aAgBA,QAAA+D,gBAAAh4C,OAAAg1C,SAAAhB,WAAAC,aAEArpC,SAAAl1C,KAAA5G,MAEAA,KAAAo7B,KAAA,iBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACAg1C,SAAAA,SACAhB,WAAAA,WACAC,YAAAA,aAGAnlF,KAAAw+C,mBAAA,GAAA2qC,sBAAAj4C,OAAAg1C,SAAAhB,WAAAC,cACAnlF,KAAA0+C,gBASA,QAAAyqC,sBAAAj4C,OAAAg1C,SAAAhB,WAAAC,aAEAlnC,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,uBAEAp7B,KAAAkvC,YACAgC,OAAAA,OACAg1C,SAAAA,SACAhB,WAAAA,WACAC,YAAAA,aAGAj0C,OAAAA,QAAA,GACAg1C,aAAA/4E,KAAA+4E,SAAAt3E,KAAAsF,IAAA,EAAAgyE,UAAA,EAEAhB,eAAA/3E,KAAA+3E,WAAAA,WAAA,EACAC,gBAAAh4E,KAAAg4E,YAAAA,YAAA,EAAAv2E,KAAAiyE,EAIA,IAOA/8E,GAAA8R,EAPAgoC,WACArZ,YACAsZ,WACAC,OAKAxX,OAAA,GAAAxI,SACA0I,GAAA,GAAA5L,QAQA,KAJA2J,SAAArkC,KAAA,EAAA,EAAA,GACA29C,QAAA39C,KAAA,EAAA,EAAA,GACA49C,IAAA59C,KAAA,GAAA,IAEA0V,EAAA,EAAA9R,EAAA,EAAA8R,GAAAswE,SAAAtwE,IAAA9R,GAAA,EAAA,CAEA,GAAAgiF,SAAAZ,WAAAtvE,EAAAswE,SAAAf,WAIA7+C,QAAA9uB,EAAA05B,OAAAtiC,KAAA45C,IAAAs9B,SACAx/C,OAAArsB,EAAAi3B,OAAAtiC,KAAA6zE,IAAAqD,SAEAvhD,SAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAIAihB,QAAA39C,KAAA,EAAA,EAAA,GAIAsmC,GAAAhvB,GAAA+sB,SAAAzgC,GAAAotC,OAAA,GAAA,EACA1K,GAAAvsB,GAAAsqB,SAAAzgC,EAAA,GAAAotC,OAAA,GAAA,EAEA4M,IAAA59C,KAAAsmC,GAAAhvB,EAAAgvB,GAAAvsB,GAMA,IAAAnW,EAAA,EAAAA,GAAAoiF,SAAApiF,IAEA85C,QAAA19C,KAAA4D,EAAAA,EAAA,EAAA,EAMA9D,MAAA+/C,SAAAnC,SACA59C,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACAvkC,KAAAggD,aAAA,SAAA,GAAAvC,wBAAAI,QAAA,IACA79C,KAAAggD,aAAA,KAAA,GAAAvC,wBAAAK,IAAA,IA+DA,QAAAgV,gBAAA5jB,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,iBAEAp7B,KAAA6mC,MAAA,GAAA9C,OAAA,GACA/jC,KAAA4mC,QAAA,EAEA5mC,KAAA0tC,QAAA,EACA1tC,KAAAiuC,aAAA,EAEAjuC,KAAAmwC,UAAAjB,YAaA,QAAAk6C,mBAAAl6C,YAEAD,eAAAroC,KAAA5G,KAAAkvC,YAEAlvC,KAAAo7B,KAAA,oBA4DA,QAAAq3B,sBAAAvjB,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAmvC,SAAAk6C,SAAA,IAEArpF,KAAAo7B,KAAA,uBAEAp7B,KAAA6mC,MAAA,GAAA9C,OAAA,UACA/jC,KAAAy2E,UAAA,GACAz2E,KAAA02E,UAAA,GAEA12E,KAAAwK,IAAA,KAEAxK,KAAAwgD,SAAA,KACAxgD,KAAAygD,kBAAA,EAEAzgD,KAAA0gD,MAAA,KACA1gD,KAAA2gD,eAAA,EAEA3gD,KAAA61E,SAAA,GAAA9xC,OAAA,GACA/jC,KAAA81E,kBAAA,EACA91E,KAAA8uD,YAAA,KAEA9uD,KAAA2rD,QAAA,KACA3rD,KAAAu2E,UAAA,EAEAv2E,KAAA4rD,UAAA,KACA5rD,KAAAw2E,YAAA,GAAA57C,SAAA,EAAA,GAEA56B,KAAAwwC,gBAAA,KACAxwC,KAAAywC,kBAAA,EACAzwC,KAAA0wC,iBAAA,EAEA1wC,KAAA+uD,aAAA,KAEA/uD,KAAAgvD,aAAA,KAEAhvD,KAAAuwC,SAAA,KAEAvwC,KAAA6gD,OAAA,KACA7gD,KAAA22E,gBAAA,EAEA32E,KAAAihD,gBAAA,IAEAjhD,KAAAqvC,WAAA,EACArvC,KAAAsvC,mBAAA,EACAtvC,KAAAkhD,iBAAA,QACAlhD,KAAAmhD,kBAAA,QAEAnhD,KAAAwvC,UAAA,EACAxvC,KAAAyvC,cAAA,EACAzvC,KAAA0vC,cAAA,EAEA1vC,KAAAmwC,UAAAjB,YAyEA,QAAAwjB,sBAAAxjB,YAEAujB,qBAAA7rD,KAAA5G,MAEAA,KAAAmvC,SAAAm6C,SAAA,IAEAtpF,KAAAo7B,KAAA,uBAEAp7B,KAAAghD,aAAA,GAEAhhD,KAAA42E,UAAA,EACA52E,KAAA62E,mBAAA,EAEA72E,KAAAmwC,UAAAjB,YA0EA,QAAAqjB,mBAAArjB,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,oBAEAp7B,KAAA6mC,MAAA,GAAA9C,OAAA,UACA/jC,KAAAq2E,SAAA,GAAAtyC,OAAA,SACA/jC,KAAAs2E,UAAA,GAEAt2E,KAAAwK,IAAA,KAEAxK,KAAAwgD,SAAA,KACAxgD,KAAAygD,kBAAA,EAEAzgD,KAAA0gD,MAAA,KACA1gD,KAAA2gD,eAAA,EAEA3gD,KAAA61E,SAAA,GAAA9xC,OAAA,GACA/jC,KAAA81E,kBAAA,EACA91E,KAAA8uD,YAAA,KAEA9uD,KAAA2rD,QAAA,KACA3rD,KAAAu2E,UAAA,EAEAv2E,KAAA4rD,UAAA,KACA5rD,KAAAw2E,YAAA,GAAA57C,SAAA,EAAA,GAEA56B,KAAAwwC,gBAAA,KACAxwC,KAAAywC,kBAAA,EACAzwC,KAAA0wC,iBAAA,EAEA1wC,KAAA4gD,YAAA,KAEA5gD,KAAAuwC,SAAA,KAEAvwC,KAAA6gD,OAAA,KACA7gD,KAAA8gD,QAAAC,kBACA/gD,KAAAghD,aAAA,EACAhhD,KAAAihD,gBAAA,IAEAjhD,KAAAqvC,WAAA,EACArvC,KAAAsvC,mBAAA,EACAtvC,KAAAkhD,iBAAA,QACAlhD,KAAAmhD,kBAAA,QAEAnhD,KAAAwvC,UAAA,EACAxvC,KAAAyvC,cAAA,EACAzvC,KAAA0vC,cAAA,EAEA1vC,KAAAmwC,UAAAjB,YAqEA,QAAAsjB,kBAAAtjB,YAEAqjB,kBAAA3rD,KAAA5G,MAEAA,KAAAmvC,SAAAo6C,KAAA,IAEAvpF,KAAAo7B,KAAA,mBAEAp7B,KAAAuvD,YAAA,KAEAvvD,KAAAmwC,UAAAjB,YA6CA,QAAAmjB,oBAAAnjB,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,qBAEAp7B,KAAA2rD,QAAA,KACA3rD,KAAAu2E,UAAA,EAEAv2E,KAAA4rD,UAAA,KACA5rD,KAAAw2E,YAAA,GAAA57C,SAAA,EAAA,GAEA56B,KAAAwwC,gBAAA,KACAxwC,KAAAywC,kBAAA,EACAzwC,KAAA0wC,iBAAA,EAEA1wC,KAAAqvC,WAAA,EACArvC,KAAAsvC,mBAAA,EAEAtvC,KAAAssC,KAAA,EACAtsC,KAAA0tC,QAAA,EAEA1tC,KAAAwvC,UAAA,EACAxvC,KAAAyvC,cAAA,EACAzvC,KAAA0vC,cAAA,EAEA1vC,KAAAmwC,UAAAjB,YAwEA,QAAAojB,qBAAApjB,YAEA1B,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,sBAEAp7B,KAAA6mC,MAAA,GAAA9C,OAAA,UAEA/jC,KAAAwK,IAAA,KAEAxK,KAAAwgD,SAAA,KACAxgD,KAAAygD,kBAAA,EAEAzgD,KAAA0gD,MAAA,KACA1gD,KAAA2gD,eAAA,EAEA3gD,KAAA61E,SAAA,GAAA9xC,OAAA,GACA/jC,KAAA81E,kBAAA,EACA91E,KAAA8uD,YAAA,KAEA9uD,KAAA4gD,YAAA,KAEA5gD,KAAAuwC,SAAA,KAEAvwC,KAAA6gD,OAAA,KACA7gD,KAAA8gD,QAAAC,kBACA/gD,KAAAghD,aAAA,EACAhhD,KAAAihD,gBAAA,IAEAjhD,KAAAqvC,WAAA,EACArvC,KAAAsvC,mBAAA,EACAtvC,KAAAkhD,iBAAA,QACAlhD,KAAAmhD,kBAAA,QAEAnhD,KAAAwvC,UAAA,EACAxvC,KAAAyvC,cAAA,EACAzvC,KAAA0vC,cAAA,EAEA1vC,KAAAmwC,UAAAjB,YAgEA,QAAA0jB,oBAAA1jB,YAEAyjB,kBAAA/rD,KAAA5G,MAEAA,KAAAo7B,KAAA,qBAEAp7B,KAAA8mC,MAAA,EACA9mC,KAAAk2E,SAAA,EACAl2E,KAAAo2E,QAAA,EAEAp2E,KAAAmwC,UAAAjB,YA2FA,QAAAs6C,gBAAAC,OAAAC,WAAAC,SAEA,GAAAh2C,OAAA3zC,KAEA4C,WAAA,EAAAgnF,YAAA,EAAAC,WAAA,CAEA7pF,MAAA8pF,YAAA38E,GACAnN,KAAAypF,OAAAA,OACAzpF,KAAA0pF,WAAAA,WACA1pF,KAAA2pF,QAAAA,QAEA3pF,KAAA+pF,UAAA,SAAAC,KAEAH,cAEA,IAAAjnF,eAEAuK,KAAAwmC,MAAAm2C,SAEAn2C,MAAAm2C,QAAAE,IAAAJ,YAAAC,YAMAjnF,WAAA,GAIA5C,KAAAiqF,QAAA,SAAAD,KAEAJ,kBAEAz8E,KAAAwmC,MAAA+1C,YAEA/1C,MAAA+1C,WAAAM,IAAAJ,YAAAC,YAIAD,cAAAC,aAEAjnF,WAAA,MAEAuK,KAAAwmC,MAAA81C,QAEA91C,MAAA81C,WAQAzpF,KAAAkqF,UAAA,SAAAF,SAEA78E,KAAAwmC,MAAAg2C,SAEAh2C,MAAAg2C,QAAAK,MAcA,QAAAG,YAAAC,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBAiPA,QAAAC,yBAAAF,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBAGArqF,KAAAuqF,QAAA,KAiIA,QAAAC,mBAAAJ,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBAGArqF,KAAAuqF,QAAA,KAiFA,QAAAE,aAAAL,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBAiGA,QAAAK,mBAAAN,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBAoEA,QAAAM,eAAAP,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBAwDA,QAAAO,OAAA/jD,MAAA8gB,WAEA5N,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,QAEAp7B,KAAA6mC,MAAA,GAAA9C,OAAA8C,OACA7mC,KAAA2nD,cAAAx6C,KAAAw6C,UAAAA,UAAA,EAEA3nD,KAAA86C,kBAAA3tC,GA+CA,QAAA09E,iBAAA/jC,SAAAC,YAAAY,WAEAijC,MAAAhkF,KAAA5G,KAAA8mD,SAAAa,WAEA3nD,KAAAo7B,KAAA,kBAEAp7B,KAAAu0C,eAAApnC,GAEAnN,KAAA+qC,SAAA5B,KAAA4Q,SAAAO,WACAt6C,KAAA8qF,eAEA9qF,KAAA+mD,YAAA,GAAAhjB,OAAAgjB,aA0BA,QAAAgkC,aAAAnjD,QAEA5nC,KAAA4nC,OAAAA,OAEA5nC,KAAAmoD,KAAA,EACAnoD,KAAAkxC,OAAA,EAEAlxC,KAAA02C,QAAA,GAAA9b,SAAA,IAAA,KAEA56B,KAAAwK,IAAA,KACAxK,KAAAk3C,OAAA,GAAAnZ,SA8CA,QAAAitD,mBAEAD,YAAAnkF,KAAA5G,KAAA,GAAAm7C,mBAAA,GAAA,EAAA,GAAA,MAmCA,QAAA8vC,WAAApkD,MAAA8gB,UAAAjB,SAAA+B,MAAAC,SAAA7B,OAEA+jC,MAAAhkF,KAAA5G,KAAA6mC,MAAA8gB,WAEA3nD,KAAAo7B,KAAA,YAEAp7B,KAAA+qC,SAAA5B,KAAA4Q,SAAAO,WACAt6C,KAAA8qF,eAEA9qF,KAAAgD,OAAA,GAAA+2C,UAEAlwC,OAAA0xB,eAAAv7B,KAAA,SACAgX,IAAA,WAGA,MAAAhX,MAAA2nD,UAAA/4C,KAAAiyE,IAEAhwE,IAAA,SAAAq6E,OAGAlrF,KAAA2nD,UAAAujC,MAAAt8E,KAAAiyE,MAIA7gF,KAAA0mD,aAAAv5C,KAAAu5C,SAAAA,SAAA,EACA1mD,KAAAyoD,UAAAt7C,KAAAs7C,MAAAA,MAAA75C,KAAAiyE,GAAA,EACA7gF,KAAA0oD,aAAAv7C,KAAAu7C,SAAAA,SAAA,EACA1oD,KAAA6mD,UAAA15C,KAAA05C,MAAAA,MAAA,EAEA7mD,KAAAy2C,OAAA,GAAAu0C,iBAkCA,QAAAG,YAAAtkD,MAAA8gB,UAAAjB,SAAAG,OAEA+jC,MAAAhkF,KAAA5G,KAAA6mC,MAAA8gB,WAEA3nD,KAAAo7B,KAAA,aAEAvxB,OAAA0xB,eAAAv7B,KAAA,SACAgX,IAAA,WAGA,MAAA,GAAAhX,KAAA2nD,UAAA/4C,KAAAiyE,IAGAhwE,IAAA,SAAAq6E,OAGAlrF,KAAA2nD,UAAAujC,OAAA,EAAAt8E,KAAAiyE,OAIA7gF,KAAA0mD,aAAAv5C,KAAAu5C,SAAAA,SAAA,EACA1mD,KAAA6mD,UAAA15C,KAAA05C,MAAAA,MAAA,EAEA7mD,KAAAy2C,OAAA,GAAAs0C,aAAA,GAAA5vC,mBAAA,GAAA,EAAA,GAAA,MA6BA,QAAAiwC,0BAEAL,YAAAnkF,KAAA5G,KAAA,GAAAg7C,qBAAA,EAAA,EAAA,GAAA,EAAA,GAAA,MAeA,QAAAqwC,kBAAAxkD,MAAA8gB,WAEAijC,MAAAhkF,KAAA5G,KAAA6mC,MAAA8gB,WAEA3nD,KAAAo7B,KAAA,mBAEAp7B,KAAA+qC,SAAA5B,KAAA4Q,SAAAO,WACAt6C,KAAA8qF,eAEA9qF,KAAAgD,OAAA,GAAA+2C,UAEA/5C,KAAAy2C,OAAA,GAAA20C,wBA4BA,QAAAE,cAAAzkD,MAAA8gB,WAEAijC,MAAAhkF,KAAA5G,KAAA6mC,MAAA8gB,WAEA3nD,KAAAo7B,KAAA,eAEAp7B,KAAAu0C,eAAApnC,GAgBA,QAAAo+E,eAAA1kD,MAAA8gB,UAAAzoD,MAAA49B,QAEA8tD,MAAAhkF,KAAA5G,KAAA6mC,MAAA8gB,WAEA3nD,KAAAo7B,KAAA,gBAEAp7B,KAAA+qC,SAAAl6B,IAAA,EAAA,EAAA,GACA7Q,KAAA8qF,eAEA9qF,KAAAd,UAAAiO,KAAAjO,MAAAA,MAAA,GACAc,KAAA88B,WAAA3vB,KAAA2vB,OAAAA,OAAA,GAmOA,QAAA0uD,aAAAC,mBAAAC,aAAAC,WAAAC,cAEA5rF,KAAAyrF,mBAAAA,mBACAzrF,KAAA6rF,aAAA,EAEA7rF,KAAA4rF,iBAAAz+E,KAAAy+E,aACAA,aAAA,GAAAF,cAAAI,YAAAH,YACA3rF,KAAA0rF,aAAAA,aACA1rF,KAAA+rF,UAAAJ,WA4OA,QAAAK,kBAAAP,mBAAAC,aAAAC,WAAAC,cAEAJ,YAAA5kF,KACA5G,KAAAyrF,mBAAAC,aAAAC,WAAAC,cAEA5rF,KAAAisF,aAAA,EACAjsF,KAAAksF,aAAA,EACAlsF,KAAAmsF,aAAA,EACAnsF,KAAAosF,aAAA,EAyIA,QAAAC,mBAAAZ,mBAAAC,aAAAC,WAAAC,cAEAJ,YAAA5kF,KAAA5G,KAAAyrF,mBAAAC,aAAAC,WAAAC,cA0CA,QAAAU,qBAAAb,mBAAAC,aAAAC,WAAAC,cAEAJ,YAAA5kF,KAAA5G,KAAAyrF,mBAAAC,aAAAC,WAAAC,cAoXA,QAAAW,0BAAA3uF,KAAA4uF,MAAAlsE,OAAAmsE,eAEA,OAAAt/E,KAAAvP,KAAA,KAAA,IAAA2S,OAAA,0BAEA,QAAApD,KAAAq/E,OAAA,IAAAA,MAAA5sF,OAEA,KAAA,IAAA2Q,OAAA,+BAAA3S,KAIAoC,MAAApC,KAAAA,KAEAoC,KAAAwsF,MAAAE,eAAAC,aAAAH,MAAAxsF,KAAA4sF,gBACA5sF,KAAAsgB,OAAAosE,eAAAC,aAAArsE,OAAAtgB,KAAA6sF,iBAEA7sF,KAAA8sF,iBAAAL,eAAAzsF,KAAA+sF,sBAEA/sF,KAAAgtF,WACAhtF,KAAAitF,WAcA,QAAAC,qBAAAtvF,KAAA4uF,MAAAlsE,OAAAmsE,eAEAF,yBAAA3lF,KAAA5G,KAAApC,KAAA4uF,MAAAlsE,OAAAmsE,eAuBA,QAAAU,6BAAA1B,mBAAAC,aAAAC,WAAAC,cAEAJ,YAAA5kF,KAAA5G,KAAAyrF,mBAAAC,aAAAC,WAAAC,cAwCA,QAAAwB,yBAAAxvF,KAAA4uF,MAAAlsE,OAAAmsE,eAEAF,yBAAA3lF,KAAA5G,KAAApC,KAAA4uF,MAAAlsE,OAAAmsE,eAmCA,QAAAY,qBAAAzvF,KAAA4uF,MAAAlsE,OAAAmsE,eAEAF,yBAAA3lF,KAAA5G,KAAApC,KAAA4uF,MAAAlsE,OAAAmsE,eA2BA,QAAAa,qBAAA1vF,KAAA4uF,MAAAlsE,OAAAmsE,eAEAF,yBAAA3lF,KAAA5G,KAAApC,KAAA4uF,MAAAlsE,OAAAmsE,eA8BA,QAAAc,sBAAA3vF,KAAA4uF,MAAAlsE,QAEAisE,yBAAA3lF,KAAA5G,KAAApC,KAAA4uF,MAAAlsE,QAiCA,QAAAktE,oBAAA5vF,KAAA4uF,MAAAlsE,OAAAmsE,eAEAF,yBAAA3lF,KAAA5G,KAAApC,KAAA4uF,MAAAlsE,OAAAmsE,eA+BA,QAAAgB,eAAA7vF,KAAA4uF,MAAAlsE,OAAAmsE,eAEAF,yBAAAzsF,MAAAE,KAAAC,WA4IA,QAAAytF,eAAA9vF,KAAAwqB,SAAAulE,QAEA3tF,KAAApC,KAAAA,KACAoC,KAAA2tF,OAAAA,OACA3tF,KAAAooB,aAAAjb,KAAAib,SAAAA,UAAA,EAEApoB,KAAAy7B,KAAAC,MAAAC,eAGA37B,KAAAooB,SAAA,GAEApoB,KAAA4tF,gBAIA5tF,KAAAitF,WA0UA,QAAAY,gBAAAzD,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBACArqF,KAAAqkC,YAyJA,QAAAypD,sBAAA1D,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBAgGA,QAAA0D,UAEA/tF,KAAAguF,YAAA,aACAhuF,KAAAiuF,eAAA,aACAjuF,KAAAkuF,eAAA,aAwUA,QAAAC,YAAA/D,SAEA,iBAAAA,WAEAr6E,QAAAH,KAAA,6EACAw6E,YAAAj9E,IAIAnN,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBAEArqF,KAAAouF,iBAAA,EAsiBA,QAAAC,cAAAjE,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBACArqF,KAAAsuF,YAAA,GAwwBA,QAAAC,YAAAr6D,EAAAsd,GAAAz7B,GAAAC,GAAAC,IAEA,GAAAu4E,IAAA,IAAAx4E,GAAAw7B,IACAi9C,GAAA,IAAAx4E,GAAAF,IACA24E,GAAAx6D,EAAAA,CAEA,QAAA,EAAAne,GAAA,EAAAC,GAAAw4E,GAAAC,KADAv6D,EAAAw6D,MACA,EAAA34E,GAAA,EAAAC,GAAA,EAAAw4E,GAAAC,IAAAC,GAAAF,GAAAt6D,EAAAne,GAMA,QAAA44E,mBAAAz6D,EAAA8/B,GAEA,GAAA7pD,GAAA,EAAA+pB,CACA,OAAA/pB,GAAAA,EAAA6pD,EAIA,QAAA46B,mBAAA16D,EAAA8/B,GAEA,MAAA,IAAA,EAAA9/B,GAAAA,EAAA8/B,EAIA,QAAA66B,mBAAA36D,EAAA8/B,GAEA,MAAA9/B,GAAAA,EAAA8/B,EAIA,QAAA86B,iBAAA56D,EAAAsd,GAAAz7B,GAAAC,IAEA,MAAA24E,mBAAAz6D,EAAAsd,IAAAo9C,kBAAA16D,EAAAne,IACA84E,kBAAA36D,EAAAle,IAMA,QAAA+4E,eAAA76D,EAAA8/B,GAEA,GAAA7pD,GAAA,EAAA+pB,CACA,OAAA/pB,GAAAA,EAAAA,EAAA6pD,EAIA,QAAAg7B,eAAA96D,EAAA8/B,GAEA,GAAA7pD,GAAA,EAAA+pB,CACA,OAAA,GAAA/pB,EAAAA,EAAA+pB,EAAA8/B,EAIA,QAAAi7B,eAAA/6D,EAAA8/B,GAEA,MAAA,IAAA,EAAA9/B,GAAAA,EAAAA,EAAA8/B,EAIA,QAAAk7B,eAAAh7D,EAAA8/B,GAEA,MAAA9/B,GAAAA,EAAAA,EAAA8/B,EAIA,QAAAm7B,aAAAj7D,EAAAsd,GAAAz7B,GAAAC,GAAAC,IAEA,MAAA84E,eAAA76D,EAAAsd,IAAAw9C,cAAA96D,EAAAne,IAAAk5E,cAAA/6D,EAAAle,IACAk5E,cAAAh7D,EAAAje,IAuCA,QAAAm5E,SAEApvF,KAAAqvF,mBAAA,IAqVA,QAAAC,WAAAb,GAAAc,IAEAH,MAAAxoF,KAAA5G,MAEAA,KAAAyuF,GAAAA,GACAzuF,KAAAuvF,GAAAA,GAkDA,QAAAC,aAEAJ,MAAAxoF,KAAA5G,MAEAA,KAAAyvF,UAEAzvF,KAAA0vF,WAAA,EA4NA,QAAAC,cAAAC,GAAAC,GAAAC,QAAAC,QAAAC,YAAAC,UAAAC,WAAAC,WAEAf,MAAAxoF,KAAA5G,MAEAA,KAAA4vF,GAAAA,GACA5vF,KAAA6vF,GAAAA,GAEA7vF,KAAA8vF,QAAAA,QACA9vF,KAAA+vF,QAAAA,QAEA/vF,KAAAgwF,YAAAA,YACAhwF,KAAAiwF,UAAAA,UAEAjwF,KAAAkwF,WAAAA,WAEAlwF,KAAAmwF,UAAAA,WAAA,EAqEA,QAAAC,aAAAjrC,QAEAiqC,MAAAxoF,KAAA5G,MAEAA,KAAAmlD,WAAAh4C,KAAAg4C,UAAAA,OA6BA,QAAAkrC,kBAAA7B,GAAAC,GAAAc,GAAAe,IAEAlB,MAAAxoF,KAAA5G,MAEAA,KAAAwuF,GAAAA,GACAxuF,KAAAyuF,GAAAA,GACAzuF,KAAAuvF,GAAAA,GACAvvF,KAAAswF,GAAAA,GAkBA,QAAAC,sBAAA/B,GAAAC,GAAAc,IAEAH,MAAAxoF,KAAA5G,MAEAA,KAAAwuF,GAAAA,GACAxuF,KAAAyuF,GAAAA,GACAzuF,KAAAuvF,GAAAA,GA+IA,QAAAiB,MAAArrC,QAEAqqC,UAAA5oF,KAAA5G,MACAA,KAAAywF,aAAA,GAAA71D,SAEAuqB,QAEAnlD,KAAA0wF,WAAAvrC,QAoBA,QAAAwrC,SAEAH,KAAA1wF,MAAAE,KAAAC,WAEAD,KAAAknF,SAgDA,QAAA0J,aAEA5wF,KAAA6wF,YACA7wF,KAAA8wF,YAAA,KAgRA,QAAAC,MAAAxwE,MAEAvgB,KAAAugB,KAAAA,KAgLA,QAAAywE,YAAA5G,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBAsEA,QAAA4G,aAAA7G,SAEApqF,KAAAoqF,YAAAj9E,KAAAi9E,QAAAA,QAAAC,sBA8BA,QAAA6G,gBAEAlxF,KAAAo7B,KAAA,eAEAp7B,KAAAq7C,OAAA,EAEAr7C,KAAAmxF,OAAA,KAEAnxF,KAAAolE,QAAA,GAAAjqB,mBACAn7C,KAAAolE,QAAAjxB,OAAAzK,OAAA,GACA1pC,KAAAolE,QAAAzqB,kBAAA,EAEA36C,KAAAslE,QAAA,GAAAnqB,mBACAn7C,KAAAslE,QAAAnxB,OAAAzK,OAAA,GACA1pC,KAAAslE,QAAA3qB,kBAAA,EAiFA,QAAAy2C,YAAA5kD,KAAAC,IAAA4kD,gBAEAt3C,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,YAEA,IAEAk2D,UAAA,GAAAn2C,mBAFA,GAAA,EAEA3O,KAAAC,IACA6kD,UAAA35C,GAAA9mC,IAAA,GAAA,EAAA,GACAygF,SAAAj6C,OAAA,GAAAvZ,SAAA,EAAA,EAAA,IACA99B,KAAAzC,IAAA+zF,SAEA,IAAAC,UAAA,GAAAp2C,mBAPA,GAAA,EAOA3O,KAAAC,IACA8kD,UAAA55C,GAAA9mC,IAAA,GAAA,EAAA,GACA0gF,SAAAl6C,OAAA,GAAAvZ,UAAA,EAAA,EAAA,IACA99B,KAAAzC,IAAAg0F,SAEA,IAAAC,UAAA,GAAAr2C,mBAZA,GAAA,EAYA3O,KAAAC,IACA+kD,UAAA75C,GAAA9mC,IAAA,EAAA,EAAA,GACA2gF,SAAAn6C,OAAA,GAAAvZ,SAAA,EAAA,EAAA,IACA99B,KAAAzC,IAAAi0F,SAEA,IAAAC,UAAA,GAAAt2C,mBAjBA,GAAA,EAiBA3O,KAAAC,IACAglD,UAAA95C,GAAA9mC,IAAA,EAAA,GAAA,GACA4gF,SAAAp6C,OAAA,GAAAvZ,SAAA,GAAA,EAAA,IACA99B,KAAAzC,IAAAk0F,SAEA,IAAAC,UAAA,GAAAv2C,mBAtBA,GAAA,EAsBA3O,KAAAC,IACAilD,UAAA/5C,GAAA9mC,IAAA,GAAA,EAAA,GACA6gF,SAAAr6C,OAAA,GAAAvZ,SAAA,EAAA,EAAA,IACA99B,KAAAzC,IAAAm0F,SAEA,IAAAC,UAAA,GAAAx2C,mBA3BA,GAAA,EA2BA3O,KAAAC,IACAklD,UAAAh6C,GAAA9mC,IAAA,GAAA,EAAA,GACA8gF,SAAAt6C,OAAA,GAAAvZ,SAAA,EAAA,GAAA,IACA99B,KAAAzC,IAAAo0F,SAEA,IAAA50D,UAAA9xB,OAAAusD,UAAAt8B,UAAAc,aAAAb,UAAAa,aAEAh8B,MAAA01D,aAAA,GAAAn4B,uBAAA8zD,eAAAA,eAAAt0D,SACA/8B,KAAA01D,aAAAv4B,QAAAv/B,KAAA,aAEAoC,KAAA20C,OAAA,SAAA3V,SAAA2I,OAEA,OAAA3nC,KAAAf,QAAAe,KAAAs3C,mBAEA,IAAAoe,cAAA11D,KAAA01D,aACAr5B,gBAAAq5B,aAAAv4B,QAAAd,eAEAq5B,cAAAv4B,QAAAd,iBAAA,EAEAq5B,aAAAl4B,eAAA,EACAwB,SAAAyI,OAAAE,MAAA2pD,SAAA57B,cAEAA,aAAAl4B,eAAA,EACAwB,SAAAyI,OAAAE,MAAA4pD,SAAA77B,cAEAA,aAAAl4B,eAAA,EACAwB,SAAAyI,OAAAE,MAAA6pD,SAAA97B,cAEAA,aAAAl4B,eAAA,EACAwB,SAAAyI,OAAAE,MAAA8pD,SAAA/7B,cAEAA,aAAAl4B,eAAA,EACAwB,SAAAyI,OAAAE,MAAA+pD,SAAAh8B,cAEAA,aAAAv4B,QAAAd,gBAAAA,gBAEAq5B,aAAAl4B,eAAA,EACAwB,SAAAyI,OAAAE,MAAAgqD,SAAAj8B,cAEA12B,SAAAwY,gBAAA,OAIAx3C,KAAAy3C,MAAA,SAAAzY,SAAA6H,MAAA+B,MAAAs1B,SAIA,IAAA,GAFAxI,cAAA11D,KAAA01D,aAEA5xD,EAAA,EAAAA,EAAA,EAAAA,IAEA4xD,aAAAl4B,eAAA15B,EACAk7B,SAAAwY,gBAAAke,cAEA12B,SAAAyY,MAAA5Q,MAAA+B,MAAAs1B,QAIAl/B,UAAAwY,gBAAA,OAaA,QAAAo6C,iBAEA73C,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,gBAEAp7B,KAAA0rC,QAAAmmD,aAAAlmD,aAEA3rC,KAAA8xF,KAAA9xF,KAAA0rC,QAAAqmD,aACA/xF,KAAA8xF,KAAAE,QAAAhyF,KAAA0rC,QAAAumD,aAEAjyF,KAAA8rD,OAAA,KAiHA,QAAAomC,OAAAC,UAEAp4C,SAAAnzC,KAAA5G,MAEAA,KAAAo7B,KAAA,QAEAp7B,KAAA0rC,QAAAymD,SAAAzmD,QAEA1rC,KAAA8xF,KAAA9xF,KAAA0rC,QAAAqmD,aACA/xF,KAAA8xF,KAAAE,QAAAG,SAAAC,YAEApyF,KAAAqyF,UAAA,EAEAryF,KAAAo4C,OAAA,KACAp4C,KAAA6vE,MAAA,EACA7vE,KAAAsyF,UAAA,EACAtyF,KAAAuyF,aAAA,EACAvyF,KAAAwyF,WAAA,EACAxyF,KAAAyyF,oBAAA,EACAzyF,KAAA0yF,WAAA,QAEA1yF,KAAA2yF,WAmRA,QAAAC,iBAAAT,UAEAD,MAAAtrF,KAAA5G,KAAAmyF,UAEAnyF,KAAA6yF,OAAA7yF,KAAA0rC,QAAAonD,eACA9yF,KAAA6yF,OAAAb,QAAAhyF,KAAA8xF,MAqFA,QAAAiB,eAAAC,MAAAC,SAEAjzF,KAAAkzF,SAAAF,MAAAtnD,QAAAynD,iBACAnzF,KAAAkzF,SAAAD,YAAA9lF,KAAA8lF,QAAAA,QAAA,KAEAjzF,KAAAugB,KAAA,GAAAu4B,YAAA94C,KAAAkzF,SAAAE,mBAEAJ,MAAAK,YAAArB,QAAAhyF,KAAAkzF,UAwCA,QAAAI,eAAAC,QAAAC,SAAAzH,WAEA/rF,KAAAuzF,QAAAA,QACAvzF,KAAA+rF,UAAAA,SAEA,IACA0H,aADAz7C,WAAAM,YAGA,QAAAk7C,UAEA,IAAA,aACAC,YAAAzzF,KAAA0zF,MACA,MAEA,KAAA,SACA,IAAA,OACA17C,WAAAz7C,MACAk3F,YAAAzzF,KAAA2zF,OACA,MAEA,SACAF,YAAAzzF,KAAA4zF,MAIA5zF,KAAAo4C,OAAA,GAAAJ,YAAA,EAAA+zC,WAYA/rF,KAAA6zF,iBAAAJ,YAEAzzF,KAAA8zF,iBAAA,EAEA9zF,KAAA+zF,SAAA,EACA/zF,KAAAg0F,eAAA,EAmKA,QAAAC,WAAAC,YAAAhxD,KAAAixD,oBAEA,GAAAC,YAAAD,oBAAAE,gBAAAC,eAAApxD,KAEAljC,MAAAu0F,aAAAL,YACAl0F,KAAAw0F,UAAAN,YAAAO,WAAAvxD,KAAAkxD,YA4DA,QAAAC,iBAAAK,SAAAxxD,KAAAkxD,YAEAp0F,KAAAkjC,KAAAA,KACAljC,KAAAo0F,WAAAA,YAAAC,gBAAAC,eAAApxD,MAEAljC,KAAA20F,KAAAN,gBAAAO,SAAAF,SAAA10F,KAAAo0F,WAAA1tF,WAAAguF,SAEA10F,KAAA00F,SAAAA,SAsqBA,QAAAG,sBAAAC,UAEA90F,KAAAy7B,KAAAC,MAAAC,eAGA37B,KAAA6xC,SAAAt1C,MAAAC,UAAA6T,MAAAzJ,KAAA3G,WAEAD,KAAA+0F,gBAAA,CAGA,IAAAn3C,WACA59C,MAAAg1F,eAAAp3C,OAEA,KAAA,GAAA95C,GAAA,EAAAyT,EAAAtX,UAAAL,OAAAkE,IAAAyT,IAAAzT,EAEA85C,QAAA39C,UAAA6D,GAAA23B,MAAA33B,CAIA9D,MAAAi1F,UACAj1F,KAAAk1F,gBACAl1F,KAAAw0F,aACAx0F,KAAAm1F,yBAEA,IAAAxhD,OAAA3zC,IAEAA,MAAAo1F,OAEA3nB,SACA95C,YAAA,MAAAggB,OAAA9B,SAAAjyC,QACAy1F,YAAA,MAAAr1F,MAAA2zB,MAAAggB,MAAAohD,kBAGAO,wBAAA,MAAA3hD,OAAA6gD,UAAA50F,SA2TA,QAAA21F,iBAAAC,MAAAC,KAAAC,WAEA11F,KAAA21F,OAAAH,MACAx1F,KAAA41F,MAAAH,KACAz1F,KAAA61F,WAAAH,WAAA,IAWA,KAAA,GATA/H,QAAA8H,KAAA9H,OACAmI,QAAAnI,OAAA/tF,OACAm2F,aAAA,GAAAx5F,OAAAu5F,SAEAE,qBACAC,YAAAC,oBACAC,UAAAD,qBAGApyF,EAAA,EAAAA,IAAAgyF,UAAAhyF,EAAA,CAEA,GAAAsyF,aAAAzI,OAAA7pF,GAAAuyF,kBAAA,KACAN,cAAAjyF,GAAAsyF,YACAA,YAAAE,SAAAN,oBAIAh2F,KAAAu2F,qBAAAP,oBAEAh2F,KAAAw2F,cAAAT,aAGA/1F,KAAAy2F,kBAAA,GAAAl6F,OAAAu5F,SAEA91F,KAAA02F,YAAA,KACA12F,KAAA22F,kBAAA,KAEA32F,KAAA42F,sBAAA,KACA52F,KAAA62F,mBAAA,KAEA72F,KAAA6vE,KAAAinB,WACA92F,KAAA+2F,YAAA,EAIA/2F,KAAAg3F,WAAA,KAIAh3F,KAAA+sB,KAAA,EAEA/sB,KAAAi3F,UAAA,EACAj3F,KAAAk3F,oBAAA,EAEAl3F,KAAAm3F,OAAA,EACAn3F,KAAAo3F,iBAAA,EAEAp3F,KAAAq3F,YAAAnzD,EAAAA,EAEAlkC,KAAAs3F,QAAA,EACAt3F,KAAA+1C,SAAA,EAEA/1C,KAAAu3F,mBAAA,EAEAv3F,KAAAw3F,kBAAA,EACAx3F,KAAAy3F,gBAAA,EAulBA,QAAAC,gBAAAC,MAEA33F,KAAA43F,MAAAD,KACA33F,KAAA63F,qBACA73F,KAAA83F,WAAA,EAEA93F,KAAA+sB,KAAA,EAEA/sB,KAAAi3F,UAAA,EAwsBA,QAAAc,SAAA7oF,OAEA,gBAAAA,SAEAa,QAAAH,KAAA,sDACAV,MAAAjP,UAAA,IAIAD,KAAAkP,MAAAA,MAcA,QAAA8oF,2BAEA/5C,eAAAr3C,KAAA5G,MAEAA,KAAAo7B,KAAA,0BACAp7B,KAAAulD,sBAAAp4C,GA4DA,QAAA8qF,4BAAAC,kBAAAp7C,SAAA3zB,OAAA4zB,YAEA/8C,KAAAy7B,KAAAC,MAAAC,eAEA37B,KAAAugB,KAAA23E,kBACAl4F,KAAA88C,SAAAA,SACA98C,KAAAmpB,OAAAA,OAEAnpB,KAAA+8C,YAAA,IAAAA,WAkIA,QAAAo7C,mBAAAtjF,MAAAu6D,QAEApvE,KAAAy7B,KAAAC,MAAAC,eAEA37B,KAAA6U,MAAAA,MACA7U,KAAAovE,OAAAA,OACApvE,KAAAm5C,UAAAhsC,KAAA0H,MAAAA,MAAAjV,OAAAwvE,OAAA,EAEApvE,KAAAk4C,SAAA,EACAl4C,KAAAk5C,aAAA/vB,OAAA,EAAAgwB,OAAA,GAEAn5C,KAAAq4C,iBAAA,aAEAr4C,KAAAi6B,QAAA,EA+FA,QAAAm+D,4BAAAvjF,MAAAu6D,OAAA1Q,kBAEAy5B,kBAAAvxF,KAAA5G,KAAA6U,MAAAu6D,QAEApvE,KAAA0+D,iBAAAA,kBAAA,EA0BA,QAAA25B,0BAAAxjF,MAAAioC,SAAA4hB,kBAEA7hB,gBAAAj2C,KAAA5G,KAAA6U,MAAAioC,UAEA98C,KAAA0+D,iBAAAA,kBAAA,EA4BA,QAAA45B,WAAAj3C,OAAA90B,UAAAigB,KAAAC,KAEAzsC,KAAAu4F,IAAA,GAAAn3C,KAAAC,OAAA90B,WAGAvsB,KAAAwsC,KAAAA,MAAA,EACAxsC,KAAAysC,IAAAA,KAAAvI,EAAAA,EAEAlkC,KAAAw4F,QACA/2C,QACA+7B,QACAf,OACAkB,QAAAxqD,UAAA,GACAqpD,WAGA3yE,OAAA2wC,iBAAAx6C,KAAAw4F,QACAC,YACAzhF,IAAA,WAEA,MADAjH,SAAAH,KAAA,yEACA5P,KAAA29E,WAOA,QAAA+a,SAAA9tF,EAAAC,GAEA,MAAAD,GAAA87C,SAAA77C,EAAA67C,SAIA,QAAAiyC,iBAAA3mD,OAAA4mD,UAAAC,WAAAC,WAEA,IAAA,IAAA9mD,OAAA5uC,UAEA4uC,OAAA+mD,QAAAH,UAAAC,aAEA,IAAAC,WAIA,IAAA,GAFA1jD,UAAApD,OAAAoD,SAEAtxC,EAAA,EAAA4f,EAAA0xB,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAEA60F,gBAAAvjD,SAAAtxC,GAAA80F,UAAAC,YAAA,GAiFA,QAAAG,OAAAC,WAEAj5F,KAAAi5F,cAAA9rF,KAAA8rF,WAAAA,UAEAj5F,KAAAsyF,UAAA,EACAtyF,KAAAk5F,QAAA,EACAl5F,KAAAm5F,YAAA,EAEAn5F,KAAAR,SAAA,EAqEA,QAAA45F,WAAAloD,OAAAo1C,IAAAoC,OAMA,MAJA1oF,MAAAkxC,WAAA/jC,KAAA+jC,OAAAA,OAAA,EACAlxC,KAAAsmF,QAAAn5E,KAAAm5E,IAAAA,IAAA,EACAtmF,KAAA0oF,UAAAv7E,KAAAu7E,MAAAA,MAAA,EAEA1oF,KAuEA,QAAAq5F,aAAAnoD,OAAAw3C,MAAAzuE,GAMA,MAJAja,MAAAkxC,WAAA/jC,KAAA+jC,OAAAA,OAAA,EACAlxC,KAAA0oF,UAAAv7E,KAAAu7E,MAAAA,MAAA,EACA1oF,KAAAia,MAAA9M,KAAA8M,EAAAA,EAAA,EAEAja,KAgDA,QAAAs5F,uBAAAzsD,UAEAkN,SAAAnzC,KAAA5G,MAEAA,KAAA6sC,SAAAA,SACA7sC,KAAAynC,OAAA,SAAA8xD,kBAcA,QAAAC,qBAAAxnD,OAAAjQ,KAAA03D,IAAArqD,WAEApvC,KAAAgyC,OAAAA,OAEAhyC,KAAA+hC,SAAA50B,KAAA40B,KAAAA,KAAA,CAEA,IAAA8E,WAAA15B,KAAAssF,IAAAA,IAAA,SAEAv6F,UAAAiO,KAAAiiC,UAAAA,UAAA,EAIAsqD,SAAA,EAEAC,YAAA35F,KAAAgyC,OAAAK,QAEAsnD,cAAAA,YAAA5mD,WAEA2mD,SAAA,EAAAC,YAAAn1D,MAAA5kC,OAEA+5F,aAAAA,YAAA9mD,mBAEA6mD,SAAAC,YAAAhyF,WAAA0pC,OAAA8H,MAMA,IAAA9G,UAAA,GAAA4L,gBAEA27C,UAAA,GAAAn8C,wBAAA,EAAAi8C,SAAA,EAAA,EAEArnD,UAAA2N,aAAA,WAAA45C,WAEAnc,aAAA72E,KAAA5G,KAAAqyC,SAAA,GAAAsgB,oBAAA9rB,MAAAA,MAAAuI,UAAAlwC,SAIAc,KAAA26C,kBAAA,EAEA36C,KAAA20C,SAyGA,QAAAklD,iBAAArjD,MAAA3P,OAEAkT,SAAAnzC,KAAA5G,MAEAA,KAAAw2C,MAAAA,MACAx2C,KAAAw2C,MAAAc,oBAEAt3C,KAAAk3C,OAAAV,MAAAzN,YACA/oC,KAAA26C,kBAAA,EAEA36C,KAAA6mC,MAAAA,KAYA,KAAA,GAVAwL,UAAA,GAAA4L,gBAEA27C,WACA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAAA,EAAA,GAGA91F,EAAA,EAAA8b,EAAA,EAAA9b,EAAA,GAAAA,IAAA8b,IAAA,CAEA,GAAA7J,IAAAjS,EAFA,GAEA8K,KAAAiyE,GAAA,EACA7qE,GAAA4J,EAHA,GAGAhR,KAAAiyE,GAAA,CAEA+Y,WAAA15F,KACA0O,KAAA45C,IAAAzyC,IAAAnH,KAAA6zE,IAAA1sE,IAAA,EACAnH,KAAA45C,IAAAxyC,IAAApH,KAAA6zE,IAAAzsE,IAAA,GAKAq8B,SAAA2N,aAAA,WAAA,GAAAvC,wBAAAm8C,UAAA,GAEA,IAAA/sD,UAAA,GAAA8lB,oBAAArmB,KAAA,GAEAtsC,MAAA85F,KAAA,GAAArc,cAAAprC,SAAAxF,UACA7sC,KAAAzC,IAAAyC,KAAA85F,MAEA95F,KAAA20C,SAuDA,QAAAolD,aAAA/nD,QAEA,GAAAgoD,YAEAhoD,SAAAA,OAAAioD,QAEAD,SAAA95F,KAAA8xC,OAIA,KAAA,GAAAluC,GAAA,EAAAA,EAAAkuC,OAAAoD,SAAAx1C,OAAAkE,IAEAk2F,SAAA95F,KAAAJ,MAAAk6F,SAAAD,YAAA/nD,OAAAoD,SAAAtxC,IAIA,OAAAk2F,UAIA,QAAAE,gBAAAloD,QAYA,IAAA,GAVA2f,OAAAooC,YAAA/nD,QAEAK,SAAA,GAAA4L,gBAEA1Z,YACAwX,UAEAo+C,OAAA,GAAAp2D,OAAA,EAAA,EAAA,GACAq2D,OAAA,GAAAr2D,OAAA,EAAA,EAAA,GAEAjgC,EAAA,EAAAA,EAAA6tD,MAAA/xD,OAAAkE,IAAA,CAEA,GAAAu2F,MAAA1oC,MAAA7tD,EAEAu2F,MAAAp7F,QAAAo7F,KAAAp7F,OAAAg7F,SAEA11D,SAAArkC,KAAA,EAAA,EAAA,GACAqkC,SAAArkC,KAAA,EAAA,EAAA,GACA67C,OAAA77C,KAAAi6F,OAAAv7D,EAAAu7D,OAAAn6D,EAAAm6D,OAAAtvF,GACAkxC,OAAA77C,KAAAk6F,OAAAx7D,EAAAw7D,OAAAp6D,EAAAo6D,OAAAvvF,IAMAwnC,SAAA2N,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACA8N,SAAA2N,aAAA,QAAA,GAAAvC,wBAAA1B,OAAA,GAEA,IAAAlP,UAAA,GAAA8lB,oBAAA5kB,aAAAusD,aAAAjtD,WAAA,EAAAC,YAAA,EAAAW,aAAA,GAEAwvC,cAAA72E,KAAA5G,KAAAqyC,SAAAxF,UAEA7sC,KAAA23F,KAAA3lD,OACAhyC,KAAA2xD,MAAAA,MAEA3xD,KAAAk3C,OAAAlF,OAAAjJ,YACA/oC,KAAA26C,kBAAA,EAEA36C,KAAA8sC,iBAsDA,QAAAytD,kBAAA/jD,MAAAgkD,WAAA3zD,OAEA7mC,KAAAw2C,MAAAA,MACAx2C,KAAAw2C,MAAAc,oBAEAt3C,KAAA6mC,MAAAA,KAEA,IAAAwL,UAAA,GAAA+yC,sBAAAoV,WAAA,EAAA,GACA3tD,SAAA,GAAA0T,oBAAAlR,WAAA,EAAA/C,KAAA,GAEAmV,MAAA76C,KAAA5G,KAAAqyC,SAAAxF,UAEA7sC,KAAAk3C,OAAAl3C,KAAAw2C,MAAAzN,YACA/oC,KAAA26C,kBAAA,EAEA36C,KAAA20C,SAwEA,QAAA8lD,qBAAAjkD,MAAA3P,OAEAkT,SAAAnzC,KAAA5G,MAEAA,KAAAw2C,MAAAA,MACAx2C,KAAAw2C,MAAAc,oBAEAt3C,KAAAk3C,OAAAV,MAAAzN,YACA/oC,KAAA26C,kBAAA,EAEA36C,KAAA6mC,MAAAA,KAEA,IAAAgG,UAAA,GAAA8lB,oBAAArmB,KAAA,IAEA+F,SAAA,GAAA4L,eAEA5L,UAAA2N,aAAA,WAAA,GAAAnD,iBAAA,GAAA/d,cAAA,IAAA,IAEA9+B,KAAA06F,KAAA,GAAAld,MAAAnrC,SAAAxF,UACA7sC,KAAAzC,IAAAyC,KAAA06F,MAGA16F,KAAA20C,SAoDA,QAAAgmD,uBAAAnkD,MAAAzU,KAAA8E,OAEAkT,SAAAnzC,KAAA5G,MAEAA,KAAAw2C,MAAAA,MACAx2C,KAAAw2C,MAAAc,oBAEAt3C,KAAAk3C,OAAAV,MAAAzN,YACA/oC,KAAA26C,kBAAA,EAEA36C,KAAA6mC,MAAAA,KAEA,IAAAwL,UAAA,GAAAgvC,0BAAAt/C,KACAsQ,UAAAuoD,QAAA,GAAAhsF,KAAAiyE,IAEA7gF,KAAA6sC,SAAA,GAAA0T,oBAAAlR,WAAA,EAAA/C,KAAA,QACAn/B,KAAAnN,KAAA6mC,QAAA7mC,KAAA6sC,SAAAkB,aAAAusD,aAEA,IAAAvvD,UAAAsH,SAAAwoD,aAAA,YACA9+C,OAAA,GAAAjd,cAAA,EAAAiM,SAAAoO,MAEA9G,UAAA2N,aAAA,QAAA,GAAAnD,iBAAAd,OAAA,IAEA/7C,KAAAzC,IAAA,GAAAkkD,MAAApP,SAAAryC,KAAA6sC,WAEA7sC,KAAA20C,SA0DA,QAAAmmD,YAAA/4D,KAAAg5D,UAAAZ,OAAAC,QAEAr4D,KAAAA,MAAA,GACAg5D,UAAAA,WAAA,GACAZ,OAAA,GAAAp2D,WAAA52B,KAAAgtF,OAAAA,OAAA,SACAC,OAAA,GAAAr2D,WAAA52B,KAAAitF,OAAAA,OAAA,QAQA,KAAA,GANAnpD,QAAA8pD,UAAA,EACAC,KAAAj5D,KAAAg5D,UACAE,SAAAl5D,KAAA,EAEAwC,YAAAwX,UAEAj4C,EAAA,EAAA8b,EAAA,EAAAzV,GAAA8wF,SAAAn3F,GAAAi3F,UAAAj3F,IAAAqG,GAAA6wF,KAAA,CAEAz2D,SAAArkC,MAAA+6F,SAAA,EAAA9wF,EAAA8wF,SAAA,EAAA9wF,GACAo6B,SAAArkC,KAAAiK,EAAA,GAAA8wF,SAAA9wF,EAAA,EAAA8wF,SAEA,IAAAp0D,OAAA/iC,IAAAmtC,OAAAkpD,OAAAC,MAEAvzD,OAAAtb,QAAAwwB,OAAAn8B,GAAAA,GAAA,EACAinB,MAAAtb,QAAAwwB,OAAAn8B,GAAAA,GAAA,EACAinB,MAAAtb,QAAAwwB,OAAAn8B,GAAAA,GAAA,EACAinB,MAAAtb,QAAAwwB,OAAAn8B,GAAAA,GAAA,EAIA,GAAAyyB,UAAA,GAAA4L,eACA5L,UAAA2N,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACA8N,SAAA2N,aAAA,QAAA,GAAAvC,wBAAA1B,OAAA,GAEA,IAAAlP,UAAA,GAAA8lB,oBAAA5kB,aAAAusD,cAEA7c,cAAA72E,KAAA5G,KAAAqyC,SAAAxF,UAaA,QAAAquD,iBAAAhqD,OAAAiqD,QAAAC,QAAAL,UAAAZ,OAAAC,QAEAlpD,OAAAA,QAAA,GACAiqD,QAAAA,SAAA,GACAC,QAAAA,SAAA,EACAL,UAAAA,WAAA,GACAZ,OAAA,GAAAp2D,WAAA52B,KAAAgtF,OAAAA,OAAA,SACAC,OAAA,GAAAr2D,WAAA52B,KAAAitF,OAAAA,OAAA,QAEA,IAGA5iF,GAAAolB,EACA0C,EAAAx7B,EAAA8b,EAAAgf,EAAAiI,MAJAtC,YACAwX;4CAOA,KAAAj4C,EAAA,EAAAA,GAAAq3F,QAAAr3F,IAEAw7B,EAAAx7B,EAAAq3F,SAAA,EAAAvsF,KAAAiyE,IAEArpE,EAAA5I,KAAA6zE,IAAAnjD,GAAA4R,OACAtU,EAAAhuB,KAAA45C,IAAAlpB,GAAA4R,OAEA3M,SAAArkC,KAAA,EAAA,EAAA,GACAqkC,SAAArkC,KAAAsX,EAAA,EAAAolB,GAEAiK,MAAA,EAAA/iC,EAAAq2F,OAAAC,OAEAr+C,OAAA77C,KAAA2mC,MAAAjI,EAAAiI,MAAA7G,EAAA6G,MAAAh8B,GACAkxC,OAAA77C,KAAA2mC,MAAAjI,EAAAiI,MAAA7G,EAAA6G,MAAAh8B,EAMA,KAAA/G,EAAA,EAAAA,GAAAs3F,QAAAt3F,IAMA,IAJA+iC,MAAA,EAAA/iC,EAAAq2F,OAAAC,OAEAx7D,EAAAsS,OAAAA,OAAAkqD,QAAAt3F,EAEA8b,EAAA,EAAAA,EAAAm7E,UAAAn7E,IAIA0f,EAAA1f,EAAAm7E,WAAA,EAAAnsF,KAAAiyE,IAEArpE,EAAA5I,KAAA6zE,IAAAnjD,GAAAV,EACAhC,EAAAhuB,KAAA45C,IAAAlpB,GAAAV,EAEA2F,SAAArkC,KAAAsX,EAAA,EAAAolB,GACAmf,OAAA77C,KAAA2mC,MAAAjI,EAAAiI,MAAA7G,EAAA6G,MAAAh8B,GAIAy0B,GAAA1f,EAAA,GAAAm7E,WAAA,EAAAnsF,KAAAiyE,IAEArpE,EAAA5I,KAAA6zE,IAAAnjD,GAAAV,EACAhC,EAAAhuB,KAAA45C,IAAAlpB,GAAAV,EAEA2F,SAAArkC,KAAAsX,EAAA,EAAAolB,GACAmf,OAAA77C,KAAA2mC,MAAAjI,EAAAiI,MAAA7G,EAAA6G,MAAAh8B,EAMA,IAAAwnC,UAAA,GAAA4L,eACA5L,UAAA2N,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACA8N,SAAA2N,aAAA,QAAA,GAAAvC,wBAAA1B,OAAA,GAEA,IAAAlP,UAAA,GAAA8lB,oBAAA5kB,aAAAusD,cAEA7c,cAAA72E,KAAA5G,KAAAqyC,SAAAxF,UAYA,QAAAwuD,mBAAArpD,OAAAjQ,KAAA03D,IAAArqD,WAIApvC,KAAAgyC,OAAAA,OAEAhyC,KAAA+hC,SAAA50B,KAAA40B,KAAAA,KAAA,CAEA,IAAA8E,WAAA15B,KAAAssF,IAAAA,IAAA,SAEAv6F,UAAAiO,KAAAiiC,UAAAA,UAAA,EAIAsqD,SAAA,EAEAC,YAAA35F,KAAAgyC,OAAAK,QAEAsnD,cAAAA,YAAA5mD,WAEA2mD,SAAAC,YAAAn1D,MAAA5kC,OAIAmQ,QAAAH,KAAA,qGAMA,IAAAyiC,UAAA,GAAA4L,gBAEA27C,UAAA,GAAAn8C,wBAAA,EAAAi8C,SAAA,EAAA,EAEArnD,UAAA2N,aAAA,WAAA45C,WAEAnc,aAAA72E,KAAA5G,KAAAqyC,SAAA,GAAAsgB,oBAAA9rB,MAAAA,MAAAuI,UAAAlwC,SAIAc,KAAA26C,kBAAA,EACA36C,KAAA20C,SAqEA,QAAA2mD,wBAAA9kD,MAAAzU,KAAA8E,OAEAkT,SAAAnzC,KAAA5G,MAEAA,KAAAw2C,MAAAA,MACAx2C,KAAAw2C,MAAAc,oBAEAt3C,KAAAk3C,OAAAV,MAAAzN,YACA/oC,KAAA26C,kBAAA,EAEA36C,KAAA6mC,MAAAA,UAEA15B,KAAA40B,OAAAA,KAAA,EAEA,IAAAsQ,UAAA,GAAA4L,eACA5L,UAAA2N,aAAA,WAAA,GAAAvC,0BACA1b,KAAAA,KAAA,EACAA,KAAAA,KAAA,EACAA,MAAAA,KAAA,GACAA,MAAAA,KAAA,GACAA,KAAAA,KAAA,GACA,GAEA,IAAA8K,UAAA,GAAA8lB,oBAAArmB,KAAA,GAEAtsC,MAAAu7F,WAAA,GAAA/d,MAAAnrC,SAAAxF,UACA7sC,KAAAzC,IAAAyC,KAAAu7F,YAEAlpD,SAAA,GAAA4L,gBACA5L,SAAA2N,aAAA,WAAA,GAAAvC,yBAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAEAz9C,KAAAw7F,WAAA,GAAAhe,MAAAnrC,SAAAxF,UACA7sC,KAAAzC,IAAAyC,KAAAw7F,YAEAx7F,KAAA20C,SA2DA,QAAA8mD,cAAA7zD,QAiEA,QAAA8zD,SAAA9wF,EAAAC,EAAAg8B,OAEA80D,SAAA/wF,EAAAi8B,OACA80D,SAAA9wF,EAAAg8B,OAIA,QAAA80D,UAAAl5D,GAAAoE,OAEAtC,SAAArkC,KAAA,EAAA,EAAA,GACA67C,OAAA77C,KAAA2mC,MAAAjI,EAAAiI,MAAA7G,EAAA6G,MAAAh8B,OAEAsC,KAAAyuF,SAAAn5D,MAEAm5D,SAAAn5D,QAIAm5D,SAAAn5D,IAAAviC,KAAAqkC,SAAA3kC,OAAA,EAAA,GAjFA,GAAAyyC,UAAA,GAAA4L,gBACApR,SAAA,GAAA8lB,oBAAA9rB,MAAA,SAAAkH,aAAA8tD,aAEAt3D,YACAwX,UAEA6/C,YAIAE,aAAA,GAAA/3D,OAAA,UACAg4D,UAAA,GAAAh4D,OAAA,UACAi4D,QAAA,GAAAj4D,OAAA,OACAk4D,YAAA,GAAAl4D,OAAA,UACAm4D,WAAA,GAAAn4D,OAAA,QAIA23D,SAAA,KAAA,KAAAI,cACAJ,QAAA,KAAA,KAAAI,cACAJ,QAAA,KAAA,KAAAI,cACAJ,QAAA,KAAA,KAAAI,cAIAJ,QAAA,KAAA,KAAAI,cACAJ,QAAA,KAAA,KAAAI,cACAJ,QAAA,KAAA,KAAAI,cACAJ,QAAA,KAAA,KAAAI,cAIAJ,QAAA,KAAA,KAAAI,cACAJ,QAAA,KAAA,KAAAI,cACAJ,QAAA,KAAA,KAAAI,cACAJ,QAAA,KAAA,KAAAI,cAIAJ,QAAA,IAAA,KAAAK,WACAL,QAAA,IAAA,KAAAK,WACAL,QAAA,IAAA,KAAAK,WACAL,QAAA,IAAA,KAAAK,WAIAL,QAAA,KAAA,KAAAM,SACAN,QAAA,KAAA,KAAAM,SACAN,QAAA,KAAA,KAAAM,SAIAN,QAAA,IAAA,IAAAO,aACAP,QAAA,IAAA,IAAAQ,YAIAR,QAAA,MAAA,MAAAQ,YACAR,QAAA,MAAA,MAAAQ,YAEAR,QAAA,MAAA,MAAAQ,YACAR,QAAA,MAAA,MAAAQ,YAwBA7pD,SAAA2N,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACA8N,SAAA2N,aAAA,QAAA,GAAAvC,wBAAA1B,OAAA,IAEA0hC,aAAA72E,KAAA5G,KAAAqyC,SAAAxF,UAEA7sC,KAAA4nC,OAAAA,OACA5nC,KAAA4nC,OAAAkP,wBAAA92C,KAAA4nC,OAAAkP,yBAEA92C,KAAAk3C,OAAAtP,OAAAmB,YACA/oC,KAAA26C,kBAAA,EAEA36C,KAAA47F,SAAAA,SAEA57F,KAAA20C,SA8FA,QAAAwnD,WAAAnqD,OAAAnL,OAEA7mC,KAAAgyC,OAAAA,WAEA7kC,KAAA05B,QAAAA,MAAA,SAEA,IAAA+W,SAAA,GAAAnZ,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IACAm1D,UAAA,GAAA96D,cAAA,IAEAuT,SAAA,GAAA4L,eACA5L,UAAA0N,SAAA,GAAAlD,iBAAAe,QAAA,IACAvL,SAAA2N,aAAA,WAAA,GAAAnD,iBAAA+8C,UAAA,IAEAnc,aAAA72E,KAAA5G,KAAAqyC,SAAA,GAAAsgB,oBAAA9rB,MAAAA,SAEA7mC,KAAA26C,kBAAA,EAEA36C,KAAA20C,SA+EA,QAAAynD,YAAAC,IAAA5C,KAEAz5F,KAAAo7B,KAAA,aAEAp7B,KAAAq8F,IAAAA,GAEA,IAAAx1D,WAAA15B,KAAAssF,IAAAA,IAAA,SAEA77C,QAAA,GAAAnZ,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEAm1D,WAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAEAvnD,SAAA,GAAA4L,eAEA5L,UAAA0N,SAAA,GAAAlD,iBAAAe,QAAA,IAEAvL,SAAA2N,aAAA,WAAA,GAAAvC,wBAAAm8C,UAAA,IAEAnc,aAAA72E,KAAA5G,KAAAqyC,SAAA,GAAAsgB,oBAAA9rB,MAAAA,SAEA7mC,KAAAqyC,SAAAiqD,wBAEAt8F,KAAA8sC,iBAyBA,QAAAyvD,aAAAt0B,MAAAlmC,KAAA03D,KAEAz5F,KAAAo7B,KAAA,cAEAp7B,KAAAioE,MAAAA,MAEAjoE,KAAA+hC,SAAA50B,KAAA40B,KAAA,EAAAA,IAEA,IAAA8E,WAAA15B,KAAAssF,IAAAA,IAAA,SAEAG,WAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEAvnD,SAAA,GAAA4L,eACA5L,UAAA2N,aAAA,WAAA,GAAAvC,wBAAAm8C,UAAA,IACAvnD,SAAAiqD,wBAEA9e,KAAA52E,KAAA5G,KAAAqyC,SAAA,GAAAsgB,oBAAA9rB,MAAAA,QAIA,IAAA21D,aAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAEA9U,UAAA,GAAAzpC,eACAypC,WAAA1nC,aAAA,WAAA,GAAAvC,wBAAA++C,WAAA,IACA9U,UAAA4U,wBAEAt8F,KAAAzC,IAAA,GAAAkkD,MAAAimC,UAAA,GAAAnnC,oBAAA1Z,MAAAA,MAAAD,QAAA,GAAAqH,aAAA,EAAAX,YAAA,MAIAttC,KAAA8sC,iBAwCA,QAAA2vD,aAAAC,IAAAr7C,OAAAzhD,OAAAinC,MAAA81D,WAAAC,WAIA7iD,SAAAnzC,KAAA5G,UAEAmN,KAAA05B,QAAAA,MAAA,cACA15B,KAAAvN,SAAAA,OAAA,OACAuN,KAAAwvF,aAAAA,WAAA,GAAA/8F,YACAuN,KAAAyvF,YAAAA,UAAA,GAAAD,gBAEAxvF,KAAA0vF,eAEAA,aAAA,GAAA5+C,gBACA4+C,aAAA78C,aAAA,WAAA,GAAAvC,yBAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAEAq/C,aAAA,GAAAxU,wBAAA,EAAA,GAAA,EAAA,EAAA,GACAwU,aAAAC,UAAA,GAAA,GAAA,IAIA/8F,KAAA+qC,SAAA5B,KAAAkY,QAEArhD,KAAA06F,KAAA,GAAAld,MAAAqf,aAAA,GAAAlqC,oBAAA9rB,MAAAA,SACA7mC,KAAA06F,KAAA//C,kBAAA,EACA36C,KAAAzC,IAAAyC,KAAA06F,MAEA16F,KAAA85F,KAAA,GAAAr4C,MAAAq7C,aAAA,GAAAv8C,oBAAA1Z,MAAAA,SACA7mC,KAAA85F,KAAAn/C,kBAAA,EACA36C,KAAAzC,IAAAyC,KAAA85F,MAEA95F,KAAAg9F,aAAAN,KACA18F,KAAAi9F,UAAAr9F,OAAA+8F,WAAAC,WAgEA,QAAAM,YAAAn7D,MAEAA,KAAAA,MAAA,CAEA,IAAAwC,WACA,EAAA,EAAA,EAAAxC,KAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAAA,KAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAAA,MAGAga,QACA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,GAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGA1J,SAAA,GAAA4L,eACA5L,UAAA2N,aAAA,WAAA,GAAAvC,wBAAAlZ,SAAA,IACA8N,SAAA2N,aAAA,QAAA,GAAAvC,wBAAA1B,OAAA,GAEA,IAAAlP,UAAA,GAAA8lB,oBAAA5kB,aAAAusD,cAEA7c,cAAA72E,KAAA5G,KAAAqyC,SAAAxF,UA6BA,QAAAswD,aAYA,QAAA30F,MAAAw3E,GAAAC,GAAAmd,GAAAC,IAEAC,GAAAtd,GACAud,GAAAH,GACAI,IAAA,EAAAxd,GAAA,EAAAC,GAAA,EAAAmd,GAAAC,GACAI,GAAA,EAAAzd,GAAA,EAAAC,GAAAmd,GAAAC,GAfA,GAAAC,IAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,CAmBA,QAEAC,eAAA,SAAA1d,GAAAC,GAAAC,GAAAyd,GAAAC,SAEAp1F,KAAAy3E,GAAAC,GAAA0d,SAAA1d,GAAAF,IAAA4d,SAAAD,GAAA1d,MAIA4d,yBAAA,SAAA7d,GAAAC,GAAAC,GAAAyd,GAAAG,IAAAC,IAAAC,KAGA,GAAAX,KAAApd,GAAAD,IAAA8d,KAAA5d,GAAAF,KAAA8d,IAAAC,MAAA7d,GAAAD,IAAA8d,IACArP,IAAAxO,GAAAD,IAAA8d,KAAAJ,GAAA1d,KAAA8d,IAAAC,MAAAL,GAAAzd,IAAA8d,GAGAX,KAAAU,IACArP,IAAAqP,IAEAv1F,KAAAy3E,GAAAC,GAAAmd,GAAA3O,KAIAuP,KAAA,SAAA/pE,GAEA,GAAAw6D,IAAAx6D,EAAAA,CAEA,OAAAopE,IAAAC,GAAArpE,EAAAspE,GAAA9O,GAAA+O,IADA/O,GAAAx6D,KAgBA,QAAAgqE,kBAAA/4C,QAEAiqC,MAAAxoF,KAAA5G,MAEAmlD,OAAAvlD,OAAA,GAAAmQ,QAAAH,KAAA,oEAEA5P,KAAAmlD,OAAAA,WACAnlD,KAAA6hF,QAAA,EAsFA,QAAAsc,mBAAA3P,GAAAC,GAAAc,GAAAe,IAEAlB,MAAAxoF,KAAA5G,MAEAA,KAAAwuF,GAAAA,GACAxuF,KAAAyuF,GAAAA,GACAzuF,KAAAuvF,GAAAA,GACAvvF,KAAAswF,GAAAA,GAmBA,QAAA8N,uBAAA5P,GAAAC,GAAAc,IAEAH,MAAAxoF,KAAA5G,MAEAA,KAAAwuF,GAAAA,GACAxuF,KAAAyuF,GAAAA,GACAzuF,KAAAuvF,GAAAA,GAmBA,QAAA8O,YAAA5P,GAAAc,IAEAH,MAAAxoF,KAAA5G,MAEAA,KAAAyuF,GAAAA,GACAzuF,KAAAuvF,GAAAA,GAyBA,QAAA+O,UAAA1O,GAAAC,GAAA0O,QAAAvO,YAAAC,UAAAC,YAEAP,aAAA/oF,KAAA5G,KAAA4vF,GAAAC,GAAA0O,QAAAA,QAAAvO,YAAAC,UAAAC,YAkDA,QAAAsO,OAAA5zF,EAAAC,EAAAkX,EAAA7H,EAAAm3B,OAAAxK,MAAAmO,eAGA,MADAjlC,SAAAH,KAAA,wEACA,GAAA6rC,OAAA7wC,EAAAC,EAAAkX,EAAAsvB,OAAAxK,MAAAmO,eAQA,QAAAypD,kBAAAC,WAGA,MADA3uF,SAAAH,KAAA,kEACA8uF,UAIA,QAAAC,eAAAD,WAYA,WAVAvxF,KAAAuxF,YAAAA,cAEA3uF,QAAAH,KAAA,+DACA8uF,UAAAE,iBAAA,EACAF,UAAAA,UAAAA,UACAA,UAAA30E,MAAA,WAEA,MAAA20E,WAAAruF,SAGAquF,UAIA,QAAAjG,YAAApmD,SAAAxF,UAGA,MADA98B,SAAAH,KAAA,sDACA,GAAA+tE,QAAAtrC,SAAAxF,UAIA,QAAAgyD,UAAAhyD,UAGA,MADA98B,SAAAH,KAAA,oDACA,GAAA4sE,QAAA3vC,UAIA,QAAAiyD,gBAAAzsD,SAAAxF,UAGA,MADA98B,SAAAH,KAAA,0DACA,GAAA+tE,QAAAtrC,SAAAxF,UAIA,QAAAkyD,oBAAA7vD,YAGA,MADAn/B,SAAAH,KAAA,sEACA,GAAAijD,gBAAA3jB,YAIA,QAAA8vD,uBAAA9vD,YAGA,MADAn/B,SAAAH,KAAA,yEACA,GAAAijD,gBAAA3jB,YAIA,QAAA+vD,wBAAA/vD,YAGA,MADAn/B,SAAAH,KAAA,0EACA,GAAAijD,gBAAA3jB,YAIA,QAAAgwD,QAAA1nF,EAAAyC,EAAA2iB,GAGA,MADA7sB,SAAAH,KAAA,6DACA,GAAAkuB,SAAAtmB,EAAAyC,EAAA2iB,GAMA,QAAAuiE,wBAAAtqF,MAAAioC,UAGA,MADA/sC,SAAAH,KAAA,8GACA,GAAAitC,iBAAAhoC,MAAAioC,UAAAsiD,YAAA,GAIA,QAAAC,eAAAxqF,MAAAioC,UAGA,MADA/sC,SAAAH,KAAA,sFACA,GAAAqtC,qBAAApoC,MAAAioC,UAIA,QAAAwiD,gBAAAzqF,MAAAioC,UAGA,MADA/sC,SAAAH,KAAA,wFACA,GAAAstC,sBAAAroC,MAAAioC,UAIA,QAAAyiD,uBAAA1qF,MAAAioC,UAGA,MADA/sC,SAAAH,KAAA,sGACA,GAAAutC,6BAAAtoC,MAAAioC,UAIA,QAAA0iD,gBAAA3qF,MAAAioC,UAGA,MADA/sC,SAAAH,KAAA,wFACA,GAAAytC,sBAAAxoC,MAAAioC,UAIA,QAAA2iD,iBAAA5qF,MAAAioC,UAGA,MADA/sC,SAAAH,KAAA,0FACA,GAAA0tC,uBAAAzoC,MAAAioC,UAIA,QAAA4iD,gBAAA7qF,MAAAioC,UAGA,MADA/sC,SAAAH,KAAA,wFACA,GAAA2tC,sBAAA1oC,MAAAioC,UAIA,QAAA6iD,iBAAA9qF,MAAAioC,UAGA,MADA/sC,SAAAH,KAAA,0FACA,GAAA4tC,uBAAA3oC,MAAAioC,UAIA,QAAA8iD,kBAAA/qF,MAAAioC,UAGA,MADA/sC,SAAAH,KAAA,4FACA,GAAA6tC,wBAAA5oC,MAAAioC,UAIA,QAAA+iD,kBAAAhrF,MAAAioC,UAGA,MADA/sC,SAAAH,KAAA,4FACA,GAAA8tC,wBAAA7oC,MAAAioC,UAoBA,QAAAgjD,oBAAA36C,QAEAp1C,QAAAH,KAAA,qFAEAsuF,iBAAAt3F,KAAA5G,KAAAmlD,QACAnlD,KAAAo7B,KAAA,aACAp7B,KAAA6hF,QAAA,EAQA,QAAAke,cAAA56C,QAEAp1C,QAAAH,KAAA,+EAEAsuF,iBAAAt3F,KAAA5G,KAAAmlD,QACAnlD,KAAAo7B,KAAA,aAQA,QAAA4kE,QAAA76C,QAEAp1C,QAAAH,KAAA,sEAEAsuF,iBAAAt3F,KAAA5G,KAAAmlD,QACAnlD,KAAAo7B,KAAA,aA2BA,QAAA6kE,mBAAAjuD,OAAAnL,OAGA,MADA92B,SAAAH,KAAA,oFACA,GAAAusF,WAAAnqD,OAAAnL,OAIA,QAAAq5D,aAAAluD,OAAAynD,KAGA,MADA1pF,SAAAH,KAAA,wEACA,GAAA6tE,cAAA,GAAA+J,eAAAx1C,OAAAK,UAAA,GAAAsgB,oBAAA9rB,UAAA15B,KAAAssF,IAAAA,IAAA,YAgBA,QAAA0G,iBAAAnuD,OAAAynD,KAGA,MADA1pF,SAAAH,KAAA,gFACA,GAAA6tE,cAAA,GAAAS,mBAAAlsC,OAAAK,UAAA,GAAAsgB,oBAAA9rB,UAAA15B,KAAAssF,IAAAA,IAAA,YAMA,QAAA2G,WAAAhW,SAGA,MADAr6E,SAAAH,KAAA,yDACA,GAAAu6E,YAAAC,SAIA,QAAAiW,qBAAAjW,SAGA,MADAr6E,SAAAH,KAAA,0EACA,GAAA46E,mBAAAJ,SAkpCA,QAAAkW,aAEAvwF,QAAAiuB,MAAA,0EAEAh+B,KAAAugG,cAAA,SAAA5gD,OAAA/X,QAEA73B,QAAAH,KAAA,8DACA+vC,OAAA6gD,QAAA54D,SAIA5nC,KAAAygG,gBAAA,SAAA9gD,OAAA/X,QAEA73B,QAAAH,KAAA,kEACA+vC,OAAA+gD,UAAA94D,SAIA5nC,KAAA2gG,WAAA,WAEA5wF,QAAAiuB,MAAA,qEAQA,QAAA4iE,kBAEA7wF,QAAAiuB,MAAA,mFAEAh+B,KAAAy3E,WAAAl8E,SAAAkwC,gBAAA,+BAAA,UACAzrC,KAAAy3C,MAAA,aACAz3C,KAAAynC,OAAA,aACAznC,KAAAsjD,cAAA,aACAtjD,KAAAu4E,QAAA,iBAh01CAprE,KAAA0zF,OAAAC,UAEAD,OAAAC,QAAAlyF,KAAAqF,IAAA,GAAA,SAIA9G,KAAA0zF,OAAAE,YAKAF,OAAAE,UAAA,SAAA7xF,OAEA,MAAA,gBAAAA,QAAAC,SAAAD,QAAAN,KAAAE,MAAAI,SAAAA,YAQA/B,KAAAyB,KAAA0a,OAIA1a,KAAA0a,KAAA,SAAA9R,GAEA,MAAAA,GAAA,GAAA,EAAAA,EAAA,EAAA,GAAAA,QAMArK,KAAAyD,SAAApU,UAAAoB,MAKAiM,OAAA0xB,eAAA3qB,SAAApU,UAAA,QAEAwa,IAAA,WAEA,MAAAhX,MAAA8J,WAAA6K,MAAA,6BAAA,UAQAxH,KAAAtD,OAAAm3F,QAKA,WAEAn3F,OAAAm3F,OAAA,SAAAh+F,QAIA,OAAAmK,KAAAnK,QAAA,OAAAA,OAEA,KAAA,IAAAg6C,WAAA,6CAMA,KAAA,GAFAxrC,QAAA3H,OAAA7G,QAEA+tB,MAAA,EAAAA,MAAA9wB,UAAAL,OAAAmxB,QAAA,CAEA,GAAAtrB,QAAAxF,UAAA8wB,MAEA,QAAA5jB,KAAA1H,QAAA,OAAAA,OAEA,IAAA,GAAAw7F,WAAAx7F,QAEAoE,OAAArN,UAAA4N,eAAAxD,KAAAnB,OAAAw7F,WAEAzvF,OAAAyvF,SAAAx7F,OAAAw7F,UAUA,MAAAzvF,YAcA3H,OAAAm3F,OAAArmE,gBAAAn+B,WAEAT,iBAAA,SAAAq/B,KAAA+2D,cAEAhlF,KAAAnN,KAAAkhG,aAAAlhG,KAAAkhG,cAEA,IAAAC,WAAAnhG,KAAAkhG,eAEA/zF,KAAAg0F,UAAA/lE,QAEA+lE,UAAA/lE,WAIA,IAAA+lE,UAAA/lE,MAAA1iB,QAAAy5E,WAEAgP,UAAA/lE,MAAAl7B,KAAAiyF,WAMAiP,iBAAA,SAAAhmE,KAAA+2D,UAEA,OAAAhlF,KAAAnN,KAAAkhG,WAAA,OAAA,CAEA,IAAAC,WAAAnhG,KAAAkhG,UAEA,YAAA/zF,KAAAg0F,UAAA/lE,QAAA,IAAA+lE,UAAA/lE,MAAA1iB,QAAAy5E,WAIApsC,oBAAA,SAAA3qB,KAAA+2D,UAEA,OAAAhlF,KAAAnN,KAAAkhG,WAAA,CAEA,GAAAC,WAAAnhG,KAAAkhG,WACAG,cAAAF,UAAA/lE,KAEA,QAAAjuB,KAAAk0F,cAAA,CAEA,GAAAtwE,OAAAswE,cAAA3oF,QAAAy5E,WAEA,IAAAphE,OAEAswE,cAAAC,OAAAvwE,MAAA,MAQA5yB,cAAA,SAAAH,OAEA,OAAAmP,KAAAnN,KAAAkhG,WAAA,CAEA,GAAAC,WAAAnhG,KAAAkhG,WACAG,cAAAF,UAAAnjG,MAAAo9B,KAEA,QAAAjuB,KAAAk0F,cAAA,CAEArjG,MAAAgF,OAAAhD,IAIA,KAAA,GAFA6U,OAAAwsF,cAAAhxF,MAAA,GAEAvM,EAAA,EAAA4f,EAAA7O,MAAAjV,OAAAkE,EAAA4f,EAAA5f,IAEA+Q,MAAA/Q,GAAA8C,KAAA5G,KAAAhC,WAUA,IAAA+4E,UAAA,KACAwqB,OAAAC,KAAA,EAAAC,OAAA,EAAAC,MAAA,GACAzgC,aAAA,EACAE,aAAA,EACAE,cAAA,EAEAma,qBAAA,EAGAvlC,aAAA,EACAsX,iBAAA,EACA1f,UAAA,EACAkG,SAAA,EACAF,WAAA,EAGA7F,SAAA,EACA6tD,WAAA,EACAvB,aAAA,EACAt7B,WAAA,EACArxB,eAAA,EACAyxB,iBAAA,EACAO,oBAAA,EACAI,iBAAA,EACAd,eAAA,EACA7wB,YAAA,IACAi8B,iBAAA,IACAE,wBAAA,IACAkC,YAAA,IACAC,YAAA,IACAjC,WAAA,IACAC,UAAA,IACAC,eAAA,IACAC,uBAAA,IACA18B,eAAA,IACAC,uBAAA,IACA08B,eAAA,IACAE,uBAAA,IACAE,eAAA,IACAE,uBAAA,IACAE,uBAAA,IACAtP,WAAA,EACAE,YAAA,EACAE,UAAA,EACA7tB,eAAA,EACAguB,WAAA,EACAE,kBAAA,EACAE,aAAA,EACAE,cAAA,EACA7b,kBAAA,EACAkN,aAAA,EACAC,aAAA,EACAwB,cAAA,EACAtE,kBAAA,EACAC,oBAAA,EACAC,sBAAA,EACAC,kBAAA,EAEAltB,sBAAA,IACAsvB,sBAAA,IACAG,iCAAA,IACAC,iCAAA,IACAC,2BAAA,IACAJ,wBAAA,IACAC,wBAAA,IACA+a,eAAA,IACA7sC,oBAAA,KACA+sC,uBAAA,KACA5qC,cAAA,KACAk3B,2BAAA,KACAC,0BAAA,KACAr5B,aAAA,KACAktC,0BAAA,KACAjtC,yBAAA,KACAE,iBAAA,KACAwtC,SAAA,KACAC,UAAA,KACA9Q,kBAAA,KACA+Q,QAAA,KACA9Q,gBAAA,KACAhB,UAAA,KACAC,cAAA,KACAqR,sBAAA,KACAE,sBAAA,KACAE,qBAAA,KACAvQ,mBAAA,KACA6Q,YAAA,KACAvS,UAAA,KACAt7B,WAAA,KACA+tC,gBAAA,KACAE,qBAAA,KACAw3B,WAAAzlE,WACA28B,YAAA,KACAG,mBAAA,KACAuS,qBAAA,KACAC,sBAAA,KACAC,sBAAA,KACAC,sBAAA,KACAK,wBAAA,KACAC,wBAAA,KACAC,yBAAA,KACAC,yBAAA,KACAK,gBAAA,KAEAuqB,WAAA,KAKAZ,oBAAA,KAGAt0C,kBAAA,EACA44B,sBAAA,EACAE,oBAAA,EACAj+C,eAAA,IACA8tB,aAAA,KACAK,cAAA,KACAJ,aAAA,KAEAC,cAAA,KACAC,eAAA,KACAC,aAAA,KACAra,kBAAA,KACAuF,iBAAA,KAOAna,OAEAksD,QAAAh5E,KAAAiyE,GAAA,IACA+gB,QAAA,IAAAhzF,KAAAiyE,GAEAllD,aAAA,WAIA,GAEAiD,GAFAijE,MAAA,iEAAA/hF,MAAA,IACA2b,KAAA,GAAAl/B,OAAA,IACAulG,IAAA,CAEA,OAAA,YAEA,IAAA,GAAAh+F,GAAA,EAAAA,EAAA,GAAAA,IAEA,IAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,EAEA23B,KAAA33B,GAAA,IAEA,KAAAA,EAEA23B,KAAA33B,GAAA,KAIAg+F,KAAA,IAAAA,IAAA,SAAA,SAAAlzF,KAAA8yC,SAAA,GACA9iB,EAAA,GAAAkjE,IACAA,MAAA,EACArmE,KAAA33B,GAAA+9F,MAAA,KAAA/9F,EAAA,EAAA86B,EAAA,EAAAA,GAMA,OAAAnD,MAAAnrB,KAAA,QAMA81E,MAAA,SAAAl3E,MAAAM,IAAA0E,KAEA,MAAAtF,MAAAsF,IAAA1E,IAAAZ,KAAAY,IAAA0E,IAAAhF,SAOA6yF,gBAAA,SAAAxqF,EAAAjL,GAEA,OAAAiL,EAAAjL,EAAAA,GAAAA,GAMA01F,UAAA,SAAAxqF,EAAAyqF,GAAAC,GAAAC,GAAAC,IAEA,MAAAD,KAAA3qF,EAAAyqF,KAAAG,GAAAD,KAAAD,GAAAD,KAMAviB,KAAA,SAAAloE,EAAAyC,EAAAia,GAEA,OAAA,EAAAA,GAAA1c,EAAA0c,EAAAja,GAMAooF,WAAA,SAAA7qF,EAAAhI,IAAA0E,KAEA,MAAAsD,IAAAhI,IAAA,EACAgI,GAAAtD,IAAA,GAEAsD,GAAAA,EAAAhI,MAAA0E,IAAA1E,MAEAgI,GAAA,EAAA,EAAAA,IAIA8qF,aAAA,SAAA9qF,EAAAhI,IAAA0E,KAEA,MAAAsD,IAAAhI,IAAA,EACAgI,GAAAtD,IAAA,GAEAsD,GAAAA,EAAAhI,MAAA0E,IAAA1E,MAEAgI,EAAAA,GAAAA,GAAA,EAAAA,EAAA,IAAA,KAMA+qF,QAAA,SAAAC,IAAAC,MAEA,MAAAD,KAAA5zF,KAAAE,MAAAF,KAAA8yC,UAAA+gD,KAAAD,IAAA,KAMAE,UAAA,SAAAF,IAAAC,MAEA,MAAAD,KAAA5zF,KAAA8yC,UAAA+gD,KAAAD,MAMAG,gBAAA,SAAAC,OAEA,MAAAA,QAAA,GAAAh0F,KAAA8yC,WAIAmhD,SAAA,SAAAC,SAEA,MAAAA,SAAApnE,MAAAksD,SAIAmb,SAAA,SAAAC,SAEA,MAAAA,SAAAtnE,MAAAkmE,SAIAjtC,aAAA,SAAAzlD,OAEA,MAAA,KAAAA,MAAAA,MAAA,IAAA,IAAAA,OAIA6lD,kBAAA,SAAA7lD,OAEA,MAAAN,MAAAqF,IAAA,EAAArF,KAAAsa,MAAAta,KAAAmiD,IAAA7hD,OAAAN,KAAAqkE,OAIAU,eAAA,SAAAzkE,OAUA,MARAA,SACAA,OAAAA,OAAA,EACAA,OAAAA,OAAA,EACAA,OAAAA,OAAA,EACAA,OAAAA,OAAA,EACAA,OAAAA,OAAA,KACAA,OAsBArF,QAAA2wC,iBAAA5f,QAAAp+B,WAEA0C,OAEA8X,IAAA,WAEA,MAAAhX,MAAAwX,GAIA3G,IAAA,SAAA3B,OAEAlP,KAAAwX,EAAAtI,QAMA4tB,QAEA9lB,IAAA,WAEA,MAAAhX,MAAAia,GAIApJ,IAAA,SAAA3B,OAEAlP,KAAAia,EAAA/K,UAQArF,OAAAm3F,OAAApmE,QAAAp+B,WAEAymG,WAAA,EAEApyF,IAAA,SAAA2G,EAAAyC,GAKA,MAHAja,MAAAwX,EAAAA,EACAxX,KAAAia,EAAAA,EAEAja,MAIAkjG,UAAA,SAAAC,QAKA,MAHAnjG,MAAAwX,EAAA2rF,OACAnjG,KAAAia,EAAAkpF,OAEAnjG,MAIAojG,KAAA,SAAA5rF,GAIA,MAFAxX,MAAAwX,EAAAA,EAEAxX,MAIAqjG,KAAA,SAAAppF,GAIA,MAFAja,MAAAia,EAAAA,EAEAja,MAIAsjG,aAAA,SAAAvyE,MAAA7hB,OAEA,OAAA6hB,OAEA,IAAA,GAAA/wB,KAAAwX,EAAAtI,KAAA,MACA,KAAA,GAAAlP,KAAAia,EAAA/K,KAAA,MACA,SAAA,KAAA,IAAAqB,OAAA,0BAAAwgB,OAIA,MAAA/wB,OAIAujG,aAAA,SAAAxyE,OAEA,OAAAA,OAEA,IAAA,GAAA,MAAA/wB,MAAAwX,CACA,KAAA,GAAA,MAAAxX,MAAAia,CACA,SAAA,KAAA,IAAA1J,OAAA,0BAAAwgB,SAMAhH,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAAwX,EAAAxX,KAAAia,IAIAkvB,KAAA,SAAA7J,GAKA,MAHAt/B,MAAAwX,EAAA8nB,EAAA9nB,EACAxX,KAAAia,EAAAqlB,EAAArlB,EAEAja,MAIAzC,IAAA,SAAA+hC,EAAAvc,GAEA,WAAA5V,KAAA4V,GAEAhT,QAAAH,KAAA,yFACA5P,KAAA0jF,WAAApkD,EAAAvc,KAIA/iB,KAAAwX,GAAA8nB,EAAA9nB,EACAxX,KAAAia,GAAAqlB,EAAArlB,EAEAja,OAIAwjG,UAAA,SAAA5tF,GAKA,MAHA5V,MAAAwX,GAAA5B,EACA5V,KAAAia,GAAArE,EAEA5V,MAIA0jF,WAAA,SAAA94E,EAAAC,GAKA,MAHA7K,MAAAwX,EAAA5M,EAAA4M,EAAA3M,EAAA2M,EACAxX,KAAAia,EAAArP,EAAAqP,EAAApP,EAAAoP,EAEAja,MAIAyjG,gBAAA,SAAAnkE,EAAA1pB,GAKA,MAHA5V,MAAAwX,GAAA8nB,EAAA9nB,EAAA5B,EACA5V,KAAAia,GAAAqlB,EAAArlB,EAAArE,EAEA5V,MAIAioD,IAAA,SAAA3oB,EAAAvc,GAEA,WAAA5V,KAAA4V,GAEAhT,QAAAH,KAAA,yFACA5P,KAAAm/E,WAAA7/C,EAAAvc,KAIA/iB,KAAAwX,GAAA8nB,EAAA9nB,EACAxX,KAAAia,GAAAqlB,EAAArlB,EAEAja,OAIA0jG,UAAA,SAAA9tF,GAKA,MAHA5V,MAAAwX,GAAA5B,EACA5V,KAAAia,GAAArE,EAEA5V,MAIAm/E,WAAA,SAAAv0E,EAAAC,GAKA,MAHA7K,MAAAwX,EAAA5M,EAAA4M,EAAA3M,EAAA2M,EACAxX,KAAAia,EAAArP,EAAAqP,EAAApP,EAAAoP,EAEAja,MAIAu3C,SAAA,SAAAjY,GAKA,MAHAt/B,MAAAwX,GAAA8nB,EAAA9nB,EACAxX,KAAAia,GAAAqlB,EAAArlB,EAEAja,MAIA+nD,eAAA,SAAAo7C,QAKA,MAHAnjG,MAAAwX,GAAA2rF,OACAnjG,KAAAia,GAAAkpF,OAEAnjG,MAIA2jG,OAAA,SAAArkE,GAKA,MAHAt/B,MAAAwX,GAAA8nB,EAAA9nB,EACAxX,KAAAia,GAAAqlB,EAAArlB,EAEAja,MAIAygF,aAAA,SAAA0iB,QAEA,MAAAnjG,MAAA+nD,eAAA,EAAAo7C,SAIA3zF,IAAA,SAAA8vB,GAKA,MAHAt/B,MAAAwX,EAAA5I,KAAAY,IAAAxP,KAAAwX,EAAA8nB,EAAA9nB,GACAxX,KAAAia,EAAArL,KAAAY,IAAAxP,KAAAia,EAAAqlB,EAAArlB,GAEAja,MAIAkU,IAAA,SAAAorB,GAKA,MAHAt/B,MAAAwX,EAAA5I,KAAAsF,IAAAlU,KAAAwX,EAAA8nB,EAAA9nB,GACAxX,KAAAia,EAAArL,KAAAsF,IAAAlU,KAAAia,EAAAqlB,EAAArlB,GAEAja,MAIAomF,MAAA,SAAA52E,IAAA0E,KAOA,MAHAlU,MAAAwX,EAAA5I,KAAAsF,IAAA1E,IAAAgI,EAAA5I,KAAAY,IAAA0E,IAAAsD,EAAAxX,KAAAwX,IACAxX,KAAAia,EAAArL,KAAAsF,IAAA1E,IAAAyK,EAAArL,KAAAY,IAAA0E,IAAA+F,EAAAja,KAAAia,IAEAja,MAIA4jG,YAAA,WAEA,GAAAp0F,KAAA,GAAAorB,SACA1mB,IAAA,GAAA0mB,QAEA,OAAA,UAAAipE,OAAAC,QAKA,MAHAt0F,KAAAqB,IAAAgzF,OAAAA,QACA3vF,IAAArD,IAAAizF,OAAAA,QAEA9jG,KAAAomF,MAAA52E,IAAA0E,SAMA6vF,YAAA,SAAAv0F,IAAA0E,KAEA,GAAAtU,QAAAI,KAAAJ,QAEA,OAAAI,MAAAygF,aAAA7gF,QAAA,GAAAmoD,eAAAn5C,KAAAsF,IAAA1E,IAAAZ,KAAAY,IAAA0E,IAAAtU,WAIAkP,MAAA,WAKA,MAHA9O,MAAAwX,EAAA5I,KAAAE,MAAA9O,KAAAwX,GACAxX,KAAAia,EAAArL,KAAAE,MAAA9O,KAAAia,GAEAja,MAIA6O,KAAA,WAKA,MAHA7O,MAAAwX,EAAA5I,KAAAC,KAAA7O,KAAAwX,GACAxX,KAAAia,EAAArL,KAAAC,KAAA7O,KAAAia,GAEAja,MAIAkpB,MAAA,WAKA,MAHAlpB,MAAAwX,EAAA5I,KAAAsa,MAAAlpB,KAAAwX,GACAxX,KAAAia,EAAArL,KAAAsa,MAAAlpB,KAAAia,GAEAja,MAIAgkG,YAAA,WAKA,MAHAhkG,MAAAwX,EAAAxX,KAAAwX,EAAA,EAAA5I,KAAAC,KAAA7O,KAAAwX,GAAA5I,KAAAE,MAAA9O,KAAAwX,GACAxX,KAAAia,EAAAja,KAAAia,EAAA,EAAArL,KAAAC,KAAA7O,KAAAia,GAAArL,KAAAE,MAAA9O,KAAAia,GAEAja,MAIAikG,OAAA,WAKA,MAHAjkG,MAAAwX,GAAAxX,KAAAwX,EACAxX,KAAAia,GAAAja,KAAAia,EAEAja,MAIAioF,IAAA,SAAA3oD,GAEA,MAAAt/B,MAAAwX,EAAA8nB,EAAA9nB,EAAAxX,KAAAia,EAAAqlB,EAAArlB,GAIAiqF,SAAA,WAEA,MAAAlkG,MAAAwX,EAAAxX,KAAAwX,EAAAxX,KAAAia,EAAAja,KAAAia,GAIAra,OAAA,WAEA,MAAAgP,MAAA8kE,KAAA1zE,KAAAwX,EAAAxX,KAAAwX,EAAAxX,KAAAia,EAAAja,KAAAia,IAIAkqF,gBAAA,WAEA,MAAAv1F,MAAAc,IAAA1P,KAAAwX,GAAA5I,KAAAc,IAAA1P,KAAAia,IAIAwvC,UAAA,WAEA,MAAAzpD,MAAAygF,aAAAzgF,KAAAJ,UAAA,IAIA6oD,MAAA,WAIA,GAAAA,OAAA75C,KAAAkyE,MAAA9gF,KAAAia,EAAAja,KAAAwX,EAIA,OAFAixC,OAAA,IAAAA,OAAA,EAAA75C,KAAAiyE,IAEAp4B,OAIA27C,WAAA,SAAA9kE,GAEA,MAAA1wB,MAAA8kE,KAAA1zE,KAAAqkG,kBAAA/kE,KAIA+kE,kBAAA,SAAA/kE,GAEA,GAAAglE,IAAAtkG,KAAAwX,EAAA8nB,EAAA9nB,EAAA+sF,GAAAvkG,KAAAia,EAAAqlB,EAAArlB,CACA,OAAAqqF,IAAAA,GAAAC,GAAAA,IAIAC,oBAAA,SAAAllE,GAEA,MAAA1wB,MAAAc,IAAA1P,KAAAwX,EAAA8nB,EAAA9nB,GAAA5I,KAAAc,IAAA1P,KAAAia,EAAAqlB,EAAArlB,IAIAgjF,UAAA,SAAAr9F,QAEA,MAAAI,MAAAypD,YAAA1B,eAAAnoD,SAIA8/E,KAAA,SAAApgD,EAAA8jB,OAKA,MAHApjD,MAAAwX,IAAA8nB,EAAA9nB,EAAAxX,KAAAwX,GAAA4rC,MACApjD,KAAAia,IAAAqlB,EAAArlB,EAAAja,KAAAia,GAAAmpC,MAEApjD,MAIAykG,YAAA,SAAAhW,GAAAc,GAAAnsC,OAEA,MAAApjD,MAAAm/E,WAAAoQ,GAAAd,IAAA1mC,eAAA3E,OAAA7lD,IAAAkxF,KAIAjzB,OAAA,SAAAl8B,GAEA,MAAAA,GAAA9nB,IAAAxX,KAAAwX,GAAA8nB,EAAArlB,IAAAja,KAAAia,GAIA+rD,UAAA,SAAAnxD,MAAAsU,QAOA,WALAhc,KAAAgc,SAAAA,OAAA,GAEAnpB,KAAAwX,EAAA3C,MAAAsU,QACAnpB,KAAAia,EAAApF,MAAAsU,OAAA,GAEAnpB,MAIAurB,QAAA,SAAA1W,MAAAsU,QAQA,WANAhc,KAAA0H,QAAAA,cACA1H,KAAAgc,SAAAA,OAAA,GAEAtU,MAAAsU,QAAAnpB,KAAAwX,EACA3C,MAAAsU,OAAA,GAAAnpB,KAAAia,EAEApF,OAIA8pE,oBAAA,SAAA5mC,UAAAhnB,MAAA5H,QAWA,WATAhc,KAAAgc,QAEApZ,QAAAH,KAAA,uEAIA5P,KAAAwX,EAAAugC,UAAA2mC,KAAA3tD,OACA/wB,KAAAia,EAAA89B,UAAA2sD,KAAA3zE,OAEA/wB,MAIA2kG,aAAA,SAAA1zD,OAAAwX,OAEA,GAAA1mC,GAAAnT,KAAA45C,IAAAC,OAAA7yC,EAAAhH,KAAA6zE,IAAAh6B,OAEAjxC,EAAAxX,KAAAwX,EAAAy5B,OAAAz5B,EACAyC,EAAAja,KAAAia,EAAAg3B,OAAAh3B,CAKA,OAHAja,MAAAwX,EAAAA,EAAAuK,EAAA9H,EAAArE,EAAAq7B,OAAAz5B,EACAxX,KAAAia,EAAAzC,EAAA5B,EAAAqE,EAAA8H,EAAAkvB,OAAAh3B,EAEAja,OAYA,IAAAw7B,WAAA,CA6CAX,SAAAe,kBAAAzuB,GACA0tB,QAAAiB,gBA9vBA,IAgwBAjyB,OAAA0xB,eAAAV,QAAAr+B,UAAA,eAEAqU,IAAA,SAAA3B,QAEA,IAAAA,OAAAlP,KAAAi6B,aAMApwB,OAAAm3F,OAAAnmE,QAAAr+B,UAAAm+B,gBAAAn+B,WAEAsvF,YAAAjxD,QAEAooB,WAAA,EAEAl5B,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAA1jC,QA6BA,MA3BAzF,MAAApC,KAAA6H,OAAA7H,KAEAoC,KAAA86B,MAAAr1B,OAAAq1B,MACA96B,KAAA67B,QAAAp2B,OAAAo2B,QAAAxrB,MAAA,GAEArQ,KAAA+6B,QAAAt1B,OAAAs1B,QAEA/6B,KAAAg7B,MAAAv1B,OAAAu1B,MACAh7B,KAAAi7B,MAAAx1B,OAAAw1B,MAEAj7B,KAAAk7B,UAAAz1B,OAAAy1B,UACAl7B,KAAAm7B,UAAA11B,OAAA01B,UAEAn7B,KAAAq7B,WAAA51B,OAAA41B,WAEAr7B,KAAAiL,OAAAxF,OAAAwF,OACAjL,KAAAo7B,KAAA31B,OAAA21B,KAEAp7B,KAAAmpB,OAAAggB,KAAA1jC,OAAA0jB,QACAnpB,KAAAo8B,OAAA+M,KAAA1jC,OAAA22B,QAEAp8B,KAAAq8B,gBAAA52B,OAAA42B,gBACAr8B,KAAAs8B,iBAAA72B,OAAA62B,iBACAt8B,KAAAu8B,MAAA92B,OAAA82B,MACAv8B,KAAAw8B,gBAAA/2B,OAAA+2B,gBACAx8B,KAAAs7B,SAAA71B,OAAA61B,SAEAt7B,MAIAovB,OAAA,SAAAw1E,MAEA,OAAAz3F,KAAAy3F,KAAAvgE,SAAArkC,KAAAy7B,MAEA,MAAAmpE,MAAAvgE,SAAArkC,KAAAy7B,KA4CA,IAAAjqB,SACAqzF,UACA5qE,QAAA,IACAmB,KAAA,UACA0pE,UAAA,kBAGArpE,KAAAz7B,KAAAy7B,KACA79B,KAAAoC,KAAApC,KAEAm9B,QAAA/6B,KAAA+6B,QAEAqB,QAAAp8B,KAAAo8B,OAAA5kB,EAAAxX,KAAAo8B,OAAAniB,GACAkP,QAAAnpB,KAAAmpB,OAAA3R,EAAAxX,KAAAmpB,OAAAlP,GACA8qF,MAAA/kG,KAAAg7B,MAAAh7B,KAAAi7B,OAEAE,UAAAn7B,KAAAm7B,UACAD,UAAAl7B,KAAAk7B,UACAG,WAAAr7B,KAAAq7B,WAEAkB,MAAAv8B,KAAAu8B,MAGA,QAAApvB,KAAAnN,KAAA86B,MAAA,CAIA,GAAAA,OAAA96B,KAAA86B,UAEA3tB,KAAA2tB,MAAAW,OAEAX,MAAAW,KAAAC,MAAAC,oBAIAxuB,KAAAy3F,KAAAxmE,OAAAtD,MAAAW,QAEAmpE,KAAAxmE,OAAAtD,MAAAW,OACAA,KAAAX,MAAAW,KACAuuD,IA/EA,SAAAlvD,OAEA,GAAA8P,OAEA,IAAA9P,gBAAAg6B,mBAEAlqB,OAAA9P,UAEA,CAEA8P,OAAArvC,SAAAkwC,gBAAA,+BAAA,UACAb,OAAA1rC,MAAA47B,MAAA57B,MACA0rC,OAAA9N,OAAAhC,MAAAgC,MAEA,IAAA4O,SAAAd,OAAAe,WAAA,KAEA7Q,iBAAAkqE,WAEAt5D,QAAAu5D,aAAAnqE,MAAA,EAAA,GAIA4Q,QAAAgpB,UAAA55B,MAAA,EAAA,EAAAA,MAAA57B,MAAA47B,MAAAgC,QAMA,MAAA8N,QAAA1rC,MAAA,MAAA0rC,OAAA9N,OAAA,KAEA8N,OAAAs6D,UAAA,aAAA,IAIAt6D,OAAAs6D,UAAA,cA6CApqE,SAKAtpB,OAAAspB,MAAAA,MAAAW,KAMA,MAFAmpE,MAAAvgE,SAAArkC,KAAAy7B,MAAAjqB,OAEAA,QAIA2yC,QAAA,WAEAnkD,KAAA7B,eAAAi9B,KAAA,aAIA+pE,YAAA,SAAA3+D,IAEA,GAr6BA,MAq6BAxmC,KAAA+6B,QAAA,CAKA,GAHAyL,GAAA+Q,SAAAv3C,KAAAo8B,QACAoK,GAAAjpC,IAAAyC,KAAAmpB,QAEAqd,GAAAhvB,EAAA,GAAAgvB,GAAAhvB,EAAA,EAEA,OAAAxX,KAAAg7B,OAEA,IAAA4tC,gBAEApiC,GAAAhvB,EAAAgvB,GAAAhvB,EAAA5I,KAAAE,MAAA03B,GAAAhvB,EACA,MAEA,KAAAukB,qBAEAyK,GAAAhvB,EAAAgvB,GAAAhvB,EAAA,EAAA,EAAA,CACA,MAEA,KAAAsxD,wBAEA,IAAAl6D,KAAAc,IAAAd,KAAAE,MAAA03B,GAAAhvB,GAAA,GAEAgvB,GAAAhvB,EAAA5I,KAAAC,KAAA23B,GAAAhvB,GAAAgvB,GAAAhvB,EAIAgvB,GAAAhvB,EAAAgvB,GAAAhvB,EAAA5I,KAAAE,MAAA03B,GAAAhvB,GASA,GAAAgvB,GAAAvsB,EAAA,GAAAusB,GAAAvsB,EAAA,EAEA,OAAAja,KAAAi7B,OAEA,IAAA2tC,gBAEApiC,GAAAvsB,EAAAusB,GAAAvsB,EAAArL,KAAAE,MAAA03B,GAAAvsB,EACA,MAEA,KAAA8hB,qBAEAyK,GAAAvsB,EAAAusB,GAAAvsB,EAAA,EAAA,EAAA,CACA,MAEA,KAAA6uD,wBAEA,IAAAl6D,KAAAc,IAAAd,KAAAE,MAAA03B,GAAAvsB,GAAA,GAEAusB,GAAAvsB,EAAArL,KAAAC,KAAA23B,GAAAvsB,GAAAusB,GAAAvsB,EAIAusB,GAAAvsB,EAAAusB,GAAAvsB,EAAArL,KAAAE,MAAA03B,GAAAvsB,GASAja,KAAAu8B,QAEAiK,GAAAvsB,EAAA,EAAAusB,GAAAvsB,OAyBApQ,OAAAm3F,OAAArkE,QAAAngC,WAEA4oG,WAAA,EAEAv0F,IAAA,SAAA2G,EAAAyC,EAAA2iB,EAAA7Z,GAOA,MALA/iB,MAAAwX,EAAAA,EACAxX,KAAAia,EAAAA,EACAja,KAAA48B,EAAAA,EACA58B,KAAA+iB,EAAAA,EAEA/iB,MAIAkjG,UAAA,SAAAC,QAOA,MALAnjG,MAAAwX,EAAA2rF,OACAnjG,KAAAia,EAAAkpF,OACAnjG,KAAA48B,EAAAumE,OACAnjG,KAAA+iB,EAAAogF,OAEAnjG,MAIAojG,KAAA,SAAA5rF,GAIA,MAFAxX,MAAAwX,EAAAA,EAEAxX,MAIAqjG,KAAA,SAAAppF,GAIA,MAFAja,MAAAia,EAAAA,EAEAja,MAIAqlG,KAAA,SAAAzoE,GAIA,MAFA58B,MAAA48B,EAAAA,EAEA58B,MAIAslG,KAAA,SAAAviF,GAIA,MAFA/iB,MAAA+iB,EAAAA,EAEA/iB,MAIAsjG,aAAA,SAAAvyE,MAAA7hB,OAEA,OAAA6hB,OAEA,IAAA,GAAA/wB,KAAAwX,EAAAtI,KAAA,MACA,KAAA,GAAAlP,KAAAia,EAAA/K,KAAA,MACA,KAAA,GAAAlP,KAAA48B,EAAA1tB,KAAA,MACA,KAAA,GAAAlP,KAAA+iB,EAAA7T,KAAA,MACA,SAAA,KAAA,IAAAqB,OAAA,0BAAAwgB,OAIA,MAAA/wB,OAIAujG,aAAA,SAAAxyE,OAEA,OAAAA,OAEA,IAAA,GAAA,MAAA/wB,MAAAwX,CACA,KAAA,GAAA,MAAAxX,MAAAia,CACA,KAAA,GAAA,MAAAja,MAAA48B,CACA,KAAA,GAAA,MAAA58B,MAAA+iB,CACA,SAAA,KAAA,IAAAxS,OAAA,0BAAAwgB,SAMAhH,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAAwX,EAAAxX,KAAAia,EAAAja,KAAA48B,EAAA58B,KAAA+iB,IAIAomB,KAAA,SAAA7J,GAOA,MALAt/B,MAAAwX,EAAA8nB,EAAA9nB,EACAxX,KAAAia,EAAAqlB,EAAArlB,EACAja,KAAA48B,EAAA0C,EAAA1C,EACA58B,KAAA+iB,MAAA5V,KAAAmyB,EAAAvc,EAAAuc,EAAAvc,EAAA,EAEA/iB,MAIAzC,IAAA,SAAA+hC,EAAAvc,GAEA,WAAA5V,KAAA4V,GAEAhT,QAAAH,KAAA,yFACA5P,KAAA0jF,WAAApkD,EAAAvc,KAIA/iB,KAAAwX,GAAA8nB,EAAA9nB,EACAxX,KAAAia,GAAAqlB,EAAArlB,EACAja,KAAA48B,GAAA0C,EAAA1C,EACA58B,KAAA+iB,GAAAuc,EAAAvc,EAEA/iB,OAIAwjG,UAAA,SAAA5tF,GAOA,MALA5V,MAAAwX,GAAA5B,EACA5V,KAAAia,GAAArE,EACA5V,KAAA48B,GAAAhnB,EACA5V,KAAA+iB,GAAAnN,EAEA5V,MAIA0jF,WAAA,SAAA94E,EAAAC,GAOA,MALA7K,MAAAwX,EAAA5M,EAAA4M,EAAA3M,EAAA2M,EACAxX,KAAAia,EAAArP,EAAAqP,EAAApP,EAAAoP,EACAja,KAAA48B,EAAAhyB,EAAAgyB,EAAA/xB,EAAA+xB,EACA58B,KAAA+iB,EAAAnY,EAAAmY,EAAAlY,EAAAkY,EAEA/iB,MAIAyjG,gBAAA,SAAAnkE,EAAA1pB,GAOA,MALA5V,MAAAwX,GAAA8nB,EAAA9nB,EAAA5B,EACA5V,KAAAia,GAAAqlB,EAAArlB,EAAArE,EACA5V,KAAA48B,GAAA0C,EAAA1C,EAAAhnB,EACA5V,KAAA+iB,GAAAuc,EAAAvc,EAAAnN,EAEA5V,MAIAioD,IAAA,SAAA3oB,EAAAvc,GAEA,WAAA5V,KAAA4V,GAEAhT,QAAAH,KAAA,yFACA5P,KAAAm/E,WAAA7/C,EAAAvc,KAIA/iB,KAAAwX,GAAA8nB,EAAA9nB,EACAxX,KAAAia,GAAAqlB,EAAArlB,EACAja,KAAA48B,GAAA0C,EAAA1C,EACA58B,KAAA+iB,GAAAuc,EAAAvc,EAEA/iB,OAIA0jG,UAAA,SAAA9tF,GAOA,MALA5V,MAAAwX,GAAA5B,EACA5V,KAAAia,GAAArE,EACA5V,KAAA48B,GAAAhnB,EACA5V,KAAA+iB,GAAAnN,EAEA5V,MAIAm/E,WAAA,SAAAv0E,EAAAC,GAOA,MALA7K,MAAAwX,EAAA5M,EAAA4M,EAAA3M,EAAA2M,EACAxX,KAAAia,EAAArP,EAAAqP,EAAApP,EAAAoP,EACAja,KAAA48B,EAAAhyB,EAAAgyB,EAAA/xB,EAAA+xB,EACA58B,KAAA+iB,EAAAnY,EAAAmY,EAAAlY,EAAAkY,EAEA/iB,MAIA+nD,eAAA,SAAAo7C,QAOA,MALAnjG,MAAAwX,GAAA2rF,OACAnjG,KAAAia,GAAAkpF,OACAnjG,KAAA48B,GAAAumE,OACAnjG,KAAA+iB,GAAAogF,OAEAnjG,MAIAgpC,aAAA,SAAA18B,GAEA,GAAAkL,GAAAxX,KAAAwX,EAAAyC,EAAAja,KAAAia,EAAA2iB,EAAA58B,KAAA48B,EAAA7Z,EAAA/iB,KAAA+iB,EACAhgB,EAAAuJ,EAAA3N,QAOA,OALAqB,MAAAwX,EAAAzU,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,GAAA65B,EAAA75B,EAAA,IAAAggB,EACA/iB,KAAAia,EAAAlX,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,GAAA65B,EAAA75B,EAAA,IAAAggB,EACA/iB,KAAA48B,EAAA75B,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,IAAA65B,EAAA75B,EAAA,IAAAggB,EACA/iB,KAAA+iB,EAAAhgB,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,IAAA65B,EAAA75B,EAAA,IAAAggB,EAEA/iB,MAIAygF,aAAA,SAAA0iB,QAEA,MAAAnjG,MAAA+nD,eAAA,EAAAo7C,SAIAoC,2BAAA,SAAAxiB,GAMA/iF,KAAA+iB,EAAA,EAAAnU,KAAA42F,KAAAziB,EAAAhgE,EAEA,IAAAnN,GAAAhH,KAAA8kE,KAAA,EAAAqP,EAAAhgE,EAAAggE,EAAAhgE,EAgBA,OAdAnN,GAAA,MAEA5V,KAAAwX,EAAA,EACAxX,KAAAia,EAAA,EACAja,KAAA48B,EAAA,IAIA58B,KAAAwX,EAAAurE,EAAAvrE,EAAA5B,EACA5V,KAAAia,EAAA8oE,EAAA9oE,EAAArE,EACA5V,KAAA48B,EAAAmmD,EAAAnmD,EAAAhnB,GAIA5V,MAIAylG,+BAAA,SAAAn5F,GAMA,GAAAm8C,OAAAjxC,EAAAyC,EAAA2iB,EAIA8oE,GAAAp5F,EAAA3N,SAEAgnG,IAAAD,GAAA,GAAAE,IAAAF,GAAA,GAAAG,IAAAH,GAAA,GACAI,IAAAJ,GAAA,GAAAK,IAAAL,GAAA,GAAAM,IAAAN,GAAA,GACAO,IAAAP,GAAA,GAAAQ,IAAAR,GAAA,GAAAS,IAAAT,GAAA,GAEA,IAAA92F,KAAAc,IAAAk2F,IAAAE,KATA,KAUAl3F,KAAAc,IAAAm2F,IAAAI,KAVA,KAWAr3F,KAAAc,IAAAs2F,IAAAE,KAXA,IAWA,CAMA,GAAAt3F,KAAAc,IAAAk2F,IAAAE,KAhBA,IAiBAl3F,KAAAc,IAAAm2F,IAAAI,KAjBA,IAkBAr3F,KAAAc,IAAAs2F,IAAAE,KAlBA,IAmBAt3F,KAAAc,IAAAi2F,IAAAI,IAAAI,IAAA,GAnBA,GAyBA,MAFAnmG,MAAA6Q,IAAA,EAAA,EAAA,EAAA,GAEA7Q,IAMAyoD,OAAA75C,KAAAiyE,EAEA,IAAAulB,KAAAT,IAAA,GAAA,EACAlwE,IAAAswE,IAAA,GAAA,EACAM,IAAAF,IAAA,GAAA,EACAG,IAAAV,IAAAE,KAAA,EACAS,IAAAV,IAAAI,KAAA,EACAO,IAAAR,IAAAE,KAAA,CA4DA,OA1DAE,IAAA3wE,IAAA2wE,GAAAC,GAIAD,GA7CA,KA+CA5uF,EAAA,EACAyC,EAAA,WACA2iB,EAAA,aAIAplB,EAAA5I,KAAA8kE,KAAA0yB,IACAnsF,EAAAqsF,GAAA9uF,EACAolB,EAAA2pE,GAAA/uF,GAIAie,GAAA4wE,GAIA5wE,GA/DA,KAiEAje,EAAA,WACAyC,EAAA,EACA2iB,EAAA,aAIA3iB,EAAArL,KAAA8kE,KAAAj+C,IACAje,EAAA8uF,GAAArsF,EACA2iB,EAAA4pE,GAAAvsF,GAQAosF,GAjFA,KAmFA7uF,EAAA,WACAyC,EAAA,WACA2iB,EAAA,IAIAA,EAAAhuB,KAAA8kE,KAAA2yB,IACA7uF,EAAA+uF,GAAA3pE,EACA3iB,EAAAusF,GAAA5pE,GAMA58B,KAAA6Q,IAAA2G,EAAAyC,EAAA2iB,EAAA6rB,OAEAzoD,KAMA,GAAA4V,GAAAhH,KAAA8kE,MAAAwyB,IAAAF,MAAAE,IAAAF,MACAH,IAAAI,MAAAJ,IAAAI,MACAH,IAAAF,MAAAE,IAAAF,KAYA,OAVAh3F,MAAAc,IAAAkG,GAAA,OAAAA,EAAA,GAKA5V,KAAAwX,GAAA0uF,IAAAF,KAAApwF,EACA5V,KAAAia,GAAA4rF,IAAAI,KAAArwF,EACA5V,KAAA48B,GAAAkpE,IAAAF,KAAAhwF,EACA5V,KAAA+iB,EAAAnU,KAAA42F,MAAAG,IAAAI,IAAAI,IAAA,GAAA,GAEAnmG,MAIAwP,IAAA,SAAA8vB,GAOA,MALAt/B,MAAAwX,EAAA5I,KAAAY,IAAAxP,KAAAwX,EAAA8nB,EAAA9nB,GACAxX,KAAAia,EAAArL,KAAAY,IAAAxP,KAAAia,EAAAqlB,EAAArlB,GACAja,KAAA48B,EAAAhuB,KAAAY,IAAAxP,KAAA48B,EAAA0C,EAAA1C,GACA58B,KAAA+iB,EAAAnU,KAAAY,IAAAxP,KAAA+iB,EAAAuc,EAAAvc,GAEA/iB,MAIAkU,IAAA,SAAAorB,GAOA,MALAt/B,MAAAwX,EAAA5I,KAAAsF,IAAAlU,KAAAwX,EAAA8nB,EAAA9nB,GACAxX,KAAAia,EAAArL,KAAAsF,IAAAlU,KAAAia,EAAAqlB,EAAArlB,GACAja,KAAA48B,EAAAhuB,KAAAsF,IAAAlU,KAAA48B,EAAA0C,EAAA1C,GACA58B,KAAA+iB,EAAAnU,KAAAsF,IAAAlU,KAAA+iB,EAAAuc,EAAAvc,GAEA/iB,MAIAomF,MAAA,SAAA52E,IAAA0E,KASA,MALAlU,MAAAwX,EAAA5I,KAAAsF,IAAA1E,IAAAgI,EAAA5I,KAAAY,IAAA0E,IAAAsD,EAAAxX,KAAAwX,IACAxX,KAAAia,EAAArL,KAAAsF,IAAA1E,IAAAyK,EAAArL,KAAAY,IAAA0E,IAAA+F,EAAAja,KAAAia,IACAja,KAAA48B,EAAAhuB,KAAAsF,IAAA1E,IAAAotB,EAAAhuB,KAAAY,IAAA0E,IAAA0oB,EAAA58B,KAAA48B,IACA58B,KAAA+iB,EAAAnU,KAAAsF,IAAA1E,IAAAuT,EAAAnU,KAAAY,IAAA0E,IAAA6O,EAAA/iB,KAAA+iB,IAEA/iB,MAIA4jG,YAAA,WAEA,GAAAp0F,KAAA0E,GAEA,OAAA,UAAA2vF,OAAAC,QAYA,WAVA32F,KAAAqC,MAEAA,IAAA,GAAAmtB,SACAzoB,IAAA,GAAAyoB,UAIAntB,IAAAqB,IAAAgzF,OAAAA,OAAAA,OAAAA,QACA3vF,IAAArD,IAAAizF,OAAAA,OAAAA,OAAAA,QAEA9jG,KAAAomF,MAAA52E,IAAA0E,SAMA6vF,YAAA,SAAAv0F,IAAA0E,KAEA,GAAAtU,QAAAI,KAAAJ,QAEA,OAAAI,MAAAygF,aAAA7gF,QAAA,GAAAmoD,eAAAn5C,KAAAsF,IAAA1E,IAAAZ,KAAAY,IAAA0E,IAAAtU,WAIAkP,MAAA,WAOA,MALA9O,MAAAwX,EAAA5I,KAAAE,MAAA9O,KAAAwX,GACAxX,KAAAia,EAAArL,KAAAE,MAAA9O,KAAAia,GACAja,KAAA48B,EAAAhuB,KAAAE,MAAA9O,KAAA48B,GACA58B,KAAA+iB,EAAAnU,KAAAE,MAAA9O,KAAA+iB,GAEA/iB,MAIA6O,KAAA,WAOA,MALA7O,MAAAwX,EAAA5I,KAAAC,KAAA7O,KAAAwX,GACAxX,KAAAia,EAAArL,KAAAC,KAAA7O,KAAAia,GACAja,KAAA48B,EAAAhuB,KAAAC,KAAA7O,KAAA48B,GACA58B,KAAA+iB,EAAAnU,KAAAC,KAAA7O,KAAA+iB,GAEA/iB,MAIAkpB,MAAA,WAOA,MALAlpB,MAAAwX,EAAA5I,KAAAsa,MAAAlpB,KAAAwX,GACAxX,KAAAia,EAAArL,KAAAsa,MAAAlpB,KAAAia,GACAja,KAAA48B,EAAAhuB,KAAAsa,MAAAlpB,KAAA48B,GACA58B,KAAA+iB,EAAAnU,KAAAsa,MAAAlpB,KAAA+iB,GAEA/iB,MAIAgkG,YAAA,WAOA,MALAhkG,MAAAwX,EAAAxX,KAAAwX,EAAA,EAAA5I,KAAAC,KAAA7O,KAAAwX,GAAA5I,KAAAE,MAAA9O,KAAAwX,GACAxX,KAAAia,EAAAja,KAAAia,EAAA,EAAArL,KAAAC,KAAA7O,KAAAia,GAAArL,KAAAE,MAAA9O,KAAAia,GACAja,KAAA48B,EAAA58B,KAAA48B,EAAA,EAAAhuB,KAAAC,KAAA7O,KAAA48B,GAAAhuB,KAAAE,MAAA9O,KAAA48B,GACA58B,KAAA+iB,EAAA/iB,KAAA+iB,EAAA,EAAAnU,KAAAC,KAAA7O,KAAA+iB,GAAAnU,KAAAE,MAAA9O,KAAA+iB,GAEA/iB,MAIAikG,OAAA,WAOA,MALAjkG,MAAAwX,GAAAxX,KAAAwX,EACAxX,KAAAia,GAAAja,KAAAia,EACAja,KAAA48B,GAAA58B,KAAA48B,EACA58B,KAAA+iB,GAAA/iB,KAAA+iB,EAEA/iB,MAIAioF,IAAA,SAAA3oD,GAEA,MAAAt/B,MAAAwX,EAAA8nB,EAAA9nB,EAAAxX,KAAAia,EAAAqlB,EAAArlB,EAAAja,KAAA48B,EAAA0C,EAAA1C,EAAA58B,KAAA+iB,EAAAuc,EAAAvc,GAIAmhF,SAAA,WAEA,MAAAlkG,MAAAwX,EAAAxX,KAAAwX,EAAAxX,KAAAia,EAAAja,KAAAia,EAAAja,KAAA48B,EAAA58B,KAAA48B,EAAA58B,KAAA+iB,EAAA/iB,KAAA+iB,GAIAnjB,OAAA,WAEA,MAAAgP,MAAA8kE,KAAA1zE,KAAAwX,EAAAxX,KAAAwX,EAAAxX,KAAAia,EAAAja,KAAAia,EAAAja,KAAA48B,EAAA58B,KAAA48B,EAAA58B,KAAA+iB,EAAA/iB,KAAA+iB,IAIAohF,gBAAA,WAEA,MAAAv1F,MAAAc,IAAA1P,KAAAwX,GAAA5I,KAAAc,IAAA1P,KAAAia,GAAArL,KAAAc,IAAA1P,KAAA48B,GAAAhuB,KAAAc,IAAA1P,KAAA+iB,IAIA0mC,UAAA,WAEA,MAAAzpD,MAAAygF,aAAAzgF,KAAAJ,UAAA;4CAIAq9F,UAAA,SAAAr9F,QAEA,MAAAI,MAAAypD,YAAA1B,eAAAnoD,SAIA8/E,KAAA,SAAApgD,EAAA8jB,OAOA,MALApjD,MAAAwX,IAAA8nB,EAAA9nB,EAAAxX,KAAAwX,GAAA4rC,MACApjD,KAAAia,IAAAqlB,EAAArlB,EAAAja,KAAAia,GAAAmpC,MACApjD,KAAA48B,IAAA0C,EAAA1C,EAAA58B,KAAA48B,GAAAwmB,MACApjD,KAAA+iB,IAAAuc,EAAAvc,EAAA/iB,KAAA+iB,GAAAqgC,MAEApjD,MAIAykG,YAAA,SAAAhW,GAAAc,GAAAnsC,OAEA,MAAApjD,MAAAm/E,WAAAoQ,GAAAd,IAAA1mC,eAAA3E,OAAA7lD,IAAAkxF,KAIAjzB,OAAA,SAAAl8B,GAEA,MAAAA,GAAA9nB,IAAAxX,KAAAwX,GAAA8nB,EAAArlB,IAAAja,KAAAia,GAAAqlB,EAAA1C,IAAA58B,KAAA48B,GAAA0C,EAAAvc,IAAA/iB,KAAA+iB,GAIAijD,UAAA,SAAAnxD,MAAAsU,QASA,WAPAhc,KAAAgc,SAAAA,OAAA,GAEAnpB,KAAAwX,EAAA3C,MAAAsU,QACAnpB,KAAAia,EAAApF,MAAAsU,OAAA,GACAnpB,KAAA48B,EAAA/nB,MAAAsU,OAAA,GACAnpB,KAAA+iB,EAAAlO,MAAAsU,OAAA,GAEAnpB,MAIAurB,QAAA,SAAA1W,MAAAsU,QAUA,WARAhc,KAAA0H,QAAAA,cACA1H,KAAAgc,SAAAA,OAAA,GAEAtU,MAAAsU,QAAAnpB,KAAAwX,EACA3C,MAAAsU,OAAA,GAAAnpB,KAAAia,EACApF,MAAAsU,OAAA,GAAAnpB,KAAA48B,EACA/nB,MAAAsU,OAAA,GAAAnpB,KAAA+iB,EAEAlO,OAIA8pE,oBAAA,SAAA5mC,UAAAhnB,MAAA5H,QAaA,WAXAhc,KAAAgc,QAEApZ,QAAAH,KAAA,uEAIA5P,KAAAwX,EAAAugC,UAAA2mC,KAAA3tD,OACA/wB,KAAAia,EAAA89B,UAAA2sD,KAAA3zE,OACA/wB,KAAA48B,EAAAmb,UAAA0uD,KAAA11E,OACA/wB,KAAA+iB,EAAAg1B,UAAA2uD,KAAA31E,OAEA/wB,QAyCA6J,OAAAm3F,OAAAnkE,kBAAArgC,UAAAm+B,gBAAAn+B,WAEA01D,qBAAA,EAEAqmB,QAAA,SAAAr5E,MAAA49B,QAEA98B,KAAAd,QAAAA,OAAAc,KAAA88B,SAAAA,SAEA98B,KAAAd,MAAAA,MACAc,KAAA88B,OAAAA,OAEA98B,KAAAmkD,WAIAnkD,KAAAk9B,SAAArsB,IAAA,EAAA,EAAA3R,MAAA49B,QACA98B,KAAAg9B,QAAAnsB,IAAA,EAAA,EAAA3R,MAAA49B,SAIA/S,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAA1jC,QAaA,MAXAzF,MAAAd,MAAAuG,OAAAvG,MACAc,KAAA88B,OAAAr3B,OAAAq3B,OAEA98B,KAAAk9B,SAAAiM,KAAA1jC,OAAAy3B,UAEAl9B,KAAAm9B,QAAA13B,OAAA03B,QAAApT,QAEA/pB,KAAAo9B,YAAA33B,OAAA23B,YACAp9B,KAAAq9B,cAAA53B,OAAA43B,cACAr9B,KAAAs9B,aAAA73B,OAAA63B,aAEAt9B,MAIAmkD,QAAA,WAEAnkD,KAAA7B,eAAAi9B,KAAA,eAmBAmC,sBAAA/gC,UAAAqN,OAAA88F,OAAA9pE,kBAAArgC,WACA+gC,sBAAA/gC,UAAAsvF,YAAAvuD,sBAEAA,sBAAA/gC,UAAA05D,yBAAA,EAkBArsD,OAAAm3F,OAAAtjE,YAEAkpE,MAAA,SAAAC,GAAAC,GAAAC,GAAA7yE,GAEA,MAAA6yE,IAAA59D,KAAA09D,IAAAD,MAAAE,GAAA5yE,IAIA8yE,UAAA,SAAAC,IAAAx/B,UAAAy/B,KAAAC,WAAAC,KAAAC,WAAAnzE,GAIA,GAAA8rD,IAAAknB,KAAAC,WAAA,GACAG,GAAAJ,KAAAC,WAAA,GACAI,GAAAL,KAAAC,WAAA,GACAK,GAAAN,KAAAC,WAAA,GAEAlnB,GAAAmnB,KAAAC,WAAA,GACAI,GAAAL,KAAAC,WAAA,GACAK,GAAAN,KAAAC,WAAA,GACAM,GAAAP,KAAAC,WAAA,EAEA,IAAAG,KAAAG,IAAA3nB,KAAAC,IAAAqnB,KAAAG,IAAAF,KAAAG,GAAA,CAEA,GAAA9xF,GAAA,EAAAse,EAEAs0B,IAAAw3B,GAAAC,GAAAqnB,GAAAG,GAAAF,GAAAG,GAAAF,GAAAG,GAEAjL,IAAAl0C,KAAA,EAAA,GAAA,EACAo/C,OAAA,EAAAp/C,IAAAA,GAGA,IAAAo/C,OAAA/G,OAAAC,QAAA,CAEA,GAAAre,KAAA7zE,KAAA8kE,KAAAk0B,QACAz/F,IAAAyG,KAAAkyE,MAAA2B,IAAAj6B,IAAAk0C,IAEA9mF,GAAAhH,KAAA6zE,IAAA7sE,EAAAzN,KAAAs6E,IACAvuD,EAAAtlB,KAAA6zE,IAAAvuD,EAAA/rB,KAAAs6E,IAIA,GAAAolB,MAAA3zE,EAAAwoE,GAQA,IANA1c,GAAAA,GAAApqE,EAAAqqE,GAAA4nB,KACAP,GAAAA,GAAA1xF,EAAA6xF,GAAAI,KACAN,GAAAA,GAAA3xF,EAAA8xF,GAAAG,KACAL,GAAAA,GAAA5xF,EAAA+xF,GAAAE,KAGAjyF,IAAA,EAAAse,EAAA,CAEA,GAAAihC,GAAA,EAAAvmD,KAAA8kE,KAAAsM,GAAAA,GAAAsnB,GAAAA,GAAAC,GAAAA,GAAAC,GAAAA,GAEAxnB,KAAA7qB,EACAmyC,IAAAnyC,EACAoyC,IAAApyC,EACAqyC,IAAAryC,GAMA8xC,IAAAx/B,WAAAuY,GACAinB,IAAAx/B,UAAA,GAAA6/B,GACAL,IAAAx/B,UAAA,GAAA8/B,GACAN,IAAAx/B,UAAA,GAAA+/B,MAMA39F,OAAA2wC,iBAAA9c,WAAAlhC,WAEAgb,GAEAR,IAAA,WAEA,MAAAhX,MAAA29B,IAIA9sB,IAAA,SAAA3B,OAEAlP,KAAA29B,GAAAzuB,MACAlP,KAAA8nG,qBAMA7tF,GAEAjD,IAAA,WAEA,MAAAhX,MAAA49B,IAIA/sB,IAAA,SAAA3B,OAEAlP,KAAA49B,GAAA1uB,MACAlP,KAAA8nG,qBAMAlrE,GAEA5lB,IAAA,WAEA,MAAAhX,MAAA69B,IAIAhtB,IAAA,SAAA3B,OAEAlP,KAAA69B,GAAA3uB,MACAlP,KAAA8nG,qBAMA/kF,GAEA/L,IAAA,WAEA,MAAAhX,MAAAsW,IAIAzF,IAAA,SAAA3B,OAEAlP,KAAAsW,GAAApH,MACAlP,KAAA8nG,uBAQAj+F,OAAAm3F,OAAAtjE,WAAAlhC,WAEAqU,IAAA,SAAA2G,EAAAyC,EAAA2iB,EAAA7Z,GASA,MAPA/iB,MAAA29B,GAAAnmB,EACAxX,KAAA49B,GAAA3jB,EACAja,KAAA69B,GAAAjB,EACA58B,KAAAsW,GAAAyM,EAEA/iB,KAAA8nG,mBAEA9nG,MAIA+pB,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAA29B,GAAA39B,KAAA49B,GAAA59B,KAAA69B,GAAA79B,KAAAsW,KAIA6yB,KAAA,SAAA8Q,YASA,MAPAj6C,MAAA29B,GAAAsc,WAAAziC,EACAxX,KAAA49B,GAAAqc,WAAAhgC,EACAja,KAAA69B,GAAAoc,WAAArd,EACA58B,KAAAsW,GAAA2jC,WAAAl3B,EAEA/iB,KAAA8nG,mBAEA9nG,MAIAk6C,aAAA,SAAA6tD,MAAApzD,QAEA,IAAAozD,QAAAA,MAAAC,QAEA,KAAA,IAAAz3F,OAAA,mGAIA,IAAAiH,GAAAuwF,MAAApqE,GAAA1jB,EAAA8tF,MAAAnqE,GAAAhB,EAAAmrE,MAAAlqE,GAAA6b,MAAAquD,MAAAruD,MAMA8O,IAAA55C,KAAA45C,IACAi6B,IAAA7zE,KAAA6zE,IAEA8a,GAAA/0C,IAAAhxC,EAAA,GACAgmF,GAAAh1C,IAAAvuC,EAAA,GACAwjF,GAAAj1C,IAAA5rB,EAAA,GAEAqrE,GAAAxlB,IAAAjrE,EAAA,GACA0wF,GAAAzlB,IAAAxoE,EAAA,GACAkuF,GAAA1lB,IAAA7lD,EAAA,EAgDA,OA9CA,QAAA8c,OAEA15C,KAAA29B,GAAAsqE,GAAAzK,GAAAC,GAAAF,GAAA2K,GAAAC,GACAnoG,KAAA49B,GAAA2/D,GAAA2K,GAAAzK,GAAAwK,GAAAzK,GAAA2K,GACAnoG,KAAA69B,GAAA0/D,GAAAC,GAAA2K,GAAAF,GAAAC,GAAAzK,GACAz9F,KAAAsW,GAAAinF,GAAAC,GAAAC,GAAAwK,GAAAC,GAAAC,IAEA,QAAAzuD,OAEA15C,KAAA29B,GAAAsqE,GAAAzK,GAAAC,GAAAF,GAAA2K,GAAAC,GACAnoG,KAAA49B,GAAA2/D,GAAA2K,GAAAzK,GAAAwK,GAAAzK,GAAA2K,GACAnoG,KAAA69B,GAAA0/D,GAAAC,GAAA2K,GAAAF,GAAAC,GAAAzK,GACAz9F,KAAAsW,GAAAinF,GAAAC,GAAAC,GAAAwK,GAAAC,GAAAC,IAEA,QAAAzuD,OAEA15C,KAAA29B,GAAAsqE,GAAAzK,GAAAC,GAAAF,GAAA2K,GAAAC,GACAnoG,KAAA49B,GAAA2/D,GAAA2K,GAAAzK,GAAAwK,GAAAzK,GAAA2K,GACAnoG,KAAA69B,GAAA0/D,GAAAC,GAAA2K,GAAAF,GAAAC,GAAAzK,GACAz9F,KAAAsW,GAAAinF,GAAAC,GAAAC,GAAAwK,GAAAC,GAAAC,IAEA,QAAAzuD,OAEA15C,KAAA29B,GAAAsqE,GAAAzK,GAAAC,GAAAF,GAAA2K,GAAAC,GACAnoG,KAAA49B,GAAA2/D,GAAA2K,GAAAzK,GAAAwK,GAAAzK,GAAA2K,GACAnoG,KAAA69B,GAAA0/D,GAAAC,GAAA2K,GAAAF,GAAAC,GAAAzK,GACAz9F,KAAAsW,GAAAinF,GAAAC,GAAAC,GAAAwK,GAAAC,GAAAC,IAEA,QAAAzuD,OAEA15C,KAAA29B,GAAAsqE,GAAAzK,GAAAC,GAAAF,GAAA2K,GAAAC,GACAnoG,KAAA49B,GAAA2/D,GAAA2K,GAAAzK,GAAAwK,GAAAzK,GAAA2K,GACAnoG,KAAA69B,GAAA0/D,GAAAC,GAAA2K,GAAAF,GAAAC,GAAAzK,GACAz9F,KAAAsW,GAAAinF,GAAAC,GAAAC,GAAAwK,GAAAC,GAAAC,IAEA,QAAAzuD,QAEA15C,KAAA29B,GAAAsqE,GAAAzK,GAAAC,GAAAF,GAAA2K,GAAAC,GACAnoG,KAAA49B,GAAA2/D,GAAA2K,GAAAzK,GAAAwK,GAAAzK,GAAA2K,GACAnoG,KAAA69B,GAAA0/D,GAAAC,GAAA2K,GAAAF,GAAAC,GAAAzK,GACAz9F,KAAAsW,GAAAinF,GAAAC,GAAAC,GAAAwK,GAAAC,GAAAC,KAIA,IAAAxzD,QAAA30C,KAAA8nG,mBAEA9nG,MAIAooG,iBAAA,SAAAC,KAAA5/C,OAMA,GAAA6/C,WAAA7/C,MAAA,EAAA7yC,EAAAhH,KAAA6zE,IAAA6lB,UASA,OAPAtoG,MAAA29B,GAAA0qE,KAAA7wF,EAAA5B,EACA5V,KAAA49B,GAAAyqE,KAAApuF,EAAArE,EACA5V,KAAA69B,GAAAwqE,KAAAzrE,EAAAhnB,EACA5V,KAAAsW,GAAA1H,KAAA45C,IAAA8/C,WAEAtoG,KAAA8nG,mBAEA9nG,MAIAuoG,sBAAA,SAAAj8F,GAMA,GAOAsJ,GAPA8vF,GAAAp5F,EAAA3N,SAEAgnG,IAAAD,GAAA,GAAAE,IAAAF,GAAA,GAAAG,IAAAH,GAAA,GACAI,IAAAJ,GAAA,GAAAK,IAAAL,GAAA,GAAAM,IAAAN,GAAA,GACAO,IAAAP,GAAA,GAAAQ,IAAAR,GAAA,GAAAS,IAAAT,GAAA,IAEA8C,MAAA7C,IAAAI,IAAAI,GA2CA,OAxCAqC,OAAA,GAEA5yF,EAAA,GAAAhH,KAAA8kE,KAAA80B,MAAA,GAEAxoG,KAAAsW,GAAA,IAAAV,EACA5V,KAAA29B,IAAAuoE,IAAAF,KAAApwF,EACA5V,KAAA49B,IAAAioE,IAAAI,KAAArwF,EACA5V,KAAA69B,IAAAioE,IAAAF,KAAAhwF,GAEA+vF,IAAAI,KAAAJ,IAAAQ,KAEAvwF,EAAA,EAAAhH,KAAA8kE,KAAA,EAAAiyB,IAAAI,IAAAI,KAEAnmG,KAAAsW,IAAA4vF,IAAAF,KAAApwF,EACA5V,KAAA29B,GAAA,IAAA/nB,EACA5V,KAAA49B,IAAAgoE,IAAAE,KAAAlwF,EACA5V,KAAA69B,IAAAgoE,IAAAI,KAAArwF,GAEAmwF,IAAAI,KAEAvwF,EAAA,EAAAhH,KAAA8kE,KAAA,EAAAqyB,IAAAJ,IAAAQ,KAEAnmG,KAAAsW,IAAAuvF,IAAAI,KAAArwF,EACA5V,KAAA29B,IAAAioE,IAAAE,KAAAlwF,EACA5V,KAAA49B,GAAA,IAAAhoB,EACA5V,KAAA69B,IAAAmoE,IAAAE,KAAAtwF,IAIAA,EAAA,EAAAhH,KAAA8kE,KAAA,EAAAyyB,IAAAR,IAAAI,KAEA/lG,KAAAsW,IAAAwvF,IAAAF,KAAAhwF,EACA5V,KAAA29B,IAAAkoE,IAAAI,KAAArwF,EACA5V,KAAA49B,IAAAooE,IAAAE,KAAAtwF,EACA5V,KAAA69B,GAAA,IAAAjoB,GAIA5V,KAAA8nG,mBAEA9nG,MAIAyoG,mBAAA,WAIA,GACA7pE,GADA6vD,GAAA,GAAA3wD,QAKA,OAAA,UAAA4qE,MAAAC,KA+BA,WA7BAx7F,KAAAshF,KAAAA,GAAA,GAAA3wD,UAEAc,EAAA8pE,MAAAzgB,IAAA0gB,KAAA,EAEA/pE,EARA,MAUAA,EAAA,EAEAhwB,KAAAc,IAAAg5F,MAAAlxF,GAAA5I,KAAAc,IAAAg5F,MAAA9rE,GAEA6xD,GAAA59E,KAAA63F,MAAAzuF,EAAAyuF,MAAAlxF,EAAA,GAIAi3E,GAAA59E,IAAA,GAAA63F,MAAA9rE,EAAA8rE,MAAAzuF,IAMAw0E,GAAArP,aAAAspB,MAAAC,KAIA3oG,KAAA29B,GAAA8wD,GAAAj3E,EACAxX,KAAA49B,GAAA6wD,GAAAx0E,EACAja,KAAA69B,GAAA4wD,GAAA7xD,EACA58B,KAAAsW,GAAAsoB,EAEA5+B,KAAAypD,gBAMAm/C,QAAA,WAEA,MAAA5oG,MAAA6oG,YAAAp/C,aAIAo/C,UAAA,WAQA,MANA7oG,MAAA29B,KAAA,EACA39B,KAAA49B,KAAA,EACA59B,KAAA69B,KAAA,EAEA79B,KAAA8nG,mBAEA9nG,MAIAioF,IAAA,SAAA3oD,GAEA,MAAAt/B,MAAA29B,GAAA2B,EAAA3B,GAAA39B,KAAA49B,GAAA0B,EAAA1B,GAAA59B,KAAA69B,GAAAyB,EAAAzB,GAAA79B,KAAAsW,GAAAgpB,EAAAhpB,IAIA4tF,SAAA,WAEA,MAAAlkG,MAAA29B,GAAA39B,KAAA29B,GAAA39B,KAAA49B,GAAA59B,KAAA49B,GAAA59B,KAAA69B,GAAA79B,KAAA69B,GAAA79B,KAAAsW,GAAAtW,KAAAsW,IAIA1W,OAAA,WAEA,MAAAgP,MAAA8kE,KAAA1zE,KAAA29B,GAAA39B,KAAA29B,GAAA39B,KAAA49B,GAAA59B,KAAA49B,GAAA59B,KAAA69B,GAAA79B,KAAA69B,GAAA79B,KAAAsW,GAAAtW,KAAAsW,KAIAmzC,UAAA,WAEA,GAAA/lC,GAAA1jB,KAAAJ,QAsBA,OApBA,KAAA8jB,GAEA1jB,KAAA29B,GAAA,EACA39B,KAAA49B,GAAA,EACA59B,KAAA69B,GAAA,EACA79B,KAAAsW,GAAA,IAIAoN,EAAA,EAAAA,EAEA1jB,KAAA29B,GAAA39B,KAAA29B,GAAAja,EACA1jB,KAAA49B,GAAA59B,KAAA49B,GAAAla,EACA1jB,KAAA69B,GAAA79B,KAAA69B,GAAAna,EACA1jB,KAAAsW,GAAAtW,KAAAsW,GAAAoN,GAIA1jB,KAAA8nG,mBAEA9nG,MAIAu3C,SAAA,SAAAwrC,EAAA/uB,GAEA,WAAA7mD,KAAA6mD,GAEAjkD,QAAAH,KAAA,0GACA5P,KAAA8oG,oBAAA/lB,EAAA/uB,IAIAh0D,KAAA8oG,oBAAA9oG,KAAA+iF,IAIA75B,YAAA,SAAA65B,GAEA,MAAA/iF,MAAA8oG,oBAAA/lB,EAAA/iF,OAIA8oG,oBAAA,SAAAl+F,EAAAC,GAIA,GAAAk+F,KAAAn+F,EAAA+yB,GAAAqrE,IAAAp+F,EAAAgzB,GAAAqrE,IAAAr+F,EAAAizB,GAAAqrE,IAAAt+F,EAAA0L,GACA6yF,IAAAt+F,EAAA8yB,GAAAyrE,IAAAv+F,EAAA+yB,GAAAyrE,IAAAx+F,EAAAgzB,GAAAyrE,IAAAz+F,EAAAyL,EASA,OAPAtW,MAAA29B,GAAAorE,IAAAO,IAAAJ,IAAAC,IAAAH,IAAAK,IAAAJ,IAAAG,IACAppG,KAAA49B,GAAAorE,IAAAM,IAAAJ,IAAAE,IAAAH,IAAAE,IAAAJ,IAAAM,IACArpG,KAAA69B,GAAAorE,IAAAK,IAAAJ,IAAAG,IAAAN,IAAAK,IAAAJ,IAAAG,IACAnpG,KAAAsW,GAAA4yF,IAAAI,IAAAP,IAAAI,IAAAH,IAAAI,IAAAH,IAAAI,IAEArpG,KAAA8nG,mBAEA9nG,MAIA4mG,MAAA,SAAAE,GAAA5yE,GAEA,GAAA,IAAAA,EAAA,MAAAl0B,KACA,IAAA,IAAAk0B,EAAA,MAAAl0B,MAAAmpC,KAAA29D,GAEA,IAAAtvF,GAAAxX,KAAA29B,GAAA1jB,EAAAja,KAAA49B,GAAAhB,EAAA58B,KAAA69B,GAAA9a,EAAA/iB,KAAAsW,GAIAizF,aAAAxmF,EAAA+jF,GAAAxwF,GAAAkB,EAAAsvF,GAAAnpE,GAAA1jB,EAAA6sF,GAAAlpE,GAAAhB,EAAAkqE,GAAAjpE,EAiBA,IAfA0rE,aAAA,GAEAvpG,KAAAsW,IAAAwwF,GAAAxwF,GACAtW,KAAA29B,IAAAmpE,GAAAnpE,GACA39B,KAAA49B,IAAAkpE,GAAAlpE,GACA59B,KAAA69B,IAAAipE,GAAAjpE,GAEA0rE,cAAAA,cAIAvpG,KAAAmpC,KAAA29D,IAIAyC,cAAA,EAOA,MALAvpG,MAAAsW,GAAAyM,EACA/iB,KAAA29B,GAAAnmB,EACAxX,KAAA49B,GAAA3jB,EACAja,KAAA69B,GAAAjB,EAEA58B,IAIA,IAAAwpG,cAAA56F,KAAA8kE,KAAA,EAAA61B,aAAAA,aAEA,IAAA36F,KAAAc,IAAA85F,cAAA,KAOA,MALAxpG,MAAAsW,GAAA,IAAAyM,EAAA/iB,KAAAsW,IACAtW,KAAA29B,GAAA,IAAAnmB,EAAAxX,KAAA29B,IACA39B,KAAA49B,GAAA,IAAA3jB,EAAAja,KAAA49B,IACA59B,KAAA69B,GAAA,IAAAjB,EAAA58B,KAAA69B,IAEA79B,IAIA,IAAAypG,WAAA76F,KAAAkyE,MAAA0oB,aAAAD,cACAG,OAAA96F,KAAA6zE,KAAA,EAAAvuD,GAAAu1E,WAAAD,aACAG,OAAA/6F,KAAA6zE,IAAAvuD,EAAAu1E,WAAAD,YASA,OAPAxpG,MAAAsW,GAAAyM,EAAA2mF,OAAA1pG,KAAAsW,GAAAqzF,OACA3pG,KAAA29B,GAAAnmB,EAAAkyF,OAAA1pG,KAAA29B,GAAAgsE,OACA3pG,KAAA49B,GAAA3jB,EAAAyvF,OAAA1pG,KAAA49B,GAAA+rE,OACA3pG,KAAA69B,GAAAjB,EAAA8sE,OAAA1pG,KAAA69B,GAAA8rE,OAEA3pG,KAAA8nG,mBAEA9nG,MAIAw7D,OAAA,SAAAvhB,YAEA,MAAAA,YAAAtc,KAAA39B,KAAA29B,IAAAsc,WAAArc,KAAA59B,KAAA49B,IAAAqc,WAAApc,KAAA79B,KAAA69B,IAAAoc,WAAA3jC,KAAAtW,KAAAsW,IAIA0vD,UAAA,SAAAnxD,MAAAsU,QAWA,WATAhc,KAAAgc,SAAAA,OAAA,GAEAnpB,KAAA29B,GAAA9oB,MAAAsU,QACAnpB,KAAA49B,GAAA/oB,MAAAsU,OAAA,GACAnpB,KAAA69B,GAAAhpB,MAAAsU,OAAA,GACAnpB,KAAAsW,GAAAzB,MAAAsU,OAAA,GAEAnpB,KAAA8nG,mBAEA9nG,MAIAurB,QAAA,SAAA1W,MAAAsU,QAUA,WARAhc,KAAA0H,QAAAA,cACA1H,KAAAgc,SAAAA,OAAA,GAEAtU,MAAAsU,QAAAnpB,KAAA29B,GACA9oB,MAAAsU,OAAA,GAAAnpB,KAAA49B,GACA/oB,MAAAsU,OAAA,GAAAnpB,KAAA69B,GACAhpB,MAAAsU,OAAA,GAAAnpB,KAAAsW,GAEAzB,OAIA0lC,SAAA,SAAAhmC,UAIA,MAFAvU,MAAA8nG,iBAAAvzF,SAEAvU,MAIA8nG,iBAAA,eAqBAj+F,OAAAm3F,OAAAljE,QAAAthC,WAEAk/C,WAAA,EAEA7qC,IAAA,SAAA2G,EAAAyC,EAAA2iB,GAMA,MAJA58B,MAAAwX,EAAAA,EACAxX,KAAAia,EAAAA,EACAja,KAAA48B,EAAAA,EAEA58B,MAIAkjG,UAAA,SAAAC,QAMA,MAJAnjG,MAAAwX,EAAA2rF,OACAnjG,KAAAia,EAAAkpF,OACAnjG,KAAA48B,EAAAumE,OAEAnjG,MAIAojG,KAAA,SAAA5rF,GAIA,MAFAxX,MAAAwX,EAAAA,EAEAxX,MAIAqjG,KAAA,SAAAppF,GAIA,MAFAja,MAAAia,EAAAA,EAEAja,MAIAqlG,KAAA,SAAAzoE,GAIA,MAFA58B,MAAA48B,EAAAA,EAEA58B,MAIAsjG,aAAA,SAAAvyE,MAAA7hB,OAEA,OAAA6hB,OAEA,IAAA,GAAA/wB,KAAAwX,EAAAtI,KAAA,MACA,KAAA,GAAAlP,KAAAia,EAAA/K,KAAA,MACA,KAAA,GAAAlP,KAAA48B,EAAA1tB,KAAA,MACA,SAAA,KAAA,IAAAqB,OAAA,0BAAAwgB,OAIA,MAAA/wB,OAIAujG,aAAA,SAAAxyE,OAEA,OAAAA,OAEA,IAAA,GAAA,MAAA/wB,MAAAwX,CACA,KAAA,GAAA,MAAAxX,MAAAia,CACA,KAAA,GAAA,MAAAja,MAAA48B,CACA,SAAA,KAAA,IAAArsB,OAAA,0BAAAwgB,SAMAhH,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAAwX,EAAAxX,KAAAia,EAAAja,KAAA48B,IAIAuM,KAAA,SAAA7J,GAMA,MAJAt/B,MAAAwX,EAAA8nB,EAAA9nB,EACAxX,KAAAia,EAAAqlB,EAAArlB,EACAja,KAAA48B,EAAA0C,EAAA1C,EAEA58B,MAIAzC,IAAA,SAAA+hC,EAAAvc,GAEA,WAAA5V,KAAA4V,GAEAhT,QAAAH,KAAA,yFACA5P,KAAA0jF,WAAApkD,EAAAvc,KAIA/iB,KAAAwX,GAAA8nB,EAAA9nB,EACAxX,KAAAia,GAAAqlB,EAAArlB,EACAja,KAAA48B,GAAA0C,EAAA1C,EAEA58B,OAIAwjG,UAAA,SAAA5tF,GAMA,MAJA5V,MAAAwX,GAAA5B,EACA5V,KAAAia,GAAArE,EACA5V,KAAA48B,GAAAhnB,EAEA5V,MAIA0jF,WAAA,SAAA94E,EAAAC,GAMA,MAJA7K,MAAAwX,EAAA5M,EAAA4M,EAAA3M,EAAA2M,EACAxX,KAAAia,EAAArP,EAAAqP,EAAApP,EAAAoP,EACAja,KAAA48B,EAAAhyB,EAAAgyB,EAAA/xB,EAAA+xB,EAEA58B,MAIAyjG,gBAAA,SAAAnkE,EAAA1pB,GAMA,MAJA5V,MAAAwX,GAAA8nB,EAAA9nB,EAAA5B,EACA5V,KAAAia,GAAAqlB,EAAArlB,EAAArE,EACA5V,KAAA48B,GAAA0C,EAAA1C,EAAAhnB,EAEA5V,MAIAioD,IAAA,SAAA3oB,EAAAvc,GAEA,WAAA5V,KAAA4V,GAEAhT,QAAAH,KAAA,yFACA5P,KAAAm/E,WAAA7/C,EAAAvc,KAIA/iB,KAAAwX,GAAA8nB,EAAA9nB,EACAxX,KAAAia,GAAAqlB,EAAArlB,EACAja,KAAA48B,GAAA0C,EAAA1C,EAEA58B,OAIA0jG,UAAA,SAAA9tF,GAMA,MAJA5V,MAAAwX,GAAA5B,EACA5V,KAAAia,GAAArE,EACA5V,KAAA48B,GAAAhnB,EAEA5V,MAIAm/E,WAAA,SAAAv0E,EAAAC,GAMA,MAJA7K,MAAAwX,EAAA5M,EAAA4M,EAAA3M,EAAA2M,EACAxX,KAAAia,EAAArP,EAAAqP,EAAApP,EAAAoP,EACAja,KAAA48B,EAAAhyB,EAAAgyB,EAAA/xB,EAAA+xB,EAEA58B,MAIAu3C,SAAA,SAAAjY,EAAAvc,GAEA,WAAA5V,KAAA4V,GAEAhT,QAAAH,KAAA,mGACA5P,KAAA4pG,gBAAAtqE,EAAAvc,KAIA/iB,KAAAwX,GAAA8nB,EAAA9nB,EACAxX,KAAAia,GAAAqlB,EAAArlB,EACAja,KAAA48B,GAAA0C,EAAA1C,EAEA58B,OAIA+nD,eAAA,SAAAo7C,QAMA,MAJAnjG,MAAAwX,GAAA2rF,OACAnjG,KAAAia,GAAAkpF,OACAnjG,KAAA48B,GAAAumE,OAEAnjG,MAIA4pG,gBAAA,SAAAh/F,EAAAC,GAMA,MAJA7K,MAAAwX,EAAA5M,EAAA4M,EAAA3M,EAAA2M,EACAxX,KAAAia,EAAArP,EAAAqP,EAAApP,EAAAoP,EACAja,KAAA48B,EAAAhyB,EAAAgyB,EAAA/xB,EAAA+xB,EAEA58B,MAIA6pG,WAAA,WAEA,GAAA5vD,YAAA,GAAAvc,WAEA,OAAA,UAAAqqE,OAQA,MANAA,QAAAA,MAAAC,SAEAj4F,QAAAiuB,MAAA,+FAIAh+B,KAAA8pG,gBAAA7vD,WAAAC,aAAA6tD,YAMAgC,eAAA,WAEA,GAAA9vD,YAAA,GAAAvc,WAEA,OAAA,UAAA2qE,KAAA5/C,OAEA,MAAAzoD,MAAA8pG,gBAAA7vD,WAAAmuD,iBAAAC,KAAA5/C,YAMAuhD,aAAA,SAAA19F,GAEA,GAAAkL,GAAAxX,KAAAwX,EAAAyC,EAAAja,KAAAia,EAAA2iB,EAAA58B,KAAA48B,EACA75B,EAAAuJ,EAAA3N,QAMA,OAJAqB,MAAAwX,EAAAzU,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,GAAA65B,EACA58B,KAAAia,EAAAlX,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,GAAA65B,EACA58B,KAAA48B,EAAA75B,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,GAAA65B,EAEA58B,MAIAgpC,aAAA,SAAA18B,GAEA,GAAAkL,GAAAxX,KAAAwX,EAAAyC,EAAAja,KAAAia,EAAA2iB,EAAA58B,KAAA48B,EACA75B,EAAAuJ,EAAA3N,SAEAokB,EAAA,GAAAhgB,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,IAAA65B,EAAA75B,EAAA,IAMA,OAJA/C,MAAAwX,GAAAzU,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,GAAA65B,EAAA75B,EAAA,KAAAggB,EACA/iB,KAAAia,GAAAlX,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,GAAA65B,EAAA75B,EAAA,KAAAggB,EACA/iB,KAAA48B,GAAA75B,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,IAAA65B,EAAA75B,EAAA,KAAAggB,EAEA/iB,MAIA8pG,gBAAA,SAAA/mB,GAEA,GAAAvrE,GAAAxX,KAAAwX,EAAAyC,EAAAja,KAAAia,EAAA2iB,EAAA58B,KAAA48B,EACAqtE,GAAAlnB,EAAAvrE,EAAA0yF,GAAAnnB,EAAA9oE,EAAAkwF,GAAApnB,EAAAnmD,EAAAwtE,GAAArnB,EAAAhgE,EAIAi8B,GAAAorD,GAAA5yF,EAAA0yF,GAAAttE,EAAAutE,GAAAlwF,EACAglC,GAAAmrD,GAAAnwF,EAAAkwF,GAAA3yF,EAAAyyF,GAAArtE,EACAytE,GAAAD,GAAAxtE,EAAAqtE,GAAAhwF,EAAAiwF,GAAA1yF,EACA8yF,IAAAL,GAAAzyF,EAAA0yF,GAAAjwF,EAAAkwF,GAAAvtE,CAQA,OAJA58B,MAAAwX,EAAAwnC,GAAAorD,GAAAE,IAAAL,GAAAhrD,IAAAkrD,GAAAE,IAAAH,GACAlqG,KAAAia,EAAAglC,GAAAmrD,GAAAE,IAAAJ,GAAAG,IAAAJ,GAAAjrD,IAAAmrD,GACAnqG,KAAA48B,EAAAytE,GAAAD,GAAAE,IAAAH,GAAAnrD,IAAAkrD,GAAAjrD,IAAAgrD,GAEAjqG,MAIAwgG,QAAA,WAEA,GAAAtpD,QAAA,GAAAnZ,QAEA,OAAA,UAAA6J,QAGA,MADAsP,QAAAtK,iBAAAhF,OAAAsB,iBAAAgO,OAAAkvB,WAAAx+B,OAAAmB,cACA/oC,KAAAgpC,aAAAkO,YAMAwpD,UAAA,WAEA,GAAAxpD,QAAA,GAAAnZ,QAEA,OAAA,UAAA6J,QAGA,MADAsP,QAAAtK,iBAAAhF,OAAAmB,YAAAmO,OAAAkvB,WAAAx+B,OAAAsB,mBACAlpC,KAAAgpC,aAAAkO,YAMAgR,mBAAA,SAAA57C,GAKA,GAAAkL,GAAAxX,KAAAwX,EAAAyC,EAAAja,KAAAia,EAAA2iB,EAAA58B,KAAA48B,EACA75B,EAAAuJ,EAAA3N,QAMA,OAJAqB,MAAAwX,EAAAzU,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,GAAA65B,EACA58B,KAAAia,EAAAlX,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,GAAA65B,EACA58B,KAAA48B,EAAA75B,EAAA,GAAAyU,EAAAzU,EAAA,GAAAkX,EAAAlX,EAAA,IAAA65B,EAEA58B,KAAAypD,aAIAk6C,OAAA,SAAArkE,GAMA,MAJAt/B,MAAAwX,GAAA8nB,EAAA9nB,EACAxX,KAAAia,GAAAqlB,EAAArlB,EACAja,KAAA48B,GAAA0C,EAAA1C,EAEA58B,MAIAygF,aAAA,SAAA0iB,QAEA,MAAAnjG,MAAA+nD,eAAA,EAAAo7C,SAIA3zF,IAAA,SAAA8vB,GAMA,MAJAt/B,MAAAwX,EAAA5I,KAAAY,IAAAxP,KAAAwX,EAAA8nB,EAAA9nB,GACAxX,KAAAia,EAAArL,KAAAY,IAAAxP,KAAAia,EAAAqlB,EAAArlB,GACAja,KAAA48B,EAAAhuB,KAAAY,IAAAxP,KAAA48B,EAAA0C,EAAA1C,GAEA58B,MAIAkU,IAAA,SAAAorB,GAMA,MAJAt/B,MAAAwX,EAAA5I,KAAAsF,IAAAlU,KAAAwX,EAAA8nB,EAAA9nB,GACAxX,KAAAia,EAAArL,KAAAsF,IAAAlU,KAAAia,EAAAqlB,EAAArlB,GACAja,KAAA48B,EAAAhuB,KAAAsF,IAAAlU,KAAA48B,EAAA0C,EAAA1C,GAEA58B,MAIAomF,MAAA,SAAA52E,IAAA0E,KAQA,MAJAlU,MAAAwX,EAAA5I,KAAAsF,IAAA1E,IAAAgI,EAAA5I,KAAAY,IAAA0E,IAAAsD,EAAAxX,KAAAwX,IACAxX,KAAAia,EAAArL,KAAAsF,IAAA1E,IAAAyK,EAAArL,KAAAY,IAAA0E,IAAA+F,EAAAja,KAAAia,IACAja,KAAA48B,EAAAhuB,KAAAsF,IAAA1E,IAAAotB,EAAAhuB,KAAAY,IAAA0E,IAAA0oB,EAAA58B,KAAA48B,IAEA58B,MAIA4jG,YAAA,WAEA,GAAAp0F,KAAA,GAAAsuB,SACA5pB,IAAA,GAAA4pB,QAEA,OAAA,UAAA+lE,OAAAC,QAKA,MAHAt0F,KAAAqB,IAAAgzF,OAAAA,OAAAA,QACA3vF,IAAArD,IAAAizF,OAAAA,OAAAA,QAEA9jG,KAAAomF,MAAA52E,IAAA0E,SAMA6vF,YAAA,SAAAv0F,IAAA0E,KAEA,GAAAtU,QAAAI,KAAAJ,QAEA,OAAAI,MAAAygF,aAAA7gF,QAAA,GAAAmoD,eAAAn5C,KAAAsF,IAAA1E,IAAAZ,KAAAY,IAAA0E,IAAAtU,WAIAkP,MAAA,WAMA,MAJA9O,MAAAwX,EAAA5I,KAAAE,MAAA9O,KAAAwX,GACAxX,KAAAia,EAAArL,KAAAE,MAAA9O,KAAAia,GACAja,KAAA48B,EAAAhuB,KAAAE,MAAA9O,KAAA48B,GAEA58B,MAIA6O,KAAA,WAMA,MAJA7O,MAAAwX,EAAA5I,KAAAC,KAAA7O,KAAAwX,GACAxX,KAAAia,EAAArL,KAAAC,KAAA7O,KAAAia,GACAja,KAAA48B,EAAAhuB,KAAAC,KAAA7O,KAAA48B,GAEA58B,MAIAkpB,MAAA,WAMA,MAJAlpB,MAAAwX,EAAA5I,KAAAsa,MAAAlpB,KAAAwX,GACAxX,KAAAia,EAAArL,KAAAsa,MAAAlpB,KAAAia,GACAja,KAAA48B,EAAAhuB,KAAAsa,MAAAlpB,KAAA48B,GAEA58B,MAIAgkG,YAAA,WAMA,MAJAhkG,MAAAwX,EAAAxX,KAAAwX,EAAA,EAAA5I,KAAAC,KAAA7O,KAAAwX,GAAA5I,KAAAE,MAAA9O,KAAAwX,GACAxX,KAAAia,EAAAja,KAAAia,EAAA,EAAArL,KAAAC,KAAA7O,KAAAia,GAAArL,KAAAE,MAAA9O,KAAAia,GACAja,KAAA48B,EAAA58B,KAAA48B,EAAA,EAAAhuB,KAAAC,KAAA7O,KAAA48B,GAAAhuB,KAAAE,MAAA9O,KAAA48B,GAEA58B,MAIAikG,OAAA,WAMA,MAJAjkG,MAAAwX,GAAAxX,KAAAwX,EACAxX,KAAAia,GAAAja,KAAAia,EACAja,KAAA48B,GAAA58B,KAAA48B,EAEA58B,MAIAioF,IAAA,SAAA3oD,GAEA,MAAAt/B,MAAAwX,EAAA8nB,EAAA9nB,EAAAxX,KAAAia,EAAAqlB,EAAArlB,EAAAja,KAAA48B,EAAA0C,EAAA1C,GAMAsnE,SAAA,WAEA,MAAAlkG,MAAAwX,EAAAxX,KAAAwX,EAAAxX,KAAAia,EAAAja,KAAAia,EAAAja,KAAA48B,EAAA58B,KAAA48B,GAIAh9B,OAAA,WAEA,MAAAgP,MAAA8kE,KAAA1zE,KAAAwX,EAAAxX,KAAAwX,EAAAxX,KAAAia,EAAAja,KAAAia,EAAAja,KAAA48B,EAAA58B,KAAA48B,IAIAunE,gBAAA,WAEA,MAAAv1F,MAAAc,IAAA1P,KAAAwX,GAAA5I,KAAAc,IAAA1P,KAAAia,GAAArL,KAAAc,IAAA1P,KAAA48B,IAIA6sB,UAAA,WAEA,MAAAzpD,MAAAygF,aAAAzgF,KAAAJ,UAAA,IAIAq9F,UAAA,SAAAr9F,QAEA,MAAAI,MAAAypD,YAAA1B,eAAAnoD,SAIA8/E,KAAA,SAAApgD,EAAA8jB,OAMA,MAJApjD,MAAAwX,IAAA8nB,EAAA9nB,EAAAxX,KAAAwX,GAAA4rC,MACApjD,KAAAia,IAAAqlB,EAAArlB,EAAAja,KAAAia,GAAAmpC,MACApjD,KAAA48B,IAAA0C,EAAA1C,EAAA58B,KAAA48B,GAAAwmB,MAEApjD,MAIAykG,YAAA,SAAAhW,GAAAc,GAAAnsC,OAEA,MAAApjD,MAAAm/E,WAAAoQ,GAAAd,IAAA1mC,eAAA3E,OAAA7lD,IAAAkxF,KAIA8b,MAAA,SAAAjrE,EAAAvc,GAEA,OAAA5V,KAAA4V,EAGA,MADAhT,SAAAH,KAAA,6FACA5P,KAAAo/E,aAAA9/C,EAAAvc,EAIA,IAAAvL,GAAAxX,KAAAwX,EAAAyC,EAAAja,KAAAia,EAAA2iB,EAAA58B,KAAA48B,CAMA,OAJA58B,MAAAwX,EAAAyC,EAAAqlB,EAAA1C,EAAAA,EAAA0C,EAAArlB,EACAja,KAAAia,EAAA2iB,EAAA0C,EAAA9nB,EAAAA,EAAA8nB,EAAA1C,EACA58B,KAAA48B,EAAAplB,EAAA8nB,EAAArlB,EAAAA,EAAAqlB,EAAA9nB,EAEAxX,MAIAo/E,aAAA,SAAAx0E,EAAAC,GAEA,GAAA2/F,IAAA5/F,EAAA4M,EAAAizF,GAAA7/F,EAAAqP,EAAAywF,GAAA9/F,EAAAgyB,EACA+tE,GAAA9/F,EAAA2M,EAAAozF,GAAA//F,EAAAoP,EAAA4wF,GAAAhgG,EAAA+xB,CAMA,OAJA58B,MAAAwX,EAAAizF,GAAAI,GAAAH,GAAAE,GACA5qG,KAAAia,EAAAywF,GAAAC,GAAAH,GAAAK,GACA7qG,KAAA48B,EAAA4tE,GAAAI,GAAAH,GAAAE,GAEA3qG,MAIA8qG,gBAAA,SAAAnrD,QAEA,GAAAwjD,QAAAxjD,OAAAsoC,IAAAjoF,MAAA2/C,OAAAukD,UAEA,OAAAlkG,MAAAmpC,KAAAwW,QAAAoI,eAAAo7C,SAIA4H,eAAA,WAEA,GAAAtc,IAAA,GAAA3wD,QAEA,OAAA,UAAAktE,aAIA,MAFAvc,IAAAtlD,KAAAnpC,MAAA8qG,gBAAAE,aAEAhrG,KAAAioD,IAAAwmC,QAMAwc,QAAA,WAKA,GAAAxc,IAAA,GAAA3wD,QAEA,OAAA,UAAAuT,QAEA,MAAArxC,MAAAioD,IAAAwmC,GAAAtlD,KAAAkI,QAAA0W,eAAA,EAAA/nD,KAAAioF,IAAA52C,cAMA65D,QAAA,SAAA5rE,GAEA,GAAAopD,OAAA1oF,KAAAioF,IAAA3oD,GAAA1wB,KAAA8kE,KAAA1zE,KAAAkkG,WAAA5kE,EAAA4kE,WAIA,OAAAt1F,MAAA42F,KAAA9pE,MAAA0qD,MAAAsC,OAAA,EAAA,KAIA0b,WAAA,SAAA9kE,GAEA,MAAA1wB,MAAA8kE,KAAA1zE,KAAAqkG,kBAAA/kE,KAIA+kE,kBAAA,SAAA/kE,GAEA,GAAAglE,IAAAtkG,KAAAwX,EAAA8nB,EAAA9nB,EAAA+sF,GAAAvkG,KAAAia,EAAAqlB,EAAArlB,EAAAkxF,GAAAnrG,KAAA48B,EAAA0C,EAAA1C,CAEA,OAAA0nE,IAAAA,GAAAC,GAAAA,GAAA4G,GAAAA,IAIA3G,oBAAA,SAAAllE,GAEA,MAAA1wB,MAAAc,IAAA1P,KAAAwX,EAAA8nB,EAAA9nB,GAAA5I,KAAAc,IAAA1P,KAAAia,EAAAqlB,EAAArlB,GAAArL,KAAAc,IAAA1P,KAAA48B,EAAA0C,EAAA1C,IAIAwuE,iBAAA,SAAAx1F,GAEA,GAAAy1F,cAAAz8F,KAAA6zE,IAAA7sE,EAAA0wE,KAAA1wE,EAAAs7B,MAMA,OAJAlxC,MAAAwX,EAAA6zF,aAAAz8F,KAAA6zE,IAAA7sE,EAAA8yE,OACA1oF,KAAAia,EAAArL,KAAA45C,IAAA5yC,EAAA0wE,KAAA1wE,EAAAs7B,OACAlxC,KAAA48B,EAAAyuE,aAAAz8F,KAAA45C,IAAA5yC,EAAA8yE,OAEA1oF,MAIAsrG,mBAAA,SAAAvpF,GAMA,MAJA/hB,MAAAwX,EAAAuK,EAAAmvB,OAAAtiC,KAAA6zE,IAAA1gE,EAAA2mE,OACA1oF,KAAAia,EAAA8H,EAAA9H,EACAja,KAAA48B,EAAA7a,EAAAmvB,OAAAtiC,KAAA45C,IAAAzmC,EAAA2mE,OAEA1oF,MAIAm3C,sBAAA,SAAA7qC,GAEA,GAAAvJ,GAAAuJ,EAAA3N,QAMA,OAJAqB,MAAAwX,EAAAzU,EAAA,IACA/C,KAAAia,EAAAlX,EAAA,IACA/C,KAAA48B,EAAA75B,EAAA,IAEA/C,MAIAurG,mBAAA,SAAAj/F,GAEA,GAAAk/F,IAAAxrG,KAAAyrG,oBAAAn/F,EAAA,GAAA1M,SACA8rG,GAAA1rG,KAAAyrG,oBAAAn/F,EAAA,GAAA1M,SACA+rG,GAAA3rG,KAAAyrG,oBAAAn/F,EAAA,GAAA1M,QAMA,OAJAI,MAAAwX,EAAAg0F,GACAxrG,KAAAia,EAAAyxF,GACA1rG,KAAA48B,EAAA+uE,GAEA3rG,MAIAyrG,oBAAA,SAAAn/F,EAAAykB,OAEA,MAAA/wB,MAAAgmE,UAAA15D,EAAA3N,SAAA,EAAAoyB,QAIAyqC,OAAA,SAAAl8B,GAEA,MAAAA,GAAA9nB,IAAAxX,KAAAwX,GAAA8nB,EAAArlB,IAAAja,KAAAia,GAAAqlB,EAAA1C,IAAA58B,KAAA48B,GAIAopC,UAAA,SAAAnxD,MAAAsU,QAQA,WANAhc,KAAAgc,SAAAA,OAAA,GAEAnpB,KAAAwX,EAAA3C,MAAAsU,QACAnpB,KAAAia,EAAApF,MAAAsU,OAAA,GACAnpB,KAAA48B,EAAA/nB,MAAAsU,OAAA,GAEAnpB,MAIAurB,QAAA,SAAA1W,MAAAsU,QASA,WAPAhc,KAAA0H,QAAAA,cACA1H,KAAAgc,SAAAA,OAAA,GAEAtU,MAAAsU,QAAAnpB,KAAAwX,EACA3C,MAAAsU,OAAA,GAAAnpB,KAAAia,EACApF,MAAAsU,OAAA,GAAAnpB,KAAA48B,EAEA/nB,OAIA8pE,oBAAA,SAAA5mC,UAAAhnB,MAAA5H,QAYA,WAVAhc,KAAAgc,QAEApZ,QAAAH,KAAA,uEAIA5P,KAAAwX,EAAAugC,UAAA2mC,KAAA3tD,OACA/wB,KAAAia,EAAA89B,UAAA2sD,KAAA3zE,OACA/wB,KAAA48B,EAAAmb,UAAA0uD,KAAA11E,OAEA/wB,QAsCA6J,OAAAm3F,OAAAjjE,QAAAvhC,WAEAovG,WAAA,EAEA/6F,IAAA,SAAAg7F,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,KAEA,GAAAlH,IAAA1lG,KAAArB,QAOA,OALA+mG,IAAA,GAAAmG,IAAAnG,GAAA,GAAAoG,IAAApG,GAAA,GAAAqG,IAAArG,GAAA,IAAAsG,IACAtG,GAAA,GAAAuG,IAAAvG,GAAA,GAAAwG,IAAAxG,GAAA,GAAAyG,IAAAzG,GAAA,IAAA0G,IACA1G,GAAA,GAAA2G,IAAA3G,GAAA,GAAA4G,IAAA5G,GAAA,IAAA6G,IAAA7G,GAAA,IAAA8G,IACA9G,GAAA,GAAA+G,IAAA/G,GAAA,GAAAgH,IAAAhH,GAAA,IAAAiH,IAAAjH,GAAA,IAAAkH,IAEA5sG,MAIAgpD,SAAA,WAWA,MATAhpD,MAAA6Q,IAEA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAIA7Q,MAIA+pB,MAAA,WAEA,OAAA,GAAAgU,UAAAioC,UAAAhmE,KAAArB,WAIAwqC,KAAA,SAAA78B,GAEA,GAAAo5F,IAAA1lG,KAAArB,SACAkuG,GAAAvgG,EAAA3N,QAOA,OALA+mG,IAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GACAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GACAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,IAAAmH,GAAA,IAAAnH,GAAA,IAAAmH,GAAA,IACAnH,GAAA,IAAAmH,GAAA,IAAAnH,GAAA,IAAAmH,GAAA,IAAAnH,GAAA,IAAAmH,GAAA,IAAAnH,GAAA,IAAAmH,GAAA,IAEA7sG,MAIA+iD,aAAA,SAAAz2C,GAEA,GAAAo5F,IAAA1lG,KAAArB,SAAAkuG,GAAAvgG,EAAA3N,QAMA,OAJA+mG,IAAA,IAAAmH,GAAA,IACAnH,GAAA,IAAAmH,GAAA,IACAnH,GAAA,IAAAmH,GAAA,IAEA7sG,MAIA8sG,aAAA,SAAAC,MAAAC,MAAAC,OAMA,MAJAF,OAAAtB,oBAAAzrG,KAAA,GACAgtG,MAAAvB,oBAAAzrG,KAAA,GACAitG,MAAAxB,oBAAAzrG,KAAA,GAEAA,MAIAktG,UAAA,SAAAH,MAAAC,MAAAC,OASA,MAPAjtG,MAAA6Q,IACAk8F,MAAAv1F,EAAAw1F,MAAAx1F,EAAAy1F,MAAAz1F,EAAA,EACAu1F,MAAA9yF,EAAA+yF,MAAA/yF,EAAAgzF,MAAAhzF,EAAA,EACA8yF,MAAAnwE,EAAAowE,MAAApwE,EAAAqwE,MAAArwE,EAAA,EACA,EAAA,EAAA,EAAA,GAGA58B,MAIAmpD,gBAAA,WAEA,GAAAslC,IAAA,GAAA3wD,QAEA,OAAA,UAAAxxB,GAEA,GAAAo5F,IAAA1lG,KAAArB,SACAkuG,GAAAvgG,EAAA3N,SAEAwuG,OAAA,EAAA1e,GAAAgd,oBAAAn/F,EAAA,GAAA1M,SACAwtG,OAAA,EAAA3e,GAAAgd,oBAAAn/F,EAAA,GAAA1M,SACAytG,OAAA,EAAA5e,GAAAgd,oBAAAn/F,EAAA,GAAA1M,QAcA,OAZA8lG,IAAA,GAAAmH,GAAA,GAAAM,OACAzH,GAAA,GAAAmH,GAAA,GAAAM,OACAzH,GAAA,GAAAmH,GAAA,GAAAM,OAEAzH,GAAA,GAAAmH,GAAA,GAAAO,OACA1H,GAAA,GAAAmH,GAAA,GAAAO,OACA1H,GAAA,GAAAmH,GAAA,GAAAO,OAEA1H,GAAA,GAAAmH,GAAA,GAAAQ,OACA3H,GAAA,GAAAmH,GAAA,GAAAQ,OACA3H,GAAA,IAAAmH,GAAA,IAAAQ,OAEArtG,SAMAstG,sBAAA,SAAAvF,OAEAA,OAAAA,MAAAC,SAEAj4F,QAAAiuB,MAAA,wGAIA,IAAA0nE,IAAA1lG,KAAArB,SAEA6Y,EAAAuwF,MAAAvwF,EAAAyC,EAAA8tF,MAAA9tF,EAAA2iB,EAAAmrE,MAAAnrE,EACAhyB,EAAAgE,KAAA45C,IAAAhxC,GAAA3M,EAAA+D,KAAA6zE,IAAAjrE,GACAuK,EAAAnT,KAAA45C,IAAAvuC,GAAAC,EAAAtL,KAAA6zE,IAAAxoE,GACAlX,EAAA6L,KAAA45C,IAAA5rB,GAAAu4B,EAAAvmD,KAAA6zE,IAAA7lD,EAEA,IAAA,QAAAmrE,MAAAruD,MAAA,CAEA,GAAA6zD,IAAA3iG,EAAA7H,EAAAyqG,GAAA5iG,EAAAuqD,EAAAs4C,GAAA5iG,EAAA9H,EAAA2qG,GAAA7iG,EAAAsqD,CAEAuwC,IAAA,GAAA3jF,EAAAhf,EACA2iG,GAAA,IAAA3jF,EAAAozC,EACAuwC,GAAA,GAAAxrF,EAEAwrF,GAAA,GAAA8H,GAAAC,GAAAvzF,EACAwrF,GAAA,GAAA6H,GAAAG,GAAAxzF,EACAwrF,GAAA,IAAA76F,EAAAkX,EAEA2jF,GAAA,GAAAgI,GAAAH,GAAArzF,EACAwrF,GAAA,GAAA+H,GAAAD,GAAAtzF,EACAwrF,GAAA,IAAA96F,EAAAmX,MAEA,IAAA,QAAAgmF,MAAAruD,MAAA,CAEA,GAAAi0D,IAAA5rF,EAAAhf,EAAA6qG,GAAA7rF,EAAAozC,EAAA04C,GAAA3zF,EAAAnX,EAAA+qG,GAAA5zF,EAAAi7C,CAEAuwC,IAAA,GAAAiI,GAAAG,GAAAjjG,EACA66F,GAAA,GAAAmI,GAAAhjG,EAAA+iG,GACAlI,GAAA,GAAA96F,EAAAsP,EAEAwrF,GAAA,GAAA96F,EAAAuqD,EACAuwC,GAAA,GAAA96F,EAAA7H,EACA2iG,GAAA,IAAA76F,EAEA66F,GAAA,GAAAkI,GAAA/iG,EAAAgjG,GACAnI,GAAA,GAAAoI,GAAAH,GAAA9iG,EACA66F,GAAA,IAAA96F,EAAAmX,MAEA,IAAA,QAAAgmF,MAAAruD,MAAA,CAEA,GAAAi0D,IAAA5rF,EAAAhf,EAAA6qG,GAAA7rF,EAAAozC,EAAA04C,GAAA3zF,EAAAnX,EAAA+qG,GAAA5zF,EAAAi7C,CAEAuwC,IAAA,GAAAiI,GAAAG,GAAAjjG,EACA66F,GAAA,IAAA96F,EAAAuqD,EACAuwC,GAAA,GAAAmI,GAAAD,GAAA/iG,EAEA66F,GAAA,GAAAkI,GAAAC,GAAAhjG,EACA66F,GAAA,GAAA96F,EAAA7H,EACA2iG,GAAA,GAAAoI,GAAAH,GAAA9iG,EAEA66F,GAAA,IAAA96F,EAAAsP,EACAwrF,GAAA,GAAA76F,EACA66F,GAAA,IAAA96F,EAAAmX,MAEA,IAAA,QAAAgmF,MAAAruD,MAAA,CAEA,GAAA6zD,IAAA3iG,EAAA7H,EAAAyqG,GAAA5iG,EAAAuqD,EAAAs4C,GAAA5iG,EAAA9H,EAAA2qG,GAAA7iG,EAAAsqD,CAEAuwC,IAAA,GAAA3jF,EAAAhf,EACA2iG,GAAA,GAAA+H,GAAAvzF,EAAAszF,GACA9H,GAAA,GAAA6H,GAAArzF,EAAAwzF,GAEAhI,GAAA,GAAA3jF,EAAAozC,EACAuwC,GAAA,GAAAgI,GAAAxzF,EAAAqzF,GACA7H,GAAA,GAAA8H,GAAAtzF,EAAAuzF,GAEA/H,GAAA,IAAAxrF,EACAwrF,GAAA,GAAA76F,EAAAkX,EACA2jF,GAAA,IAAA96F,EAAAmX,MAEA,IAAA,QAAAgmF,MAAAruD,MAAA,CAEA,GAAAq0D,IAAAnjG,EAAAmX,EAAAisF,GAAApjG,EAAAsP,EAAA+zF,GAAApjG,EAAAkX,EAAAmsF,GAAArjG,EAAAqP,CAEAwrF,IAAA,GAAA3jF,EAAAhf,EACA2iG,GAAA,GAAAwI,GAAAH,GAAA54C,EACAuwC,GAAA,GAAAuI,GAAA94C,EAAA64C,GAEAtI,GAAA,GAAAvwC,EACAuwC,GAAA,GAAA96F,EAAA7H,EACA2iG,GAAA,IAAA76F,EAAA9H,EAEA2iG,GAAA,IAAAxrF,EAAAnX,EACA2iG,GAAA,GAAAsI,GAAA74C,EAAA84C,GACAvI,GAAA,IAAAqI,GAAAG,GAAA/4C,MAEA,IAAA,QAAA4yC,MAAAruD,MAAA,CAEA,GAAAq0D,IAAAnjG,EAAAmX,EAAAisF,GAAApjG,EAAAsP,EAAA+zF,GAAApjG,EAAAkX,EAAAmsF,GAAArjG,EAAAqP,CAEAwrF,IAAA,GAAA3jF,EAAAhf,EACA2iG,GAAA,IAAAvwC,EACAuwC,GAAA,GAAAxrF,EAAAnX,EAEA2iG,GAAA,GAAAqI,GAAA54C,EAAA+4C,GACAxI,GAAA,GAAA96F,EAAA7H,EACA2iG,GAAA,GAAAsI,GAAA74C,EAAA84C,GAEAvI,GAAA,GAAAuI,GAAA94C,EAAA64C,GACAtI,GAAA,GAAA76F,EAAA9H,EACA2iG,GAAA,IAAAwI,GAAA/4C,EAAA44C,GAeA,MAVArI,IAAA,GAAA,EACAA,GAAA,GAAA,EACAA,GAAA,IAAA,EAGAA,GAAA,IAAA,EACAA,GAAA,IAAA,EACAA,GAAA,IAAA,EACAA,GAAA,IAAA,EAEA1lG,MAIAmuG,2BAAA,SAAAprB,GAEA,GAAA2iB,IAAA1lG,KAAArB,SAEA6Y,EAAAurE,EAAAplD,GAAA1jB,EAAA8oE,EAAAnlD,GAAAhB,EAAAmmD,EAAAllD,GAAA9a,EAAAggE,EAAAzsE,GACA4pE,GAAA1oE,EAAAA,EAAA42F,GAAAn0F,EAAAA,EAAAo0F,GAAAzxE,EAAAA,EACAwpE,GAAA5uF,EAAA0oE,GAAAomB,GAAA9uF,EAAA42F,GAAA7H,GAAA/uF,EAAA62F,GACA54E,GAAAxb,EAAAm0F,GAAA5H,GAAAvsF,EAAAo0F,GAAAhI,GAAAzpE,EAAAyxE,GACAC,GAAAvrF,EAAAm9D,GAAAquB,GAAAxrF,EAAAqrF,GAAAI,GAAAzrF,EAAAsrF,EAyBA,OAvBA3I,IAAA,GAAA,GAAAjwE,GAAA4wE,IACAX,GAAA,GAAAY,GAAAkI,GACA9I,GAAA,GAAAa,GAAAgI,GAEA7I,GAAA,GAAAY,GAAAkI,GACA9I,GAAA,GAAA,GAAAU,GAAAC,IACAX,GAAA,GAAAc,GAAA8H,GAEA5I,GAAA,GAAAa,GAAAgI,GACA7I,GAAA,GAAAc,GAAA8H,GACA5I,GAAA,IAAA,GAAAU,GAAA3wE,IAGAiwE,GAAA,GAAA,EACAA,GAAA,GAAA,EACAA,GAAA,IAAA,EAGAA,GAAA,IAAA,EACAA,GAAA,IAAA,EACAA,GAAA,IAAA,EACAA,GAAA,IAAA,EAEA1lG,MAIAq3C,OAAA,WAEA,GAAA7/B,GAAA,GAAAsmB,SACA7jB,EAAA,GAAA6jB,SACAlB,EAAA,GAAAkB,QAEA,OAAA,UAAA2wE,IAAAzrG,OAAA20C,IAEA,GAAA+tD,IAAA1lG,KAAArB,QAyCA,OAvCAi+B,GAAAuiD,WAAAsvB,IAAAzrG,QAEA,IAAA45B,EAAAsnE,aAIAtnE,EAAAA,EAAA,GAIAA,EAAA6sB,YACAjyC,EAAA4nE,aAAAznC,GAAA/a,GAEA,IAAAplB,EAAA0sF,aAIA,IAAAt1F,KAAAc,IAAAioC,GAAA/a,GAEAA,EAAAplB,GAAA,KAIAolB,EAAAA,GAAA,KAIAA,EAAA6sB,YACAjyC,EAAA4nE,aAAAznC,GAAA/a,IAIAplB,EAAAiyC,YACAxvC,EAAAmlE,aAAAxiD,EAAAplB,GAEAkuF,GAAA,GAAAluF,EAAAA,EAAAkuF,GAAA,GAAAzrF,EAAAzC,EAAAkuF,GAAA,GAAA9oE,EAAAplB,EACAkuF,GAAA,GAAAluF,EAAAyC,EAAAyrF,GAAA,GAAAzrF,EAAAA,EAAAyrF,GAAA,GAAA9oE,EAAA3iB,EACAyrF,GAAA,GAAAluF,EAAAolB,EAAA8oE,GAAA,GAAAzrF,EAAA2iB,EAAA8oE,GAAA,IAAA9oE,EAAAA,EAEA58B,SAMAu3C,SAAA,SAAAjrC,EAAAiL,GAEA,WAAApK,KAAAoK,GAEAxH,QAAAH,KAAA,oGACA5P,KAAA4sC,iBAAAtgC,EAAAiL,IAIAvX,KAAA4sC,iBAAA5sC,KAAAsM,IAIA48C,YAAA,SAAA58C,GAEA,MAAAtM,MAAA4sC,iBAAAtgC,EAAAtM,OAIA4sC,iBAAA,SAAAhiC,EAAAC,GAEA,GAAA0iG,IAAA3iG,EAAAjM,SACA8uG,GAAA5iG,EAAAlM,SACA+mG,GAAA1lG,KAAArB,SAEA+vG,IAAAnB,GAAA,GAAAoB,IAAApB,GAAA,GAAAqB,IAAArB,GAAA,GAAAsB,IAAAtB,GAAA,IACAuB,IAAAvB,GAAA,GAAAwB,IAAAxB,GAAA,GAAAyB,IAAAzB,GAAA,GAAA0B,IAAA1B,GAAA,IACA2B,IAAA3B,GAAA,GAAA4B,IAAA5B,GAAA,GAAA6B,IAAA7B,GAAA,IAAA8B,IAAA9B,GAAA,IACA+B,IAAA/B,GAAA,GAAAgC,IAAAhC,GAAA,GAAAiC,IAAAjC,GAAA,IAAAkC,IAAAlC,GAAA,IAEAmC,IAAAjC,GAAA,GAAAkC,IAAAlC,GAAA,GAAAmC,IAAAnC,GAAA,GAAAoC,IAAApC,GAAA,IACAqC,IAAArC,GAAA,GAAAsC,IAAAtC,GAAA,GAAAuC,IAAAvC,GAAA,GAAAwC,IAAAxC,GAAA,IACAyC,IAAAzC,GAAA,GAAA0C,IAAA1C,GAAA,GAAA2C,IAAA3C,GAAA,IAAA4C,IAAA5C,GAAA,IACA6C,IAAA7C,GAAA,GAAA8C,IAAA9C,GAAA,GAAA+C,IAAA/C,GAAA,IAAAgD,IAAAhD,GAAA,GAsBA,OApBA/H,IAAA,GAAAgJ,IAAAgB,IAAAf,IAAAmB,IAAAlB,IAAAsB,IAAArB,IAAAyB,IACA5K,GAAA,GAAAgJ,IAAAiB,IAAAhB,IAAAoB,IAAAnB,IAAAuB,IAAAtB,IAAA0B,IACA7K,GAAA,GAAAgJ,IAAAkB,IAAAjB,IAAAqB,IAAApB,IAAAwB,IAAAvB,IAAA2B,IACA9K,GAAA,IAAAgJ,IAAAmB,IAAAlB,IAAAsB,IAAArB,IAAAyB,IAAAxB,IAAA4B,IAEA/K,GAAA,GAAAoJ,IAAAY,IAAAX,IAAAe,IAAAd,IAAAkB,IAAAjB,IAAAqB,IACA5K,GAAA,GAAAoJ,IAAAa,IAAAZ,IAAAgB,IAAAf,IAAAmB,IAAAlB,IAAAsB,IACA7K,GAAA,GAAAoJ,IAAAc,IAAAb,IAAAiB,IAAAhB,IAAAoB,IAAAnB,IAAAuB,IACA9K,GAAA,IAAAoJ,IAAAe,IAAAd,IAAAkB,IAAAjB,IAAAqB,IAAApB,IAAAwB,IAEA/K,GAAA,GAAAwJ,IAAAQ,IAAAP,IAAAW,IAAAV,IAAAc,IAAAb,IAAAiB,IACA5K,GAAA,GAAAwJ,IAAAS,IAAAR,IAAAY,IAAAX,IAAAe,IAAAd,IAAAkB,IACA7K,GAAA,IAAAwJ,IAAAU,IAAAT,IAAAa,IAAAZ,IAAAgB,IAAAf,IAAAmB,IACA9K,GAAA,IAAAwJ,IAAAW,IAAAV,IAAAc,IAAAb,IAAAiB,IAAAhB,IAAAoB,IAEA/K,GAAA,GAAA4J,IAAAI,IAAAH,IAAAO,IAAAN,IAAAU,IAAAT,IAAAa,IACA5K,GAAA,GAAA4J,IAAAK,IAAAJ,IAAAQ,IAAAP,IAAAW,IAAAV,IAAAc,IACA7K,GAAA,IAAA4J,IAAAM,IAAAL,IAAAS,IAAAR,IAAAY,IAAAX,IAAAe,IACA9K,GAAA,IAAA4J,IAAAO,IAAAN,IAAAU,IAAAT,IAAAa,IAAAZ,IAAAgB,IAEAzwG,MAIA+nD,eAAA,SAAAnyC,GAEA,GAAA8vF,IAAA1lG,KAAArB,QAOA,OALA+mG,IAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,KAAA9vF,EACA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,KAAA9vF,EACA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,KAAA9vF,EAAA8vF,GAAA,KAAA9vF,EACA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,KAAA9vF,EAAA8vF,GAAA,KAAA9vF,EAEA5V,MAIA0wG,uBAAA,WAEA,GAAAjiB,IAAA,GAAA3wD,QAEA,OAAA,UAAAia,WAEA,IAAA,GAAAj0C,GAAA,EAAA4f,EAAAq0B,UAAAoB,MAAAr1C,EAAA4f,EAAA5f,IAEA2qF,GAAAj3E,EAAAugC,UAAA2mC,KAAA56E,GACA2qF,GAAAx0E,EAAA89B,UAAA2sD,KAAA5gG,GACA2qF,GAAA7xD,EAAAmb,UAAA0uD,KAAA3iG,GAEA2qF,GAAAzlD,aAAAhpC,MAEA+3C,UAAA44D,OAAA7sG,EAAA2qF,GAAAj3E,EAAAi3E,GAAAx0E,EAAAw0E,GAAA7xD,EAIA,OAAAmb,eAMA64D,YAAA,WAEA,GAAAlL,IAAA1lG,KAAArB,SAEAktG,IAAAnG,GAAA,GAAAoG,IAAApG,GAAA,GAAAqG,IAAArG,GAAA,GAAAsG,IAAAtG,GAAA,IACAuG,IAAAvG,GAAA,GAAAwG,IAAAxG,GAAA,GAAAyG,IAAAzG,GAAA,GAAA0G,IAAA1G,GAAA,IACA2G,IAAA3G,GAAA,GAAA4G,IAAA5G,GAAA,GAAA6G,IAAA7G,GAAA,IAAA8G,IAAA9G,GAAA,GAMA,OALAA,IAAA,KAOAsG,IAAAG,IAAAG,IACAP,IAAAK,IAAAE,IACAN,IAAAE,IAAAK,IACAT,IAAAM,IAAAG,IACAR,IAAAG,IAAAM,IACAV,IAAAK,IAAAK,KAZA9G,GAAA,KAeAmG,IAAAM,IAAAK,IACAX,IAAAO,IAAAG,IACAP,IAAAC,IAAAM,IACAR,IAAAE,IAAAO,IACAT,IAAAK,IAAAC,IACAL,IAAAG,IAAAE,KApBA3G,GAAA,MAuBAmG,IAAAO,IAAAE,IACAT,IAAAK,IAAAM,IACAR,IAAAC,IAAAK,IACAR,IAAAG,IAAAO,IACAR,IAAAE,IAAAG,IACAP,IAAAM,IAAAC,KA5BA3G,GAAA,MA+BAqG,IAAAG,IAAAG,IACAR,IAAAM,IAAAG,IACAT,IAAAK,IAAAK,IACAR,IAAAE,IAAAK,IACAR,IAAAG,IAAAM,IACAT,IAAAK,IAAAE,MAOAwE,UAAA,WAEA,GACAnkF,KADAg5E,GAAA1lG,KAAArB,QAWA,OARA+tB,KAAAg5E,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAh5E,IACAA,IAAAg5E,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAh5E,IACAA,IAAAg5E,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAh5E,IAEAA,IAAAg5E,GAAA,GAAAA,GAAA,GAAAA,GAAA,IAAAA,GAAA,IAAAh5E,IACAA,IAAAg5E,GAAA,GAAAA,GAAA,GAAAA,GAAA,IAAAA,GAAA,IAAAh5E,IACAA,IAAAg5E,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAh5E,IAEA1sB,MAIA8wG,YAAA,SAAAxxE,GAEA,GAAAomE,IAAA1lG,KAAArB,QAMA,OAJA+mG,IAAA,IAAApmE,EAAA9nB,EACAkuF,GAAA,IAAApmE,EAAArlB,EACAyrF,GAAA,IAAApmE,EAAA1C,EAEA58B,MAIAomE,WAAA,SAAA95D,EAAAykG,mBAGA,GAAArL,IAAA1lG,KAAArB,SACAkuG,GAAAvgG,EAAA3N,SAEAktG,IAAAgB,GAAA,GAAAZ,IAAAY,GAAA,GAAAR,IAAAQ,GAAA,GAAAJ,IAAAI,GAAA,GACAf,IAAAe,GAAA,GAAAX,IAAAW,GAAA,GAAAP,IAAAO,GAAA,GAAAH,IAAAG,GAAA,GACAd,IAAAc,GAAA,GAAAV,IAAAU,GAAA,GAAAN,IAAAM,GAAA,IAAAF,IAAAE,GAAA,IACAb,IAAAa,GAAA,IAAAT,IAAAS,GAAA,IAAAL,IAAAK,GAAA,IAAAD,IAAAC,GAAA,IAEAmE,IAAA7E,IAAAK,IAAAE,IAAAN,IAAAG,IAAAG,IAAAN,IAAAE,IAAAK,IAAAT,IAAAM,IAAAG,IAAAR,IAAAG,IAAAM,IAAAV,IAAAK,IAAAK,IACAqE,IAAAjF,IAAAO,IAAAG,IAAAX,IAAAS,IAAAE,IAAAV,IAAAM,IAAAK,IAAAb,IAAAU,IAAAG,IAAAZ,IAAAO,IAAAM,IAAAd,IAAAS,IAAAK,IACAsE,IAAAnF,IAAAK,IAAAM,IAAAV,IAAAG,IAAAO,IAAAV,IAAAE,IAAAS,IAAAb,IAAAM,IAAAO,IAAAZ,IAAAG,IAAAU,IAAAd,IAAAK,IAAAS,IACAuE,IAAAnF,IAAAG,IAAAG,IAAAP,IAAAK,IAAAE,IAAAN,IAAAE,IAAAK,IAAAT,IAAAM,IAAAG,IAAAR,IAAAG,IAAAM,IAAAV,IAAAK,IAAAK,IAEA4E,IAAAvF,IAAAmF,IAAA/E,IAAAgF,IAAA5E,IAAA6E,IAAAzE,IAAA0E,GAEA,IAAA,IAAAC,IAAA,CAEA,GAAAvhG,KAAA,oEAEA,KAAA,IAAAkhG,kBAEA,KAAA,IAAAxgG,OAAAV,IAQA,OAJAE,SAAAH,KAAAC,KAIA7P,KAAAgpD,WAIA,GAAAqoD,QAAA,EAAAD,GAsBA,OApBA1L,IAAA,GAAAsL,IAAAK,OACA3L,GAAA,IAAA0G,IAAAG,IAAAE,IAAAN,IAAAK,IAAAC,IAAAL,IAAAC,IAAAM,IAAAV,IAAAO,IAAAG,IAAAR,IAAAE,IAAAO,IAAAX,IAAAM,IAAAK,KAAAyE,OACA3L,GAAA,IAAAwG,IAAAM,IAAAC,IAAAL,IAAAE,IAAAG,IAAAL,IAAAC,IAAAK,IAAAT,IAAAO,IAAAE,IAAAR,IAAAG,IAAAO,IAAAX,IAAAK,IAAAM,KAAAyE,OACA3L,GAAA,IAAAyG,IAAAG,IAAAG,IAAAP,IAAAK,IAAAE,IAAAN,IAAAE,IAAAK,IAAAT,IAAAM,IAAAG,IAAAR,IAAAG,IAAAM,IAAAV,IAAAK,IAAAK,KAAA0E,OAEA3L,GAAA,GAAAuL,IAAAI,OACA3L,GAAA,IAAAqG,IAAAS,IAAAC,IAAAT,IAAAO,IAAAE,IAAAT,IAAAK,IAAAM,IAAAd,IAAAW,IAAAG,IAAAZ,IAAAM,IAAAO,IAAAf,IAAAU,IAAAK,KAAAyE,OACA3L,GAAA,IAAAsG,IAAAM,IAAAG,IAAAX,IAAAU,IAAAC,IAAAT,IAAAK,IAAAK,IAAAb,IAAAW,IAAAE,IAAAZ,IAAAO,IAAAO,IAAAf,IAAAS,IAAAM,KAAAyE,OACA3L,GAAA,IAAAoG,IAAAS,IAAAE,IAAAV,IAAAO,IAAAG,IAAAV,IAAAM,IAAAK,IAAAb,IAAAU,IAAAG,IAAAZ,IAAAO,IAAAM,IAAAd,IAAAS,IAAAK,KAAA0E,OAEA3L,GAAA,GAAAwL,IAAAG,OACA3L,GAAA,IAAAsG,IAAAG,IAAAM,IAAAV,IAAAK,IAAAK,IAAAT,IAAAC,IAAAU,IAAAd,IAAAO,IAAAO,IAAAZ,IAAAE,IAAAW,IAAAf,IAAAM,IAAAS,KAAAyE,OACA3L,GAAA,KAAAoG,IAAAM,IAAAK,IAAAT,IAAAE,IAAAO,IAAAT,IAAAC,IAAAS,IAAAb,IAAAO,IAAAM,IAAAZ,IAAAG,IAAAW,IAAAf,IAAAK,IAAAU,KAAAyE,OACA3L,GAAA,KAAAqG,IAAAG,IAAAO,IAAAX,IAAAK,IAAAM,IAAAV,IAAAE,IAAAS,IAAAb,IAAAM,IAAAO,IAAAZ,IAAAG,IAAAU,IAAAd,IAAAK,IAAAS,KAAA0E,OAEA3L,GAAA,IAAAyL,IAAAE,OACA3L,GAAA,KAAAqG,IAAAK,IAAAC,IAAAL,IAAAG,IAAAE,IAAAL,IAAAC,IAAAM,IAAAV,IAAAO,IAAAG,IAAAR,IAAAE,IAAAO,IAAAX,IAAAM,IAAAK,KAAA6E,OACA3L,GAAA,KAAAsG,IAAAE,IAAAG,IAAAP,IAAAM,IAAAC,IAAAL,IAAAC,IAAAK,IAAAT,IAAAO,IAAAE,IAAAR,IAAAG,IAAAO,IAAAX,IAAAK,IAAAM,KAAA6E,OACA3L,GAAA,KAAAoG,IAAAK,IAAAE,IAAAN,IAAAG,IAAAG,IAAAN,IAAAE,IAAAK,IAAAT,IAAAM,IAAAG,IAAAR,IAAAG,IAAAM,IAAAV,IAAAK,IAAAK,KAAA8E,OAEArxG,MAIA8mC,MAAA,SAAAxH,GAEA,GAAAomE,IAAA1lG,KAAArB,SACA6Y,EAAA8nB,EAAA9nB,EAAAyC,EAAAqlB,EAAArlB,EAAA2iB,EAAA0C,EAAA1C,CAOA,OALA8oE,IAAA,IAAAluF,EAAAkuF,GAAA,IAAAzrF,EAAAyrF,GAAA,IAAA9oE,EACA8oE,GAAA,IAAAluF,EAAAkuF,GAAA,IAAAzrF,EAAAyrF,GAAA,IAAA9oE,EACA8oE,GAAA,IAAAluF,EAAAkuF,GAAA,IAAAzrF,EAAAyrF,GAAA,KAAA9oE,EACA8oE,GAAA,IAAAluF,EAAAkuF,GAAA,IAAAzrF,EAAAyrF,GAAA,KAAA9oE,EAEA58B,MAIAsxG,kBAAA,WAEA,GAAA5L,IAAA1lG,KAAArB,SAEA4yG,SAAA7L,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GACA8L,SAAA9L,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GACA+L,SAAA/L,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,IAAAA,GAAA,GAEA,OAAA92F,MAAA8kE,KAAA9kE,KAAAsF,IAAAq9F,SAAAC,SAAAC,YAIAr6D,gBAAA,SAAA5/B,EAAAyC,EAAA2iB,GAWA,MATA58B,MAAA6Q,IAEA,EAAA,EAAA,EAAA2G,EACA,EAAA,EAAA,EAAAyC,EACA,EAAA,EAAA,EAAA2iB,EACA,EAAA,EAAA,EAAA,GAIA58B,MAIA0xG,cAAA,SAAAhpB,OAEA,GAAA3mE,GAAAnT,KAAA45C,IAAAkgC,OAAA9yE,EAAAhH,KAAA6zE,IAAAiG,MAWA,OATA1oF,MAAA6Q,IAEA,EAAA,EAAA,EAAA,EACA,EAAAkR,GAAAnM,EAAA,EACA,EAAAA,EAAAmM,EAAA,EACA,EAAA,EAAA,EAAA,GAIA/hB,MAIA2xG,cAAA,SAAAjpB,OAEA,GAAA3mE,GAAAnT,KAAA45C,IAAAkgC,OAAA9yE,EAAAhH,KAAA6zE,IAAAiG,MAWA,OATA1oF,MAAA6Q,IAEAkR,EAAA,EAAAnM,EAAA,EACA,EAAA,EAAA,EAAA,GACAA,EAAA,EAAAmM,EAAA,EACA,EAAA,EAAA,EAAA,GAIA/hB,MAIA4xG,cAAA,SAAAlpB,OAEA,GAAA3mE,GAAAnT,KAAA45C,IAAAkgC,OAAA9yE,EAAAhH,KAAA6zE,IAAAiG,MAWA,OATA1oF,MAAA6Q,IAEAkR,GAAAnM,EAAA,EAAA,EACAA,EAAAmM,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAIA/hB,MAIA6xG,iBAAA,SAAAxJ,KAAA5/C,OAIA,GAAA1mC,GAAAnT,KAAA45C,IAAAC,OACA7yC,EAAAhH,KAAA6zE,IAAAh6B,OACAv0B,EAAA,EAAAnS,EACAvK,EAAA6wF,KAAA7wF,EAAAyC,EAAAouF,KAAApuF,EAAA2iB,EAAAyrE,KAAAzrE,EACAk1E,GAAA59E,EAAA1c,EAAAu6F,GAAA79E,EAAAja,CAWA,OATAja,MAAA6Q,IAEAihG,GAAAt6F,EAAAuK,EAAA+vF,GAAA73F,EAAArE,EAAAgnB,EAAAk1E,GAAAl1E,EAAAhnB,EAAAqE,EAAA,EACA63F,GAAA73F,EAAArE,EAAAgnB,EAAAm1E,GAAA93F,EAAA8H,EAAAgwF,GAAAn1E,EAAAhnB,EAAA4B,EAAA,EACAs6F,GAAAl1E,EAAAhnB,EAAAqE,EAAA83F,GAAAn1E,EAAAhnB,EAAA4B,EAAA0c,EAAA0I,EAAAA,EAAA7a,EAAA,EACA,EAAA,EAAA,EAAA,GAIA/hB,MAIA8iD,UAAA,SAAAtrC,EAAAyC,EAAA2iB,GAWA,MATA58B,MAAA6Q,IAEA2G,EAAA,EAAA,EAAA,EACA,EAAAyC,EAAA,EAAA,EACA,EAAA,EAAA2iB,EAAA,EACA,EAAA,EAAA,EAAA,GAIA58B,MAIAgyG,UAAA,SAAAx6F,EAAAyC,EAAA2iB,GAWA,MATA58B,MAAA6Q,IAEA,EAAAoJ,EAAA2iB,EAAA,EACAplB,EAAA,EAAAolB,EAAA,EACAplB,EAAAyC,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAIAja,MAIAiyG,QAAA,SAAAlnE,SAAAkP,WAAAnT,OAMA,MAJA9mC,MAAAmuG,2BAAAl0D,YACAj6C,KAAA8mC,MAAAA,OACA9mC,KAAA8wG,YAAA/lE,UAEA/qC,MAIA+sC,UAAA,WAEA,GAAA4S,QAAA,GAAA7hB,SACAoZ,OAAA,GAAAnZ,QAEA,OAAA,UAAAgN,SAAAkP,WAAAnT,OAEA,GAAA4+D,IAAA1lG,KAAArB,SAEA6sG,GAAA7rD,OAAA9uC,IAAA60F,GAAA,GAAAA,GAAA,GAAAA,GAAA,IAAA9lG,SACA8rG,GAAA/rD,OAAA9uC,IAAA60F,GAAA,GAAAA,GAAA,GAAAA,GAAA,IAAA9lG,SACA+rG,GAAAhsD,OAAA9uC,IAAA60F,GAAA,GAAAA,GAAA,GAAAA,GAAA,KAAA9lG,QAGAI,MAAA4wG,cACA,IAAApF,IAAAA,IAEAzgE,SAAAvzB,EAAAkuF,GAAA,IACA36D,SAAA9wB,EAAAyrF,GAAA,IACA36D,SAAAnO,EAAA8oE,GAAA,IAGAxuD,OAAA/N,KAAAnpC,KAEA,IAAAkyG,OAAA,EAAA1G,GACA2G,MAAA,EAAAzG,GACA0G,MAAA,EAAAzG,EAoBA,OAlBAz0D,QAAAv4C,SAAA,IAAAuzG,MACAh7D,OAAAv4C,SAAA,IAAAuzG,MACAh7D,OAAAv4C,SAAA,IAAAuzG,MAEAh7D,OAAAv4C,SAAA,IAAAwzG,MACAj7D,OAAAv4C,SAAA,IAAAwzG,MACAj7D,OAAAv4C,SAAA,IAAAwzG,MAEAj7D,OAAAv4C,SAAA,IAAAyzG,MACAl7D,OAAAv4C,SAAA,IAAAyzG,MACAl7D,OAAAv4C,SAAA,KAAAyzG,MAEAn4D,WAAAsuD,sBAAArxD,QAEApQ,MAAAtvB,EAAAg0F,GACA1kE,MAAA7sB,EAAAyxF,GACA5kE,MAAAlK,EAAA+uE,GAEA3rG,SAMAqyG,gBAAA,SAAA7uG,KAAAC,MAAAC,IAAAC,OAAA6oC,KAAAC,SAEAt/B,KAAAs/B,KAEA18B,QAAAH,KAAA,uGAIA,IAAA81F,IAAA1lG,KAAArB,SACA6Y,EAAA,EAAAg1B,MAAA/oC,MAAAD,MACAyW,EAAA,EAAAuyB,MAAA9oC,IAAAC,QAEAiH,GAAAnH,MAAAD,OAAAC,MAAAD,MACAqH,GAAAnH,IAAAC,SAAAD,IAAAC,QACAoe,IAAA0qB,IAAAD,OAAAC,IAAAD,MACAtyB,GAAA,EAAAuyB,IAAAD,MAAAC,IAAAD,KAOA,OALAk5D,IAAA,GAAAluF,EAAAkuF,GAAA,GAAA,EAAAA,GAAA,GAAA96F,EAAA86F,GAAA,IAAA,EACAA,GAAA,GAAA,EAAAA,GAAA,GAAAzrF,EAAAyrF,GAAA,GAAA76F,EAAA66F,GAAA,IAAA,EACAA,GAAA,GAAA,EAAAA,GAAA,GAAA,EAAAA,GAAA,IAAA3jF,EAAA2jF,GAAA,IAAAxrF,EACAwrF,GAAA,GAAA,EAAAA,GAAA,GAAA,EAAAA,GAAA,KAAA,EAAAA,GAAA,IAAA,EAEA1lG,MAIAsyG,iBAAA,SAAA9uG,KAAAC,MAAAC,IAAAC,OAAA6oC,KAAAC,KAEA,GAAAi5D,IAAA1lG,KAAArB,SACAokB,EAAA,GAAAtf,MAAAD,MACA2W,EAAA,GAAAzW,IAAAC,QACAqwD,EAAA,GAAAvnB,IAAAD,MAEAh1B,GAAA/T,MAAAD,MAAAuf,EACA9I,GAAAvW,IAAAC,QAAAwW,EACAyiB,GAAA6P,IAAAD,MAAAwnB,CAOA,OALA0xC,IAAA,GAAA,EAAA3iF,EAAA2iF,GAAA,GAAA,EAAAA,GAAA,GAAA,EAAAA,GAAA,KAAAluF,EACAkuF,GAAA,GAAA,EAAAA,GAAA,GAAA,EAAAvrF,EAAAurF,GAAA,GAAA,EAAAA,GAAA,KAAAzrF,EACAyrF,GAAA,GAAA,EAAAA,GAAA,GAAA,EAAAA,GAAA,KAAA,EAAA1xC,EAAA0xC,GAAA,KAAA9oE,EACA8oE,GAAA,GAAA,EAAAA,GAAA,GAAA,EAAAA,GAAA,IAAA,EAAAA,GAAA,IAAA,EAEA1lG,MAIAw7D,OAAA,SAAAtkB,QAKA,IAAA,GAHAwuD,IAAA1lG,KAAArB,SACAkuG,GAAA31D,OAAAv4C,SAEAmF,EAAA,EAAAA,EAAA,GAAAA,IAEA,GAAA4hG,GAAA5hG,KAAA+oG,GAAA/oG,GAAA,OAAA,CAIA,QAAA,GAIAkiE,UAAA,SAAAnxD,MAAAsU,YAEAhc,KAAAgc,SAAAA,OAAA,EAEA,KAAA,GAAArlB,GAAA,EAAAA,EAAA,GAAAA,IAEA9D,KAAArB,SAAAmF,GAAA+Q,MAAA/Q,EAAAqlB,OAIA,OAAAnpB,OAIAurB,QAAA,SAAA1W,MAAAsU,YAEAhc,KAAA0H,QAAAA,cACA1H,KAAAgc,SAAAA,OAAA,EAEA,IAAAu8E,IAAA1lG,KAAArB,QAsBA,OApBAkW,OAAAsU,QAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GAEA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GAEA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,IAAAu8E,GAAA,IACA7wF,MAAAsU,OAAA,IAAAu8E,GAAA,IAEA7wF,MAAAsU,OAAA,IAAAu8E,GAAA,IACA7wF,MAAAsU,OAAA,IAAAu8E,GAAA,IACA7wF,MAAAsU,OAAA,IAAAu8E,GAAA,IACA7wF,MAAAsU,OAAA,IAAAu8E,GAAA,IAEA7wF,SAyBAopB,YAAAzhC,UAAAqN,OAAA88F,OAAA9rE,QAAAr+B,WACAyhC,YAAAzhC,UAAAsvF,YAAA7tD,YAEAA,YAAAzhC,UAAAu6D,eAAA,EAiBA54B,YAAA3hC,UAAAqN,OAAA88F,OAAA9rE,QAAAr+B,WACA2hC,YAAA3hC,UAAAsvF,YAAA3tD,YAEAA,YAAA3hC,UAAAimD,eAAA,EAEA54C,OAAA0xB,eAAA4C,YAAA3hC,UAAA,UAEAwa,IAAA,WAEA,MAAAhX,MAAA86B,OAIAjqB,IAAA,SAAA3B,OAEAlP,KAAA86B,MAAA5rB,QAuDA,IAAA6xB,cAAA,GAAAlG,SACAqG,iBAAA,GAAA/C,aAeAU,iBACAI,iBAIA2B,UAAA,GAAA9B,cAAA,IACA2B,UAAA,GAAA3B,cAAA,EAgUA+D,mBAAArmC,UAAAmmC,SAAA,SAAAtD,GAAAnwB,OAOA,IAAA,GAFAqvB,KAAAv+B,KAAAu+B,IAEAz6B,EAAA,EAAAyT,EAAAgnB,IAAA3+B,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAA4P,GAAA6qB,IAAAz6B,EACA4P,GAAAivB,SAAAtD,GAAAnwB,MAAAwE,EAAA+uB,MAUA,IAAAW,YAAA,0BA0FAI,eAAAhnC,UAAAmmC,SAAA,SAAAtD,GAAAzhC,KAAAsR,OAEA,GAAAwE,GAAA1T,KAAAwK,IAAA5M,UAEAuP,KAAAuG,GAAAA,EAAAivB,SAAAtD,GAAAnwB,MAAAlP,KAAAg/B,WAIAwE,cAAAhnC,UAAAg3E,YAAA,SAAAn0C,GAAA2S,OAAAp0C,MAEA,GAAA0hC,GAAA0S,OAAAp0C,UAEAuP,KAAAmyB,GAAAt/B,KAAA2iC,SAAAtD,GAAAzhC,KAAA0hC,IAOAkE,cAAAmyC,OAAA,SAAAt2C,GAAAd,IAAAje,OAAA0e,UAEA,IAAA,GAAAl7B,GAAA,EAAAyT,EAAAgnB,IAAA3+B,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAA4P,GAAA6qB,IAAAz6B,GACAw7B,EAAAhf,OAAA5M,EAAA+uB,KAEA,IAAAnD,EAAAuL,aAGAn3B,EAAAivB,SAAAtD,GAAAC,EAAApwB,MAAA8vB,YAQAwE,cAAA6uC,aAAA,SAAA9zC,IAAAje,QAIA,IAAA,GAFAse,MAEA96B,EAAA,EAAAyT,EAAAgnB,IAAA3+B,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAA4P,GAAA6qB,IAAAz6B,EACA4P,GAAA+uB,KAAAniB,SAAAse,EAAA1+B,KAAAwT,GAIA,MAAAkrB,GAQA,IAAA2zE,gBAAAC,UAAA,SAAAC,aAAA,SAAAC,KAAA,MAAAC,WAAA,QAAAC,MAAA,SACAC,MAAA,SAAAC,OAAA,SAAAC,MAAA,EAAAC,eAAA,SAAAC,KAAA,IAAAC,WAAA,QACAC,MAAA,SAAAC,UAAA,SAAAC,UAAA,QAAAC,WAAA,QAAAC,UAAA,SAAAC,MAAA,SACAC,eAAA,QAAAC,SAAA,SAAAC,QAAA,SAAAC,KAAA,MAAAC,SAAA,IAAAC,SAAA,MACAC,cAAA,SAAAC,SAAA,SAAAC,UAAA,MAAAC,SAAA,SAAAC,UAAA,SAAAC,YAAA,QACAC,eAAA,QAAAC,WAAA,SAAAC,WAAA,SAAAC,QAAA,QAAAC,WAAA,SAAAC,aAAA,QACAC,cAAA,QAAAC,cAAA,QAAAC,cAAA,QAAAC,cAAA,MAAAC,WAAA,QACAC,SAAA,SAAAC,YAAA,MAAAC,QAAA,QAAAC,QAAA,QAAAC,WAAA,QAAAC,UAAA,SACAC,YAAA,SAAAC,YAAA,QAAAC,QAAA,SAAAC,UAAA,SAAAC,WAAA,SAAAC,KAAA,SACAC,UAAA,SAAAC,KAAA,QAAAC,MAAA,MAAAC,YAAA,SAAAC,KAAA,QAAAC,SAAA,SAAAC,QAAA,SACAC,UAAA,SAAAC,OAAA,QAAAC,MAAA,SAAAC,MAAA,SAAAC,SAAA,SAAAC,cAAA,SAAAC,UAAA,QACAC,aAAA,SAAAC,UAAA,SAAAC,WAAA,SAAAC,UAAA,SAAAC,qBAAA,SAAAC,UAAA,SACAC,WAAA,QAAAC,UAAA,SAAAC,UAAA,SAAAC,YAAA,SAAAC,cAAA,QAAAC,aAAA,QACAC,eAAA,QAAAC,eAAA,QAAAC,eAAA,SAAAC,YAAA,SAAAC,KAAA,MAAAC,UAAA,QACAC,MAAA,SAAAC,QAAA,SAAAC,OAAA,QAAAC,iBAAA,QAAAC,WAAA,IAAAC,aAAA,SACAC,aAAA,QAAAC,eAAA,QAAAC,gBAAA,QAAAC,kBAAA,MAAAC,gBAAA,QACAC,gBAAA,SAAAC,aAAA;qBAAAC,UAAA,SAAAC,UAAA,SAAAC,SAAA,SAAAC,YAAA,SACAC,KAAA,IAAAC,QAAA,SAAAC,MAAA,QAAAC,UAAA,QAAAC,OAAA,SAAAC,UAAA,SAAAC,OAAA,SACAC,cAAA,SAAAC,UAAA,SAAAC,cAAA,SAAAC,cAAA,SAAAC,WAAA,SAAAC,UAAA,SACAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,SAAAC,OAAA,QAAAC,cAAA,QAAAC,IAAA,SAAAC,UAAA,SACAC,UAAA,QAAAC,YAAA,QAAAC,OAAA,SAAAC,WAAA,SAAAC,SAAA,QAAAC,SAAA,SACAC,OAAA,SAAAC,OAAA,SAAAC,QAAA,QAAAC,UAAA,QAAAC,UAAA,QAAAC,UAAA,QAAAC,KAAA,SACAC,YAAA,MAAAC,UAAA,QAAAC,IAAA,SAAAC,KAAA,MAAAC,QAAA,SAAAC,OAAA,SAAAC,UAAA,QACAC,OAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,WAAA,SAAAC,OAAA,SAAAC,YAAA,SAeA9xG,QAAAm3F,OAAAj9D,MAAAvnC,WAEAo/C,SAAA,EAEAhd,EAAA,EAAAoB,EAAA,EAAAn1B,EAAA,EAEAgG,IAAA,SAAA3B,OAgBA,MAdAA,QAAAA,MAAA0sC,QAEA57C,KAAAmpC,KAAAj6B,OAEA,gBAAAA,OAEAlP,KAAA47G,OAAA1sG,OAEA,gBAAAA,QAEAlP,KAAA67G,SAAA3sG,OAIAlP,MAIAkjG,UAAA,SAAAC,QAMA,MAJAnjG,MAAA4+B,EAAAukE,OACAnjG,KAAAggC,EAAAmjE,OACAnjG,KAAA6K,EAAAs4F,OAEAnjG,MAIA47G,OAAA,SAAAniB,KAQA,MANAA,KAAA7qF,KAAAE,MAAA2qF,KAEAz5F,KAAA4+B,GAAA66D,KAAA,GAAA,KAAA,IACAz5F,KAAAggC,GAAAy5D,KAAA,EAAA,KAAA,IACAz5F,KAAA6K,GAAA,IAAA4uF,KAAA,IAEAz5F,MAIAgkC,OAAA,SAAApF,EAAAoB,EAAAn1B,GAMA,MAJA7K,MAAA4+B,EAAAA,EACA5+B,KAAAggC,EAAAA,EACAhgC,KAAA6K,EAAAA,EAEA7K,MAIA87G,OAAA,WAEA,QAAAC,SAAA/nD,EAAA+uB,EAAA7uD,GAIA,MAFAA,GAAA,IAAAA,GAAA,GACAA,EAAA,IAAAA,GAAA,GACAA,EAAA,EAAA,EAAA8/B,EAAA,GAAA+uB,EAAA/uB,GAAA9/B,EACAA,EAAA,GAAA6uD,EACA7uD,EAAA,EAAA,EAAA8/B,EAAA,GAAA+uB,EAAA/uB,IAAA,EAAA,EAAA9/B,GACA8/B,EAIA,MAAA,UAAA75C,EAAAvE,EAAA8N,GAOA,GAJAvJ,EAAAuhB,MAAAqmE,gBAAA5nF,EAAA,GACAvE,EAAA8lB,MAAA0qD,MAAAxwE,EAAA,EAAA,GACA8N,EAAAgY,MAAA0qD,MAAA1iE,EAAA,EAAA,GAEA,IAAA9N,EAEA5V,KAAA4+B,EAAA5+B,KAAAggC,EAAAhgC,KAAA6K,EAAA6Y,MAEA,CAEA,GAAAswC,GAAAtwC,GAAA,GAAAA,GAAA,EAAA9N,GAAA8N,EAAA9N,EAAA8N,EAAA9N,EACAmtE,EAAA,EAAAr/D,EAAAswC,CAEAh0D,MAAA4+B,EAAAm9E,QAAAh5B,EAAA/uB,EAAA75C,EAAA,EAAA,GACAna,KAAAggC,EAAA+7E,QAAAh5B,EAAA/uB,EAAA75C,GACAna,KAAA6K,EAAAkxG,QAAAh5B,EAAA/uB,EAAA75C,EAAA,EAAA,GAIA,MAAAna,UAMA67G,SAAA,SAAA/8G,OAEA,QAAAk9G,aAAA5pG,YAEAjF,KAAAiF,QAEA2V,WAAA3V,QAAA,GAEArC,QAAAH,KAAA,mCAAA9Q,MAAA,qBAOA,GAAAwN,EAEA,IAAAA,EAAA,kCAAA0X,KAAAllB,OAAA,CAIA,GAAA+nC,OACAjpC,KAAA0O,EAAA,GACAy+C,WAAAz+C,EAAA,EAEA,QAAA1O,MAEA,IAAA,MACA,IAAA,OAEA,GAAAipC,MAAA,gEAAA7iB,KAAA+mC,YASA,MANA/qD,MAAA4+B,EAAAhwB,KAAAY,IAAA,IAAA6M,SAAAwqB,MAAA,GAAA,KAAA,IACA7mC,KAAAggC,EAAApxB,KAAAY,IAAA,IAAA6M,SAAAwqB,MAAA,GAAA,KAAA,IACA7mC,KAAA6K,EAAA+D,KAAAY,IAAA,IAAA6M,SAAAwqB,MAAA,GAAA,KAAA,IAEAm1E,YAAAn1E,MAAA,IAEA7mC,IAIA,IAAA6mC,MAAA,sEAAA7iB,KAAA+mC,YASA,MANA/qD,MAAA4+B,EAAAhwB,KAAAY,IAAA,IAAA6M,SAAAwqB,MAAA,GAAA,KAAA,IACA7mC,KAAAggC,EAAApxB,KAAAY,IAAA,IAAA6M,SAAAwqB,MAAA,GAAA,KAAA,IACA7mC,KAAA6K,EAAA+D,KAAAY,IAAA,IAAA6M,SAAAwqB,MAAA,GAAA,KAAA,IAEAm1E,YAAAn1E,MAAA,IAEA7mC,IAIA,MAEA,KAAA,MACA,IAAA,OAEA,GAAA6mC,MAAA,gFAAA7iB,KAAA+mC,YAAA,CAGA,GAAA5wC,GAAA4N,WAAA8e,MAAA,IAAA,IACAjxB,EAAAyG,SAAAwqB,MAAA,GAAA,IAAA,IACAnjB,EAAArH,SAAAwqB,MAAA,GAAA,IAAA,GAIA,OAFAm1E,aAAAn1E,MAAA,IAEA7mC,KAAA87G,OAAA3hG,EAAAvE,EAAA8N,SAQA,IAAApX,EAAA,qBAAA0X,KAAAllB,OAAA,CAIA,GAAA26F,KAAAntF,EAAA,GACAy1B,KAAA03D,IAAA75F,MAEA,IAAA,IAAAmiC,KAOA,MAJA/hC,MAAA4+B,EAAAviB,SAAAo9E,IAAAn6E,OAAA,GAAAm6E,IAAAn6E,OAAA,GAAA,IAAA,IACAtf,KAAAggC,EAAA3jB,SAAAo9E,IAAAn6E,OAAA,GAAAm6E,IAAAn6E,OAAA,GAAA,IAAA,IACAtf,KAAA6K,EAAAwR,SAAAo9E,IAAAn6E,OAAA,GAAAm6E,IAAAn6E,OAAA,GAAA,IAAA,IAEAtf,IAEA,IAAA,IAAA+hC,KAOA,MAJA/hC,MAAA4+B,EAAAviB,SAAAo9E,IAAAn6E,OAAA,GAAAm6E,IAAAn6E,OAAA,GAAA,IAAA,IACAtf,KAAAggC,EAAA3jB,SAAAo9E,IAAAn6E,OAAA,GAAAm6E,IAAAn6E,OAAA,GAAA,IAAA,IACAtf,KAAA6K,EAAAwR,SAAAo9E,IAAAn6E,OAAA,GAAAm6E,IAAAn6E,OAAA,GAAA,IAAA,IAEAtf,KAMA,GAAAlB,OAAAA,MAAAc,OAAA,EAAA,CAGA,GAAA65F,KAAA8Y,cAAAzzG,WAEAqO,KAAAssF,IAGAz5F,KAAA47G,OAAAniB,KAKA1pF,QAAAH,KAAA,8BAAA9Q,OAMA,MAAAkB,OAIA+pB,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAA4+B,EAAA5+B,KAAAggC,EAAAhgC,KAAA6K,IAIAs+B,KAAA,SAAAtC,OAMA,MAJA7mC,MAAA4+B,EAAAiI,MAAAjI,EACA5+B,KAAAggC,EAAA6G,MAAA7G,EACAhgC,KAAA6K,EAAAg8B,MAAAh8B,EAEA7K,MAIAi8G,kBAAA,SAAAp1E,MAAAynB,aAQA,WANAnhD,KAAAmhD,cAAAA,YAAA,GAEAtuD,KAAA4+B,EAAAhwB,KAAAqF,IAAA4yB,MAAAjI,EAAA0vB,aACAtuD,KAAAggC,EAAApxB,KAAAqF,IAAA4yB,MAAA7G,EAAAsuB,aACAtuD,KAAA6K,EAAA+D,KAAAqF,IAAA4yB,MAAAh8B,EAAAyjD,aAEAtuD,MAIAk8G,kBAAA,SAAAr1E,MAAAynB,iBAEAnhD,KAAAmhD,cAAAA,YAAA,EAEA,IAAA6tD,aAAA7tD,YAAA,EAAA,EAAAA,YAAA,CAMA,OAJAtuD,MAAA4+B,EAAAhwB,KAAAqF,IAAA4yB,MAAAjI,EAAAu9E,aACAn8G,KAAAggC,EAAApxB,KAAAqF,IAAA4yB,MAAA7G,EAAAm8E,aACAn8G,KAAA6K,EAAA+D,KAAAqF,IAAA4yB,MAAAh8B,EAAAsxG,aAEAn8G,MAIAo8G,qBAAA,WAEA,GAAAx9E,GAAA5+B,KAAA4+B,EAAAoB,EAAAhgC,KAAAggC,EAAAn1B,EAAA7K,KAAA6K,CAMA,OAJA7K,MAAA4+B,EAAAA,EAAAA,EACA5+B,KAAAggC,EAAAA,EAAAA,EACAhgC,KAAA6K,EAAAA,EAAAA,EAEA7K,MAIAq8G,qBAAA,WAMA,MAJAr8G,MAAA4+B,EAAAhwB,KAAA8kE,KAAA1zE,KAAA4+B,GACA5+B,KAAAggC,EAAApxB,KAAA8kE,KAAA1zE,KAAAggC,GACAhgC,KAAA6K,EAAA+D,KAAA8kE,KAAA1zE,KAAA6K,GAEA7K,MAIAs8G,OAAA,WAEA,MAAA,KAAAt8G,KAAA4+B,GAAA,GAAA,IAAA5+B,KAAAggC,GAAA,EAAA,IAAAhgC,KAAA6K,GAAA,GAIA0xG,aAAA,WAEA,OAAA,SAAAv8G,KAAAs8G,SAAAxyG,SAAA,KAAAuG,OAAA,IAIAmsG,OAAA,SAAAC,gBAIA,GAOAC,KAAAC,WAPAC,IAAAH,iBAAAtiG,EAAA,EAAAvE,EAAA,EAAA8N,EAAA,GAEAkb,EAAA5+B,KAAA4+B,EAAAoB,EAAAhgC,KAAAggC,EAAAn1B,EAAA7K,KAAA6K,EAEAqJ,IAAAtF,KAAAsF,IAAA0qB,EAAAoB,EAAAn1B,GACA2E,IAAAZ,KAAAY,IAAAovB,EAAAoB,EAAAn1B,GAGAgyG,WAAArtG,IAAA0E,KAAA,CAEA,IAAA1E,MAAA0E,IAEAwoG,IAAA,EACAC,WAAA,MAEA,CAEA,GAAAG,OAAA5oG,IAAA1E,GAIA,QAFAmtG,WAAAE,WAAA,GAAAC,OAAA5oG,IAAA1E,KAAAstG,OAAA,EAAA5oG,IAAA1E,KAEA0E,KAEA,IAAA0qB,GAAA89E,KAAA18E,EAAAn1B,GAAAiyG,OAAA98E,EAAAn1B,EAAA,EAAA,EAAA,MACA,KAAAm1B,GAAA08E,KAAA7xG,EAAA+zB,GAAAk+E,MAAA,CAAA,MACA,KAAAjyG,GAAA6xG,KAAA99E,EAAAoB,GAAA88E,MAAA,EAIAJ,KAAA,EAQA,MAJAE,KAAAziG,EAAAuiG,IACAE,IAAAhnG,EAAA+mG,WACAC,IAAAl5F,EAAAm5F,UAEAD,KAIAG,SAAA,WAEA,MAAA,QAAA,IAAA/8G,KAAA4+B,EAAA,GAAA,KAAA,IAAA5+B,KAAAggC,EAAA,GAAA,KAAA,IAAAhgC,KAAA6K,EAAA,GAAA,KAIAmyG,UAAA,SAAA7iG,EAAAvE,EAAA8N,GAEA,GAAAk5F,KAAA58G,KAAAw8G,QAMA,OAJAI,KAAAziG,GAAAA,EAAAyiG,IAAAhnG,GAAAA,EAAAgnG,IAAAl5F,GAAAA,EAEA1jB,KAAA87G,OAAAc,IAAAziG,EAAAyiG,IAAAhnG,EAAAgnG,IAAAl5F,GAEA1jB,MAIAzC,IAAA,SAAAspC,OAMA,MAJA7mC,MAAA4+B,GAAAiI,MAAAjI,EACA5+B,KAAAggC,GAAA6G,MAAA7G,EACAhgC,KAAA6K,GAAAg8B,MAAAh8B,EAEA7K,MAIAi9G,UAAA,SAAA9iB,OAAAC,QAMA,MAJAp6F,MAAA4+B,EAAAu7D,OAAAv7D,EAAAw7D,OAAAx7D,EACA5+B,KAAAggC,EAAAm6D,OAAAn6D,EAAAo6D,OAAAp6D,EACAhgC,KAAA6K,EAAAsvF,OAAAtvF,EAAAuvF,OAAAvvF,EAEA7K,MAIAwjG,UAAA,SAAA5tF,GAMA,MAJA5V,MAAA4+B,GAAAhpB,EACA5V,KAAAggC,GAAApqB,EACA5V,KAAA6K,GAAA+K,EAEA5V,MAIAioD,IAAA,SAAAphB,OAMA,MAJA7mC,MAAA4+B,EAAAhwB,KAAAsF,IAAA,EAAAlU,KAAA4+B,EAAAiI,MAAAjI,GACA5+B,KAAAggC,EAAApxB,KAAAsF,IAAA,EAAAlU,KAAAggC,EAAA6G,MAAA7G,GACAhgC,KAAA6K,EAAA+D,KAAAsF,IAAA,EAAAlU,KAAA6K,EAAAg8B,MAAAh8B,GAEA7K,MAIAu3C,SAAA,SAAA1Q,OAMA,MAJA7mC,MAAA4+B,GAAAiI,MAAAjI,EACA5+B,KAAAggC,GAAA6G,MAAA7G,EACAhgC,KAAA6K,GAAAg8B,MAAAh8B,EAEA7K,MAIA+nD,eAAA,SAAAnyC,GAMA,MAJA5V,MAAA4+B,GAAAhpB,EACA5V,KAAAggC,GAAApqB,EACA5V,KAAA6K,GAAA+K,EAEA5V,MAIA0/E,KAAA,SAAA74C,MAAAuc,OAMA,MAJApjD,MAAA4+B,IAAAiI,MAAAjI,EAAA5+B,KAAA4+B,GAAAwkB,MACApjD,KAAAggC,IAAA6G,MAAA7G,EAAAhgC,KAAAggC,GAAAojB,MACApjD,KAAA6K,IAAAg8B,MAAAh8B,EAAA7K,KAAA6K,GAAAu4C,MAEApjD,MAIAw7D,OAAA,SAAAz5C,GAEA,MAAAA,GAAA6c,IAAA5+B,KAAA4+B,GAAA7c,EAAAie,IAAAhgC,KAAAggC,GAAAje,EAAAlX,IAAA7K,KAAA6K,GAIAm7D,UAAA,SAAAnxD,MAAAsU,QAQA,WANAhc,KAAAgc,SAAAA,OAAA,GAEAnpB,KAAA4+B,EAAA/pB,MAAAsU,QACAnpB,KAAAggC,EAAAnrB,MAAAsU,OAAA,GACAnpB,KAAA6K,EAAAgK,MAAAsU,OAAA,GAEAnpB,MAIAurB,QAAA,SAAA1W,MAAAsU,QASA,WAPAhc,KAAA0H,QAAAA,cACA1H,KAAAgc,SAAAA,OAAA,GAEAtU,MAAAsU,QAAAnpB,KAAA4+B,EACA/pB,MAAAsU,OAAA,GAAAnpB,KAAAggC,EACAnrB,MAAAsU,OAAA,GAAAnpB,KAAA6K,EAEAgK,OAIAua,OAAA,WAEA,MAAApvB,MAAAs8G,WAUA,IAAA/mC,cAEA2nC,QAEAtnC,SAAA1mE,MAAA,GAAA60B,OAAA,WACA6C,SAAA13B,MAAA,GAEA1E,KAAA0E,MAAA,MACA+mE,cAAA/mE,MAAA,GAAAytB,SAAA,EAAA,EAAA,EAAA,IAEA4T,UAAArhC,MAAA,OAIAiuG,aAEAv8D,aAAA1xC,MAAA,OAIAkuG,QAEAv8D,QAAA3xC,MAAA,MACA6mE,YAAA7mE,OAAA,GACA8xC,cAAA9xC,MAAA,GACA+xC,iBAAA/xC,MAAA,MAIAmuG,OAEA38D,OAAAxxC,MAAA,MACAyxC,gBAAAzxC,MAAA,IAIAouG,UAEA98D,UAAAtxC,MAAA,MACAuxC,mBAAAvxC,MAAA,IAIAquG,aAEAzuD,aAAA5/C,MAAA,OAIAsuG,SAEA7xD,SAAAz8C,MAAA,MACAqnE,WAAArnE,MAAA,IAIAuuG,WAEA7xD,WAAA18C,MAAA,MACAsnE,aAAAtnE,MAAA,GAAA0rB,SAAA,EAAA,KAIA8iF,iBAEAltE,iBAAAthC,MAAA,MACAuhC,mBAAAvhC,MAAA,GACAwhC,kBAAAxhC,MAAA,IAIAyuG,cAEA5uD,cAAA7/C,MAAA,OAIA0uG,cAEA5uD,cAAA9/C,MAAA,OAIA2uG,aAEAtuD,aAAArgD,MAAA,OAIAo9B,KAEAlB,YAAAl8B,MAAA,OACAm8B,SAAAn8B,MAAA,GACAo8B,QAAAp8B,MAAA,KACAq8B,UAAAr8B,MAAA,GAAA60B,OAAA,YAIA2J,QAEAmkC,mBAAA3iE,UAEA4iE,mBAAA5iE,SAAAolD,YACA/nC,aACAsa,SAEA4P,UACA8P,cACAC,gBACAC,mBAGA2B,sBAAAl5C,UACAm5C,yBAAAn5C,UAEA6iE,YAAA7iE,SAAAolD,YACAztB,SACAkE,YACAxe,aACAm6B,YACAC,WACAC,eACAC,SAEApQ,UACA8P,cACAC,gBACAC,mBAGAkC,eAAAz5C,UACA05C,kBAAA15C,UAEA+iE,aAAA/iE,SAAAolD,YACAztB,SACAkE,YACA8b,SACAH,YAEAjQ,UACA8P,cACAC,gBACAC,iBACAtU,oBACAC,qBAGAiX,gBAAAn6C,UACAo6C,mBAAAp6C,UAEAgjE,kBAAAhjE,SAAAolD,YACA/nC,aACAu6B,YACAC,iBAIAirB,gBAAA9iE,SAAAolD,YACAztB,SACAkE,YACA7rC,SACA49B,aAKAqoB,QAEAywB,SAAA1mE,MAAA,GAAA60B,OAAA,WACA6C,SAAA13B,MAAA,GACA6yB,MAAA7yB,MAAA,GACA43B,OAAA53B,MAAA,GACA1E,KAAA0E,MAAA,MACA+mE,cAAA/mE,MAAA,GAAAytB,SAAA,EAAA,EAAA,EAAA,MAUA80C,eAEAqsC,MAAA,SAAAr3E,UAIA,IAAA,GAFAs3E,WAEArqG,EAAA,EAAAA,EAAA+yB,SAAA7mC,OAAA8T,IAAA,CAEA,GAAAgZ,KAAA1sB,KAAA+pB,MAAA0c,SAAA/yB,GAEA,KAAA,GAAAsgD,KAAAtnC,KAEAqxF,OAAA/pD,GAAAtnC,IAAAsnC,GAMA,MAAA+pD,SAIAh0F,MAAA,SAAAi0F,cAEA,GAAAC,gBAEA,KAAA,GAAAvqG,KAAAsqG,cAAA,CAEAC,aAAAvqG,KAEA,KAAA,GAAAsgD,KAAAgqD,cAAAtqG,GAAA,CAEA,GAAAwqG,eAAAF,aAAAtqG,GAAAsgD,EAEAkqD,iBAAAA,cAAAtiE,SACAsiE,cAAAC,WAAAD,cAAAtS,WACAsS,cAAAjb,WAAAib,cAAAxiE,WAAAwiE,cAAA9Y,WACA8Y,cAAAj7D,WAEAg7D,aAAAvqG,GAAAsgD,GAAAkqD,cAAAn0F,QAEAxtB,MAAAoN,QAAAu0G,eAEAD,aAAAvqG,GAAAsgD,GAAAkqD,cAAA7tG,QAIA4tG,aAAAvqG,GAAAsgD,GAAAkqD,eAQA,MAAAD,gBAgOAnxD,aACAsxD,kBA3NA,mFA4NAC,uBA1NA,+DA2NAC,mBAzNA,2EA0NAC,eAxNA,6aAyNAC,oBAvNA,wFAwNAC,aAtNA,2CAuNAC,mBArNA,0CAsNAC,MApNA,27LAqNAC,sBAnNA,65BAoNAC,yBAlNA,ghBAmNAC,8BAjNA,6LAkNAC,4BAhNA,sHAiNAC,uBA/MA,4HAgNAC,eA9MA,0DA+MAC,oBA7MA,qDA8MAC,kBA5MA,mDA6MAC,aA3MA,sDA4MAlC,OA1MA,sgEA2MAmC,4BAzMA,qlIA0MAC,qBAxMA,iIAyMAC,4BAvMA,oJAwMAC,uBAtMA,oKAuMAC,qBArMA,+MAsMAC,0BApMA,qEAqMAC,mBAnMA,0DAoMAC,wBAlMA,gvFAmMAC,gBAjMA,iqDAkMAC,qBAhMA,mnBAiMAC,mBA/LA,iOAgMAC,cA9LA,ugBA+LAC,WA7LA,sDA8LAC,gBA5LA,sDA6LAC,aA3LA,+SA4LAC,kBA1LA,4MA2LAC,0BAzLA;oaA0LAC,kBAxLA,+HAyLAC,uBAvLA,iGAwLAC,sBAtLA,6oEAuLAC,YArLA,wiOAsLAC,sBApLA,wMAqLAC,2BAnLA,66CAoLAC,yBAlLA,8iBAmLAC,8BAjLA,gqJAkLAC,gBAhLA,m/GAiLAC,qBA/KA,oIAgLAC,0BA9KA,0IA+KAC,wBA7KA,wIA8KAC,mBA5KA,qQA6KAC,aA3KA,sJA4KAC,kBA1KA,qDA2KAC,sBAzKA,qMA0KAC,2BAxKA,mFAyKAC,sBAvKA,yKAwKAC,2BAtKA,qEAuKAC,mBArKA,gVAsKAC,wBApKA,2KAqKAC,mBAnKA,0qBAoKAC,gBAlKA,2lBAmKAC,wBAjKA,wrBAkKAC,QAhKA,qyCAiKAC,6BA/JA,8EAgKAC,eA9JA,gHA+JAC,mBA7JA,0FA8JAC,wBA5JA,qVA6JAC,sBA3JA,yKA4JAC,2BA1JA,qEA2JAC,wBAzJA;0qNA0JAC,sBAxJA,0eAyJAC,iBAvJA,ihBAwJAC,yBAtJA,usCAuJAC,gBArJA,kOAsJAC,qBApJA,4gCAqJAC,gBAnJA,iYAoJAC,kBAlJA,8WAmJAC,qBAjJA,0LAkJAC,0BAhJA,mEAiJAC,qBA/IA,+FAgJAC,0BA9IA,o5BA+IAC,iBA7IA,iQA8IAC,eA5IA,iSA6IAC,UA3IA,6RA4IAC,kBA1IA,oFA2IAC,gBAzIA,2GA0IAC,WAxIA,6EAyIAC,gBAvIA,2NAyIAC,UAvIA,wPAwIAC,UAtIA,+LAuIAC,WArIA,ivBAsIAC,WApIA,oqBAqIAC,kBAnIA,+rBAoIAC,kBAlIA,otBAmIAC,cAjIA,oXAkIAC,cAhIA,+LAiIAC,gBA/HA,qyBAgIAC,gBA9HA,khBA+HAC,eA7HA,w8CA8HAC,eA5HA,u2BA6HAC,iBA3HA,mlEA4HAC,iBA1HA,4jCA2HAC,eAzHA,g4DA0HAC,eAxHA,uqCAyHAC,kBAvHA,0mEAwHAC,kBAtHA,+mCAuHAC,YArHA,wgBAsHAC,YApHA;68BAqHAC,YAnHA,8yBAoHAC,YAlHA,4mBAmHAC,YAjHA,kSAkHAC,YAhHA,6KAyHApiE,WAEAqiE,OAEAv+E,SAAAgrC,cAAAqsC,OACAvoC,YAAA2nC,OACA3nC,YAAA4nC,YACA5nC,YAAA6nC,OACA7nC,YAAA8nC,MACA9nC,YAAA+nC,SACA/nC,YAAAjpC,MAGAnG,aAAA2mB,YAAAq3D,eACA/9E,eAAA0mB,YAAAo3D,gBAIAe,SAEAx+E,SAAAgrC,cAAAqsC,OACAvoC,YAAA2nC,OACA3nC,YAAA4nC,YACA5nC,YAAA6nC,OACA7nC,YAAA8nC,MACA9nC,YAAA+nC,SACA/nC,YAAAgoC,YACAhoC,YAAAjpC,IACAipC,YAAA7nC,QAEAmoC,UAAA3mE,MAAA,GAAA60B,OAAA,OAIAoC,aAAA2mB,YAAAu3D,iBACAj+E,eAAA0mB,YAAAs3D,kBAIAc,OAEAz+E,SAAAgrC,cAAAqsC,OACAvoC,YAAA2nC,OACA3nC,YAAA4nC,YACA5nC,YAAA6nC,OACA7nC,YAAA8nC,MACA9nC,YAAA+nC,SACA/nC,YAAAgoC,YACAhoC,YAAAioC,QACAjoC,YAAAkoC,UACAloC,YAAAmoC,gBACAnoC,YAAAsoC,YACAtoC,YAAAjpC,IACAipC,YAAA7nC,QAEAmoC,UAAA3mE,MAAA,GAAA60B,OAAA,IACAsyC,UAAAnnE,MAAA,GAAA60B,OAAA,UACAuyC,WAAApnE,MAAA,OAIAi3B,aAAA2mB,YAAAy3D,eACAn+E,eAAA0mB,YAAAw3D,gBAIAa,UAEA1+E,SAAAgrC,cAAAqsC,OACAvoC,YAAA2nC,OACA3nC,YAAA6nC,OACA7nC,YAAA8nC,MACA9nC,YAAA+nC,SACA/nC,YAAAgoC,YACAhoC,YAAAioC,QACAjoC,YAAAkoC,UACAloC,YAAAmoC,gBACAnoC,YAAAooC,aACApoC,YAAAqoC,aACAroC,YAAAjpC,IACAipC,YAAA7nC,QAEAmoC,UAAA3mE,MAAA,GAAA60B,OAAA,IACA0yC,WAAAvnE,MAAA,IACAwnE,WAAAxnE,MAAA,IACAynE,iBAAAznE,MAAA,MAIAi3B,aAAA2mB,YAAA23D,kBACAr+E,eAAA0mB,YAAA03D,mBAIAr/D,QAEA1e,SAAAgrC,cAAAqsC,OACAvoC,YAAApwB,OACAowB,YAAAjpC,MAGAnG,aAAA2mB,YAAA+3D,YACAz+E,eAAA0mB,YAAA83D,aAIAQ,QAEA3+E,SAAAgrC,cAAAqsC,OACAvoC,YAAA2nC,OACA3nC,YAAAjpC,KAEAxF,OAAA53B,MAAA,GACAgnE,UAAAhnE,MAAA,GACAinE,WAAAjnE,MAAA,MAIAi3B,aAAA2mB,YAAAm3D,gBACA79E,eAAA0mB,YAAAk3D,iBAIAp7E,OAEAnC,SAAAgrC,cAAAqsC,OACAvoC,YAAA2nC,OACA3nC,YAAAmoC,kBAGAv3E,aAAA2mB,YAAA62D,WACAv9E,eAAA0mB,YAAA42D,YAIAryE,QAEA5K,SAAAgrC,cAAAqsC,OACAvoC,YAAA2nC,OACA3nC,YAAAioC,QACAjoC,YAAAkoC,UACAloC,YAAAmoC,iBAEA92E,SAAA13B,MAAA,MAIAi3B,aAAA2mB,YAAA63D,YACAv+E,eAAA0mB,YAAA43D,aAQA9hE,MAEAnc,UACAuc,OAAA9zC,MAAA,MACAm2G,OAAAn2G,OAAA,GACA03B,SAAA13B,MAAA,IAGAi3B,aAAA2mB,YAAA22D,UACAr9E,eAAA0mB,YAAA02D,WAIA8B,UAEA7+E,UACA8+E,WAAAr2G,MAAA,OAGAi3B,aAAA2mB,YAAAi3D,cACA39E,eAAA0mB,YAAAg3D,eAIA0B,cAEA/+E,SAAAgrC,cAAAqsC,OACAvoC,YAAA2nC,OACA3nC,YAAAmoC,iBAEA9sE,mBAAA1hC,MAAA,GAAA4uB,UACA+S,cAAA3hC,MAAA,GACA4hC,aAAA5hC,MAAA,QAIAi3B,aAAA2mB,YAAA+2D,kBACAz9E,eAAA0mB,YAAA82D,mBAIAntE,QAEAhQ,SAAAgrC,cAAAqsC,OACAvoC,YAAA7nC,QAEA7G,OAAA33B,MAAA,GAAA60B,OAAA,IACA6C,SAAA13B,MAAA,MAIAi3B,aAAA2mB,YAAAi4D,YACA3+E,eAAA0mB,YAAAg4D,aAMAniE,WAAA8iE,UAEAh/E,SAAAgrC,cAAAqsC,OACAn7D,UAAAwiE,SAAA1+E,UAEAmwC,WAAA1nE,MAAA,GACA2nE,oBAAA3nE,MAAA,MAIAi3B,aAAA2mB,YAAA23D,kBACAr+E,eAAA0mB,YAAA03D,mBAeA36G,OAAAm3F,OAAA/8D,KAAAznC,WAEAqU,IAAA,SAAArB,IAAA0E,KAKA,MAHAlU,MAAAwP,IAAA25B,KAAA35B,KACAxP,KAAAkU,IAAAi1B,KAAAj1B,KAEAlU,MAIA0lH,cAAA,SAAAvgE,QAEAnlD,KAAA2lH,WAEA,KAAA,GAAA7hH,GAAA,EAAAyyC,GAAA4O,OAAAvlD,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAA4lH,cAAAzgE,OAAArhD,GAIA,OAAA9D,OAIA6lH,qBAAA,WAEA,GAAAp3B,IAAA,GAAA7zD,QAEA,OAAA,UAAAqW,OAAAlP,MAEA,GAAAk5D,UAAAxM,GAAAtlD,KAAApH,MAAAgmB,eAAA,GAIA,OAHA/nD,MAAAwP,IAAA25B,KAAA8H,QAAAgX,IAAAgzC,UACAj7F,KAAAkU,IAAAi1B,KAAA8H,QAAA1zC,IAAA09F,UAEAj7F,SAMA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAAkzD,KAKA,MAHAr8F,MAAAwP,IAAA25B,KAAAkzD,IAAA7sF,KACAxP,KAAAkU,IAAAi1B,KAAAkzD,IAAAnoF,KAEAlU,MAIA2lH,UAAA,WAKA,MAHA3lH,MAAAwP,IAAAgI,EAAAxX,KAAAwP,IAAAyK,EAAAiqB,EAAAA,EACAlkC,KAAAkU,IAAAsD,EAAAxX,KAAAkU,IAAA+F,GAAAiqB,EAAAA,EAEAlkC,MAIA8lH,QAAA,WAIA,MAAA9lH,MAAAkU,IAAAsD,EAAAxX,KAAAwP,IAAAgI,GAAAxX,KAAAkU,IAAA+F,EAAAja,KAAAwP,IAAAyK,GAIA8rG,UAAA,SAAAtJ,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA7hF,QACA,OAAA56B,MAAA8lH,UAAAjhG,OAAAhU,IAAA,EAAA,GAAAgU,OAAA6+D,WAAA1jF,KAAAwP,IAAAxP,KAAAkU,KAAA6zC,eAAA,KAIA+c,QAAA,SAAA23C,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA7hF,QACA,OAAA56B,MAAA8lH,UAAAjhG,OAAAhU,IAAA,EAAA,GAAAgU,OAAAs6D,WAAAn/E,KAAAkU,IAAAlU,KAAAwP,MAIAo2G,cAAA,SAAAr8D,OAKA,MAHAvpD,MAAAwP,IAAAA,IAAA+5C,OACAvpD,KAAAkU,IAAAA,IAAAq1C,OAEAvpD,MAIAgmH,eAAA,SAAArmE,QAKA,MAHA3/C,MAAAwP,IAAAy4C,IAAAtI,QACA3/C,KAAAkU,IAAA3W,IAAAoiD,QAEA3/C,MAIAimH,eAAA,SAAA9iB,QAKA,MAHAnjG,MAAAwP,IAAAg0F,WAAAL,QACAnjG,KAAAkU,IAAAsvF,UAAAL,QAEAnjG,MAIAopC,cAAA,SAAAmgB,OAEA,QAAAA,MAAA/xC,EAAAxX,KAAAwP,IAAAgI,GAAA+xC,MAAA/xC,EAAAxX,KAAAkU,IAAAsD,GACA+xC,MAAAtvC,EAAAja,KAAAwP,IAAAyK,GAAAsvC,MAAAtvC,EAAAja,KAAAkU,IAAA+F,IAIAisG,YAAA,SAAA7pB,KAEA,MAAAr8F,MAAAwP,IAAAgI,GAAA6kF,IAAA7sF,IAAAgI,GAAA6kF,IAAAnoF,IAAAsD,GAAAxX,KAAAkU,IAAAsD,GACAxX,KAAAwP,IAAAyK,GAAAoiF,IAAA7sF,IAAAyK,GAAAoiF,IAAAnoF,IAAA+F,GAAAja,KAAAkU,IAAA+F,GAIA4kD,aAAA,SAAAtV,MAAAkzD,gBAOA,OAFAA,gBAAA,GAAA7hF,UAEA/pB,KACA04C,MAAA/xC,EAAAxX,KAAAwP,IAAAgI,IAAAxX,KAAAkU,IAAAsD,EAAAxX,KAAAwP,IAAAgI,IACA+xC,MAAAtvC,EAAAja,KAAAwP,IAAAyK,IAAAja,KAAAkU,IAAA+F,EAAAja,KAAAwP,IAAAyK,KAKAksG,cAAA,SAAA9pB,KAIA,QAAAA,IAAAnoF,IAAAsD,EAAAxX,KAAAwP,IAAAgI,GAAA6kF,IAAA7sF,IAAAgI,EAAAxX,KAAAkU,IAAAsD,GACA6kF,IAAAnoF,IAAA+F,EAAAja,KAAAwP,IAAAyK,GAAAoiF,IAAA7sF,IAAAyK,EAAAja,KAAAkU,IAAA+F,IAIAmsG,WAAA,SAAA78D,MAAAkzD,gBAGA,OADAA,gBAAA,GAAA7hF,UACAuO,KAAAogB,OAAA68B,MAAApmF,KAAAwP,IAAAxP,KAAAkU,MAIAmyG,gBAAA,WAEA,GAAA53B,IAAA,GAAA7zD,QAEA,OAAA,UAAA2uB,OAGA,MADAklC,IAAAtlD,KAAAogB,OAAA68B,MAAApmF,KAAAwP,IAAAxP,KAAAkU,KACA+zC,IAAAsB,OAAA3pD,aAMA0mH,UAAA,SAAAjqB,KAKA,MAHAr8F,MAAAwP,IAAA0E,IAAAmoF,IAAA7sF,KACAxP,KAAAkU,IAAA1E,IAAA6sF,IAAAnoF,KAEAlU,MAIAumH,MAAA,SAAAlqB,KAKA,MAHAr8F,MAAAwP,IAAAA,IAAA6sF,IAAA7sF,KACAxP,KAAAkU,IAAAA,IAAAmoF,IAAAnoF,KAEAlU,MAIA+8F,UAAA,SAAA5zE,QAKA,MAHAnpB,MAAAwP,IAAAjS,IAAA4rB,QACAnpB,KAAAkU,IAAA3W,IAAA4rB,QAEAnpB,MAIAw7D,OAAA,SAAA6gC,KAEA,MAAAA,KAAA7sF,IAAAgsD,OAAAx7D,KAAAwP,MAAA6sF,IAAAnoF,IAAAsnD,OAAAx7D,KAAAkU,QA+YAy2B,cAAAnuC,UAAAqN,OAAA88F,OAAA9rE,QAAAr+B,WACAmuC,cAAAnuC,UAAAsvF,YAAAnhD,aAyXA,IAAA8C,YAAA,CA4DA5jC,QAAAm3F,OAAAxzD,SAAAhxC,UAAAm+B,gBAAAn+B,WAEAgqH,YAAA,EAEA1yD,gBAAA,aAEA3jB,UAAA,SAAA7vB,QAEA,OAAAnT,KAAAmT,OAEA,IAAA,GAAAlQ,OAAAkQ,QAAA,CAEA,GAAAmmG,UAAAnmG,OAAAlQ,IAEA,QAAAjD,KAAAs5G,SAQA,GAAA,YAAAr2G,IAAA,CAQA,GAAAs2G,cAAA1mH,KAAAoQ,SAEAjD,KAAAu5G,aAOAA,cAAAA,aAAA9qE,QAEA8qE,aAAA71G,IAAA41G,UAEAC,cAAAA,aAAAhrE,WAAA+qE,UAAAA,SAAA/qE,UAEAgrE,aAAAv9E,KAAAs9E,UAKAzmH,KAAAoQ,KAHA,aAAAA,IAGAywF,OAAA4lB,UAIAA,SApBA12G,QAAAH,KAAA,SAAA5P,KAAAo7B,KAAA,MAAAhrB,IAAA,6CAVAL,SAAAH,KAAA,SAAA5P,KAAAo7B,KAAA,sEACAp7B,KAAA8tC,YAr5NA,IAq5NA24E,aATA12G,SAAAH,KAAA,oBAAAQ,IAAA,+BA8CAgf,OAAA,SAAAw1E,MAgHA,QAAA+hB,kBAAA7+D,OAEA,GAAAxnC,UAEA,KAAA,GAAAlQ,OAAA03C,OAAA,CAEA,GAAAvnC,MAAAunC,MAAA13C,WACAmQ,MAAAskF,SACAvkF,OAAApgB,KAAAqgB,MAIA,MAAAD,QA1HA,GAAAsmG,YAAAz5G,KAAAy3F,IAEAgiB,UAEAhiB,MACAvgE,YACAjG,WAKA,IAAA7d,OACAskF,UACA5qE,QAAA,IACAmB,KAAA,WACA0pE,UAAA,mBA+GA,IA1GAvkF,KAAAkb,KAAAz7B,KAAAy7B,KACAlb,KAAA6a,KAAAp7B,KAAAo7B,KAEA,KAAAp7B,KAAApC,OAAA2iB,KAAA3iB,KAAAoC,KAAApC,MAEAoC,KAAA6mC,OAAA7mC,KAAA6mC,MAAA+U,UAAAr7B,KAAAsmB,MAAA7mC,KAAA6mC,MAAAy1E,cAEAnvG,KAAAnN,KAAAy2E,YAAAl2D,KAAAk2D,UAAAz2E,KAAAy2E,eACAtpE,KAAAnN,KAAA02E,YAAAn2D,KAAAm2D,UAAA12E,KAAA02E,WAEA12E,KAAA61E,UAAA71E,KAAA61E,SAAAj6B,UAAAr7B,KAAAs1D,SAAA71E,KAAA61E,SAAAymC,UACAt8G,KAAAq2E,UAAAr2E,KAAAq2E,SAAAz6B,UAAAr7B,KAAA81D,SAAAr2E,KAAAq2E,SAAAimC,cACAnvG,KAAAnN,KAAAs2E,YAAA/1D,KAAA+1D,UAAAt2E,KAAAs2E,eACAnpE,KAAAnN,KAAA42E,YAAAr2D,KAAAq2D,UAAA52E,KAAA42E,eACAzpE,KAAAnN,KAAA62E,qBAAAt2D,KAAAs2D,mBAAA72E,KAAA62E,oBAEA72E,KAAAwK,KAAAxK,KAAAwK,IAAAy4C,YAAA1iC,KAAA/V,IAAAxK,KAAAwK,IAAA4kB,OAAAw1E,MAAAnpE,MACAz7B,KAAAuwC,UAAAvwC,KAAAuwC,SAAA0S,YAAA1iC,KAAAgwB,SAAAvwC,KAAAuwC,SAAAnhB,OAAAw1E,MAAAnpE,MACAz7B,KAAAwgD,UAAAxgD,KAAAwgD,SAAAyC,YAAA1iC,KAAAigC,SAAAxgD,KAAAwgD,SAAApxB,OAAAw1E,MAAAnpE,MACAz7B,KAAA2rD,SAAA3rD,KAAA2rD,QAAA1I,YAEA1iC,KAAAorC,QAAA3rD,KAAA2rD,QAAAv8B,OAAAw1E,MAAAnpE,KACAlb,KAAAg2D,UAAAv2E,KAAAu2E,WAGAv2E,KAAA4rD,WAAA5rD,KAAA4rD,UAAA3I,YAEA1iC,KAAAqrC,UAAA5rD,KAAA4rD,UAAAx8B,OAAAw1E,MAAAnpE,KACAlb,KAAAi2D,YAAAx2E,KAAAw2E,YAAAjrD,WAGAvrB,KAAAwwC,iBAAAxwC,KAAAwwC,gBAAAyS,YAEA1iC,KAAAiwB,gBAAAxwC,KAAAwwC,gBAAAphB,OAAAw1E,MAAAnpE,KACAlb,KAAAkwB,kBAAAzwC,KAAAywC,kBACAlwB,KAAAmwB,iBAAA1wC,KAAA0wC,kBAGA1wC,KAAA+uD,cAAA/uD,KAAA+uD,aAAA9L,YAAA1iC,KAAAwuC,aAAA/uD,KAAA+uD,aAAA3/B,OAAAw1E,MAAAnpE,MACAz7B,KAAAgvD,cAAAhvD,KAAAgvD,aAAA/L,YAAA1iC,KAAAyuC,aAAAhvD,KAAAgvD,aAAA5/B,OAAAw1E,MAAAnpE,MAEAz7B,KAAA8uD,aAAA9uD,KAAA8uD,YAAA7L,YAAA1iC,KAAAuuC,YAAA9uD,KAAA8uD,YAAA1/B,OAAAw1E,MAAAnpE,MACAz7B,KAAA4gD,aAAA5gD,KAAA4gD,YAAAqC,YAAA1iC,KAAAqgC,YAAA5gD,KAAA4gD,YAAAxxB,OAAAw1E,MAAAnpE,MAEAz7B,KAAA6gD,QAAA7gD,KAAA6gD,OAAAoC,YAEA1iC,KAAAsgC,OAAA7gD,KAAA6gD,OAAAzxB,OAAAw1E,MAAAnpE,KACAlb,KAAAygC,aAAAhhD,KAAAghD,cAIAhhD,KAAAuvD,aAAAvvD,KAAAuvD,YAAAtM,YAEA1iC,KAAAgvC,YAAAvvD,KAAAuvD,YAAAngC,OAAAw1E,MAAAnpE,UAIAtuB,KAAAnN,KAAA+hC,OAAAxhB,KAAAwhB,KAAA/hC,KAAA+hC,UACA50B,KAAAnN,KAAAsvD,kBAAA/uC,KAAA+uC,gBAAAtvD,KAAAsvD,iBAEAtvD,KAAAsqC,WAAAqD,iBAAAptB,KAAA+pB,SAAAtqC,KAAAsqC,WACA,IAAAtqC,KAAA8tC,cAAAvtB,KAAAutB,YAAA9tC,KAAA8tC,aACA9tC,KAAA4tC,OAAAC,YAAAttB,KAAAqtB,KAAA5tC,KAAA4tC,MACA5tC,KAAA+tC,eAAAC,WAAAztB,KAAAwtB,aAAA/tC,KAAA+tC,cAEA/tC,KAAA4mC,QAAA,IAAArmB,KAAAqmB,QAAA5mC,KAAA4mC,UACA,IAAA5mC,KAAAiuC,cAAA1tB,KAAA0tB,YAAAjuC,KAAAiuC,aAEA1tB,KAAA8tB,UAAAruC,KAAAquC,UACA9tB,KAAA8sB,UAAArtC,KAAAqtC,UACA9sB,KAAA+sB,WAAAttC,KAAAstC,YAEA,IAAAttC,KAAA8uC,YAAAvuB,KAAAuuB,WAAA,GAEA9uC,KAAAwrC,UAAA,IAAAjrB,KAAAirB,UAAAxrC,KAAAwrC,YACA,IAAAxrC,KAAAmtC,qBAAA5sB,KAAA4sB,mBAAAntC,KAAAmtC,qBAEA,IAAAntC,KAAAqvC,YAAA9uB,KAAA8uB,UAAArvC,KAAAqvC,WACArvC,KAAAsvC,mBAAA,IAAA/uB,KAAA+uB,mBAAAtvC,KAAAsvC,oBACA,UAAAtvC,KAAAkhD,mBAAA3gC,KAAA2gC,iBAAAlhD,KAAAkhD,kBACA,UAAAlhD,KAAAmhD,oBAAA5gC,KAAA4gC,kBAAAnhD,KAAAmhD,oBAEA,IAAAnhD,KAAAyvC,eAAAlvB,KAAAkvB,cAAA,IACA,IAAAzvC,KAAAwvC,WAAAjvB,KAAAivB,UAAA,IAEA,IAAAxvC,KAAAoD,UAAAmd,KAAAnd,SAAA,GACA,OAAAyjH,KAAAC,UAAA9mH,KAAAgvC,YAAAzuB,KAAAyuB,SAAAhvC,KAAAgvC,UAoBA43E,OAAA,CAEA,GAAAviF,UAAAsiF,iBAAA/hB,KAAAvgE,UACAjG,OAAAuoF,iBAAA/hB,KAAAxmE,OAEAiG,UAAAzkC,OAAA,IAAA2gB,KAAA8jB,SAAAA,UACAjG,OAAAx+B,OAAA,IAAA2gB,KAAA6d,OAAAA,QAIA,MAAA7d,OAIAwJ,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAA1jC,QAEAzF,KAAApC,KAAA6H,OAAA7H,KAEAoC,KAAAssC,IAAA7mC,OAAA6mC,IACAtsC,KAAA0tC,OAAAjoC,OAAAioC,OAEA1tC,KAAAsqC,SAAA7kC,OAAA6kC,SACAtqC,KAAA4tC,KAAAnoC,OAAAmoC,KACA5tC,KAAA8tC,YAAAroC,OAAAqoC,YACA9tC,KAAA+tC,aAAAtoC,OAAAsoC,aAEA/tC,KAAA4mC,QAAAnhC,OAAAmhC,QACA5mC,KAAAiuC,YAAAxoC,OAAAwoC,YAEAjuC,KAAAwqC,SAAA/kC,OAAA+kC,SACAxqC,KAAAyqC,SAAAhlC,OAAAglC,SACAzqC,KAAAuqC,cAAA9kC,OAAA8kC,cACAvqC,KAAAitC,cAAAxnC,OAAAwnC,cACAjtC,KAAAktC,cAAAznC,OAAAynC,cACAltC,KAAAgtC,mBAAAvnC,OAAAunC,mBAEAhtC,KAAAquC,UAAA5oC,OAAA4oC,UACAruC,KAAAqtC,UAAA5nC,OAAA4nC,UACArtC,KAAAstC,WAAA7nC,OAAA6nC,WAEAttC,KAAA0uC,WAAAjpC,OAAAipC,WAEA1uC,KAAAonC,UAAA3hC,OAAA2hC,UAEApnC,KAAA2uC,cAAAlpC,OAAAkpC,cACA3uC,KAAA4uC,oBAAAnpC,OAAAmpC,oBACA5uC,KAAA6uC,mBAAAppC,OAAAopC,mBAEA7uC,KAAA8uC,UAAArpC,OAAAqpC,UAEA9uC,KAAAwrC,UAAA/lC,OAAA+lC,UACAxrC,KAAAmtC,mBAAA1nC,OAAA0nC,mBAEAntC,KAAA+uC,SAAAtpC,OAAAspC,SAEA/uC,KAAAoD,QAAAqC,OAAArC,QACApD,KAAAgvC,SAAA63E,KAAAE,MAAAF,KAAAC,UAAArhH,OAAAupC,WAEAhvC,KAAAyuC,YAAAhpC,OAAAgpC,YACAzuC,KAAAwuC,iBAAA/oC,OAAA+oC,gBAEA,IAAAw4E,WAAAvhH,OAAA8oC,eACA04E,UAAA,IAEA,IAAA,OAAAD,UAAA,CAEA,GAAAzvG,GAAAyvG,UAAApnH,MACAqnH,WAAA,GAAA1qH,OAAAgb,EAEA,KAAA,GAAAzT,GAAA,EAAAA,IAAAyT,IAAAzT,EACAmjH,UAAAnjH,GAAAkjH,UAAAljH,GAAAimB,QAMA,MAFA/pB,MAAAuuC,eAAA04E,UAEAjnH,MAIAmkD,QAAA,WAEAnkD,KAAA7B,eAAAi9B,KAAA,eAmFA6T,eAAAzyC,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACAyyC,eAAAzyC,UAAAsvF,YAAA78C,eAEAA,eAAAzyC,UAAAuzD,kBAAA,EAEA9gB,eAAAzyC,UAAA2sC,KAAA,SAAA1jC,QAwBA,MAtBA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAAomC,eAAA3gC,OAAA2gC,eACApmC,KAAAmmC,aAAA1gC,OAAA0gC,aAEAnmC,KAAAymC,SAAAgrC,cAAA1nD,MAAAtkB,OAAAghC,UAEAzmC,KAAAmvC,QAAA1pC,OAAA0pC,QAEAnvC,KAAAqvC,UAAA5pC,OAAA4pC,UACArvC,KAAAsvC,mBAAA7pC,OAAA6pC,mBAEAtvC,KAAA0tC,OAAAjoC,OAAAioC,OACA1tC,KAAAuvC,SAAA9pC,OAAA8pC,SAEAvvC,KAAAwvC,SAAA/pC,OAAA+pC,SAEAxvC,KAAAyvC,aAAAhqC,OAAAgqC,aACAzvC,KAAA0vC,aAAAjqC,OAAAiqC,aAEA1vC,KAAA2vC,WAAAlqC,OAAAkqC,WAEA3vC,MAIAivC,eAAAzyC,UAAA4yB,OAAA,SAAAw1E,MAEA,GAAArkF,MAAAitB,SAAAhxC,UAAA4yB,OAAAxoB,KAAA5G,KAAA4kG,KAMA,OAJArkF,MAAAkmB,SAAAzmC,KAAAymC,SACAlmB,KAAA4lB,aAAAnmC,KAAAmmC,aACA5lB,KAAA6lB,eAAApmC,KAAAomC,eAEA7lB,MAwDA6vB,kBAAA5zC,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACA4zC,kBAAA5zC,UAAAsvF,YAAA17C,kBAEAA,kBAAA5zC,UAAAk4E,qBAAA,EAEAtkC,kBAAA5zC,UAAA2sC,KAAA,SAAA1jC,QAoBA,MAlBA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAAqwC,aAAA5qC,OAAA4qC,aAEArwC,KAAAwvC,SAAA/pC,OAAA+pC,SACAxvC,KAAAyvC,aAAAhqC,OAAAgqC,aAEAzvC,KAAAwK,IAAA/E,OAAA+E,IAEAxK,KAAAuwC,SAAA9qC,OAAA8qC,SAEAvwC,KAAAwwC,gBAAA/qC,OAAA+qC,gBACAxwC,KAAAywC,kBAAAhrC,OAAAgrC,kBACAzwC,KAAA0wC,iBAAAjrC,OAAAirC,iBAEA1wC,KAAAqvC,UAAA5pC,OAAA4pC,UACArvC,KAAAsvC,mBAAA7pC,OAAA6pC,mBAEAtvC,MAuDA2wC,qBAAAn0C,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACAm0C,qBAAAn0C,UAAAsvF,YAAAn7C,qBAEAA,qBAAAn0C,UAAAw3C,wBAAA,EAEArD,qBAAAn0C,UAAA2sC,KAAA,SAAA1jC,QAmBA,MAjBA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA4wC,kBAAAzH,KAAA1jC,OAAAmrC,mBACA5wC,KAAA6wC,aAAAprC,OAAAorC,aACA7wC,KAAA8wC,YAAArrC,OAAAqrC,YAEA9wC,KAAAwvC,SAAA/pC,OAAA+pC,SACAxvC,KAAAyvC,aAAAhqC,OAAAgqC,aAEAzvC,KAAAwK,IAAA/E,OAAA+E,IAEAxK,KAAAuwC,SAAA9qC,OAAA8qC,SAEAvwC,KAAAwwC,gBAAA/qC,OAAA+qC,gBACAxwC,KAAAywC,kBAAAhrC,OAAAgrC,kBACAzwC,KAAA0wC,iBAAAjrC,OAAAirC,iBAEA1wC,MAgBA6J,OAAAm3F,OAAAjwD,KAAAv0C,WAEA0qH,QAAA,EAEAr2G,IAAA,SAAArB,IAAA0E,KAKA,MAHAlU,MAAAwP,IAAA25B,KAAA35B,KACAxP,KAAAkU,IAAAi1B,KAAAj1B,KAEAlU,MAIAmnH,aAAA,SAAAtyG,OAUA,IAAA,GARAuyG,MAAAljF,EAAAA,EACAmjF,KAAAnjF,EAAAA,EACAojF,KAAApjF,EAAAA,EAEAqjF,MAAArjF,EAAAA,EACAsjF,MAAAtjF,EAAAA,EACAujF,MAAAvjF,EAAAA,EAEApgC,EAAA,EAAA4f,EAAA7O,MAAAjV,OAAAkE,EAAA4f,EAAA5f,GAAA,EAAA,CAEA,GAAA0T,GAAA3C,MAAA/Q,GACAmW,EAAApF,MAAA/Q,EAAA,GACA84B,EAAA/nB,MAAA/Q,EAAA,EAEA0T,GAAA4vG,OAAAA,KAAA5vG,GACAyC,EAAAotG,OAAAA,KAAAptG,GACA2iB,EAAA0qF,OAAAA,KAAA1qF,GAEAplB,EAAA+vG,OAAAA,KAAA/vG,GACAyC,EAAAutG,OAAAA,KAAAvtG,GACA2iB,EAAA6qF,OAAAA,KAAA7qF,GAOA,MAHA58B,MAAAwP,IAAAqB,IAAAu2G,KAAAC,KAAAC,MACAtnH,KAAAkU,IAAArD,IAAA02G,KAAAC,KAAAC,MAEAznH,MAIA0nH,uBAAA,SAAA3vE,WAUA,IAAA,GARAqvE,MAAAljF,EAAAA,EACAmjF,KAAAnjF,EAAAA,EACAojF,KAAApjF,EAAAA,EAEAqjF,MAAArjF,EAAAA,EACAsjF,MAAAtjF,EAAAA,EACAujF,MAAAvjF,EAAAA,EAEApgC,EAAA,EAAA4f,EAAAq0B,UAAAoB,MAAAr1C,EAAA4f,EAAA5f,IAAA,CAEA,GAAA0T,GAAAugC,UAAA2mC,KAAA56E,GACAmW,EAAA89B,UAAA2sD,KAAA5gG,GACA84B,EAAAmb,UAAA0uD,KAAA3iG,EAEA0T,GAAA4vG,OAAAA,KAAA5vG,GACAyC,EAAAotG,OAAAA,KAAAptG,GACA2iB,EAAA0qF,OAAAA,KAAA1qF,GAEAplB,EAAA+vG,OAAAA,KAAA/vG,GACAyC,EAAAutG,OAAAA,KAAAvtG,GACA2iB,EAAA6qF,OAAAA,KAAA7qF,GAOA,MAHA58B,MAAAwP,IAAAqB,IAAAu2G,KAAAC,KAAAC,MACAtnH,KAAAkU,IAAArD,IAAA02G,KAAAC,KAAAC,MAEAznH,MAIA0lH,cAAA,SAAAvgE,QAEAnlD,KAAA2lH,WAEA,KAAA,GAAA7hH,GAAA,EAAAyyC,GAAA4O,OAAAvlD,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAA4lH,cAAAzgE,OAAArhD,GAIA,OAAA9D,OAIA6lH,qBAAA,WAEA,GAAAp3B,IAAA,GAAA3wD,QAEA,OAAA,UAAAmT,OAAAlP,MAEA,GAAAk5D,UAAAxM,GAAAtlD,KAAApH,MAAAgmB,eAAA,GAKA,OAHA/nD,MAAAwP,IAAA25B,KAAA8H,QAAAgX,IAAAgzC,UACAj7F,KAAAkU,IAAAi1B,KAAA8H,QAAA1zC,IAAA09F,UAEAj7F,SAMAkmD,cAAA,SAAAlU,QAIA,MAFAhyC,MAAA2lH,YAEA3lH,KAAA2nH,eAAA31E,SAIAjoB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAAkzD,KAKA,MAHAr8F,MAAAwP,IAAA25B,KAAAkzD,IAAA7sF,KACAxP,KAAAkU,IAAAi1B,KAAAkzD,IAAAnoF,KAEAlU,MAIA2lH,UAAA,WAKA,MAHA3lH,MAAAwP,IAAAgI,EAAAxX,KAAAwP,IAAAyK,EAAAja,KAAAwP,IAAAotB,EAAAsH,EAAAA,EACAlkC,KAAAkU,IAAAsD,EAAAxX,KAAAkU,IAAA+F,EAAAja,KAAAkU,IAAA0oB,GAAAsH,EAAAA,EAEAlkC,MAIA8lH,QAAA,WAIA,MAAA9lH,MAAAkU,IAAAsD,EAAAxX,KAAAwP,IAAAgI,GAAAxX,KAAAkU,IAAA+F,EAAAja,KAAAwP,IAAAyK,GAAAja,KAAAkU,IAAA0oB,EAAA58B,KAAAwP,IAAAotB,GAIAmpF,UAAA,SAAAtJ,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,QACA,OAAA99B,MAAA8lH,UAAAjhG,OAAAhU,IAAA,EAAA,EAAA,GAAAgU,OAAA6+D,WAAA1jF,KAAAwP,IAAAxP,KAAAkU,KAAA6zC,eAAA,KAIA+c,QAAA,SAAA23C,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,QACA,OAAA99B,MAAA8lH,UAAAjhG,OAAAhU,IAAA,EAAA,EAAA,GAAAgU,OAAAs6D,WAAAn/E,KAAAkU,IAAAlU,KAAAwP,MAIAo2G,cAAA,SAAAr8D,OAKA,MAHAvpD,MAAAwP,IAAAA,IAAA+5C,OACAvpD,KAAAkU,IAAAA,IAAAq1C,OAEAvpD,MAIAgmH,eAAA,SAAArmE,QAKA,MAHA3/C,MAAAwP,IAAAy4C,IAAAtI,QACA3/C,KAAAkU,IAAA3W,IAAAoiD,QAEA3/C,MAIAimH,eAAA,SAAA9iB,QAKA,MAHAnjG,MAAAwP,IAAAg0F,WAAAL,QACAnjG,KAAAkU,IAAAsvF,UAAAL,QAEAnjG,MAIA2nH,eAAA,WAKA,GAAAl5B,IAAA,GAAA3wD,QAEA,OAAA,UAAAkU,QAEA,GAAA2B,OAAA3zC,IA+CA,OA7CAgyC,QAAAsF,mBAAA,GAEAtF,OAAAipC,SAAA,SAAA0Z,MAEA,GAAA7wF,GAAA4f,EAEA2uB,SAAAsiD,KAAAtiD,QAEA,QAAAllC,KAAAklC,SAEA,GAAAA,SAAAU,WAAA,CAEA,GAAAxO,UAAA8N,SAAA9N,QAEA,KAAAzgC,EAAA,EAAA4f,EAAA6gB,SAAA3kC,OAAAkE,EAAA4f,EAAA5f,IAEA2qF,GAAAtlD,KAAA5E,SAAAzgC,IACA2qF,GAAAzlD,aAAA2rD,KAAA5rD,aAEA4K,MAAAiyE,cAAAn3B,QAIA,IAAAp8C,SAAAQ,iBAAA,CAEA,GAAAkF,WAAA1F,SAAA1qC,WAAAojC,QAEA,QAAA59B,KAAA4qC,UAEA,IAAAj0C,EAAA,EAAA4f,EAAAq0B,UAAAoB,MAAAr1C,EAAA4f,EAAA5f,IAEA2qF,GAAA9P,oBAAA5mC,UAAAj0C,GAAAklC,aAAA2rD,KAAA5rD,aAEA4K,MAAAiyE,cAAAn3B,OAYAzuF,SAMAopC,cAAA,SAAAmgB,OAEA,QAAAA,MAAA/xC,EAAAxX,KAAAwP,IAAAgI,GAAA+xC,MAAA/xC,EAAAxX,KAAAkU,IAAAsD,GACA+xC,MAAAtvC,EAAAja,KAAAwP,IAAAyK,GAAAsvC,MAAAtvC,EAAAja,KAAAkU,IAAA+F,GACAsvC,MAAA3sB,EAAA58B,KAAAwP,IAAAotB,GAAA2sB,MAAA3sB,EAAA58B,KAAAkU,IAAA0oB,IAIAspF,YAAA,SAAA7pB,KAEA,MAAAr8F,MAAAwP,IAAAgI,GAAA6kF,IAAA7sF,IAAAgI,GAAA6kF,IAAAnoF,IAAAsD,GAAAxX,KAAAkU,IAAAsD,GACAxX,KAAAwP,IAAAyK,GAAAoiF,IAAA7sF,IAAAyK,GAAAoiF,IAAAnoF,IAAA+F,GAAAja,KAAAkU,IAAA+F,GACAja,KAAAwP,IAAAotB,GAAAy/D,IAAA7sF,IAAAotB,GAAAy/D,IAAAnoF,IAAA0oB,GAAA58B,KAAAkU,IAAA0oB,GAIAiiC,aAAA,SAAAtV,MAAAkzD,gBAOA,OAFAA,gBAAA,GAAA3+E,UAEAjtB,KACA04C,MAAA/xC,EAAAxX,KAAAwP,IAAAgI,IAAAxX,KAAAkU,IAAAsD,EAAAxX,KAAAwP,IAAAgI,IACA+xC,MAAAtvC,EAAAja,KAAAwP,IAAAyK,IAAAja,KAAAkU,IAAA+F,EAAAja,KAAAwP,IAAAyK,IACAsvC,MAAA3sB,EAAA58B,KAAAwP,IAAAotB,IAAA58B,KAAAkU,IAAA0oB,EAAA58B,KAAAwP,IAAAotB,KAKAupF,cAAA,SAAA9pB,KAGA,QAAAA,IAAAnoF,IAAAsD,EAAAxX,KAAAwP,IAAAgI,GAAA6kF,IAAA7sF,IAAAgI,EAAAxX,KAAAkU,IAAAsD,GACA6kF,IAAAnoF,IAAA+F,EAAAja,KAAAwP,IAAAyK,GAAAoiF,IAAA7sF,IAAAyK,EAAAja,KAAAkU,IAAA+F,GACAoiF,IAAAnoF,IAAA0oB,EAAA58B,KAAAwP,IAAAotB,GAAAy/D,IAAA7sF,IAAAotB,EAAA58B,KAAAkU,IAAA0oB,IAIAgrF,iBAAA,WAEA,GAAAC,cAAA,GAAA/pF,QAEA,OAAA,UAAAgqF,QAMA,MAHA9nH,MAAAomH,WAAA0B,OAAA72E,OAAA42E,cAGAA,aAAAxjB,kBAAAyjB,OAAA72E,SAAA62E,OAAA52E,OAAA42E,OAAA52E,WAMA62E,gBAAA,SAAA9/C,OAKA,GAAAz4D,KAAA0E,GAsCA,OApCA+zD,OAAA52B,OAAA75B,EAAA,GAEAhI,IAAAy4D,MAAA52B,OAAA75B,EAAAxX,KAAAwP,IAAAgI,EACAtD,IAAA+zD,MAAA52B,OAAA75B,EAAAxX,KAAAkU,IAAAsD,IAIAhI,IAAAy4D,MAAA52B,OAAA75B,EAAAxX,KAAAkU,IAAAsD,EACAtD,IAAA+zD,MAAA52B,OAAA75B,EAAAxX,KAAAwP,IAAAgI,GAIAywD,MAAA52B,OAAAp3B,EAAA,GAEAzK,KAAAy4D,MAAA52B,OAAAp3B,EAAAja,KAAAwP,IAAAyK,EACA/F,KAAA+zD,MAAA52B,OAAAp3B,EAAAja,KAAAkU,IAAA+F,IAIAzK,KAAAy4D,MAAA52B,OAAAp3B,EAAAja,KAAAkU,IAAA+F,EACA/F,KAAA+zD,MAAA52B,OAAAp3B,EAAAja,KAAAwP,IAAAyK,GAIAguD,MAAA52B,OAAAzU,EAAA,GAEAptB,KAAAy4D,MAAA52B,OAAAzU,EAAA58B,KAAAwP,IAAAotB,EACA1oB,KAAA+zD,MAAA52B,OAAAzU,EAAA58B,KAAAkU,IAAA0oB,IAIAptB,KAAAy4D,MAAA52B,OAAAzU,EAAA58B,KAAAkU,IAAA0oB,EACA1oB,KAAA+zD,MAAA52B,OAAAzU,EAAA58B,KAAAwP,IAAAotB,GAIAptB,KAAAy4D,MAAA32B,UAAAp9B,KAAA+zD,MAAA32B,UAIA80E,WAAA,SAAA78D,MAAAkzD,gBAGA,OADAA,gBAAA,GAAA3+E,UACAqL,KAAAogB,OAAA68B,MAAApmF,KAAAwP,IAAAxP,KAAAkU,MAIAmyG,gBAAA,WAEA,GAAA53B,IAAA,GAAA3wD,QAEA,OAAA,UAAAyrB,OAGA,MADAklC,IAAAtlD,KAAAogB,OAAA68B,MAAApmF,KAAAwP,IAAAxP,KAAAkU,KACA+zC,IAAAsB,OAAA3pD,aAMAooH,kBAAA,WAEA,GAAAv5B,IAAA,GAAA3wD,QAEA,OAAA,UAAA2+E,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAAzrE,OAMA,OAJAhxC,MAAA+lH,UAAAlhG,OAAAosB,QAEApsB,OAAAqsB,OAAA,GAAAlxC,KAAA8kE,QAAA2pB,IAAA7uF,SAEAilB,WAMAyhG,UAAA,SAAAjqB,KAQA,MANAr8F,MAAAwP,IAAA0E,IAAAmoF,IAAA7sF,KACAxP,KAAAkU,IAAA1E,IAAA6sF,IAAAnoF,KAGAlU,KAAA8lH,WAAA9lH,KAAA2lH,YAEA3lH,MAIAumH,MAAA,SAAAlqB,KAKA,MAHAr8F,MAAAwP,IAAAA,IAAA6sF,IAAA7sF,KACAxP,KAAAkU,IAAAA,IAAAmoF,IAAAnoF,KAEAlU,MAIAgpC,aAAA,WAEA,GAAAmc,SACA,GAAArnB,SACA,GAAAA,SACA,GAAAA,SACA,GAAAA,SACA,GAAAA,SACA,GAAAA,SACA,GAAAA,SACA,GAAAA,SAGA,OAAA,UAAAoZ,QAGA,MAAAl3C,MAAA8lH,UAAA9lH,MAGAmlD,OAAA,GAAAt0C,IAAA7Q,KAAAwP,IAAAgI,EAAAxX,KAAAwP,IAAAyK,EAAAja,KAAAwP,IAAAotB,GAAAoM,aAAAkO,QACAiO,OAAA,GAAAt0C,IAAA7Q,KAAAwP,IAAAgI,EAAAxX,KAAAwP,IAAAyK,EAAAja,KAAAkU,IAAA0oB,GAAAoM,aAAAkO,QACAiO,OAAA,GAAAt0C,IAAA7Q,KAAAwP,IAAAgI,EAAAxX,KAAAkU,IAAA+F,EAAAja,KAAAwP,IAAAotB,GAAAoM,aAAAkO,QACAiO,OAAA,GAAAt0C,IAAA7Q,KAAAwP,IAAAgI,EAAAxX,KAAAkU,IAAA+F,EAAAja,KAAAkU,IAAA0oB,GAAAoM,aAAAkO,QACAiO,OAAA,GAAAt0C,IAAA7Q,KAAAkU,IAAAsD,EAAAxX,KAAAwP,IAAAyK,EAAAja,KAAAwP,IAAAotB,GAAAoM,aAAAkO,QACAiO,OAAA,GAAAt0C,IAAA7Q,KAAAkU,IAAAsD,EAAAxX,KAAAwP,IAAAyK,EAAAja,KAAAkU,IAAA0oB,GAAAoM,aAAAkO,QACAiO,OAAA,GAAAt0C,IAAA7Q,KAAAkU,IAAAsD,EAAAxX,KAAAkU,IAAA+F,EAAAja,KAAAwP,IAAAotB,GAAAoM,aAAAkO,QACAiO,OAAA,GAAAt0C,IAAA7Q,KAAAkU,IAAAsD,EAAAxX,KAAAkU,IAAA+F,EAAAja,KAAAkU,IAAA0oB,GAAAoM,aAAAkO,QAEAl3C,KAAA0lH,cAAAvgE,QAEAnlD,UAMA+8F,UAAA,SAAA5zE,QAKA,MAHAnpB,MAAAwP,IAAAjS,IAAA4rB,QACAnpB,KAAAkU,IAAA3W,IAAA4rB,QAEAnpB,MAIAw7D,OAAA,SAAA6gC,KAEA,MAAAA,KAAA7sF,IAAAgsD,OAAAx7D,KAAAwP,MAAA6sF,IAAAnoF,IAAAsnD,OAAAx7D,KAAAkU,QAkBArK,OAAAm3F,OAAAhwD,OAAAx0C,WAEAqU,IAAA,SAAAogC,OAAAC,QAKA,MAHAlxC,MAAAixC,OAAA9H,KAAA8H,QACAjxC,KAAAkxC,OAAAA,OAEAlxC,MAIA0lH,cAAA,WAEA,GAAArpB,KAAA,GAAAtrD,KAEA,OAAA,UAAAoU,OAAA8iE,gBAEA,GAAAh3E,QAAAjxC,KAAAixC,WAEA9jC,KAAA86G,eAEAh3E,OAAA9H,KAAA8+E,gBAIA5rB,IAAAqpB,cAAAvgE,QAAA4gE,UAAA90E,OAMA,KAAA,GAFAi3E,aAAA,EAEApkH,EAAA,EAAAyyC,GAAA4O,OAAAvlD,OAAAkE,EAAAyyC,GAAAzyC,IAEAokH,YAAAt5G,KAAAsF,IAAAg0G,YAAAj3E,OAAAozD,kBAAAl/C,OAAArhD,IAMA,OAFA9D,MAAAkxC,OAAAtiC,KAAA8kE,KAAAw0C,aAEAloH,SAMA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAA2+E,QAKA,MAHA9nH,MAAAixC,OAAA9H,KAAA2+E,OAAA72E,QACAjxC,KAAAkxC,OAAA42E,OAAA52E,OAEAlxC,MAIAuL,MAAA,WAEA,MAAAvL,MAAAkxC,QAAA,GAIA9H,cAAA,SAAAmgB,OAEA,MAAAA,OAAA86C,kBAAArkG,KAAAixC,SAAAjxC,KAAAkxC,OAAAlxC,KAAAkxC,QAIAm1E,gBAAA,SAAA98D,OAEA,MAAAA,OAAA66C,WAAApkG,KAAAixC,QAAAjxC,KAAAkxC,QAIA02E,iBAAA,SAAAE,QAEA,GAAAK,WAAAnoH,KAAAkxC,OAAA42E,OAAA52E,MAEA,OAAA42E,QAAA72E,OAAAozD,kBAAArkG,KAAAixC,SAAAk3E,UAAAA,WAIAhC,cAAA,SAAA9pB,KAEA,MAAAA,KAAAurB,iBAAA5nH,OAIA+nH,gBAAA,SAAA9/C,OAEA,MAAAr5D,MAAAc,IAAAu4D,MAAAo+C,gBAAArmH,KAAAixC,UAAAjxC,KAAAkxC,QAIAk1E,WAAA,SAAA78D,MAAAkzD,gBAEA,GAAA2L,eAAApoH,KAAAixC,OAAAozD,kBAAA96C,OAEA1kC,OAAA43F,gBAAA,GAAA3+E,QAWA,OATAjZ,QAAAskB,KAAAogB,OAEA6+D,cAAApoH,KAAAkxC,OAAAlxC,KAAAkxC,SAEArsB,OAAAojC,IAAAjoD,KAAAixC,QAAAwY,YACA5kC,OAAAkjC,eAAA/nD,KAAAkxC,QAAA3zC,IAAAyC,KAAAixC,SAIApsB,QAIAwjG,eAAA,SAAA5L,gBAEA,GAAApgB,KAAAogB,gBAAA,GAAA1rE,KAKA,OAHAsrD,KAAAxrF,IAAA7Q,KAAAixC,OAAAjxC,KAAAixC,QACAorD,IAAA4pB,eAAAjmH,KAAAkxC,QAEAmrD,KAIArzD,aAAA,SAAAkO,QAKA,MAHAl3C,MAAAixC,OAAAjI,aAAAkO,QACAl3C,KAAAkxC,OAAAlxC,KAAAkxC,OAAAgG,OAAAo6D,oBAEAtxG,MAIA+8F,UAAA,SAAA5zE,QAIA,MAFAnpB,MAAAixC,OAAA1zC,IAAA4rB,QAEAnpB,MAIAw7D,OAAA,SAAAssD,QAEA,MAAAA,QAAA72E,OAAAuqB,OAAAx7D,KAAAixC,SAAA62E,OAAA52E,SAAAlxC,KAAAkxC,UA+BArnC,OAAAm3F,OAAA7vD,QAAA30C,WAEA2hH,WAAA,EAEAttG,IAAA,SAAAg7F,IAAAC,IAAAC,IAAAE,IAAAC,IAAAC,IAAAE,IAAAC,IAAAC,KAEA,GAAA7G,IAAA1lG,KAAArB,QAMA,OAJA+mG,IAAA,GAAAmG,IAAAnG,GAAA,GAAAuG,IAAAvG,GAAA,GAAA2G,IACA3G,GAAA,GAAAoG,IAAApG,GAAA,GAAAwG,IAAAxG,GAAA,GAAA4G,IACA5G,GAAA,GAAAqG,IAAArG,GAAA,GAAAyG,IAAAzG,GAAA,GAAA6G,IAEAvsG,MAIAgpD,SAAA,WAUA,MARAhpD,MAAA6Q,IAEA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,EAAA,GAIA7Q,MAIA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA9lB,UAAAhmE,KAAArB,WAIAwqC,KAAA,SAAA78B,GAEA,GAAAo5F,IAAA1lG,KAAArB,SACAkuG,GAAAvgG,EAAA3N,QAMA,OAJA+mG,IAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GACAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GACAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GAAAnH,GAAA,GAAAmH,GAAA,GAEA7sG,MAIAsoH,eAAA,SAAAh8G,GAEA,GAAAugG,IAAAvgG,EAAA3N,QAUA,OARAqB,MAAA6Q,IAEAg8F,GAAA,GAAAA,GAAA,GAAAA,GAAA,GACAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GACAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,KAIA7sG,MAIA0wG,uBAAA,WAEA,GAAAjiB,IAAA,GAAA3wD,QAEA,OAAA,UAAAia,WAEA,IAAA,GAAAj0C,GAAA,EAAA4f,EAAAq0B,UAAAoB,MAAAr1C,EAAA4f,EAAA5f,IAEA2qF,GAAAj3E,EAAAugC,UAAA2mC,KAAA56E,GACA2qF,GAAAx0E,EAAA89B,UAAA2sD,KAAA5gG,GACA2qF,GAAA7xD,EAAAmb,UAAA0uD,KAAA3iG,GAEA2qF,GAAAub,aAAAhqG,MAEA+3C,UAAA44D,OAAA7sG,EAAA2qF,GAAAj3E,EAAAi3E,GAAAx0E,EAAAw0E,GAAA7xD,EAIA,OAAAmb,eAMAR,SAAA,SAAAjrC,GAEA,MAAAtM,MAAA4sC,iBAAA5sC,KAAAsM,IAIA48C,YAAA,SAAA58C,GAEA,MAAAtM,MAAA4sC,iBAAAtgC,EAAAtM,OAIA4sC,iBAAA,SAAAhiC,EAAAC,GAEA,GAAA0iG,IAAA3iG,EAAAjM,SACA8uG,GAAA5iG,EAAAlM,SACA+mG,GAAA1lG,KAAArB,SAEA+vG,IAAAnB,GAAA,GAAAoB,IAAApB,GAAA,GAAAqB,IAAArB,GAAA,GACAuB,IAAAvB,GAAA,GAAAwB,IAAAxB,GAAA,GAAAyB,IAAAzB,GAAA,GACA2B,IAAA3B,GAAA,GAAA4B,IAAA5B,GAAA,GAAA6B,IAAA7B,GAAA,GAEAmC,IAAAjC,GAAA,GAAAkC,IAAAlC,GAAA,GAAAmC,IAAAnC,GAAA,GACAqC,IAAArC,GAAA,GAAAsC,IAAAtC,GAAA,GAAAuC,IAAAvC,GAAA,GACAyC,IAAAzC,GAAA,GAAA0C,IAAA1C,GAAA,GAAA2C,IAAA3C,GAAA,EAcA,OAZA/H,IAAA,GAAAgJ,IAAAgB,IAAAf,IAAAmB,IAAAlB,IAAAsB,IACAxK,GAAA,GAAAgJ,IAAAiB,IAAAhB,IAAAoB,IAAAnB,IAAAuB,IACAzK,GAAA,GAAAgJ,IAAAkB,IAAAjB,IAAAqB,IAAApB,IAAAwB,IAEA1K,GAAA,GAAAoJ,IAAAY,IAAAX,IAAAe,IAAAd,IAAAkB,IACAxK,GAAA,GAAAoJ,IAAAa,IAAAZ,IAAAgB,IAAAf,IAAAmB,IACAzK,GAAA,GAAAoJ,IAAAc,IAAAb,IAAAiB,IAAAhB,IAAAoB,IAEA1K,GAAA,GAAAwJ,IAAAQ,IAAAP,IAAAW,IAAAV,IAAAc,IACAxK,GAAA,GAAAwJ,IAAAS,IAAAR,IAAAY,IAAAX,IAAAe,IACAzK,GAAA,GAAAwJ,IAAAU,IAAAT,IAAAa,IAAAZ,IAAAgB,IAEApwG,MAIA+nD,eAAA,SAAAnyC,GAEA,GAAA8vF,IAAA1lG,KAAArB,QAMA,OAJA+mG,IAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EACA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EACA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EAAA8vF,GAAA,IAAA9vF,EAEA5V,MAIA4wG,YAAA,WAEA,GAAAlL,IAAA1lG,KAAArB,SAEAiM,EAAA86F,GAAA,GAAA76F,EAAA66F,GAAA,GAAA3jF,EAAA2jF,GAAA,GACAxrF,EAAAwrF,GAAA,GAAA3iG,EAAA2iG,GAAA,GAAAvwC,EAAAuwC,GAAA,GACA1lE,EAAA0lE,GAAA,GAAAvrF,EAAAurF,GAAA,GAAA5hG,EAAA4hG,GAAA,EAEA,OAAA96F,GAAA7H,EAAAe,EAAA8G,EAAAuqD,EAAAh7C,EAAAtP,EAAAqP,EAAApW,EAAA+G,EAAAsqD,EAAAn1B,EAAAje,EAAA7H,EAAAC,EAAA4H,EAAAhf,EAAAi9B,GAIAomC,WAAA,SAAAlvB,OAAA65D,mBAEA75D,QAAAA,OAAA00D,WAEA77F,QAAAiuB,MAAA,mEAIA,IAAA6uE,IAAA31D,OAAAv4C,SACA+mG,GAAA1lG,KAAArB,SAEAktG,IAAAgB,GAAA,GAAAZ,IAAAY,GAAA,GAAAR,IAAAQ,GAAA,GACAf,IAAAe,GAAA,GAAAX,IAAAW,GAAA,GAAAP,IAAAO,GAAA,GACAd,IAAAc,GAAA,GAAAV,IAAAU,GAAA,GAAAN,IAAAM,GAAA,GAEAmE,IAAAzE,IAAAL,IAAAI,IAAAH,IACA8E,IAAA3E,IAAAP,IAAAQ,IAAAT,IACAoF,IAAA/E,IAAAL,IAAAI,IAAAH,IAEAqF,IAAAvF,IAAAmF,IAAA/E,IAAAgF,IAAA5E,IAAA6E,GAEA,IAAA,IAAAE,IAAA,CAEA,GAAAvhG,KAAA,oEAEA,KAAA,IAAAkhG,kBAEA,KAAA,IAAAxgG,OAAAV,IAQA,OAJAE,SAAAH,KAAAC,KAIA7P,KAAAgpD,WAIA,GAAAqoD,QAAA,EAAAD,GAcA,OAZA1L,IAAA,GAAAsL,IAAAK,OACA3L,GAAA,IAAA2G,IAAAF,IAAAI,IAAAN,KAAAoF,OACA3L,GAAA,IAAA4G,IAAAL,IAAAI,IAAAH,KAAAmF,OAEA3L,GAAA,GAAAuL,IAAAI,OACA3L,GAAA,IAAA6G,IAAAV,IAAAQ,IAAAN,KAAAsF,OACA3L,GAAA,IAAA2G,IAAAP,IAAAQ,IAAAT,KAAAwF,OAEA3L,GAAA,GAAAwL,IAAAG,OACA3L,GAAA,IAAAuG,IAAAF,IAAAI,IAAAN,KAAAwF,OACA3L,GAAA,IAAAwG,IAAAL,IAAAI,IAAAH,KAAAuF,OAEArxG,MAIA6wG,UAAA,WAEA,GAAAnkF,KAAApgB,EAAAtM,KAAArB,QAMA,OAJA+tB,KAAApgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAogB,IACAA,IAAApgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAogB,IACAA,IAAApgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAogB,IAEA1sB,MAIA+nE,gBAAA,SAAA9e,SAEA,MAAAjpD,MAAAsoH,eAAAr/D,SAAAmd,WAAApmE,MAAA6wG,aAIA0X,mBAAA,SAAA3pF,GAEA,GAAAtyB,GAAAtM,KAAArB,QAYA,OAVAigC,GAAA,GAAAtyB,EAAA,GACAsyB,EAAA,GAAAtyB,EAAA,GACAsyB,EAAA,GAAAtyB,EAAA,GACAsyB,EAAA,GAAAtyB,EAAA,GACAsyB,EAAA,GAAAtyB,EAAA,GACAsyB,EAAA,GAAAtyB,EAAA,GACAsyB,EAAA,GAAAtyB,EAAA,GACAsyB,EAAA,GAAAtyB,EAAA,GACAsyB,EAAA,GAAAtyB,EAAA,GAEAtM,MAIAw7D,OAAA,SAAAtkB,QAKA,IAAA,GAHAwuD,IAAA1lG,KAAArB,SACAkuG,GAAA31D,OAAAv4C,SAEAmF,EAAA,EAAAA,EAAA,EAAAA,IAEA,GAAA4hG,GAAA5hG,KAAA+oG,GAAA/oG,GAAA,OAAA,CAIA,QAAA,GAIAkiE,UAAA,SAAAnxD,MAAAsU,YAEAhc,KAAAgc,SAAAA,OAAA,EAEA,KAAA,GAAArlB,GAAA,EAAAA,EAAA,EAAAA,IAEA9D,KAAArB,SAAAmF,GAAA+Q,MAAA/Q,EAAAqlB,OAIA,OAAAnpB,OAIAurB,QAAA,SAAA1W,MAAAsU,YAEAhc,KAAA0H,QAAAA,cACA1H,KAAAgc,SAAAA,OAAA,EAEA,IAAAu8E,IAAA1lG,KAAArB,QAcA,OAZAkW,OAAAsU,QAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GAEA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GAEA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GACA7wF,MAAAsU,OAAA,GAAAu8E,GAAA,GAEA7wF,SAmBAhL,OAAAm3F,OAAA5vD,MAAA50C,WAEAqU,IAAA,SAAAwgC,OAAAC,UAKA,MAHAtxC,MAAAqxC,OAAAlI,KAAAkI,QACArxC,KAAAsxC,SAAAA,SAEAtxC,MAIAwoH,cAAA,SAAAhxG,EAAAyC,EAAA2iB,EAAA7Z,GAKA,MAHA/iB,MAAAqxC,OAAAxgC,IAAA2G,EAAAyC,EAAA2iB,GACA58B,KAAAsxC,SAAAvuB,EAEA/iB,MAIAyoH,8BAAA,SAAAp3E,OAAAkY,OAKA,MAHAvpD,MAAAqxC,OAAAlI,KAAAkI,QACArxC,KAAAsxC,UAAAiY,MAAA0+B,IAAAjoF,KAAAqxC,QAEArxC,MAIA0oH,sBAAA,WAEA,GAAAj6B,IAAA,GAAA3wD,SACAyxD,GAAA,GAAAzxD,QAEA,OAAA,UAAAlzB,EAAAC,EAAAkX,GAEA,GAAAsvB,QAAAo9C,GAAAtP,WAAAp9D,EAAAlX,GAAA0/F,MAAAhb,GAAApQ,WAAAv0E,EAAAC,IAAA4+C,WAMA,OAFAzpD,MAAAyoH,8BAAAp3E,OAAAzmC,GAEA5K,SAMA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAA8+B,OAKA,MAHAjoE,MAAAqxC,OAAAlI,KAAA8+B,MAAA52B,QACArxC,KAAAsxC,SAAA22B,MAAA32B,SAEAtxC,MAIAypD,UAAA,WAIA,GAAAk/D,qBAAA,EAAA3oH,KAAAqxC,OAAAzxC,QAIA,OAHAI,MAAAqxC,OAAA0W,eAAA4gE,qBACA3oH,KAAAsxC,UAAAq3E,oBAEA3oH,MAIAikG,OAAA,WAKA,MAHAjkG,MAAAsxC,WAAA,EACAtxC,KAAAqxC,OAAA4yD,SAEAjkG,MAIAqmH,gBAAA,SAAA98D,OAEA,MAAAvpD,MAAAqxC,OAAA42C,IAAA1+B,OAAAvpD,KAAAsxC,UAIAs3E,iBAAA,SAAAd,QAEA,MAAA9nH,MAAAqmH,gBAAAyB,OAAA72E,QAAA62E,OAAA52E,QAIA23E,aAAA,SAAAt/D,MAAAkzD,gBAIA,OAFAA,gBAAA,GAAA3+E,UAEAqL,KAAAnpC,KAAAqxC,QAAA0W,gBAAA/nD,KAAAqmH,gBAAA98D,QAAAhsD,IAAAgsD,QAIAu/D,cAAA,WAEA,GAAAr6B,IAAA,GAAA3wD,QAEA,OAAA,UAAA48D,KAAA+hB,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,SAEAvR,UAAAmuE,KAAAoiB,MAAAruB,IAEAs6B,YAAA/oH,KAAAqxC,OAAA42C,IAAA17D,UAEA,IAAA,IAAAw8F,YAAA,CAcA,GAAA70F,KAAAwmE,KAAAv8C,MAAA8pC,IAAAjoF,KAAAqxC,QAAArxC,KAAAsxC,UAAAy3E,WAEA,MAAA70F,EAAA,GAAAA,EAAA,GAMA,MAAArP,QAAAskB,KAAA5c,WAAAw7B,eAAA7zB,GAAA32B,IAAAm9F,KAAAv8C,WAnBA,IAAA,IAAAn+C,KAAAqmH,gBAAA3rB,KAAAv8C,OAEA,MAAAt5B,QAAAskB,KAAAuxD,KAAAv8C,WAuBA6qE,eAAA,SAAAtuB,MAIA,GAAAuuB,WAAAjpH,KAAAqmH,gBAAA3rB,KAAAv8C,OACA+qE,QAAAlpH,KAAAqmH,gBAAA3rB,KAAAn5C,IAEA,OAAA0nE,WAAA,GAAAC,QAAA,GAAAA,QAAA,GAAAD,UAAA,GAIA9C,cAAA,SAAA9pB,KAEA,MAAAA,KAAA0rB,gBAAA/nH,OAIA4nH,iBAAA,SAAAE,QAEA,MAAAA,QAAAC,gBAAA/nH,OAIAmpH,cAAA,SAAA1M,gBAIA,OAFAA,gBAAA,GAAA3+E,UAEAqL,KAAAnpC,KAAAqxC,QAAA0W,gBAAA/nD,KAAAsxC,WAIAtI,aAAA,WAEA,GAAAylD,IAAA,GAAA3wD,SACAsrF,GAAA,GAAAj4E,QAEA,OAAA,UAAA+F,OAAAmyE,sBAEA,GAAA3uE,cAAA2uE,sBAAAD,GAAArhD,gBAAA7wB,QAEAoyE,eAAAtpH,KAAAmpH,cAAA16B,IAAAzlD,aAAAkO,QAEA7F,OAAArxC,KAAAqxC,OAAA24D,aAAAtvD,cAAA+O,WAIA,OAFAzpD,MAAAsxC,UAAAg4E,eAAArhC,IAAA52C,QAEArxC,SAMA+8F,UAAA,SAAA5zE,QAIA,MAFAnpB,MAAAsxC,UAAAnoB,OAAA8+D,IAAAjoF,KAAAqxC,QAEArxC,MAIAw7D,OAAA,SAAAyM,OAEA,MAAAA,OAAA52B,OAAAmqB,OAAAx7D,KAAAqxC,SAAA42B,MAAA32B,WAAAtxC,KAAAsxC,YA2BAznC,OAAAm3F,OAAAzvD,QAAA/0C,WAEAqU,IAAA,SAAA2gC,GAAAz7B,GAAAC,GAAAC,GAAAC,GAAAu7B,IAEA,GAAAC,QAAA1xC,KAAA0xC,MASA,OAPAA,QAAA,GAAAvI,KAAAqI,IACAE,OAAA,GAAAvI,KAAApzB,IACA27B,OAAA,GAAAvI,KAAAnzB,IACA07B,OAAA,GAAAvI,KAAAlzB,IACAy7B,OAAA,GAAAvI,KAAAjzB,IACAw7B,OAAA,GAAAvI,KAAAsI,IAEAzxC,MAIA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAAogF,SAIA,IAAA,GAFA73E,QAAA1xC,KAAA0xC,OAEA5tC,EAAA,EAAAA,EAAA,EAAAA,IAEA4tC,OAAA5tC,GAAAqlC,KAAAogF,QAAA73E,OAAA5tC,GAIA,OAAA9D,OAIA63C,cAAA,SAAAvrC,GAEA,GAAAolC,QAAA1xC,KAAA0xC,OACAm7D,GAAAvgG,EAAA3N,SACA6qH,IAAA3c,GAAA,GAAA4c,IAAA5c,GAAA,GAAA6c,IAAA7c,GAAA,GAAA8c,IAAA9c,GAAA,GACA+c,IAAA/c,GAAA,GAAAgd,IAAAhd,GAAA,GAAAid,IAAAjd,GAAA,GAAAkd,IAAAld,GAAA,GACAmd,IAAAnd,GAAA,GAAAod,IAAApd,GAAA,GAAAqd,KAAArd,GAAA,IAAAsd,KAAAtd,GAAA,IACAud,KAAAvd,GAAA,IAAAwd,KAAAxd,GAAA,IAAAyd,KAAAzd,GAAA,IAAA0d,KAAA1d,GAAA,GASA,OAPAn7D,QAAA,GAAA82E,cAAAmB,IAAAH,IAAAO,IAAAH,IAAAO,KAAAH,IAAAO,KAAAH,MAAA3gE,YACA/X,OAAA,GAAA82E,cAAAmB,IAAAH,IAAAO,IAAAH,IAAAO,KAAAH,IAAAO,KAAAH,MAAA3gE,YACA/X,OAAA,GAAA82E,cAAAmB,IAAAF,IAAAM,IAAAF,IAAAM,KAAAF,IAAAM,KAAAF,MAAA5gE,YACA/X,OAAA,GAAA82E,cAAAmB,IAAAF,IAAAM,IAAAF,IAAAM,KAAAF,IAAAM,KAAAF,MAAA5gE,YACA/X,OAAA,GAAA82E,cAAAmB,IAAAD,IAAAK,IAAAD,IAAAK,KAAAD,KAAAK,KAAAD,MAAA7gE,YACA/X,OAAA,GAAA82E,cAAAmB,IAAAD,IAAAK,IAAAD,IAAAK,KAAAD,KAAAK,KAAAD,MAAA7gE,YAEAzpD,MAIA00C,iBAAA,WAEA,GAAAozE,QAAA,GAAA92E,OAEA,OAAA,UAAAgB;yBAEA,GAAAK,UAAAL,OAAAK,QAQA,OANA,QAAAA,SAAAgK,gBACAhK,SAAAiqD,wBAEAwrB,OAAA3+E,KAAAkJ,SAAAgK,gBACArT,aAAAgJ,OAAAjJ,aAEA/oC,KAAA4nH,iBAAAE,YAMAz3C,iBAAA,WAEA,GAAAy3C,QAAA,GAAA92E,OAEA,OAAA,UAAA5G,QAMA,MAJA09E,QAAA72E,OAAApgC,IAAA,EAAA,EAAA,GACAi3G,OAAA52E,OAAA,kBACA42E,OAAA9+E,aAAAoB,OAAArB,aAEA/oC,KAAA4nH,iBAAAE,YAMAF,iBAAA,SAAAE,QAMA,IAAA,GAJAp2E,QAAA1xC,KAAA0xC,OACAT,OAAA62E,OAAA72E,OACAu5E,WAAA1C,OAAA52E,OAEAptC,EAAA,EAAAA,EAAA,EAAAA,IAAA,CAIA,GAFA4tC,OAAA5tC,GAAAuiH,gBAAAp1E,QAEAu5E,UAEA,OAAA,EAMA,OAAA,GAIArE,cAAA,WAEA,GAAApwG,IAAA,GAAA+nB,SACA9nB,GAAA,GAAA8nB,QAEA,OAAA,UAAAu+D,KAIA,IAAA,GAFA3qD,QAAA1xC,KAAA0xC,OAEA5tC,EAAA,EAAAA,EAAA,EAAAA,IAAA,CAEA,GAAAmkE,OAAAv2B,OAAA5tC,EAEAiS,IAAAyB,EAAAywD,MAAA52B,OAAA75B,EAAA,EAAA6kF,IAAA7sF,IAAAgI,EAAA6kF,IAAAnoF,IAAAsD,EACAxB,GAAAwB,EAAAywD,MAAA52B,OAAA75B,EAAA,EAAA6kF,IAAAnoF,IAAAsD,EAAA6kF,IAAA7sF,IAAAgI,EACAzB,GAAAkE,EAAAguD,MAAA52B,OAAAp3B,EAAA,EAAAoiF,IAAA7sF,IAAAyK,EAAAoiF,IAAAnoF,IAAA+F,EACAjE,GAAAiE,EAAAguD,MAAA52B,OAAAp3B,EAAA,EAAAoiF,IAAAnoF,IAAA+F,EAAAoiF,IAAA7sF,IAAAyK,EACAlE,GAAA6mB,EAAAqrC,MAAA52B,OAAAzU,EAAA,EAAAy/D,IAAA7sF,IAAAotB,EAAAy/D,IAAAnoF,IAAA0oB,EACA5mB,GAAA4mB,EAAAqrC,MAAA52B,OAAAzU,EAAA,EAAAy/D,IAAAnoF,IAAA0oB,EAAAy/D,IAAA7sF,IAAAotB,CAEA,IAAA6tF,IAAAxiD,MAAAo+C,gBAAAtwG,IACA20G,GAAAziD,MAAAo+C,gBAAArwG,GAIA,IAAAy0G,GAAA,GAAAC,GAAA,EAEA,OAAA,EAMA,OAAA,MAMAthF,cAAA,SAAAmgB,OAIA,IAAA,GAFA7X,QAAA1xC,KAAA0xC,OAEA5tC,EAAA,EAAAA,EAAA,EAAAA,IAEA,GAAA4tC,OAAA5tC,GAAAuiH,gBAAA98D,OAAA,EAEA,OAAA,CAMA,QAAA,KAgmBA9P,MAAAkxE,gBAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAEAlxE,MAAAG,aAAA,MAEA/vC,OAAA2wC,iBAAAf,MAAAj9C,WAEAgb,GAEAR,IAAA,WAEA,MAAAhX,MAAA29B,IAIA9sB,IAAA,SAAA3B,OAEAlP,KAAA29B,GAAAzuB,MACAlP,KAAA8nG,qBAMA7tF,GAEAjD,IAAA,WAEA,MAAAhX,MAAA49B,IAIA/sB,IAAA,SAAA3B,OAEAlP,KAAA49B,GAAA1uB,MACAlP,KAAA8nG,qBAMAlrE,GAEA5lB,IAAA,WAEA,MAAAhX,MAAA69B,IAIAhtB,IAAA,SAAA3B,OAEAlP,KAAA69B,GAAA3uB,MACAlP,KAAA8nG,qBAMApuD,OAEA1iC,IAAA,WAEA,MAAAhX,MAAA25C,QAIA9oC,IAAA,SAAA3B,OAEAlP,KAAA25C,OAAAzqC,MACAlP,KAAA8nG,uBAQAj+F,OAAAm3F,OAAAvnD,MAAAj9C,WAEAwrG,SAAA,EAEAn3F,IAAA,SAAA2G,EAAAyC,EAAA2iB,EAAA8c,OASA,MAPA15C,MAAA29B,GAAAnmB,EACAxX,KAAA49B,GAAA3jB,EACAja,KAAA69B,GAAAjB,EACA58B,KAAA25C,OAAAD,OAAA15C,KAAA25C,OAEA35C,KAAA8nG,mBAEA9nG,MAIA+pB,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAA29B,GAAA39B,KAAA49B,GAAA59B,KAAA69B,GAAA79B,KAAA25C,SAIAxQ,KAAA,SAAA4+D,OASA,MAPA/nG,MAAA29B,GAAAoqE,MAAApqE,GACA39B,KAAA49B,GAAAmqE,MAAAnqE,GACA59B,KAAA69B,GAAAkqE,MAAAlqE,GACA79B,KAAA25C,OAAAouD,MAAApuD,OAEA35C,KAAA8nG,mBAEA9nG,MAIAuoG,sBAAA,SAAAj8F,EAAAotC,MAAA/E,QAEA,GAAAyxC,OAAA1qD,MAAA0qD,MAIAsf,GAAAp5F,EAAA3N,SACAgnG,IAAAD,GAAA,GAAAE,IAAAF,GAAA,GAAAG,IAAAH,GAAA,GACAI,IAAAJ,GAAA,GAAAK,IAAAL,GAAA,GAAAM,IAAAN,GAAA,GACAO,IAAAP,GAAA,GAAAQ,IAAAR,GAAA,GAAAS,IAAAT,GAAA,GA8GA,OA5GAhsD,OAAAA,OAAA15C,KAAA25C,OAEA,QAAAD,OAEA15C,KAAA49B,GAAAhvB,KAAAg8G,KAAAxkC,MAAAyf,KAAA,EAAA,IAEAj3F,KAAAc,IAAAm2F,KAAA,QAEA7lG,KAAA29B,GAAA/uB,KAAAkyE,OAAAklB,IAAAG,KACAnmG,KAAA69B,GAAAjvB,KAAAkyE,OAAA8kB,IAAAD,OAIA3lG,KAAA29B,GAAA/uB,KAAAkyE,MAAAolB,IAAAH,KACA/lG,KAAA69B,GAAA,IAIA,QAAA6b,OAEA15C,KAAA29B,GAAA/uB,KAAAg8G,MAAAxkC,MAAA4f,KAAA,EAAA,IAEAp3F,KAAAc,IAAAs2F,KAAA,QAEAhmG,KAAA49B,GAAAhvB,KAAAkyE,MAAA+kB,IAAAM,KACAnmG,KAAA69B,GAAAjvB,KAAAkyE,MAAAglB,IAAAC,OAIA/lG,KAAA49B,GAAAhvB,KAAAkyE,OAAAmlB,IAAAN,KACA3lG,KAAA69B,GAAA,IAIA,QAAA6b,OAEA15C,KAAA29B,GAAA/uB,KAAAg8G,KAAAxkC,MAAA8f,KAAA,EAAA,IAEAt3F,KAAAc,IAAAw2F,KAAA,QAEAlmG,KAAA49B,GAAAhvB,KAAAkyE,OAAAmlB,IAAAE,KACAnmG,KAAA69B,GAAAjvB,KAAAkyE,OAAA8kB,IAAAG,OAIA/lG,KAAA49B,GAAA,EACA59B,KAAA69B,GAAAjvB,KAAAkyE,MAAAglB,IAAAH,OAIA,QAAAjsD,OAEA15C,KAAA49B,GAAAhvB,KAAAg8G,MAAAxkC,MAAA6f,KAAA,EAAA,IAEAr3F,KAAAc,IAAAu2F,KAAA,QAEAjmG,KAAA29B,GAAA/uB,KAAAkyE,MAAAolB,IAAAC,KACAnmG,KAAA69B,GAAAjvB,KAAAkyE,MAAAglB,IAAAH,OAIA3lG,KAAA29B,GAAA,EACA39B,KAAA69B,GAAAjvB,KAAAkyE,OAAA8kB,IAAAG,OAIA,QAAArsD,OAEA15C,KAAA69B,GAAAjvB,KAAAg8G,KAAAxkC,MAAA0f,KAAA,EAAA,IAEAl3F,KAAAc,IAAAo2F,KAAA,QAEA9lG,KAAA29B,GAAA/uB,KAAAkyE,OAAAklB,IAAAD,KACA/lG,KAAA49B,GAAAhvB,KAAAkyE,OAAAmlB,IAAAN,OAIA3lG,KAAA29B,GAAA,EACA39B,KAAA49B,GAAAhvB,KAAAkyE,MAAA+kB,IAAAM,OAIA,QAAAzsD,OAEA15C,KAAA69B,GAAAjvB,KAAAg8G,MAAAxkC,MAAAwf,KAAA,EAAA,IAEAh3F,KAAAc,IAAAk2F,KAAA,QAEA5lG,KAAA29B,GAAA/uB,KAAAkyE,MAAAolB,IAAAH,KACA/lG,KAAA49B,GAAAhvB,KAAAkyE,MAAA+kB,IAAAF,OAIA3lG,KAAA29B,GAAA/uB,KAAAkyE,OAAAklB,IAAAG,KACAnmG,KAAA49B,GAAA,IAMA7tB,QAAAH,KAAA,kEAAA8pC,OAIA15C,KAAA25C,OAAAD,OAEA,IAAA/E,QAAA30C,KAAA8nG,mBAEA9nG,MAIAo6C,kBAAA,WAEA,GAAAlD,QAAA,GAAAnZ,QAEA,OAAA,UAAAglD,EAAArpC,MAAA/E,QAIA,MAFAuC,QAAAi3D,2BAAAprB,GAEA/iF,KAAAuoG,sBAAArxD,OAAAwC,MAAA/E,YAMAk2E,eAAA,SAAAvrF,EAAAoa,OAEA,MAAA15C,MAAA6Q,IAAAyuB,EAAA9nB,EAAA8nB,EAAArlB,EAAAqlB,EAAA1C,EAAA8c,OAAA15C,KAAA25C,SAIAmxE,QAAA,WAIA,GAAA/nC,GAAA,GAAArlD,WAEA,OAAA,UAAAqtF,UAIA,MAFAhoC,GAAA7oC,aAAAl6C,MAEAA,KAAAo6C,kBAAA2oC,EAAAgoC,cAMAvvD,OAAA,SAAAusC,OAEA,MAAAA,OAAApqE,KAAA39B,KAAA29B,IAAAoqE,MAAAnqE,KAAA59B,KAAA49B,IAAAmqE,MAAAlqE,KAAA79B,KAAA69B,IAAAkqE,MAAApuD,SAAA35C,KAAA25C,QAIAqsB,UAAA,SAAAnxD,OASA,MAPA7U,MAAA29B,GAAA9oB,MAAA,GACA7U,KAAA49B,GAAA/oB,MAAA,GACA7U,KAAA69B,GAAAhpB,MAAA,OACA1H,KAAA0H,MAAA,KAAA7U,KAAA25C,OAAA9kC,MAAA,IAEA7U,KAAA8nG,mBAEA9nG,MAIAurB,QAAA,SAAA1W,MAAAsU,QAUA,WARAhc,KAAA0H,QAAAA,cACA1H,KAAAgc,SAAAA,OAAA,GAEAtU,MAAAsU,QAAAnpB,KAAA29B,GACA9oB,MAAAsU,OAAA,GAAAnpB,KAAA49B,GACA/oB,MAAAsU,OAAA,GAAAnpB,KAAA69B,GACAhpB,MAAAsU,OAAA,GAAAnpB,KAAA25C,OAEA9kC,OAIAm2G,UAAA,SAAAC,gBAEA,MAAAA,gBAEAA,eAAAp6G,IAAA7Q,KAAA29B,GAAA39B,KAAA49B,GAAA59B,KAAA69B,IAIA,GAAAC,SAAA99B,KAAA29B,GAAA39B,KAAA49B,GAAA59B,KAAA69B,KAMA0c,SAAA,SAAAhmC,UAIA,MAFAvU,MAAA8nG,iBAAAvzF,SAEAvU,MAIA8nG,iBAAA,eAcAj+F,OAAAm3F,OAAAnnD,OAAAr9C,WAEAqU,IAAA,SAAAq6G,SAEAlrH,KAAA85C,KAAA,GAAAoxE,QAAA,GAIAxhF,OAAA,SAAAwhF,SAEAlrH,KAAA85C,MAAA,GAAAoxE,QAAA,GAIAC,OAAA,SAAAD,SAEAlrH,KAAA85C,MAAA,GAAAoxE,QAAA,GAIAziF,QAAA,SAAAyiF,SAEAlrH,KAAA85C,QAAA,GAAAoxE,QAAA,IAIAruH,KAAA,SAAAs3C,QAEA,MAAA,KAAAn0C,KAAA85C,KAAA3F,OAAA2F,QAcA,IAAAO,YAAA,CA+EAN,UAAAO,UAAA,GAAAxc,SAAA,EAAA,EAAA,GACAic,SAAAa,yBAAA,EAEA/wC,OAAAm3F,OAAAjnD,SAAAv9C,UAAAm+B,gBAAAn+B,WAEA4uH,YAAA,EAEAt+E,eAAA,aACAS,cAAA,aAEA89E,YAAA,SAAAn0E,QAEAl3C,KAAAk3C,OAAAtK,iBAAAsK,OAAAl3C,KAAAk3C,QAEAl3C,KAAAk3C,OAAAnK,UAAA/sC,KAAA+qC,SAAA/qC,KAAAi6C,WAAAj6C,KAAA8mC,QAIAgjE,gBAAA,SAAA/mB,GAIA,MAFA/iF,MAAAi6C,WAAAiP,YAAA65B,GAEA/iF,MAIAsrH,yBAAA,SAAAjjB,KAAA5/C,OAIAzoD,KAAAi6C,WAAAmuD,iBAAAC,KAAA5/C,QAIA8iE,qBAAA,SAAAxjB,OAEA/nG,KAAAi6C,WAAAC,aAAA6tD,OAAA,IAIAyjB,sBAAA,SAAAl/G,GAIAtM,KAAAi6C,WAAAsuD,sBAAAj8F,IAIAm/G,0BAAA,SAAA1oC,GAIA/iF,KAAAi6C,WAAA9Q,KAAA45C,IAIA2oC,aAAA,WAKA,GAAAC,IAAA,GAAAjuF,WAEA,OAAA,UAAA2qE,KAAA5/C,OAMA,MAJAkjE,IAAAvjB,iBAAAC,KAAA5/C,OAEAzoD,KAAAi6C,WAAA1C,SAAAo0E,IAEA3rH,SAMA4rH,QAAA,WAEA,GAAAn9B,IAAA,GAAA3wD,SAAA,EAAA,EAAA,EAEA,OAAA,UAAA2qB,OAEA,MAAAzoD,MAAA0rH,aAAAj9B,GAAAhmC,WAMAmyC,QAAA,WAEA,GAAAnM,IAAA,GAAA3wD,SAAA,EAAA,EAAA,EAEA,OAAA,UAAA2qB,OAEA,MAAAzoD,MAAA0rH,aAAAj9B,GAAAhmC,WAMAojE,QAAA,WAEA,GAAAp9B,IAAA,GAAA3wD,SAAA,EAAA,EAAA,EAEA,OAAA,UAAA2qB,OAEA,MAAAzoD,MAAA0rH,aAAAj9B,GAAAhmC,WAMAqjE,gBAAA,WAKA,GAAAr9B,IAAA,GAAA3wD,QAEA,OAAA,UAAAuqE,KAAA3hD,UAMA,MAJA+nC,IAAAtlD,KAAAk/D,MAAAyB,gBAAA9pG,KAAAi6C,YAEAj6C,KAAA+qC,SAAAxtC,IAAAkxF,GAAA1mC,eAAArB,WAEA1mD,SAMA+rH,WAAA,WAEA,GAAAt9B,IAAA,GAAA3wD,SAAA,EAAA,EAAA,EAEA,OAAA,UAAA4oB,UAEA,MAAA1mD,MAAA8rH,gBAAAr9B,GAAA/nC,cAMAslE,WAAA,WAEA,GAAAv9B,IAAA,GAAA3wD,SAAA,EAAA,EAAA,EAEA,OAAA,UAAA4oB,UAEA,MAAA1mD,MAAA8rH,gBAAAr9B,GAAA/nC,cAMAulE,WAAA,WAEA,GAAAx9B,IAAA,GAAA3wD,SAAA,EAAA,EAAA,EAEA,OAAA,UAAA4oB,UAEA,MAAA1mD,MAAA8rH,gBAAAr9B,GAAA/nC,cAMAwlE,aAAA,SAAAvsE,QAEA,MAAAA,QAAA3W,aAAAhpC,KAAA+oC,cAIAojF,aAAA,WAEA,GAAA/C,IAAA,GAAArrF,QAEA,OAAA,UAAA4hB,QAEA,MAAAA,QAAA3W,aAAAogF,GAAAhjD,WAAApmE,KAAA+oC,kBAMAsO,OAAA,WAIA,GAAA+xE,IAAA,GAAArrF,QAEA,OAAA,UAAA4hB,QAEA3/C,KAAAm7E,SAEAiuC,GAAA/xE,OAAAr3C,KAAA+qC,SAAA4U,OAAA3/C,KAAA23C,IAIAyxE,GAAA/xE,OAAAsI,OAAA3/C,KAAA+qC,SAAA/qC,KAAA23C,IAIA33C,KAAAi6C,WAAAsuD,sBAAA6gB,QAMA7rH,IAAA,SAAAy0C,QAEA,GAAA/xC,UAAAL,OAAA,EAAA,CAEA,IAAA,GAAAkE,GAAA,EAAAA,EAAA7D,UAAAL,OAAAkE,IAEA9D,KAAAzC,IAAA0C,UAAA6D,GAIA,OAAA9D,MAIA,MAAAgyC,UAAAhyC,MAEA+P,QAAAiuB,MAAA,kEAAAgU,QACAhyC,OAIAgyC,QAAAA,OAAAo5E,YAEA,OAAAp5E,OAAA/yC,QAEA+yC,OAAA/yC,OAAAs6C,OAAAvH,QAIAA,OAAA/yC,OAAAe,KACAgyC,OAAA7zC,eAAAi9B,KAAA,UAEAp7B,KAAAo1C,SAAAl1C,KAAA8xC,SAIAjiC,QAAAiuB,MAAA,gEAAAgU,QAIAhyC,OAIAu5C,OAAA,SAAAvH,QAEA,GAAA/xC,UAAAL,OAAA,EAAA,CAEA,IAAA,GAAAkE,GAAA,EAAAA,EAAA7D,UAAAL,OAAAkE,IAEA9D,KAAAu5C,OAAAt5C,UAAA6D,GAIA,OAAA9D,MAIA,GAAA+wB,OAAA/wB,KAAAo1C,SAAA18B,QAAAs5B,OAYA,QAVA,IAAAjhB,QAEAihB,OAAA/yC,OAAA,KAEA+yC,OAAA7zC,eAAAi9B,KAAA,YAEAp7B,KAAAo1C,SAAAksD,OAAAvwE,MAAA,IAIA/wB,MAIAosH,cAAA,SAAA3pF,IAEA,MAAAziC,MAAAqsH,oBAAA,KAAA5pF,KAIA6pF,gBAAA,SAAA1uH,MAEA,MAAAoC,MAAAqsH,oBAAA,OAAAzuH,OAIAyuH,oBAAA,SAAAzuH,KAAAsR,OAEA,GAAAlP,KAAApC,QAAAsR,MAAA,MAAAlP,KAEA,KAAA,GAAA8D,GAAA,EAAA4f,EAAA1jB,KAAAo1C,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAyoH,OAAAvsH,KAAAo1C,SAAAtxC,GACAkuC,OAAAu6E,MAAAF,oBAAAzuH,KAAAsR,MAEA,QAAA/B,KAAA6kC,OAEA,MAAAA,UAUAw6E,iBAAA,SAAA/P,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,QAIA,OAFA99B,MAAAs3C,mBAAA,GAEAzyB,OAAAsyB,sBAAAn3C,KAAA+oC,cAIA0jF,mBAAA,WAEA,GAAA1hF,UAAA,GAAAjN,SACAgJ,MAAA,GAAAhJ,QAEA,OAAA,UAAA2+E,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA/+E,WAMA,OAJA19B,MAAAs3C,mBAAA,GAEAt3C,KAAA+oC,YAAAgE,UAAAhC,SAAAlmB,OAAAiiB,OAEAjiB,WAMA6nG,iBAAA,WAEA,GAAAzyE,YAAA,GAAAvc,WAEA,OAAA,UAAA++E,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAAhjE,MAIA,OAFAz5C,MAAAysH,mBAAAxyE,YAEAp1B,OAAAu1B,kBAAAH,WAAAj6C,KAAA+mC,SAAA2S,OAAA,OAMAizE,cAAA,WAEA,GAAA5hF,UAAA,GAAAjN,SACAmc,WAAA,GAAAvc,WAEA,OAAA,UAAA++E,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,QAMA,OAJA99B,MAAAs3C,mBAAA,GAEAt3C,KAAA+oC,YAAAgE,UAAAhC,SAAAkP,WAAAp1B,QAEAA,WAMA+nG,kBAAA,WAEA,GAAA3yE,YAAA,GAAAvc,WAEA,OAAA,UAAA++E,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,QAIA,OAFA99B,MAAAysH,mBAAAxyE,YAEAp1B,OAAAhU,IAAA,EAAA,EAAA,GAAAi5F,gBAAA7vD,gBAMA8+C,QAAA,aAEA9d,SAAA,SAAA1mE,UAEAA,SAAAvU,KAIA,KAAA,GAFAo1C,UAAAp1C,KAAAo1C,SAEAtxC,EAAA,EAAA4f,EAAA0xB,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAEAsxC,SAAAtxC,GAAAm3E,SAAA1mE,WAMAs4G,gBAAA,SAAAt4G,UAEA,IAAA,IAAAvU,KAAAoD,QAAA,CAEAmR,SAAAvU,KAIA,KAAA,GAFAo1C,UAAAp1C,KAAAo1C,SAEAtxC,EAAA,EAAA4f,EAAA0xB,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAEAsxC,SAAAtxC,GAAA+oH,gBAAAt4G,YAMAu4G,kBAAA,SAAAv4G,UAEA,GAAAtV,QAAAe,KAAAf,MAEA,QAAAA,SAEAsV,SAAAtV,QAEAA,OAAA6tH,kBAAAv4G,YAMAu2E,aAAA,WAEA9qF,KAAAk3C,OAAA+6D,QAAAjyG,KAAA+qC,SAAA/qC,KAAAi6C,WAAAj6C,KAAA8mC,OAEA9mC,KAAA66C,wBAAA,GAIAvD,kBAAA,SAAAy1E,OAEA/sH,KAAA26C,kBAAA36C,KAAA8qF,gBAEA9qF,KAAA66C,wBAAAkyE,SAEA,OAAA/sH,KAAAf,OAEAe,KAAA+oC,YAAAI,KAAAnpC,KAAAk3C,QAIAl3C,KAAA+oC,YAAA6D,iBAAA5sC,KAAAf,OAAA8pC,YAAA/oC,KAAAk3C,QAIAl3C,KAAA66C,wBAAA,EAEAkyE,OAAA,EAQA,KAAA,GAFA33E,UAAAp1C,KAAAo1C,SAEAtxC,EAAA,EAAA4f,EAAA0xB,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAEAsxC,SAAAtxC,GAAAwzC,kBAAAy1E,QAMA39F,OAAA,SAAAw1E,MA6CA,QAAAooB,WAAAC,QAAAC,SAQA,WANA//G,KAAA8/G,QAAAC,QAAAzxF,QAEAwxF,QAAAC,QAAAzxF,MAAAyxF,QAAA99F,OAAAw1E,OAIAsoB,QAAAzxF,KAmEA,QAAAkrF,kBAAA7+D,OAEA,GAAAxnC,UACA,KAAA,GAAAlQ,OAAA03C,OAAA,CAEA,GAAAvnC,MAAAunC,MAAA13C,WACAmQ,MAAAskF,SACAvkF,OAAApgB,KAAAqgB,MAGA,MAAAD,QA/HA,GAAA6sG,kBAAAhgH,KAAAy3F,MAAA,KAAAA,KAEApzF,SAKA27G,gBAGAvoB,MACA7iD,cACA28C,aACAr6D,YACAjG,WAGA5sB,OAAAqzF,UACA5qE,QAAA,IACAmB,KAAA,SACA0pE,UAAA,mBAOA,IAAA9yD,UAiCA,IA/BAA,OAAAvW,KAAAz7B,KAAAy7B,KACAuW,OAAA5W,KAAAp7B,KAAAo7B,KAEA,KAAAp7B,KAAApC,OAAAo0C,OAAAp0C,KAAAoC,KAAApC,OACA,IAAAoC,KAAAu0C,aAAAvC,OAAAuC,YAAA,IACA,IAAAv0C,KAAA86C,gBAAA9I,OAAA8I,eAAA,IACA,IAAA96C,KAAAoD,UAAA4uC,OAAA5uC,SAAA,GACA,OAAAyjH,KAAAC,UAAA9mH,KAAAgvC,YAAAgD,OAAAhD,SAAAhvC,KAAAgvC,UAEAgD,OAAAkF,OAAAl3C,KAAAk3C,OAAA3rB,cAgBApe,KAAAnN,KAAAqyC,WAEAL,OAAAK,SAAA26E,UAAApoB,KAAA7iD,WAAA/hD,KAAAqyC,eAIAllC,KAAAnN,KAAA6sC,SAEA,GAAAtwC,MAAAoN,QAAA3J,KAAA6sC,UAAA,CAIA,IAAA,GAFAugF,UAEAtpH,EAAA,EAAA4f,EAAA1jB,KAAA6sC,SAAAjtC,OAAAkE,EAAA4f,EAAA5f,IAEAspH,MAAAltH,KAAA8sH,UAAApoB,KAAAlG,UAAA1+F,KAAA6sC,SAAA/oC,IAIAkuC,QAAAnF,SAAAugF,UAIAp7E,QAAAnF,SAAAmgF,UAAApoB,KAAAlG,UAAA1+F,KAAA6sC,SAQA,IAAA7sC,KAAAo1C,SAAAx1C,OAAA,EAAA,CAEAoyC,OAAAoD,WAEA,KAAA,GAAAtxC,GAAA,EAAAA,EAAA9D,KAAAo1C,SAAAx1C,OAAAkE,IAEAkuC,OAAAoD,SAAAl1C,KAAAF,KAAAo1C,SAAAtxC,GAAAsrB,OAAAw1E,MAAA5yD,QAMA,GAAAm7E,aAAA,CAEA,GAAAprE,YAAA4kE,iBAAA/hB,KAAA7iD,YACA28C,UAAAioB,iBAAA/hB,KAAAlG,WACAr6D,SAAAsiF,iBAAA/hB,KAAAvgE,UACAjG,OAAAuoF,iBAAA/hB,KAAAxmE,OAEA2jB,YAAAniD,OAAA,IAAA4R,OAAAuwC,WAAAA,YACA28C,UAAA9+F,OAAA,IAAA4R,OAAAktF,UAAAA,WACAr6D,SAAAzkC,OAAA,IAAA4R,OAAA6yB,SAAAA,UACAjG,OAAAx+B,OAAA,IAAA4R,OAAA4sB,OAAAA,QAMA,MAFA5sB,QAAAwgC,OAAAA,OAEAxgC,QAqBAuY,MAAA,SAAA+uE,WAEA,OAAA,GAAA94F,MAAA8rF,aAAA3iD,KAAAnpC,KAAA84F,YAIA3vD,KAAA,SAAA1jC,OAAAqzF,WA6BA,OA3BA3rF,KAAA2rF,YAAAA,WAAA,GAEA94F,KAAApC,KAAA6H,OAAA7H,KAEAoC,KAAA23C,GAAAxO,KAAA1jC,OAAAkyC,IAEA33C,KAAA+qC,SAAA5B,KAAA1jC,OAAAslC,UACA/qC,KAAAi6C,WAAA9Q,KAAA1jC,OAAAw0C,YACAj6C,KAAA8mC,MAAAqC,KAAA1jC,OAAAqhC,OAEA9mC,KAAAk3C,OAAA/N,KAAA1jC,OAAAyxC,QACAl3C,KAAA+oC,YAAAI,KAAA1jC,OAAAsjC,aAEA/oC,KAAA26C,iBAAAl1C,OAAAk1C,iBACA36C,KAAA66C,uBAAAp1C,OAAAo1C,uBAEA76C,KAAAm0C,OAAA2F,KAAAr0C,OAAA0uC,OAAA2F,KACA95C,KAAAoD,QAAAqC,OAAArC,QAEApD,KAAAu0C,WAAA9uC,OAAA8uC,WACAv0C,KAAA86C,cAAAr1C,OAAAq1C,cAEA96C,KAAAw0C,cAAA/uC,OAAA+uC,cACAx0C,KAAA+rC,YAAAtmC,OAAAsmC,YAEA/rC,KAAAgvC,SAAA63E,KAAAE,MAAAF,KAAAC,UAAArhH,OAAAupC,YAEA,IAAA8pD,UAEA,IAAA,GAAAh1F,GAAA,EAAAA,EAAA2B,OAAA2vC,SAAAx1C,OAAAkE,IAAA,CAEA,GAAAyoH,OAAA9mH,OAAA2vC,SAAAtxC,EACA9D,MAAAzC,IAAAgvH,MAAAxiG,SAMA,MAAA/pB,SAuBA+6C,OAAAv+C,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAA/wC,OAEAogC,UAAA,EAEAhyC,KAAA,SAAA1jC,OAAAqzF,WAOA,MALA/+C,UAAAv9C,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,OAAAqzF,WAEA94F,KAAAipC,mBAAAE,KAAA1jC,OAAAwjC,oBACAjpC,KAAAkpC,iBAAAC,KAAA1jC,OAAAyjC,kBAEAlpC,MAIA4sH,kBAAA,WAEA,GAAA3yE,YAAA,GAAAvc,WAEA,OAAA,UAAA++E,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,QAIA,OAFA99B,MAAAysH,mBAAAxyE,YAEAp1B,OAAAhU,IAAA,EAAA,GAAA,GAAAi5F,gBAAA7vD,gBAMA3C,kBAAA,SAAAy1E,OAEAhzE,SAAAv9C,UAAA86C,kBAAA1wC,KAAA5G,KAAA+sH,OAEA/sH,KAAAipC,mBAAAm9B,WAAApmE,KAAA+oC,cAIAhf,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,SAgCAg7C,mBAAAx+C,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5rD,OAAAv+C,YAEAsvF,YAAA9wC,mBAEAqyE,sBAAA,EAEAlkF,KAAA,SAAA1jC,OAAAqzF,WAcA,MAZA/9C,QAAAv+C,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,OAAAqzF,WAEA94F,KAAAwD,KAAAiC,OAAAjC,KACAxD,KAAAyD,MAAAgC,OAAAhC,MACAzD,KAAA0D,IAAA+B,OAAA/B,IACA1D,KAAA2D,OAAA8B,OAAA9B,OACA3D,KAAAwsC,KAAA/mC,OAAA+mC,KACAxsC,KAAAysC,IAAAhnC,OAAAgnC,IAEAzsC,KAAAi7C,KAAAx1C,OAAAw1C,KACAj7C,KAAAk7C,KAAA,OAAAz1C,OAAAy1C,KAAA,KAAArxC,OAAAm3F,UAAAv7F,OAAAy1C,MAEAl7C,MAIAstH,cAAA,SAAAC,UAAAC,WAAAh2G,EAAAyC,EAAA/a,MAAA49B,QAEA98B,KAAAk7C,MACAqyE,UAAAA,UACAC,WAAAA,WACAC,QAAAj2G,EACAk2G,QAAAzzG,EACA/a,MAAAA,MACA49B,OAAAA,QAGA98B,KAAA82C,0BAIA62E,gBAAA,WAEA3tH,KAAAk7C,KAAA,KACAl7C,KAAA82C,0BAIAA,uBAAA,WAEA,GAAAwtD,KAAAtkG,KAAAyD,MAAAzD,KAAAwD,OAAA,EAAAxD,KAAAi7C,MACAspD,IAAAvkG,KAAA0D,IAAA1D,KAAA2D,SAAA,EAAA3D,KAAAi7C,MACA0oC,IAAA3jF,KAAAyD,MAAAzD,KAAAwD,MAAA,EACAogF,IAAA5jF,KAAA0D,IAAA1D,KAAA2D,QAAA,EAEAH,KAAAmgF,GAAA2gB,GACA7gG,MAAAkgF,GAAA2gB,GACA5gG,IAAAkgF,GAAA2gB,GACA5gG,OAAAigF,GAAA2gB,EAEA,IAAA,OAAAvkG,KAAAk7C,KAAA,CAEA,GAAA0yE,OAAA5tH,KAAAi7C,MAAAj7C,KAAAk7C,KAAAh8C,MAAAc,KAAAk7C,KAAAqyE,WACAM,MAAA7tH,KAAAi7C,MAAAj7C,KAAAk7C,KAAApe,OAAA98B,KAAAk7C,KAAAsyE,YACAM,QAAA9tH,KAAAyD,MAAAzD,KAAAwD,MAAAxD,KAAAk7C,KAAAh8C,MACA6uH,QAAA/tH,KAAA0D,IAAA1D,KAAA2D,QAAA3D,KAAAk7C,KAAApe,MAEAt5B,OAAAsqH,QAAA9tH,KAAAk7C,KAAAuyE,QAAAG,OACAnqH,MAAAD,KAAAsqH,QAAA9tH,KAAAk7C,KAAAh8C,MAAA0uH,OACAlqH,KAAAqqH,QAAA/tH,KAAAk7C,KAAAwyE,QAAAG,OACAlqH,OAAAD,IAAAqqH,QAAA/tH,KAAAk7C,KAAApe,OAAA+wF,OAIA7tH,KAAAkpC,iBAAAopE,iBAAA9uG,KAAAC,MAAAC,IAAAC,OAAA3D,KAAAwsC,KAAAxsC,KAAAysC,MAIArd,OAAA,SAAAw1E,MAEA,GAAArkF,MAAAw5B,SAAAv9C,UAAA4yB,OAAAxoB,KAAA5G,KAAA4kG,KAYA,OAVArkF,MAAAyxB,OAAAiJ,KAAAj7C,KAAAi7C,KACA16B,KAAAyxB,OAAAxuC,KAAAxD,KAAAwD,KACA+c,KAAAyxB,OAAAvuC,MAAAzD,KAAAyD,MACA8c,KAAAyxB,OAAAtuC,IAAA1D,KAAA0D,IACA6c,KAAAyxB,OAAAruC,OAAA3D,KAAA2D,OACA4c,KAAAyxB,OAAAxF,KAAAxsC,KAAAwsC,KACAjsB,KAAAyxB,OAAAvF,IAAAzsC,KAAAysC,IAEA,OAAAzsC,KAAAk7C,OAAA36B,KAAAyxB,OAAAkJ,KAAArxC,OAAAm3F,UAAAhhG,KAAAk7C,OAEA36B,QAoCA46B,kBAAA3+C,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5rD,OAAAv+C,YAEAsvF,YAAA3wC,kBAEA6yE,qBAAA,EAEA7kF,KAAA,SAAA1jC,OAAAqzF,WAiBA,MAfA/9C,QAAAv+C,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,OAAAqzF,WAEA94F,KAAAo7C,IAAA31C,OAAA21C,IACAp7C,KAAAi7C,KAAAx1C,OAAAw1C,KAEAj7C,KAAAwsC,KAAA/mC,OAAA+mC,KACAxsC,KAAAysC,IAAAhnC,OAAAgnC,IACAzsC,KAAAs7C,MAAA71C,OAAA61C,MAEAt7C,KAAAq7C,OAAA51C,OAAA41C,OACAr7C,KAAAk7C,KAAA,OAAAz1C,OAAAy1C,KAAA,KAAArxC,OAAAm3F,UAAAv7F,OAAAy1C,MAEAl7C,KAAAu7C,UAAA91C,OAAA81C,UACAv7C,KAAAw7C,WAAA/1C,OAAA+1C,WAEAx7C,MAYAiuH,eAAA,SAAAC,aAGA,GAAAC,cAAA,GAAAnuH,KAAAouH,gBAAAF,WAEAluH,MAAAo7C,IAAA,EAAA1f,MAAAkmE,QAAAhzF,KAAAy/G,KAAAF,cACAnuH,KAAA82C,0BAOAw3E,eAAA,WAEA,GAAAH,cAAAv/G,KAAAqsG,IAAA,GAAAv/E,MAAAksD,QAAA5nF,KAAAo7C,IAEA,OAAA,GAAAp7C,KAAAouH,gBAAAD,cAIAI,gBAAA,WAEA,MAAA,GAAA7yF,MAAAkmE,QAAAhzF,KAAAy/G,KACAz/G,KAAAqsG,IAAA,GAAAv/E,MAAAksD,QAAA5nF,KAAAo7C,KAAAp7C,KAAAi7C,OAIAuzE,aAAA,WAGA,MAAAxuH,MAAAu7C,UAAA3sC,KAAAY,IAAAxP,KAAAq7C,OAAA,IAIA+yE,cAAA,WAGA,MAAApuH,MAAAu7C,UAAA3sC,KAAAsF,IAAAlU,KAAAq7C,OAAA,IAuCAiyE,cAAA,SAAAC,UAAAC,WAAAh2G,EAAAyC,EAAA/a,MAAA49B,QAEA98B,KAAAq7C,OAAAkyE,UAAAC,WAEAxtH,KAAAk7C,MACAqyE,UAAAA,UACAC,WAAAA,WACAC,QAAAj2G,EACAk2G,QAAAzzG,EACA/a,MAAAA,MACA49B,OAAAA,QAGA98B,KAAA82C,0BAIA62E,gBAAA,WAEA3tH,KAAAk7C,KAAA,KACAl7C,KAAA82C,0BAIAA,uBAAA,WAEA,GAAAtK,MAAAxsC,KAAAwsC,KACA9oC,IAAA8oC,KAAA59B,KAAAqsG,IACA,GAAAv/E,MAAAksD,QAAA5nF,KAAAo7C,KAAAp7C,KAAAi7C,KACAne,OAAA,EAAAp5B,IACAxE,MAAAc,KAAAq7C,OAAAve,OACAt5B,MAAA,GAAAtE,MACAg8C,KAAAl7C,KAAAk7C,IAEA,IAAA,OAAAA,KAAA,CAEA,GAAAqyE,WAAAryE,KAAAqyE,UACAC,WAAAtyE,KAAAsyE,UAEAhqH,OAAA03C,KAAAuyE,QAAAvuH,MAAAquH,UACA7pH,KAAAw3C,KAAAwyE,QAAA5wF,OAAA0wF,WACAtuH,OAAAg8C,KAAAh8C,MAAAquH,UACAzwF,QAAAoe,KAAApe,OAAA0wF,WAIA,GAAAiB,MAAAzuH,KAAAw7C,UACA,KAAAizE,OAAAjrH,MAAAgpC,KAAAiiF,KAAAzuH,KAAAwuH,gBAEAxuH,KAAAkpC,iBAAAmpE,gBAAA7uG,KAAAA,KAAAtE,MAAAwE,IAAAA,IAAAo5B,OAAA0P,KAAAxsC,KAAAysC,MAIArd,OAAA,SAAAw1E,MAEA,GAAArkF,MAAAw5B,SAAAv9C,UAAA4yB,OAAAxoB,KAAA5G,KAAA4kG,KAgBA,OAdArkF,MAAAyxB,OAAAoJ,IAAAp7C,KAAAo7C,IACA76B,KAAAyxB,OAAAiJ,KAAAj7C,KAAAi7C,KAEA16B,KAAAyxB,OAAAxF,KAAAxsC,KAAAwsC,KACAjsB,KAAAyxB,OAAAvF,IAAAzsC,KAAAysC,IACAlsB,KAAAyxB,OAAAsJ,MAAAt7C,KAAAs7C,MAEA/6B,KAAAyxB,OAAAqJ,OAAAr7C,KAAAq7C,OAEA,OAAAr7C,KAAAk7C,OAAA36B,KAAAyxB,OAAAkJ,KAAArxC,OAAAm3F,UAAAhhG,KAAAk7C,OAEA36B,KAAAyxB,OAAAuJ,UAAAv7C,KAAAu7C,UACAh7B,KAAAyxB,OAAAwJ,WAAAx7C,KAAAw7C,WAEAj7B,QA2BA1W,OAAAm3F,OAAAvlD,MAAAj/C,WAEAutB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAA1jC,QAEAzF,KAAA4K,EAAAnF,OAAAmF,EACA5K,KAAA6K,EAAApF,OAAAoF,EACA7K,KAAA+hB,EAAAtc,OAAAsc,EAEA/hB,KAAAqxC,OAAAlI,KAAA1jC,OAAA4rC,QACArxC,KAAA6mC,MAAAsC,KAAA1jC,OAAAohC,OAEA7mC,KAAAg1C,cAAAvvC,OAAAuvC,aAEA,KAAA,GAAAlxC,GAAA,EAAAyyC,GAAA9wC,OAAAk2C,cAAA/7C,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAA27C,cAAA73C,GAAA2B,OAAAk2C,cAAA73C,GAAAimB,OAIA,KAAA,GAAAjmB,GAAA,EAAAyyC,GAAA9wC,OAAAsoC,aAAAnuC,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAA+tC,aAAAjqC,GAAA2B,OAAAsoC,aAAAjqC,GAAAimB,OAIA,OAAA/pB,QAeA,IAAAm5C,OAAA,CAwCAtvC,QAAAm3F,OAAAllD,SAAAt/C,UAAAm+B,gBAAAn+B,WAEAu2C,YAAA,EAEAs4E,YAAA,SAAAn0E,QAIA,IAAA,GAFAwD,eAAA,GAAAvJ,UAAA42B,gBAAA7wB,QAEApzC,EAAA,EAAAyyC,GAAAv2C,KAAAukC,SAAA3kC,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA9D,KAAAukC,SAAAzgC,GACAklC,aAAAkO,QAIA,IAAA,GAAApzC,GAAA,EAAAyyC,GAAAv2C,KAAAwkC,MAAA5kC,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAA4zC,MAAA13C,KAAAwkC,MAAA1gC,EACA4zC,MAAArG,OAAA24D,aAAAtvD,cAAA+O,WAEA,KAAA,GAAA7pC,GAAA,EAAAsqB,GAAAwN,KAAAiE,cAAA/7C,OAAAggB,EAAAsqB,GAAAtqB,IAEA83B,KAAAiE,cAAA/7B,GAAAoqF,aAAAtvD,cAAA+O,YAqBA,MAfA,QAAAzpD,KAAAo8C,aAEAp8C,KAAA0uH,qBAIA,OAAA1uH,KAAAq8C,gBAEAr8C,KAAAs8F,wBAIAt8F,KAAAu8C,oBAAA,EACAv8C,KAAAy8C,mBAAA,EAEAz8C,MAIA4rH,QAAA,WAIA,GAAAxC,IAAA,GAAArrF,QAEA,OAAA,UAAA0qB,OAMA,MAJA2gE,IAAA1X,cAAAjpD,OAEAzoD,KAAAqrH,YAAAjC,IAEAppH,SAMA46F,QAAA,WAIA,GAAAwuB,IAAA,GAAArrF,QAEA,OAAA,UAAA0qB,OAMA,MAJA2gE,IAAAzX,cAAAlpD,OAEAzoD,KAAAqrH,YAAAjC,IAEAppH,SAMA6rH,QAAA,WAIA,GAAAzC,IAAA,GAAArrF,QAEA,OAAA,UAAA0qB,OAMA,MAJA2gE,IAAAxX,cAAAnpD,OAEAzoD,KAAAqrH,YAAAjC,IAEAppH,SAMA+8F,UAAA,WAIA,GAAAqsB,IAAA,GAAArrF,QAEA,OAAA,UAAAvmB,EAAAyC,EAAA2iB,GAMA,MAJAwsF,IAAAhyE,gBAAA5/B,EAAAyC,EAAA2iB,GAEA58B,KAAAqrH,YAAAjC,IAEAppH,SAMA8mC,MAAA,WAIA,GAAAsiF,IAAA,GAAArrF,QAEA,OAAA,UAAAvmB,EAAAyC,EAAA2iB,GAMA,MAJAwsF,IAAAtmE,UAAAtrC,EAAAyC,EAAA2iB,GAEA58B,KAAAqrH,YAAAjC,IAEAppH,SAMAq3C,OAAA,WAEA,GAAAptC,KAAA,GAAA8vC,SAEA,OAAA,UAAA4F,QAEA11C,IAAAotC,OAAAsI,QAEA11C,IAAA6gF,eAEA9qF,KAAAqrH,YAAAphH,IAAAitC,YAMAsH,mBAAA,SAAAnM,UAiDA,QAAAs8E,SAAA/jH,EAAAC,EAAAkX,EAAAizB,eAEA,GAAA2G,mBAAAxuC,KAAA0wC,SAAA+wE,YAAAhkH,GAAAmf,QAAA6kG,YAAA/jH,GAAAkf,QAAA6kG,YAAA7sG,GAAAgI,YACAgkB,iBAAA5gC,KAAA4uC,QAAApI,MAAAoI,OAAAnxC,GAAAmf,QAAA4pB,MAAAoI,OAAAlxC,GAAAkf,QAAA4pB,MAAAoI,OAAAh6B,GAAAgI,YAEA2tB,KAAA,GAAA+D,OAAA7wC,EAAAC,EAAAkX,EAAA45B,cAAA5N,aAAAiH,cAEArB,OAAAnP,MAAAtkC,KAAAw3C,UAEAvqC,KAAA2wC,KAEAnK,MAAAqI,cAAA,GAAA97C,MAAA2uH,QAAAjkH,GAAAmf,QAAA8kG,QAAAhkH,GAAAkf,QAAA8kG,QAAA9sG,GAAAgI,cAIA5c,KAAA4wC,MAEApK,MAAAqI,cAAA,GAAA97C,MAAA4uH,SAAAlkH,GAAAmf,QAAA+kG,SAAAjkH,GAAAkf,QAAA+kG,SAAA/sG,GAAAgI,UAhEA,GAAA4pB,OAAA3zC,KAEA49C,QAAA,OAAAvL,SAAAthB,MAAAshB,SAAAthB,MAAAlc,UAAA1H,GACAxF,WAAA0qC,SAAA1qC,WAEAiyF,UAAAjyF,WAAAojC,SAAAl2B,MACAgpC,YAAA1wC,KAAAxF,WAAA0pC,OAAA1pC,WAAA0pC,OAAAx8B,UAAA1H,GACA4uC,WAAA5uC,KAAAxF,WAAAk/B,MAAAl/B,WAAAk/B,MAAAhyB,UAAA1H,GACA2wC,QAAA3wC,KAAAxF,WAAA6+B,GAAA7+B,WAAA6+B,GAAA3xB,UAAA1H,GACA4wC,SAAA5wC,KAAAxF,WAAAsoC,IAAAtoC,WAAAsoC,IAAAp7B,UAAA1H,OAEAA,KAAA4wC,OAAA/9C,KAAAg8C,cAAA,MAMA,KAAA,GAJA4yE,gBACAC,WACAC,YAEAhrH,EAAA,EAAA8b,EAAA,EAAA9b,EAAA81F,UAAAh6F,OAAAkE,GAAA,EAAA8b,GAAA,EAEA+zB,MAAApP,SAAArkC,KAAA,GAAA49B,SAAA87D,UAAA91F,GAAA81F,UAAA91F,EAAA,GAAA81F,UAAA91F,EAAA,SAEAqJ,KAAA0wC,SAEA+wE,YAAA1uH,KAAA,GAAA49B,SAAA+f,QAAA/5C,GAAA+5C,QAAA/5C,EAAA,GAAA+5C,QAAA/5C,EAAA,SAIAqJ,KAAA4uC,QAEApI,MAAAoI,OAAA77C,KAAA,GAAA6jC,OAAAgY,OAAAj4C,GAAAi4C,OAAAj4C,EAAA,GAAAi4C,OAAAj4C,EAAA,SAIAqJ,KAAA2wC,KAEA+wE,QAAA3uH,KAAA,GAAA06B,SAAAkjB,IAAAl+B,GAAAk+B,IAAAl+B,EAAA,SAIAzS,KAAA4wC,MAEA+wE,SAAA5uH,KAAA,GAAA06B,SAAAmjB,KAAAn+B,GAAAm+B,KAAAn+B,EAAA,IA6BA,IAAAg1B,QAAAvC,SAAAuC,MAEA,IAAAA,OAAAh1C,OAAA,EAEA,IAAA,GAAAkE,GAAA,EAAAA,EAAA8wC,OAAAh1C,OAAAkE,IAOA,IAAA,GALAgxC,OAAAF,OAAA9wC,GAEAq6C,MAAArJ,MAAAqJ,MACAhF,MAAArE,MAAAqE,MAEAv5B,EAAAu+B,MAAAjU,GAAAiU,MAAAhF,MAAAv5B,EAAAsqB,GAAAtqB,GAAA,MAEAzS,KAAAywC,QAEA+wE,QAAA/wE,QAAAh+B,GAAAg+B,QAAAh+B,EAAA,GAAAg+B,QAAAh+B,EAAA,GAAAk1B,MAAAE,eAIA25E,QAAA/uG,EAAAA,EAAA,EAAAA,EAAA,EAAAk1B,MAAAE,mBAUA,QAAA7nC,KAAAywC,QAEA,IAAA,GAAA95C,GAAA,EAAAA,EAAA85C,QAAAh+C,OAAAkE,GAAA,EAEA6qH,QAAA/wE,QAAA95C,GAAA85C,QAAA95C,EAAA,GAAA85C,QAAA95C,EAAA,QAMA,KAAA,GAAAA,GAAA,EAAAA,EAAA81F,UAAAh6F,OAAA,EAAAkE,GAAA,EAEA6qH,QAAA7qH,EAAAA,EAAA,EAAAA,EAAA,EAsBA,OAdA9D,MAAA6nF,qBAEA,OAAAx1C,SAAA+J,cAEAp8C,KAAAo8C,YAAA/J,SAAA+J,YAAAryB,SAIA,OAAAsoB,SAAAgK,iBAEAr8C,KAAAq8C,eAAAhK,SAAAgK,eAAAtyB,SAIA/pB,MAIAixC,OAAA,WAEAjxC,KAAA0uH,oBAEA,IAAAvlG,QAAAnpB,KAAAo8C,YAAA2pE,YAAA9hB,QAIA,OAFAjkG,MAAA+8F,UAAA5zE,OAAA3R,EAAA2R,OAAAlP,EAAAkP,OAAAyT,GAEAzT,QAIAsgC,UAAA,WAEAzpD,KAAAs8F,uBAEA,IAAArrD,QAAAjxC,KAAAq8C,eAAApL,OACAC,OAAAlxC,KAAAq8C,eAAAnL,OAEAt7B,EAAA,IAAAs7B,OAAA,EAAA,EAAAA,OAEAgG,OAAA,GAAAnZ,QAUA,OATAmZ,QAAArmC,IACA+E,EAAA,EAAA,GAAAA,EAAAq7B,OAAAz5B,EACA,EAAA5B,EAAA,GAAAA,EAAAq7B,OAAAh3B,EACA,EAAA,EAAArE,GAAAA,EAAAq7B,OAAArU,EACA,EAAA,EAAA,EAAA,GAGA58B,KAAAqrH,YAAAn0E,QAEAl3C,MAIA6nF,mBAAA,WAIA,IAAA,GAFAknC,IAAA,GAAAjxF,SAAAkxF,GAAA,GAAAlxF,SAEAq3B,EAAA,EAAA85D,GAAAjvH,KAAAwkC,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAAA,CAEA,GAAAzd,MAAA13C,KAAAwkC,MAAA2wB,GAEA+5D,GAAAlvH,KAAAukC,SAAAmT,KAAA9sC,GACAukH,GAAAnvH,KAAAukC,SAAAmT,KAAA7sC,GACAukH,GAAApvH,KAAAukC,SAAAmT,KAAA31B,EAEAgtG,IAAA5vC,WAAAiwC,GAAAD,IACAH,GAAA7vC,WAAA+vC,GAAAC,IACAJ,GAAAxkB,MAAAykB,IAEAD,GAAAtlE,YAEA/R,KAAArG,OAAAlI,KAAA4lF,MAMA/tC,qBAAA,SAAAquC,kBAEAliH,KAAAkiH,eAAAA,cAAA,EAEA,IAAA/vF,GAAAgwF,GAAAn6D,EAAA85D,GAAAv3E,KAAAnT,QAIA,KAFAA,SAAA,GAAAhoC,OAAAyD,KAAAukC,SAAA3kC,QAEA0/B,EAAA,EAAAgwF,GAAAtvH,KAAAukC,SAAA3kC,OAAA0/B,EAAAgwF,GAAAhwF,IAEAiF,SAAAjF,GAAA,GAAAxB,QAIA,IAAAuxF,aAAA,CAKA,GAAAH,IAAAC,GAAAC,GACAL,GAAA,GAAAjxF,SAAAkxF,GAAA,GAAAlxF,QAEA,KAAAq3B,EAAA,EAAA85D,GAAAjvH,KAAAwkC,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAEAzd,KAAA13C,KAAAwkC,MAAA2wB,GAEA+5D,GAAAlvH,KAAAukC,SAAAmT,KAAA9sC,GACAukH,GAAAnvH,KAAAukC,SAAAmT,KAAA7sC,GACAukH,GAAApvH,KAAAukC,SAAAmT,KAAA31B,GAEAgtG,GAAA5vC,WAAAiwC,GAAAD,IACAH,GAAA7vC,WAAA+vC,GAAAC,IACAJ,GAAAxkB,MAAAykB,IAEAzqF,SAAAmT,KAAA9sC,GAAArN,IAAAwxH,IACAxqF,SAAAmT,KAAA7sC,GAAAtN,IAAAwxH,IACAxqF,SAAAmT,KAAA31B,GAAAxkB,IAAAwxH,QAQA,KAFA/uH,KAAA6nF,qBAEA1yB,EAAA,EAAA85D,GAAAjvH,KAAAwkC,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAEAzd,KAAA13C,KAAAwkC,MAAA2wB,GAEA5wB,SAAAmT,KAAA9sC,GAAArN,IAAAm6C,KAAArG,QACA9M,SAAAmT,KAAA7sC,GAAAtN,IAAAm6C,KAAArG,QACA9M,SAAAmT,KAAA31B,GAAAxkB,IAAAm6C,KAAArG,OAMA,KAAA/R,EAAA,EAAAgwF,GAAAtvH,KAAAukC,SAAA3kC,OAAA0/B,EAAAgwF,GAAAhwF,IAEAiF,SAAAjF,GAAAmqB,WAIA,KAAA0L,EAAA,EAAA85D,GAAAjvH,KAAAwkC,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAAA,CAEAzd,KAAA13C,KAAAwkC,MAAA2wB,EAEA,IAAAxZ,eAAAjE,KAAAiE,aAEA,KAAAA,cAAA/7C,QAEA+7C,cAAA,GAAAxS,KAAA5E,SAAAmT,KAAA9sC,IACA+wC,cAAA,GAAAxS,KAAA5E,SAAAmT,KAAA7sC,IACA8wC,cAAA,GAAAxS,KAAA5E,SAAAmT,KAAA31B,MAIA45B,cAAA,GAAApX,SAAAmT,KAAA9sC,GAAAmf,QACA4xB,cAAA,GAAApX,SAAAmT,KAAA7sC,GAAAkf,QACA4xB,cAAA,GAAApX,SAAAmT,KAAA31B,GAAAgI,SAMA/pB,KAAAwkC,MAAA5kC,OAAA,IAEAI,KAAAy8C,mBAAA,IAMA8yE,yBAAA,WAEA,GAAAp6D,GAAA85D,GAAAv3E,IAIA,KAFA13C,KAAA6nF,qBAEA1yB,EAAA,EAAA85D,GAAAjvH,KAAAwkC,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAAA,CAEAzd,KAAA13C,KAAAwkC,MAAA2wB,EAEA,IAAAxZ,eAAAjE,KAAAiE,aAEA,KAAAA,cAAA/7C,QAEA+7C,cAAA,GAAAxS,KAAAuO,KAAArG,QACAsK,cAAA,GAAAxS,KAAAuO,KAAArG,QACAsK,cAAA,GAAAxS,KAAAuO,KAAArG,UAIAsK,cAAA,GAAAjE,KAAArG,OAAAtnB,QACA4xB,cAAA,GAAAjE,KAAArG,OAAAtnB,QACA4xB,cAAA,GAAAjE,KAAArG,OAAAtnB,SAMA/pB,KAAAwkC,MAAA5kC,OAAA,IAEAI,KAAAy8C,mBAAA,IAMA+yE,oBAAA,WAEA,GAAA1rH,GAAAyyC,GAAA4e,EAAA85D,GAAAv3E,IAMA,KAAAyd,EAAA,EAAA85D,GAAAjvH,KAAAwkC,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAgBA,IAdAzd,KAAA13C,KAAAwkC,MAAA2wB,GAEAzd,KAAA+3E,qBAMA/3E,KAAA+3E,qBAAAtmF,KAAAuO,KAAArG,QAJAqG,KAAA+3E,qBAAA/3E,KAAArG,OAAAtnB,QAQA2tB,KAAAg4E,0BAAAh4E,KAAAg4E,4BAEA5rH,EAAA,EAAAyyC,GAAAmB,KAAAiE,cAAA/7C,OAAAkE,EAAAyyC,GAAAzyC,IAEA4zC,KAAAg4E,wBAAA5rH,GAMA4zC,KAAAg4E,wBAAA5rH,GAAAqlC,KAAAuO,KAAAiE,cAAA73C,IAJA4zC,KAAAg4E,wBAAA5rH,GAAA4zC,KAAAiE,cAAA73C,GAAAimB,OAcA,IAAA4lG,QAAA,GAAA7zE,SAGA,KAFA6zE,OAAAnrF,MAAAxkC,KAAAwkC,MAEA1gC,EAAA,EAAAyyC,GAAAv2C,KAAAyvC,aAAA7vC,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAIA,IAAA9D,KAAA0vC,aAAA5rC,GAAA,CAEA9D,KAAA0vC,aAAA5rC,MACA9D,KAAA0vC,aAAA5rC,GAAA8rH,eACA5vH,KAAA0vC,aAAA5rC,GAAA63C,gBAEA,IAGAk0E,YAAAl0E,cAHAm0E,eAAA9vH,KAAA0vC,aAAA5rC,GAAA8rH,YACAG,iBAAA/vH,KAAA0vC,aAAA5rC,GAAA63C,aAIA,KAAAwZ,EAAA,EAAA85D,GAAAjvH,KAAAwkC,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAEA06D,WAAA,GAAA/xF,SACA6d,eAAA/wC,EAAA,GAAAkzB,SAAAjzB,EAAA,GAAAizB,SAAA/b,EAAA,GAAA+b,UAEAgyF,eAAA5vH,KAAA2vH,YACAE,iBAAA7vH,KAAAy7C,eAMA,GAAAjM,cAAA1vC,KAAA0vC,aAAA5rC,EAIA6rH,QAAAprF,SAAAvkC,KAAAyvC,aAAA3rC,GAAAygC,SAIAorF,OAAA9nC,qBACA8nC,OAAA3uC,sBAIA,IAAA6uC,YAAAl0E,aAEA,KAAAwZ,EAAA,EAAA85D,GAAAjvH,KAAAwkC,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAEAzd,KAAA13C,KAAAwkC,MAAA2wB,GAEA06D,WAAAngF,aAAAkgF,YAAAz6D,GACAxZ,cAAAjM,aAAAiM,cAAAwZ,GAEA06D,WAAA1mF,KAAAuO,KAAArG,QAEAsK,cAAA/wC,EAAAu+B,KAAAuO,KAAAiE,cAAA,IACAA,cAAA9wC,EAAAs+B,KAAAuO,KAAAiE,cAAA,IACAA,cAAA55B,EAAAonB,KAAAuO,KAAAiE,cAAA,IAQA,IAAAwZ,EAAA,EAAA85D,GAAAjvH,KAAAwkC,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAEAzd,KAAA13C,KAAAwkC,MAAA2wB,GAEAzd,KAAArG,OAAAqG,KAAA+3E,qBACA/3E,KAAAiE,cAAAjE,KAAAg4E,yBAMAM,qBAAA,WAKA,IAAA,GAHA91G,GAAA,EACAqqB,SAAAvkC,KAAAukC,SAEAzgC,EAAA,EAAAyyC,GAAAhS,SAAA3kC,OAAAkE,EAAAyyC,GAAAzyC,IAEAA,EAAA,IAEAoW,GAAAqqB,SAAAzgC,GAAAsgG,WAAA7/D,SAAAzgC,EAAA,KAIA9D,KAAAm8C,cAAAr4C,GAAAoW,GAMAw0G,mBAAA,WAEA,OAAA1uH,KAAAo8C,cAEAp8C,KAAAo8C,YAAA,GAAArL,OAIA/wC,KAAAo8C,YAAAspE,cAAA1lH,KAAAukC,WAIA+3D,sBAAA,WAEA,OAAAt8F,KAAAq8C,iBAEAr8C,KAAAq8C,eAAA,GAAArL,SAIAhxC,KAAAq8C,eAAAqpE,cAAA1lH,KAAAukC,WAIAu5E,MAAA,SAAAzrE,SAAA6E,OAAA+4E,qBAEA,IAAA59E,WAAAA,SAAAU,WAGA,WADAhjC,SAAAiuB,MAAA,sEAAAqU,SAKA,IAAAqI,cACAw1E,aAAAlwH,KAAAukC,SAAA3kC,OACAuwH,UAAAnwH,KAAAukC,SACA6rF,UAAA/9E,SAAA9N,SACA8rF,OAAArwH,KAAAwkC,MACA8rF,OAAAj+E,SAAA7N,MACA+rF,KAAAvwH,KAAAg8C,cAAA,GACA+B,KAAA1L,SAAA2J,cAAA,GACAw0E,QAAAxwH,KAAA+7C,OACA00E,QAAAp+E,SAAA0J,WAEA5uC,KAAA8iH,sBAAAA,oBAAA,OAEA9iH,KAAA+pC,SAEAwD,cAAA,GAAAvJ,UAAA42B,gBAAA7wB,QAMA,KAAA,GAAApzC,GAAA,EAAAyyC,GAAA65E,UAAAxwH,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAAwiC,QAAA8pF,UAAAtsH,GAEA4sH,WAAApqF,OAAAvc,YAEA5c,KAAA+pC,QAAAw5E,WAAA1nF,aAAAkO,QAEAi5E,UAAAjwH,KAAAwwH,YAMA,IAAA,GAAA5sH,GAAA,EAAAyyC,GAAAk6E,QAAA7wH,OAAAkE,EAAAyyC,GAAAzyC,IAEA0sH,QAAAtwH,KAAAuwH,QAAA3sH,GAAAimB,QAMA,KAAAjmB,EAAA,EAAAyyC,GAAA+5E,OAAA1wH,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAA6sH,UAAAt/E,OAAAxK,MAAA6Q,KAAA44E,OAAAxsH,GACA8sH,kBAAAl5E,KAAAiE,cACAk1E,iBAAAn5E,KAAA3J,YAEA4iF,UAAA,GAAAl1E,OAAA/D,KAAA9sC,EAAAslH,aAAAx4E,KAAA7sC,EAAAqlH,aAAAx4E,KAAA31B,EAAAmuG,cACAS,SAAAt/E,OAAAlI,KAAAuO,KAAArG,YAEAlkC,KAAAutC,cAEAi2E,SAAAt/E,OAAA24D,aAAAtvD,cAAA+O,WAIA,KAAA,GAAA7pC,GAAA,EAAAsqB,GAAA0mF,kBAAAhxH,OAAAggB,EAAAsqB,GAAAtqB,IAEAyxB,OAAAu/E,kBAAAhxG,GAAAmK,YAEA5c,KAAAutC,cAEArJ,OAAA24D,aAAAtvD,cAAA+O,YAIAknE,SAAAh1E,cAAAz7C,KAAAmxC,OAIAs/E,UAAA9pF,MAAAsC,KAAAuO,KAAA7Q,MAEA,KAAA,GAAAjnB,GAAA,EAAAsqB,GAAA2mF,iBAAAjxH,OAAAggB,EAAAsqB,GAAAtqB,IAEAinB,MAAAgqF,iBAAAjxG,GACA+wG,SAAA5iF,aAAA7tC,KAAA2mC,MAAA9c,QAIA4mG,UAAA37E,cAAA0C,KAAA1C,cAAAi7E,oBAEAI,OAAAnwH,KAAAywH,UAMA,IAAA7sH,EAAA,EAAAyyC,GAAAwH,KAAAn+C,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAA0iC,IAAAuX,KAAAj6C,GAAAgtH,SAEA,QAAA3jH,KAAAq5B,GAAA,CAMA,IAAA,GAAA5mB,GAAA,EAAAsqB,GAAA1D,GAAA5mC,OAAAggB,EAAAsqB,GAAAtqB,IAEAkxG,OAAA5wH,KAAAsmC,GAAA5mB,GAAAmK,QAIAwmG,MAAArwH,KAAA4wH,WAMAC,UAAA,SAAAC,MAEA,IAAAA,OAAAA,KAAA58E,OAGA,WADArkC,SAAAiuB,MAAA,kEAAAgzF,KAKAA,MAAAr2E,kBAAAq2E,KAAAlmC,eAEA9qF,KAAA89G,MAAAkT,KAAA3+E,SAAA2+E,KAAA95E,SAUAwH,cAAA,WAEA,GAGApf,GAAAlvB,IAGAtM,EAAAyyC,GAAAmB,KACAkG,QAAAh+B,EAAAsqB,GAPA+mF,eACAC,UAAAC,WAIA/pF,UAAAx4B,KAAAqF,IAAA,GADA,EAKA,KAAAnQ,EAAA,EAAAyyC,GAAAv2C,KAAAukC,SAAA3kC,OAAAkE,EAAAyyC,GAAAzyC,IAEAw7B,EAAAt/B,KAAAukC,SAAAzgC,GACAsM,IAAAxB,KAAAsa,MAAAoW,EAAA9nB,EAAA4vB,WAAA,IAAAx4B,KAAAsa,MAAAoW,EAAArlB,EAAAmtB,WAAA,IAAAx4B,KAAAsa,MAAAoW,EAAA1C,EAAAwK,eAEAj6B,KAAA8jH,YAAA7gH,MAEA6gH,YAAA7gH,KAAAtM,EACAotH,OAAAhxH,KAAAF,KAAAukC,SAAAzgC,IACAqtH,QAAArtH,GAAAotH,OAAAtxH,OAAA,GAKAuxH,QAAArtH,GAAAqtH,QAAAF,YAAA7gH,KASA,IAAAghH,uBAEA,KAAAttH,EAAA,EAAAyyC,GAAAv2C,KAAAwkC,MAAA5kC,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA4zC,KAAA13C,KAAAwkC,MAAA1gC,GAEA4zC,KAAA9sC,EAAAumH,QAAAz5E,KAAA9sC,GACA8sC,KAAA7sC,EAAAsmH,QAAAz5E,KAAA7sC,GACA6sC,KAAA31B,EAAAovG,QAAAz5E,KAAA31B,GAEA67B,SAAAlG,KAAA9sC,EAAA8sC,KAAA7sC,EAAA6sC,KAAA31B,EAIA,KAAA,GAAAxK,GAAA,EAAAA,EAAA,EAAAA,IAEA,GAAAqmC,QAAArmC,KAAAqmC,SAAArmC,EAAA,GAAA,GAAA,CAEA65G,oBAAAlxH,KAAA4D,EACA,QAQA,IAAAA,EAAAstH,oBAAAxxH,OAAA,EAAAkE,GAAA,EAAAA,IAAA,CAEA,GAAAutH,KAAAD,oBAAAttH,EAIA,KAFA9D,KAAAwkC,MAAA88D,OAAA+vB,IAAA,GAEAzxG,EAAA,EAAAsqB,GAAAlqC,KAAAg8C,cAAAp8C,OAAAggB,EAAAsqB,GAAAtqB,IAEA5f,KAAAg8C,cAAAp8B,GAAA0hF,OAAA+vB,IAAA,GAQA,GAAA7+G,MAAAxS,KAAAukC,SAAA3kC,OAAAsxH,OAAAtxH,MAEA,OADAI,MAAAukC,SAAA2sF,OACA1+G,MAIA8+G,yBAAA,WAeA,QAAAC,mBAAA3mH,EAAAC,GAEA,MAAAD,GAAAoqC,cAAAnqC,EAAAmqC,cAVA,IAAA,GALAxQ,OAAAxkC,KAAAwkC,MACA5kC,OAAA4kC,MAAA5kC,OAIAkE,EAAA,EAAAA,EAAAlE,OAAAkE,IAEA0gC,MAAA1gC,GAAA0tH,IAAA1tH,CAYA0gC,OAAA7wB,KAAA49G,kBAIA,IAGAE,SAAAC,QAHAnB,KAAAvwH,KAAAg8C,cAAA,GACA+B,KAAA/9C,KAAAg8C,cAAA,EAIAu0E,OAAAA,KAAA3wH,SAAAA,SAAA6xH,YACA1zE,MAAAA,KAAAn+C,SAAAA,SAAA8xH,WAEA,KAAA,GAAA5tH,GAAA,EAAAA,EAAAlE,OAAAkE,IAAA,CAEA,GAAA2+B,IAAA+B,MAAA1gC,GAAA0tH,GAEAC,UAAAA,QAAAvxH,KAAAqwH,KAAA9tF,KACAivF,SAAAA,QAAAxxH,KAAA69C,KAAAtb,KAIAgvF,UAAAzxH,KAAAg8C,cAAA,GAAAy1E,SACAC,UAAA1xH,KAAAg8C,cAAA,GAAA01E,UAIAtiG,OAAA,WA4HA,QAAAuiG,QAAAziH,MAAA67B,SAAAgL,SAEA,MAAAA,SAAA7mC,MAAA,GAAA67B,SAAA77B,QAAA,GAAA67B,UAIA,QAAA6mF,gBAAAvgF,QAEA,GAAA2S,MAAA3S,OAAA75B,EAAA1N,WAAAunC,OAAAp3B,EAAAnQ,WAAAunC,OAAAzU,EAAA9yB,UAEA,YAAAqD,KAAA0kH,YAAA7tE,MAEA6tE,YAAA7tE,OAIA6tE,YAAA7tE,MAAAnG,QAAAj+C,OAAA,EACAi+C,QAAA39C,KAAAmxC,OAAA75B,EAAA65B,OAAAp3B,EAAAo3B,OAAAzU,GAEAi1F,YAAA7tE,OAIA,QAAA8tE,eAAAjrF,OAEA,GAAAmd,MAAAnd,MAAAjI,EAAA90B,WAAA+8B,MAAA7G,EAAAl2B,WAAA+8B,MAAAh8B,EAAAf,UAEA,YAAAqD,KAAA4kH,WAAA/tE,MAEA+tE,WAAA/tE,OAIA+tE,WAAA/tE,MAAAjI,OAAAn8C,OACAm8C,OAAA77C,KAAA2mC,MAAAy1E,UAEAyV,WAAA/tE,OAIA,QAAAguE,YAAAxrF,IAEA,GAAAwd,MAAAxd,GAAAhvB,EAAA1N,WAAA08B,GAAAvsB,EAAAnQ,UAEA,YAAAqD,KAAA8kH,QAAAjuE,MAEAiuE,QAAAjuE,OAIAiuE,QAAAjuE,MAAAlG,IAAAl+C,OAAA,EACAk+C,IAAA59C,KAAAsmC,GAAAhvB,EAAAgvB,GAAAvsB,GAEAg4G,QAAAjuE,OA/KA,GAAAzjC,OACAskF,UACA5qE,QAAA,IACAmB,KAAA,WACA0pE,UAAA,mBAUA,IAJAvkF,KAAAkb,KAAAz7B,KAAAy7B,KACAlb,KAAA6a,KAAAp7B,KAAAo7B,KACA,KAAAp7B,KAAApC,OAAA2iB,KAAA3iB,KAAAoC,KAAApC,UAEAuP,KAAAnN,KAAAkvC,WAAA,CAEA,GAAAA,YAAAlvC,KAAAkvC,UAEA,KAAA,GAAA9+B,OAAA8+B,gBAEA/hC,KAAA+hC,WAAA9+B,OAAAmQ,KAAAnQ,KAAA8+B,WAAA9+B,KAIA,OAAAmQ,MAMA,IAAA,GAFAgkB,aAEAzgC,EAAA,EAAAA,EAAA9D,KAAAukC,SAAA3kC,OAAAkE,IAAA,CAEA,GAAAwiC,QAAAtmC,KAAAukC,SAAAzgC,EACAygC,UAAArkC,KAAAomC,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,GAYA,IAAA,GARA4H,UACAqZ,WACAg0E,eACA91E,UACAg2E,cACAj0E,OACAm0E,WAEAnuH,EAAA,EAAAA,EAAA9D,KAAAwkC,MAAA5kC,OAAAkE,IAAA,CAEA,GAAA4zC,MAAA13C,KAAAwkC,MAAA1gC,GAIAouH,oBAAA/kH,KAAAnN,KAAAg8C,cAAA,GAAAl4C,GACAquH,cAAAz6E,KAAArG,OAAAzxC,SAAA,EACAwyH,oBAAA16E,KAAAiE,cAAA/7C,OAAA,EACAyyH,aAAA,IAAA36E,KAAA7Q,MAAAjI,GAAA,IAAA8Y,KAAA7Q,MAAA7G,GAAA,IAAA0X,KAAA7Q,MAAAh8B,EACAynH,mBAAA56E,KAAA3J,aAAAnuC,OAAA,EAEA2yH,SAAA,CAeA,IAbAA,SAAAZ,OAAAY,SAAA,EAAA,GACAA,SAAAZ,OAAAY,SAAA,GAXA,GAYAA,SAAAZ,OAAAY,SAAA,GAXA,GAYAA,SAAAZ,OAAAY,SAAA,EAAAL,iBACAK,SAAAZ,OAAAY,SAAA,EAAAJ,eACAI,SAAAZ,OAAAY,SAAA,EAAAH,qBACAG,SAAAZ,OAAAY,SAAA,EAAAF,cACAE,SAAAZ,OAAAY,SAAA,EAAAD,oBAEA9tF,MAAAtkC,KAAAqyH,UACA/tF,MAAAtkC,KAAAw3C,KAAA9sC,EAAA8sC,KAAA7sC,EAAA6sC,KAAA31B,GACAyiB,MAAAtkC,KAAAw3C,KAAA1C,eAEAk9E,gBAAA,CAEA,GAAAl2E,eAAAh8C,KAAAg8C,cAAA,GAAAl4C,EAEA0gC,OAAAtkC,KACA8xH,WAAAh2E,cAAA,IACAg2E,WAAAh2E,cAAA,IACAg2E,WAAAh2E,cAAA,KAWA,GANAm2E,eAEA3tF,MAAAtkC,KAAA0xH,eAAAl6E,KAAArG,SAIA+gF,oBAAA,CAEA,GAAAz2E,eAAAjE,KAAAiE,aAEAnX,OAAAtkC,KACA0xH,eAAAj2E,cAAA,IACAi2E,eAAAj2E,cAAA,IACAi2E,eAAAj2E,cAAA,KAWA,GANA02E,cAEA7tF,MAAAtkC,KAAA4xH,cAAAp6E,KAAA7Q,QAIAyrF,mBAAA;oBAEA,GAAAvkF,cAAA2J,KAAA3J,YAEAvJ,OAAAtkC,KACA4xH,cAAA/jF,aAAA,IACA+jF,cAAA/jF,aAAA,IACA+jF,cAAA/jF,aAAA,MAwEA,MARAxtB,MAAAA,QAEAA,KAAAA,KAAAgkB,SAAAA,SACAhkB,KAAAA,KAAAs9B,QAAAA,QACA9B,OAAAn8C,OAAA,IAAA2gB,KAAAA,KAAAw7B,OAAAA,QACA+B,IAAAl+C,OAAA,IAAA2gB,KAAAA,KAAAu9B,KAAAA,MACAv9B,KAAAA,KAAAikB,MAAAA,MAEAjkB,MAIAwJ,MAAA,WA0BA,OAAA,GAAA+xB,WAAA3S,KAAAnpC,OAIAmpC,KAAA,SAAA1jC,QAEA,GAAA3B,GAAAyyC,GAAA32B,EAAAsqB,GAAA//B,EAAA0qC,EAIA70C,MAAAukC,YACAvkC,KAAA+7C,UACA/7C,KAAAwkC,SACAxkC,KAAAg8C,mBACAh8C,KAAAyvC,gBACAzvC,KAAA0vC,gBACA1vC,KAAAi8C,eACAj8C,KAAAk8C,eACAl8C,KAAAm8C,iBACAn8C,KAAAo8C,YAAA,KACAp8C,KAAAq8C,eAAA,KAIAr8C,KAAApC,KAAA6H,OAAA7H,IAIA,IAAA2mC,UAAA9+B,OAAA8+B,QAEA,KAAAzgC,EAAA,EAAAyyC,GAAAhS,SAAA3kC,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAAukC,SAAArkC,KAAAqkC,SAAAzgC,GAAAimB,QAMA,IAAAgyB,QAAAt2C,OAAAs2C,MAEA,KAAAj4C,EAAA,EAAAyyC,GAAAwF,OAAAn8C,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAA+7C,OAAA77C,KAAA67C,OAAAj4C,GAAAimB,QAMA,IAAAya,OAAA/+B,OAAA++B,KAEA,KAAA1gC,EAAA,EAAAyyC,GAAA/R,MAAA5kC,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAAwkC,MAAAtkC,KAAAskC,MAAA1gC,GAAAimB,QAMA,KAAAjmB,EAAA,EAAAyyC,GAAA9wC,OAAAu2C,cAAAp8C,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAAk4C,eAAAv2C,OAAAu2C,cAAAl4C,EAQA,SANAqJ,KAAAnN,KAAAg8C,cAAAl4C,KAEA9D,KAAAg8C,cAAAl4C,OAIA8b,EAAA,EAAAsqB,GAAA8R,cAAAp8C,OAAAggB,EAAAsqB,GAAAtqB,IAAA,CAEA,GAAAk+B,KAAA9B,cAAAp8B,GAAA4yG,UAEA,KAAAroH,EAAA,EAAA0qC,GAAAiJ,IAAAl+C,OAAAuK,EAAA0qC,GAAA1qC,IAAA,CAEA,GAAAq8B,IAAAsX,IAAA3zC,EAEAqoH,SAAAtyH,KAAAsmC,GAAAzc,SAIA/pB,KAAAg8C,cAAAl4C,GAAA5D,KAAAsyH,UAQA,GAAA/iF,cAAAhqC,OAAAgqC,YAEA,KAAA3rC,EAAA,EAAAyyC,GAAA9G,aAAA7vC,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAA2uH,eAKA,IAJAA,YAAA70H,KAAA6xC,aAAA3rC,GAAAlG,SAIAuP,KAAAsiC,aAAA3rC,GAAAygC,SAIA,IAFAkuF,YAAAluF,YAEA3kB,EAAA,EAAAsqB,GAAAuF,aAAA3rC,GAAAygC,SAAA3kC,OAAAggB,EAAAsqB,GAAAtqB,IAEA6yG,YAAAluF,SAAArkC,KAAAuvC,aAAA3rC,GAAAygC,SAAA3kB,GAAAmK,QAQA,QAAA5c,KAAAsiC,aAAA3rC,GAAA+5C,QAIA,IAFA40E,YAAA50E,WAEAj+B,EAAA,EAAAsqB,GAAAuF,aAAA3rC,GAAA+5C,QAAAj+C,OAAAggB,EAAAsqB,GAAAtqB,IAEA6yG,YAAA50E,QAAA39C,KAAAuvC,aAAA3rC,GAAA+5C,QAAAj+B,GAAAmK,QAMA/pB,MAAAyvC,aAAAvvC,KAAAuyH,aAMA,GAAA/iF,cAAAjqC,OAAAiqC,YAEA,KAAA5rC,EAAA,EAAAyyC,GAAA7G,aAAA9vC,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAA4uH,eAIA,QAAAvlH,KAAAuiC,aAAA5rC,GAAA63C,cAIA,IAFA+2E,YAAA/2E,iBAEA/7B,EAAA,EAAAsqB,GAAAwF,aAAA5rC,GAAA63C,cAAA/7C,OAAAggB,EAAAsqB,GAAAtqB,IAAA,CAEA,GAAA+yG,iBAAAjjF,aAAA5rC,GAAA63C,cAAA/7B,GACAgzG,mBAEAA,kBAAAhoH,EAAA+nH,gBAAA/nH,EAAAmf,QACA6oG,iBAAA/nH,EAAA8nH,gBAAA9nH,EAAAkf,QACA6oG,iBAAA7wG,EAAA4wG,gBAAA5wG,EAAAgI,QAEA2oG,YAAA/2E,cAAAz7C,KAAA0yH,kBAQA,OAAAzlH,KAAAuiC,aAAA5rC,GAAA8rH,YAIA,IAFA8C,YAAA9C,eAEAhwG,EAAA,EAAAsqB,GAAAwF,aAAA5rC,GAAA8rH,YAAAhwH,OAAAggB,EAAAsqB,GAAAtqB,IAEA8yG,YAAA9C,YAAA1vH,KAAAwvC,aAAA5rC,GAAA8rH,YAAAhwG,GAAAmK,QAMA/pB,MAAA0vC,aAAAxvC,KAAAwyH,aAMA,GAAAz2E,aAAAx2C,OAAAw2C,WAEA,KAAAn4C,EAAA,EAAAyyC,GAAA0F,YAAAr8C,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAAi8C,YAAA/7C,KAAA+7C,YAAAn4C,GAAAimB,QAMA,IAAAmyB,aAAAz2C,OAAAy2C,WAEA,KAAAp4C,EAAA,EAAAyyC,GAAA2F,YAAAt8C,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAAk8C,YAAAh8C,KAAAg8C,YAAAp4C,GAAAimB,QAMA,IAAAoyB,eAAA12C,OAAA02C,aAEA,KAAAr4C,EAAA,EAAAyyC,GAAA4F,cAAAv8C,OAAAkE,EAAAyyC,GAAAzyC,IAEA9D,KAAAm8C,cAAAj8C,KAAAi8C,cAAAr4C,GAMA,IAAAs4C,aAAA32C,OAAA22C,WAEA,QAAAA,cAEAp8C,KAAAo8C,YAAAA,YAAAryB,QAMA,IAAAsyB,gBAAA52C,OAAA42C,cAkBA,OAhBA,QAAAA,iBAEAr8C,KAAAq8C,eAAAA,eAAAtyB,SAMA/pB,KAAAs8C,mBAAA72C,OAAA62C,mBACAt8C,KAAAu8C,mBAAA92C,OAAA82C,mBACAv8C,KAAAw8C,cAAA/2C,OAAA+2C,cACAx8C,KAAAy8C,kBAAAh3C,OAAAg3C,kBACAz8C,KAAA08C,iBAAAj3C,OAAAi3C,iBACA18C,KAAA28C,wBAAAl3C,OAAAk3C,wBACA38C,KAAA48C,iBAAAn3C,OAAAm3C,iBAEA58C,MAIAmkD,QAAA,WAEAnkD,KAAA7B,eAAAi9B,KAAA,eAmCAvxB,OAAA0xB,eAAAshB,gBAAArgD,UAAA,eAEAqU,IAAA,SAAA3B,QAEA,IAAAA,OAAAlP,KAAAi6B,aAMApwB,OAAAm3F,OAAAnkD,gBAAArgD,WAEAq2H,mBAAA,EAEAC,SAAA,SAAAj+G,OAEA,GAAAtY,MAAAoN,QAAAkL,OAEA,KAAA,IAAAmoC,WAAA,wDAIAh9C,MAAAm5C,UAAAhsC,KAAA0H,MAAAA,MAAAjV,OAAAI,KAAA88C,SAAA,EACA98C,KAAA6U,MAAAA,OAIAuqF,WAAA,SAAAlwF,OAIA,MAFAlP,MAAAk4C,QAAAhpC,MAEAlP,MAIAmpC,KAAA,SAAA1jC,QASA,MAPAzF,MAAA6U,MAAA,GAAApP,QAAAoP,MAAAi3E,YAAArmF,OAAAoP,OACA7U,KAAA88C,SAAAr3C,OAAAq3C,SACA98C,KAAAm5C,MAAA1zC,OAAA0zC,MACAn5C,KAAA+8C,WAAAt3C,OAAAs3C,WAEA/8C,KAAAk4C,QAAAzyC,OAAAyyC,QAEAl4C,MAIA+yH,OAAA,SAAAv0C,OAAAzmC,UAAA0mC,QAEAD,QAAAx+E,KAAA88C,SACA2hC,QAAA1mC,UAAA+E,QAEA,KAAA,GAAAh5C,GAAA,EAAA4f,EAAA1jB,KAAA88C,SAAAh5C,EAAA4f,EAAA5f,IAEA9D,KAAA6U,MAAA2pE,OAAA16E,GAAAi0C,UAAAljC,MAAA4pE,OAAA36E,EAIA,OAAA9D,OAIAgzH,UAAA,SAAAn+G,OAIA,MAFA7U,MAAA6U,MAAAhE,IAAAgE,OAEA7U,MAIAizH,gBAAA,SAAAl3E,QAIA,IAAA,GAFAlnC,OAAA7U,KAAA6U,MAAAsU,OAAA,EAEArlB,EAAA,EAAA4f,EAAAq4B,OAAAn8C,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA+iC,OAAAkV,OAAAj4C,OAEAqJ,KAAA05B,QAEA92B,QAAAH,KAAA,8DAAA9L,GACA+iC,MAAA,GAAA9C,QAIAlvB,MAAAsU,UAAA0d,MAAAjI,EACA/pB,MAAAsU,UAAA0d,MAAA7G,EACAnrB,MAAAsU,UAAA0d,MAAAh8B,EAIA,MAAA7K,OAIAkzH,iBAAA,SAAAt1E,SAIA,IAAA,GAFA/oC,OAAA7U,KAAA6U,MAAAsU,OAAA,EAEArlB,EAAA,EAAA4f,EAAAk6B,QAAAh+C,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAitB,OAAA6sB,QAAA95C,EAEA+Q,OAAAsU,UAAA4H,MAAAnmB,EACAiK,MAAAsU,UAAA4H,MAAAlmB,EACAgK,MAAAsU,UAAA4H,MAAAhP,EAIA,MAAA/hB,OAIAmzH,kBAAA,SAAAC,SAIA,IAAA,GAFAv+G,OAAA7U,KAAA6U,MAAAsU,OAAA,EAEArlB,EAAA,EAAA4f,EAAA0vG,QAAAxzH,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA67C,QAAAyzE,QAAAtvH,OAEAqJ,KAAAwyC,SAEA5vC,QAAAH,KAAA,iEAAA9L,GACA67C,OAAA,GAAA/kB,UAIA/lB,MAAAsU,UAAAw2B,OAAAnoC,EACA3C,MAAAsU,UAAAw2B,OAAA1lC,EAIA,MAAAja,OAIAqzH,kBAAA,SAAAD,SAIA,IAAA,GAFAv+G,OAAA7U,KAAA6U,MAAAsU,OAAA,EAEArlB,EAAA,EAAA4f,EAAA0vG,QAAAxzH,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA67C,QAAAyzE,QAAAtvH,OAEAqJ,KAAAwyC,SAEA5vC,QAAAH,KAAA,iEAAA9L,GACA67C,OAAA,GAAA7hB,UAIAjpB,MAAAsU,UAAAw2B,OAAAnoC,EACA3C,MAAAsU,UAAAw2B,OAAA1lC,EACApF,MAAAsU,UAAAw2B,OAAA/iB,EAIA,MAAA58B,OAIAszH,kBAAA,SAAAF,SAIA,IAAA,GAFAv+G,OAAA7U,KAAA6U,MAAAsU,OAAA,EAEArlB,EAAA,EAAA4f,EAAA0vG,QAAAxzH,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA67C,QAAAyzE,QAAAtvH,OAEAqJ,KAAAwyC,SAEA5vC,QAAAH,KAAA,iEAAA9L,GACA67C,OAAA,GAAAhjB,UAIA9nB,MAAAsU,UAAAw2B,OAAAnoC,EACA3C,MAAAsU,UAAAw2B,OAAA1lC,EACApF,MAAAsU,UAAAw2B,OAAA/iB,EACA/nB,MAAAsU,UAAAw2B,OAAA58B,EAIA,MAAA/iB,OAIA6Q,IAAA,SAAA3B,MAAAia,QAMA,WAJAhc,KAAAgc,SAAAA,OAAA,GAEAnpB,KAAA6U,MAAAhE,IAAA3B,MAAAia,QAEAnpB,MAIA0+E,KAAA,SAAA3tD,OAEA,MAAA/wB,MAAA6U,MAAAkc,MAAA/wB,KAAA88C,WAIAsmD,KAAA,SAAAryE,MAAAvZ,GAIA,MAFAxX,MAAA6U,MAAAkc,MAAA/wB,KAAA88C,UAAAtlC,EAEAxX,MAIA0kG,KAAA,SAAA3zE,OAEA,MAAA/wB,MAAA6U,MAAAkc,MAAA/wB,KAAA88C,SAAA,IAIAumD,KAAA,SAAAtyE,MAAA9W,GAIA,MAFAja,MAAA6U,MAAAkc,MAAA/wB,KAAA88C,SAAA,GAAA7iC,EAEAja,MAIAymG,KAAA,SAAA11E,OAEA,MAAA/wB,MAAA6U,MAAAkc,MAAA/wB,KAAA88C,SAAA,IAIAuoD,KAAA,SAAAt0E,MAAA6L,GAIA,MAFA58B,MAAA6U,MAAAkc,MAAA/wB,KAAA88C,SAAA,GAAAlgB,EAEA58B,MAIA0mG,KAAA,SAAA31E,OAEA,MAAA/wB,MAAA6U,MAAAkc,MAAA/wB,KAAA88C,SAAA,IAIAwoD,KAAA,SAAAv0E,MAAAhO,GAIA,MAFA/iB,MAAA6U,MAAAkc,MAAA/wB,KAAA88C,SAAA,GAAA/5B,EAEA/iB,MAIAuzH,MAAA,SAAAxiG,MAAAvZ,EAAAyC,GAOA,MALA8W,QAAA/wB,KAAA88C,SAEA98C,KAAA6U,MAAAkc,MAAA,GAAAvZ,EACAxX,KAAA6U,MAAAkc,MAAA,GAAA9W,EAEAja,MAIA2wG,OAAA,SAAA5/E,MAAAvZ,EAAAyC,EAAA2iB,GAQA,MANA7L,QAAA/wB,KAAA88C,SAEA98C,KAAA6U,MAAAkc,MAAA,GAAAvZ,EACAxX,KAAA6U,MAAAkc,MAAA,GAAA9W,EACAja,KAAA6U,MAAAkc,MAAA,GAAA6L,EAEA58B,MAIAwzH,QAAA,SAAAziG,MAAAvZ,EAAAyC,EAAA2iB,EAAA7Z,GASA,MAPAgO,QAAA/wB,KAAA88C,SAEA98C,KAAA6U,MAAAkc,MAAA,GAAAvZ,EACAxX,KAAA6U,MAAAkc,MAAA,GAAA9W,EACAja,KAAA6U,MAAAkc,MAAA,GAAA6L,EACA58B,KAAA6U,MAAAkc,MAAA,GAAAhO,EAEA/iB,MAIAyzH,SAAA,SAAAl/G,UAIA,MAFAvU,MAAAq4C,iBAAA9jC,SAEAvU,MAIA+pB,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAA6U,MAAA7U,KAAA88C,UAAA3T,KAAAnpC,SAcAi9C,oBAAAzgD,UAAAqN,OAAA88F,OAAA9pD,gBAAArgD,WACAygD,oBAAAzgD,UAAAsvF,YAAA7uC,oBASAC,qBAAA1gD,UAAAqN,OAAA88F,OAAA9pD,gBAAArgD,WACA0gD,qBAAA1gD,UAAAsvF,YAAA5uC,qBASAC,4BAAA3gD,UAAAqN,OAAA88F,OAAA9pD,gBAAArgD,WACA2gD,4BAAA3gD,UAAAsvF,YAAA3uC,4BASAE,qBAAA7gD,UAAAqN,OAAA88F,OAAA9pD,gBAAArgD,WACA6gD,qBAAA7gD,UAAAsvF,YAAAzuC,qBASAC,sBAAA9gD,UAAAqN,OAAA88F,OAAA9pD,gBAAArgD,WACA8gD,sBAAA9gD,UAAAsvF,YAAAxuC,sBASAC,qBAAA/gD,UAAAqN,OAAA88F,OAAA9pD,gBAAArgD,WACA+gD,qBAAA/gD,UAAAsvF,YAAAvuC,qBASAC,sBAAAhhD,UAAAqN,OAAA88F,OAAA9pD,gBAAArgD,WACAghD,sBAAAhhD,UAAAsvF,YAAAtuC,sBASAC,uBAAAjhD,UAAAqN,OAAA88F,OAAA9pD,gBAAArgD,WACAihD,uBAAAjhD,UAAAsvF,YAAAruC,uBASAC,uBAAAlhD,UAAAqN,OAAA88F,OAAA9pD,gBAAArgD,WACAkhD,uBAAAlhD,UAAAsvF,YAAApuC,uBAqCA7zC,OAAAm3F,OAAArjD,eAAAnhD,WAEAk3H,cAAA,SAAArhF,UAQA,IAAA,GANAyC,OACAF,UACAI,kBAAA7nC,GAEAq3B,MAAA6N,SAAA7N,MAEA1gC,EAAA,EAAAA,EAAA0gC,MAAA5kC,OAAAkE,IAAA,CAEA,GAAA4zC,MAAAlT,MAAA1gC,EAIA4zC,MAAA1C,gBAAAA,gBAEAA,cAAA0C,KAAA1C,kBAEA7nC,KAAA2nC,QAEAA,MAAAqE,MAAA,EAAAr1C,EAAAgxC,MAAAqJ,MACAvJ,OAAA10C,KAAA40C,QAIAA,OACAqJ,MAAA,EAAAr6C,EACAkxC,cAAAA,oBAOA7nC,KAAA2nC,QAEAA,MAAAqE,MAAA,EAAAr1C,EAAAgxC,MAAAqJ,MACAvJ,OAAA10C,KAAA40C,QAIA90C,KAAA40C,OAAAA,QAIA++E,aAAA,SAAAthF,UAEA,GAYAuhF,sBAZApvF,MAAA6N,SAAA7N,MACAD,SAAA8N,SAAA9N,SACAyX,cAAA3J,SAAA2J,cAEAk2E,gBAAAl2E,cAAA,IAAAA,cAAA,GAAAp8C,OAAA,EACAi0H,iBAAA73E,cAAA,IAAAA,cAAA,GAAAp8C,OAAA,EAIA6vC,aAAA4C,SAAA5C,aACAqkF,mBAAArkF,aAAA7vC,MAIA,IAAAk0H,mBAAA,EAAA,CAEAF,uBAEA,KAAA,GAAA9vH,GAAA,EAAAA,EAAAgwH,mBAAAhwH,IAEA8vH,qBAAA9vH,KAIA9D,MAAAyvC,aAAA1E,SAAA6oF,qBAIA,GAGAG,oBAHArkF,aAAA2C,SAAA3C,aACAskF,mBAAAtkF,aAAA9vC,MAIA,IAAAo0H,mBAAA,EAAA,CAEAD,qBAEA,KAAA,GAAAjwH,GAAA,EAAAA,EAAAkwH,mBAAAlwH,IAEAiwH,mBAAAjwH,KAIA9D,MAAAyvC,aAAA4B,OAAA0iF,mBAcA,IAAA,GARA73E,aAAA7J,SAAA6J,YACAD,YAAA5J,SAAA4J,YAEAg4E,eAAA/3E,YAAAt8C,SAAA2kC,SAAA3kC,OACAs0H,eAAAj4E,YAAAr8C,SAAA2kC,SAAA3kC,OAIAkE,EAAA,EAAAA,EAAA0gC,MAAA5kC,OAAAkE,IAAA,CAEA,GAAA4zC,MAAAlT,MAAA1gC,EAEA9D,MAAAukC,SAAArkC,KAAAqkC,SAAAmT,KAAA9sC,GAAA25B,SAAAmT,KAAA7sC,GAAA05B,SAAAmT,KAAA31B,GAEA,IAAA45B,eAAAjE,KAAAiE,aAEA,IAAA,IAAAA,cAAA/7C,OAEAI,KAAA69C,QAAA39C,KAAAy7C,cAAA,GAAAA,cAAA,GAAAA,cAAA,QAEA,CAEA,GAAAtK,QAAAqG,KAAArG,MAEArxC,MAAA69C,QAAA39C,KAAAmxC,OAAAA,OAAAA,QAIA,GAAAtD,cAAA2J,KAAA3J,YAEA,IAAA,IAAAA,aAAAnuC,OAEAI,KAAA+7C,OAAA77C,KAAA6tC,aAAA,GAAAA,aAAA,GAAAA,aAAA,QAEA,CAEA,GAAAlH,OAAA6Q,KAAA7Q,KAEA7mC,MAAA+7C,OAAA77C,KAAA2mC,MAAAA,MAAAA,OAIA,IAAA,IAAAqrF,gBAAA,CAEA,GAAAiC,WAAAn4E,cAAA,GAAAl4C,OAEAqJ,KAAAgnH,UAEAn0H,KAAA89C,IAAA59C,KAAAi0H,UAAA,GAAAA,UAAA,GAAAA,UAAA,KAIApkH,QAAAH,KAAA,2DAAA9L,GAEA9D,KAAA89C,IAAA59C,KAAA,GAAA06B,SAAA,GAAAA,SAAA,GAAAA,WAMA,IAAA,IAAAi5F,iBAAA,CAEA,GAAAM,WAAAn4E,cAAA,GAAAl4C,OAEAqJ,KAAAgnH,UAEAn0H,KAAA+9C,KAAA79C,KAAAi0H,UAAA,GAAAA,UAAA,GAAAA,UAAA,KAIApkH,QAAAH,KAAA,4DAAA9L,GAEA9D,KAAA+9C,KAAA79C,KAAA,GAAA06B,SAAA,GAAAA,SAAA,GAAAA,WAQA,IAAA,GAAAhb,GAAA,EAAAA,EAAAk0G,mBAAAl0G,IAAA,CAEA,GAAA6yG,aAAAhjF,aAAA7vB,GAAA2kB,QAEAqvF,sBAAAh0G,GAAA1f,KAAAuyH,YAAA/6E,KAAA9sC,GAAA6nH,YAAA/6E,KAAA7sC,GAAA4nH,YAAA/6E,KAAA31B,IAIA,IAAA,GAAAnC,GAAA,EAAAA,EAAAo0G,mBAAAp0G,IAAA,CAEA,GAAA8yG,aAAAhjF,aAAA9vB,GAAA+7B,cAAA73C,EAEAiwH,oBAAAn0G,GAAA1f,KAAAwyH,YAAA9nH,EAAA8nH,YAAA7nH,EAAA6nH,YAAA3wG,GAMAkyG,gBAEAj0H,KAAAk8C,YAAAh8C,KAAAg8C,YAAAxE,KAAA9sC,GAAAsxC,YAAAxE,KAAA7sC,GAAAqxC,YAAAxE,KAAA31B,IAIAmyG,gBAEAl0H,KAAAi8C,YAAA/7C,KAAA+7C,YAAAvE,KAAA9sC,GAAAqxC,YAAAvE,KAAA7sC,GAAAoxC,YAAAvE,KAAA31B,IAcA,MARA/hB,MAAA0zH,cAAArhF,UAEAryC,KAAAu8C,mBAAAlK,SAAAkK,mBACAv8C,KAAAy8C,kBAAApK,SAAAoK,kBACAz8C,KAAA08C,iBAAArK,SAAAqK,iBACA18C,KAAAw8C,cAAAnK,SAAAmK,cACAx8C,KAAA48C,iBAAAvK,SAAAuK,iBAEA58C,QAsDAi+C,eAAAkvB,SAAA,MAEAtjE,OAAAm3F,OAAA/iD,eAAAzhD,UAAAm+B,gBAAAn+B,WAEAq2C,kBAAA,EAEAuhF,SAAA,WAEA,MAAAp0H,MAAA+wB,OAIAgvB,SAAA,SAAAhvB,OAEAx0B,MAAAoN,QAAAonB,OAEA/wB,KAAA+wB,MAAA,IAAAitB,SAAAjtB,OAAA,MAAAysB,sBAAAF,uBAAAvsB,MAAA,GAIA/wB,KAAA+wB,MAAAA,OAMAivB,aAAA,SAAApiD,KAAAm6C,WAEA,MAAAA,YAAAA,UAAA86E,mBAAA96E,WAAAA,UAAAuB,6BAUA,UAAA17C,MAEAmS,QAAAH,KAAA,+EACA5P,MAAA+/C,SAAAhI,aAMA/3C,KAAA2H,WAAA/J,MAAAm6C,UAEA/3C,OAnBA+P,QAAAH,KAAA,8EAEA5P,MAAAggD,aAAApiD,KAAA,GAAAi/C,iBAAA58C,UAAA,GAAAA,UAAA,OAqBA46F,aAAA,SAAAj9F,MAEA,MAAAoC,MAAA2H,WAAA/J,OAIAilD,gBAAA,SAAAjlD,MAIA,aAFAoC,MAAA2H,WAAA/J,MAEAoC,MAIA6/C,SAAA,SAAA1B,MAAAhF,MAAAnE,eAEAh1C,KAAA40C,OAAA10C,MAEAi+C,MAAAA,MACAhF,MAAAA,MACAnE,kBAAA7nC,KAAA6nC,cAAAA,cAAA,KAMAq/E,YAAA,WAEAr0H,KAAA40C,WAIA0/E,aAAA,SAAAn2E,MAAAhF,OAEAn5C,KAAAk+C,UAAAC,MAAAA,MACAn+C,KAAAk+C,UAAA/E,MAAAA,OAIAkyE,YAAA,SAAAn0E,QAEA,GAAAnM,UAAA/qC,KAAA2H,WAAAojC,aAEA59B,KAAA49B,WAEAmM,OAAAw5D,uBAAA3lE,UACAA,SAAAF,aAAA,EAIA,IAAAwG,QAAArxC,KAAA2H,WAAA0pC,MAEA,QAAAlkC,KAAAkkC,OAAA,EAEA,GAAAF,UAAA42B,gBAAA7wB,QAEAw5D,uBAAAr/D,QACAA,OAAAxG,aAAA,EAgBA,MAZA,QAAA7qC,KAAAo8C,aAEAp8C,KAAA0uH,qBAIA,OAAA1uH,KAAAq8C,gBAEAr8C,KAAAs8F,wBAIAt8F,MAIA4rH,QAAA,WAIA,GAAAxC,IAAA,GAAArrF,QAEA,OAAA,UAAA0qB,OAMA,MAJA2gE,IAAA1X,cAAAjpD,OAEAzoD,KAAAqrH,YAAAjC,IAEAppH,SAMA46F,QAAA,WAIA,GAAAwuB,IAAA,GAAArrF,QAEA,OAAA,UAAA0qB,OAMA,MAJA2gE,IAAAzX,cAAAlpD,OAEAzoD,KAAAqrH,YAAAjC,IAEAppH,SAMA6rH,QAAA,WAIA,GAAAzC,IAAA,GAAArrF,QAEA,OAAA,UAAA0qB,OAMA,MAJA2gE,IAAAxX,cAAAnpD,OAEAzoD,KAAAqrH,YAAAjC,IAEAppH,SAMA+8F,UAAA,WAIA,GAAAqsB,IAAA,GAAArrF,QAEA,OAAA,UAAAvmB,EAAAyC,EAAA2iB,GAMA,MAJAwsF,IAAAhyE,gBAAA5/B,EAAAyC,EAAA2iB,GAEA58B,KAAAqrH,YAAAjC,IAEAppH,SAMA8mC,MAAA,WAIA,GAAAsiF,IAAA,GAAArrF,QAEA,OAAA,UAAAvmB,EAAAyC,EAAA2iB,GAMA,MAJAwsF,IAAAtmE,UAAAtrC,EAAAyC,EAAA2iB,GAEA58B,KAAAqrH,YAAAjC,IAEAppH,SAMAq3C,OAAA,WAEA,GAAAptC,KAAA,GAAA8vC,SAEA,OAAA,UAAA4F,QAEA11C,IAAAotC,OAAAsI,QAEA11C,IAAA6gF,eAEA9qF,KAAAqrH,YAAAphH,IAAAitC,YAMAjG,OAAA,WAEAjxC,KAAA0uH,oBAEA,IAAAvlG,QAAAnpB,KAAAo8C,YAAA2pE,YAAA9hB,QAIA,OAFAjkG,MAAA+8F,UAAA5zE,OAAA3R,EAAA2R,OAAAlP,EAAAkP,OAAAyT,GAEAzT,QAIA+8B,cAAA,SAAAlU,QAIA,GAAAK,UAAAL,OAAAK,QAEA,IAAAL,OAAAsC,UAAAtC,OAAAqC,OAAA,CAEA,GAAAulD,WAAA,GAAAn8C,wBAAA,EAAApL,SAAA9N,SAAA3kC,OAAA,GACAm8C,OAAA,GAAA0B,wBAAA,EAAApL,SAAA0J,OAAAn8C,OAAA,EAKA,IAHAI,KAAAggD,aAAA,WAAA45C,UAAAy5B,kBAAAhhF,SAAA9N,WACAvkC,KAAAggD,aAAA,QAAAjE,OAAAk3E,gBAAA5gF,SAAA0J,SAEA1J,SAAA8J,eAAA9J,SAAA8J,cAAAv8C,SAAAyyC,SAAA9N,SAAA3kC,OAAA,CAEA,GAAAu8C,eAAA,GAAAsB,wBAAApL,SAAA8J,cAAAv8C,OAAA,EAEAI,MAAAggD,aAAA,eAAA7D,cAAA62E,UAAA3gF,SAAA8J,gBAIA,OAAA9J,SAAAgK,iBAEAr8C,KAAAq8C,eAAAhK,SAAAgK,eAAAtyB,SAIA,OAAAsoB,SAAA+J,cAEAp8C,KAAAo8C,YAAA/J,SAAA+J,YAAAryB,aAIAioB,QAAAoC,QAEA/B,UAAAA,SAAAU,YAEA/yC,KAAA2zH,aAAAthF,SAMA,OAAAryC,OAIA+pD,iBAAA,SAAA/X,QAEA,GAAAK,UAAAL,OAAAK,QAEA,IAAAL,OAAAoC,OAAA,CAEA,GAAAmgF,QAAAliF,SAAAmiF,gBASA,KAPA,IAAAniF,SAAAiK,qBAEAi4E,WAAApnH,GACAklC,SAAAiK,oBAAA,OAIAnvC,KAAAonH,OAEA,MAAAv0H,MAAA2zH,aAAAthF,SAIAkiF,QAAAh4E,mBAAAlK,SAAAkK,mBACAg4E,OAAA93E,kBAAApK,SAAAoK,kBACA83E,OAAA73E,iBAAArK,SAAAqK,iBACA63E,OAAA/3E,cAAAnK,SAAAmK,cACA+3E,OAAA33E,iBAAAvK,SAAAuK,iBAEAvK,SAAAkK,oBAAA,EACAlK,SAAAoK,mBAAA,EACApK,SAAAqK,kBAAA,EACArK,SAAAmK,eAAA,EACAnK,SAAAuK,kBAAA,EAEAvK,SAAAkiF,OAIA,GAAAx8E,UAsFA,QApFA,IAAA1F,SAAAkK,qBAEAxE,UAAA/3C,KAAA2H,WAAAojC,aAEA59B,KAAA4qC,YAEAA,UAAAs7E,kBAAAhhF,SAAA9N,UACAwT,UAAAlN,aAAA,GAIAwH,SAAAkK,oBAAA,IAIA,IAAAlK,SAAAoK,oBAEA1E,UAAA/3C,KAAA2H,WAAA0pC,WAEAlkC,KAAA4qC,YAEAA,UAAAs7E,kBAAAhhF,SAAAwL,SACA9F,UAAAlN,aAAA,GAIAwH,SAAAoK,mBAAA,IAIA,IAAApK,SAAAqK,mBAEA3E,UAAA/3C,KAAA2H,WAAAk/B,UAEA15B,KAAA4qC,YAEAA,UAAAk7E,gBAAA5gF,SAAA0J,QACAhE,UAAAlN,aAAA,GAIAwH,SAAAqK,kBAAA,GAIArK,SAAAmK,gBAEAzE,UAAA/3C,KAAA2H,WAAA6+B,OAEAr5B,KAAA4qC,YAEAA,UAAAo7E,kBAAA9gF,SAAAyL,KACA/F,UAAAlN,aAAA,GAIAwH,SAAAmK,eAAA,GAIAnK,SAAAsK,0BAEA5E,UAAA/3C,KAAA2H,WAAA8sH,iBAEAtnH,KAAA4qC,YAEAA,UAAAi7E,UAAA3gF,SAAA8J,eACApE,UAAAlN,aAAA,GAIAwH,SAAAsK,yBAAA,GAIAtK,SAAAuK,mBAEAvK,SAAAqhF,cAAA1hF,OAAAK,UACAryC,KAAA40C,OAAAvC,SAAAuC,OAEAvC,SAAAuK,kBAAA,GAIA58C,MAIA2zH,aAAA,SAAAthF,UAIA,MAFAA,UAAAmiF,kBAAA,GAAA72E,iBAAAg2E,aAAAthF,UAEAryC,KAAA00H,mBAAAriF,SAAAmiF,mBAIAE,mBAAA,SAAAriF,UAEA,GAAAunD,WAAA,GAAA96D,cAAA,EAAAuT,SAAA9N,SAAA3kC,OAGA,IAFAI,KAAAggD,aAAA,WAAA,GAAAnD,iBAAA+8C,UAAA,GAAAy5B,kBAAAhhF,SAAA9N,WAEA8N,SAAAwL,QAAAj+C,OAAA,EAAA,CAEA,GAAAi+C,SAAA,GAAA/e,cAAA,EAAAuT,SAAAwL,QAAAj+C,OACAI,MAAAggD,aAAA,SAAA,GAAAnD,iBAAAgB,QAAA,GAAAw1E,kBAAAhhF,SAAAwL,UAIA,GAAAxL,SAAA0J,OAAAn8C,OAAA,EAAA,CAEA,GAAAm8C,QAAA,GAAAjd,cAAA,EAAAuT,SAAA0J,OAAAn8C,OACAI,MAAAggD,aAAA,QAAA,GAAAnD,iBAAAd,OAAA,GAAAk3E,gBAAA5gF,SAAA0J,SAIA,GAAA1J,SAAAyL,IAAAl+C,OAAA,EAAA,CAEA,GAAAk+C,KAAA,GAAAhf,cAAA,EAAAuT,SAAAyL,IAAAl+C,OACAI,MAAAggD,aAAA,KAAA,GAAAnD,iBAAAiB,IAAA,GAAAq1E,kBAAA9gF,SAAAyL,MAIA,GAAAzL,SAAA0L,KAAAn+C,OAAA,EAAA,CAEA,GAAAm+C,MAAA,GAAAjf,cAAA,EAAAuT,SAAA0L,KAAAn+C,OACAI,MAAAggD,aAAA,MAAA,GAAAnD,iBAAAkB,KAAA,GAAAo1E,kBAAA9gF,SAAA0L,OAIA,GAAA1L,SAAAuL,QAAAh+C,OAAA,EAAA,CAEA,GAAA+0H,WAAA32E,SAAA3L,SAAAuL,SAAA,MAAAnF,YAAAhU,YACAmZ,QAAA,GAAA+2E,WAAA,EAAAtiF,SAAAuL,QAAAh+C,OACAI,MAAA+/C,SAAA,GAAAlD,iBAAAe,QAAA,GAAAs1E,iBAAA7gF,SAAAuL,UAMA59C,KAAA40C,OAAAvC,SAAAuC,MAIA,KAAA,GAAAh3C,QAAAy0C,UAAA5C,aAAA,CAKA,IAAA,GAHA56B,UACA46B,aAAA4C,SAAA5C,aAAA7xC,MAEAkG,EAAA,EAAA4f,EAAA+rB,aAAA7vC,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA2uH,aAAAhjF,aAAA3rC,GAEAi0C,UAAA,GAAA0F,wBAAA,EAAAg1E,YAAA7yH,OAAA,EAEAiV,OAAA3U,KAAA63C,UAAAs7E,kBAAAZ,cAIAzyH,KAAA8yC,gBAAAl1C,MAAAiX,MAMA,GAAAw9B,SAAA6J,YAAAt8C,OAAA,EAAA,CAEA,GAAAs8C,aAAA,GAAAuB,wBAAA,EAAApL,SAAA6J,YAAAt8C,OAAA,EACAI,MAAAggD,aAAA,YAAA9D,YAAAo3E,kBAAAjhF,SAAA6J,cAIA,GAAA7J,SAAA4J,YAAAr8C,OAAA,EAAA,CAEA,GAAAq8C,aAAA,GAAAwB,wBAAA,EAAApL,SAAA4J,YAAAr8C,OAAA,EACAI,MAAAggD,aAAA,aAAA/D,YAAAq3E,kBAAAjhF,SAAA4J,cAkBA,MAZA,QAAA5J,SAAAgK,iBAEAr8C,KAAAq8C,eAAAhK,SAAAgK,eAAAtyB,SAIA,OAAAsoB,SAAA+J,cAEAp8C,KAAAo8C,YAAA/J,SAAA+J,YAAAryB,SAIA/pB,MAIA0uH,mBAAA,WAEA,OAAA1uH,KAAAo8C,cAEAp8C,KAAAo8C,YAAA,GAAArL,MAIA,IAAAhG,UAAA/qC,KAAA2H,WAAAojC,aAEA59B,KAAA49B,SAEA/qC,KAAAo8C,YAAAsrE,uBAAA38E,UAIA/qC,KAAAo8C,YAAAupE,aAIA74G,MAAA9M,KAAAo8C,YAAA5sC,IAAAgI,IAAA1K,MAAA9M,KAAAo8C,YAAA5sC,IAAAyK,IAAAnN,MAAA9M,KAAAo8C,YAAA5sC,IAAAotB,KAEA7sB,QAAAiuB,MAAA,oIAAAh+B,OAMAs8F,sBAAA,WAEA,GAAAD,KAAA,GAAAtrD,MACA4O,OAAA,GAAA7hB,QAEA,OAAA,YAEA,OAAA99B,KAAAq8C,iBAEAr8C,KAAAq8C,eAAA,GAAArL,QAIA,IAAAjG,UAAA/qC,KAAA2H,WAAAojC,QAEA,IAAAA,SAAA,CAEA,GAAAkG,QAAAjxC,KAAAq8C,eAAApL,MAEAorD,KAAAqrB,uBAAA38E,UACAsxD,IAAA0pB,UAAA90E,OAOA,KAAA,GAFAi3E,aAAA,EAEApkH,EAAA,EAAAyyC,GAAAxL,SAAAoO,MAAAr1C,EAAAyyC,GAAAzyC,IAEA67C,OAAAnoC,EAAAuzB,SAAA2zC,KAAA56E,GACA67C,OAAA1lC,EAAA8wB,SAAA25D,KAAA5gG,GACA67C,OAAA/iB,EAAAmO,SAAA07D,KAAA3iG,GACAokH,YAAAt5G,KAAAsF,IAAAg0G,YAAAj3E,OAAAozD,kBAAA1kD,QAIA3/C,MAAAq8C,eAAAnL,OAAAtiC,KAAA8kE,KAAAw0C,aAEAp7G,MAAA9M,KAAAq8C,eAAAnL,SAEAnhC,QAAAiuB,MAAA,+HAAAh+B,WAUA6nF,mBAAA,aAMA7G,qBAAA,WAEA,GAAAjwD,OAAA/wB,KAAA+wB,MACAppB,WAAA3H,KAAA2H,WACAitC,OAAA50C,KAAA40C,MAEA,IAAAjtC,WAAAojC,SAAA,CAEA,GAAA6uD,WAAAjyF,WAAAojC,SAAAl2B,KAEA,QAAA1H,KAAAxF,WAAA0pC,OAEArxC,KAAAggD,aAAA,SAAA,GAAAnD,iBAAA,GAAA/d,cAAA86D,UAAAh6F,QAAA,QAQA,KAAA,GAFAiV,OAAAlN,WAAA0pC,OAAAx8B,MAEA/Q,EAAA,EAAAyyC,GAAA1hC,MAAAjV,OAAAkE,EAAAyyC,GAAAzyC,IAEA+Q,MAAA/Q,GAAA,CAMA,IAEAorH,IAAAC,GAAAC,GAFAvxE,QAAAl2C,WAAA0pC,OAAAx8B,MAGA+/G,GAAA,GAAA92F,SAAA+2F,GAAA,GAAA/2F,SAAAg3F,GAAA,GAAAh3F,SACAixF,GAAA,GAAAjxF,SAAAkxF,GAAA,GAAAlxF,QAIA,IAAA/M,MAAA,CAEA,GAAA6sB,SAAA7sB,MAAAlc,KAEA,KAAA+/B,OAAAh1C,QAEAI,KAAA6/C,SAAA,EAAAjC,QAAAh+C,OAIA,KAAA,GAAAggB,GAAA,EAAAsqB,GAAA0K,OAAAh1C,OAAAggB,EAAAsqB,KAAAtqB,EAOA,IAAA,GALAk1B,OAAAF,OAAAh1B,GAEAu+B,MAAArJ,MAAAqJ,MACAhF,MAAArE,MAAAqE,MAEAr1C,EAAAq6C,MAAA5H,GAAA4H,MAAAhF,MAAAr1C,EAAAyyC,GAAAzyC,GAAA,EAEAorH,GAAA,EAAAtxE,QAAA95C,EAAA,GACAqrH,GAAA,EAAAvxE,QAAA95C,EAAA,GACAsrH,GAAA,EAAAxxE,QAAA95C,EAAA,GAEA8wH,GAAA5uD,UAAA4zB,UAAAs1B,IACA2F,GAAA7uD,UAAA4zB,UAAAu1B,IACA2F,GAAA9uD,UAAA4zB,UAAAw1B,IAEAL,GAAA5vC,WAAA21C,GAAAD,IACA7F,GAAA7vC,WAAAy1C,GAAAC,IACA9F,GAAAxkB,MAAAykB,IAEAnxE,QAAAqxE,KAAAH,GAAAv3G,EACAqmC,QAAAqxE,GAAA,IAAAH,GAAA90G,EACA4jC,QAAAqxE,GAAA,IAAAH,GAAAnyF,EAEAihB,QAAAsxE,KAAAJ,GAAAv3G,EACAqmC,QAAAsxE,GAAA,IAAAJ,GAAA90G,EACA4jC,QAAAsxE,GAAA,IAAAJ,GAAAnyF,EAEAihB,QAAAuxE,KAAAL,GAAAv3G,EACAqmC,QAAAuxE,GAAA,IAAAL,GAAA90G,EACA4jC,QAAAuxE,GAAA,IAAAL,GAAAnyF,MAUA,KAAA,GAAA94B,GAAA,EAAAyyC,GAAAqjD,UAAAh6F,OAAAkE,EAAAyyC,GAAAzyC,GAAA,EAEA8wH,GAAA5uD,UAAA4zB,UAAA91F,GACA+wH,GAAA7uD,UAAA4zB,UAAA91F,EAAA,GACAgxH,GAAA9uD,UAAA4zB,UAAA91F,EAAA,GAEAirH,GAAA5vC,WAAA21C,GAAAD,IACA7F,GAAA7vC,WAAAy1C,GAAAC,IACA9F,GAAAxkB,MAAAykB,IAEAnxE,QAAA/5C,GAAAirH,GAAAv3G,EACAqmC,QAAA/5C,EAAA,GAAAirH,GAAA90G,EACA4jC,QAAA/5C,EAAA,GAAAirH,GAAAnyF,EAEAihB,QAAA/5C,EAAA,GAAAirH,GAAAv3G,EACAqmC,QAAA/5C,EAAA,GAAAirH,GAAA90G,EACA4jC,QAAA/5C,EAAA,GAAAirH,GAAAnyF,EAEAihB,QAAA/5C,EAAA,GAAAirH,GAAAv3G,EACAqmC,QAAA/5C,EAAA,GAAAirH,GAAA90G,EACA4jC,QAAA/5C,EAAA,GAAAirH,GAAAnyF,CAMA58B,MAAAihF,mBAEAt5E,WAAA0pC,OAAAxG,aAAA,IAMAizE,MAAA,SAAAzrE,SAAAlpB,QAEA,IAAAkpB,WAAAA,SAAAQ,iBAGA,WADA9iC,SAAAiuB,MAAA,kFAAAqU,cAKAllC,KAAAgc,SAAAA,OAAA,EAEA,IAAAxhB,YAAA3H,KAAA2H,UAEA,KAAA,GAAAyI,OAAAzI,YAEA,OAAAwF,KAAAklC,SAAA1qC,WAAAyI,KAUA,IAAA,GARA2kH,YAAAptH,WAAAyI,KACA4kH,gBAAAD,WAAAlgH,MAEAogH,WAAA5iF,SAAA1qC,WAAAyI,KACA8kH,gBAAAD,WAAApgH,MAEAsgH,cAAAF,WAAAn4E,SAEAh5C,EAAA,EAAA8b,EAAAu1G,cAAAhsG,OAAArlB,EAAAoxH,gBAAAt1H,OAAAkE,IAAA8b,IAEAo1G,gBAAAp1G,GAAAs1G,gBAAApxH,EAMA,OAAA9D,OAIAihF,iBAAA,WAEA,GAAAthC,QAAA,GAAA7hB,QAEA,OAAA,YAIA,IAAA,GAFA+f,SAAA79C,KAAA2H,WAAA0pC,OAEAvtC,EAAA,EAAAyyC,GAAAsH,QAAA1E,MAAAr1C,EAAAyyC,GAAAzyC,IAEA67C,OAAAnoC,EAAAqmC,QAAA6gC,KAAA56E,GACA67C,OAAA1lC,EAAA4jC,QAAA6mD,KAAA5gG,GACA67C,OAAA/iB,EAAAihB,QAAA4oD,KAAA3iG,GAEA67C,OAAA8J,YAEA5L,QAAA8yD,OAAA7sG,EAAA67C,OAAAnoC,EAAAmoC,OAAA1lC,EAAA0lC,OAAA/iB,OAQAw4F,aAAA,WAEA,GAAA,OAAAp1H,KAAA+wB,MAGA,MADAhhB,SAAAH,KAAA,yEACA5P,IAIA,IAAA0nF,WAAA,GAAAzpC,gBAEAL,QAAA59C,KAAA+wB,MAAAlc,MACAlN,WAAA3H,KAAA2H,UAEA,KAAA,GAAA/J,QAAA+J,YAAA,CAWA,IAAA,GATAowC,WAAApwC,WAAA/J,MAEAiX,MAAAkjC,UAAAljC,MACAioC,SAAA/E,UAAA+E,SAEAxtC,OAAA,GAAAuF,OAAAi3E,YAAAluC,QAAAh+C,OAAAk9C,UAEA/rB,MAAA,EAAA0tD,OAAA,EAEA36E,EAAA,EAAA4f,EAAAk6B,QAAAh+C,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEAitB,MAAA6sB,QAAA95C,GAAAg5C,QAEA,KAAA,GAAAl9B,GAAA,EAAAA,EAAAk9B,SAAAl9B,IAEAtQ,OAAAmvE,UAAA5pE,MAAAkc,SAMA22D,UAAA1nC,aAAApiD,KAAA,GAAAi/C,iBAAAvtC,OAAAwtC,WAIA,MAAA4qC,YAIAt4D,OAAA,WAEA,GAAA7O,OACAskF,UACA5qE,QAAA,IACAmB,KAAA,iBACA0pE,UAAA,yBAUA,IAJAvkF,KAAAkb,KAAAz7B,KAAAy7B,KACAlb,KAAA6a,KAAAp7B,KAAAo7B,KACA,KAAAp7B,KAAApC,OAAA2iB,KAAA3iB,KAAAoC,KAAApC,UAEAuP,KAAAnN,KAAAkvC,WAAA,CAEA,GAAAA,YAAAlvC,KAAAkvC,UAEA,KAAA,GAAA9+B,OAAA8+B,gBAEA/hC,KAAA+hC,WAAA9+B,OAAAmQ,KAAAnQ,KAAA8+B,WAAA9+B,KAIA,OAAAmQ,MAIAA,KAAAA,MAAA5Y,cAEA,IAAAopB,OAAA/wB,KAAA+wB,KAEA,IAAA,OAAAA,MAAA,CAEA,GAAAlc,OAAAtY,MAAAC,UAAA6T,MAAAzJ,KAAAmqB,MAAAlc,MAEA0L,MAAAA,KAAAwQ,OACAqK,KAAArK,MAAAlc,MAAAi3E,YAAAluF,KACAiX,MAAAA,OAKA,GAAAlN,YAAA3H,KAAA2H,UAEA,KAAA,GAAAyI,OAAAzI,YAAA,CAEA,GAAAowC,WAAApwC,WAAAyI,KAEAyE,MAAAtY,MAAAC,UAAA6T,MAAAzJ,KAAAmxC,UAAAljC,MAEA0L,MAAAA,KAAA5Y,WAAAyI,MACA0sC,SAAA/E,UAAA+E,SACA1hB,KAAA2c,UAAAljC,MAAAi3E,YAAAluF,KACAiX,MAAAA,MACAkoC,WAAAhF,UAAAgF,YAKA,GAAAnI,QAAA50C,KAAA40C,MAEAA,QAAAh1C,OAAA,IAEA2gB,KAAAA,KAAAq0B,OAAAiyE,KAAAE,MAAAF,KAAAC,UAAAlyE,SAIA,IAAAyH,gBAAAr8C,KAAAq8C,cAWA,OATA,QAAAA,iBAEA97B,KAAAA,KAAA87B,gBACApL,OAAAoL,eAAApL,OAAA1lB,UACA2lB,OAAAmL,eAAAnL,SAKA3wB,MAIAwJ,MAAA,WA0BA,OAAA,GAAAk0B,iBAAA9U,KAAAnpC,OAIAmpC,KAAA,SAAA1jC,QAEA,GAAA7H,MAAAkG,EAAA4f,CAIA1jB,MAAA+wB,MAAA,KACA/wB,KAAA2H,cACA3H,KAAA8yC,mBACA9yC,KAAA40C,UACA50C,KAAAo8C,YAAA,KACAp8C,KAAAq8C,eAAA,KAIAr8C,KAAApC,KAAA6H,OAAA7H,IAIA,IAAAmzB,OAAAtrB,OAAAsrB,KAEA,QAAAA,OAEA/wB,KAAA+/C,SAAAhvB,MAAAhH,QAMA,IAAApiB,YAAAlC,OAAAkC,UAEA,KAAA/J,OAAA+J,YAAA,CAEA,GAAAowC,WAAApwC,WAAA/J,KACAoC,MAAAggD,aAAApiD,KAAAm6C,UAAAhuB,SAMA,GAAA+oB,iBAAArtC,OAAAqtC,eAEA,KAAAl1C,OAAAk1C,iBAAA,CAEA,GAAAj+B,UACAwgH,eAAAviF,gBAAAl1C,KAEA,KAAAkG,EAAA,EAAA4f,EAAA2xG,eAAAz1H,OAAAkE,EAAA4f,EAAA5f,IAEA+Q,MAAA3U,KAAAm1H,eAAAvxH,GAAAimB,QAIA/pB,MAAA8yC,gBAAAl1C,MAAAiX,MAMA,GAAA+/B,QAAAnvC,OAAAmvC,MAEA,KAAA9wC,EAAA,EAAA4f,EAAAkxB,OAAAh1C,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAgxC,OAAAF,OAAA9wC,EACA9D,MAAA6/C,SAAA/K,MAAAqJ,MAAArJ,MAAAqE,MAAArE,MAAAE,eAMA,GAAAoH,aAAA32C,OAAA22C,WAEA,QAAAA,cAEAp8C,KAAAo8C,YAAAA,YAAAryB,QAMA,IAAAsyB,gBAAA52C,OAAA42C,cAaA,OAXA,QAAAA,iBAEAr8C,KAAAq8C,eAAAA,eAAAtyB,SAMA/pB,KAAAk+C,UAAAC,MAAA14C,OAAAy4C,UAAAC,MACAn+C,KAAAk+C,UAAA/E,MAAA1zC,OAAAy4C,UAAA/E,MAEAn5C,MAIAmkD,QAAA,WAEAnkD,KAAA7B,eAAAi9B,KAAA,eAiCAgjB,YAAA5hD,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACA4hD,YAAA5hD,UAAAsvF,YAAA1tC,YAiKAK,kBAAAjiD,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACAiiD,kBAAAjiD,UAAAsvF,YAAArtC,kBA2BAwB,cAAAzjD,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAyjD,cAAAzjD,UAAAsvF,YAAA7rC,cAwFAC,oBAAA1jD,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACA0jD,oBAAA1jD,UAAAsvF,YAAA5rC,oBA4EAK,kBAAA/jD,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACA+jD,kBAAA/jD,UAAAsvF,YAAAvrC,kBAEAA,kBAAA/jD,UAAA+2E,qBAAA,EAEAhzB,kBAAA/jD,UAAA2sC,KAAA,SAAA1jC,QA+BA,MA7BA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA6mC,MAAAsC,KAAA1jC,OAAAohC,OAEA7mC,KAAAwK,IAAA/E,OAAA+E,IAEAxK,KAAAwgD,SAAA/6C,OAAA+6C,SACAxgD,KAAAygD,kBAAAh7C,OAAAg7C,kBAEAzgD,KAAA0gD,MAAAj7C,OAAAi7C,MACA1gD,KAAA2gD,eAAAl7C,OAAAk7C,eAEA3gD,KAAA4gD,YAAAn7C,OAAAm7C,YAEA5gD,KAAAuwC,SAAA9qC,OAAA8qC,SAEAvwC,KAAA6gD,OAAAp7C,OAAAo7C,OACA7gD,KAAA8gD,QAAAr7C,OAAAq7C,QACA9gD,KAAAghD,aAAAv7C,OAAAu7C,aACAhhD,KAAAihD,gBAAAx7C,OAAAw7C,gBAEAjhD,KAAAqvC,UAAA5pC,OAAA4pC,UACArvC,KAAAsvC,mBAAA7pC,OAAA6pC,mBACAtvC,KAAAkhD,iBAAAz7C,OAAAy7C,iBACAlhD,KAAAmhD,kBAAA17C,OAAA07C,kBAEAnhD,KAAAwvC,SAAA/pC,OAAA+pC,SACAxvC,KAAAyvC,aAAAhqC,OAAAgqC,aAEAzvC,MAeA6J,OAAAm3F,OAAA5/C,IAAA5kD,WAEAqU,IAAA,SAAAwwC,OAAA90B,WAKA,MAHAvsB,MAAAqhD,OAAAlY,KAAAkY,QACArhD,KAAAusB,UAAA4c,KAAA5c,WAEAvsB,MAIA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAAovD,KAKA,MAHAv4F,MAAAqhD,OAAAlY,KAAAovD,IAAAl3C,QACArhD,KAAAusB,UAAA4c,KAAAovD,IAAAhsE,WAEAvsB,MAIAs1H,GAAA,SAAAphG,EAAAuoF,gBAIA,OAFAA,gBAAA,GAAA3+E,UAEAqL,KAAAnpC,KAAAusB,WAAAw7B,eAAA7zB,GAAA32B,IAAAyC,KAAAqhD,SAIAhK,OAAA,SAAA/X,GAIA,MAFAt/B,MAAAusB,UAAA4c,KAAA7J,GAAA2oB,IAAAjoD,KAAAqhD,QAAAoI,YAEAzpD,MAIAu1H,OAAA,WAEA,GAAA9mC,IAAA,GAAA3wD,QAEA,OAAA,UAAA5J,GAIA,MAFAl0B,MAAAqhD,OAAAlY,KAAAnpC,KAAAs1H,GAAAphG,EAAAu6D,KAEAzuF,SAMAw1H,oBAAA,SAAAjsE,MAAAkzD,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,QACAjZ,QAAAs6D,WAAA51B,MAAAvpD,KAAAqhD,OACA,IAAAo0E,mBAAA5wG,OAAAojE,IAAAjoF,KAAAusB,UAEA,OAAAkpG,mBAAA,EAEA5wG,OAAAskB,KAAAnpC,KAAAqhD,QAIAx8B,OAAAskB,KAAAnpC,KAAAusB,WAAAw7B,eAAA0tE,mBAAAl4H,IAAAyC,KAAAqhD,SAIAglE,gBAAA,SAAA98D,OAEA,MAAA36C,MAAA8kE,KAAA1zE,KAAA01H,kBAAAnsE,SAIAmsE,kBAAA,WAEA,GAAAjnC,IAAA,GAAA3wD,QAEA,OAAA,UAAAyrB,OAEA,GAAAksE,mBAAAhnC,GAAAtP,WAAA51B,MAAAvpD,KAAAqhD,QAAA4mC,IAAAjoF,KAAAusB,UAIA,OAAAkpG,mBAAA,EAEAz1H,KAAAqhD,OAAAgjD,kBAAA96C,QAIAklC,GAAAtlD,KAAAnpC,KAAAusB,WAAAw7B,eAAA0tE,mBAAAl4H,IAAAyC,KAAAqhD,QAEAotC,GAAA4V,kBAAA96C,YAMAosE,oBAAA,WAEA,GAAAC,WAAA,GAAA93F,SACA+3F,OAAA,GAAA/3F,SACAtrB,KAAA,GAAAsrB,QAEA,OAAA,UAAA0wD,GAAAC,GAAAqnC,mBAAAC,wBASAH,UAAAzsF,KAAAqlD,IAAAjxF,IAAAkxF,IAAA1mC,eAAA,IACA8tE,OAAA1sF,KAAAslD,IAAAxmC,IAAAumC,IAAA/kC,YACAj3C,KAAA22B,KAAAnpC,KAAAqhD,QAAA4G,IAAA2tE,UAEA,IAMAI,IAAA/tB,GAAAguB,QAAAC,OANAC,UAAA,GAAA3nC,GAAA4V,WAAA3V,IACA2nC,KAAAp2H,KAAAusB,UAAA07D,IAAA4tC,QACAQ,GAAA7jH,KAAAy1E,IAAAjoF,KAAAusB,WACA41E,IAAA3vF,KAAAy1E,IAAA4tC,QACA9zG,EAAAvP,KAAA0xF,WACAkN,IAAAxiG,KAAAc,IAAA,EAAA0mH,IAAAA,IAGA,IAAAhlB,IAAA,EAQA,GAJA4kB,GAAAI,IAAAj0B,GAAAk0B,GACApuB,GAAAmuB,IAAAC,GAAAl0B,GACA+zB,OAAAC,UAAA/kB,IAEA4kB,IAAA,EAEA,GAAA/tB,KAAAiuB,OAEA,GAAAjuB,IAAAiuB,OAAA,CAKA,GAAAI,QAAA,EAAAllB,GACA4kB,KAAAM,OACAruB,IAAAquB,OACAL,QAAAD,IAAAA,GAAAI,IAAAnuB,GAAA,EAAAouB,IAAApuB,IAAAmuB,IAAAJ,GAAA/tB,GAAA,EAAA9F,IAAApgF,MAMAkmF,IAAAkuB,UACAH,GAAApnH,KAAAsF,IAAA,IAAAkiH,IAAAnuB,GAAAouB,KACAJ,SAAAD,GAAAA,GAAA/tB,IAAAA,GAAA,EAAA9F,IAAApgF,MAQAkmF,KAAAkuB,UACAH,GAAApnH,KAAAsF,IAAA,IAAAkiH,IAAAnuB,GAAAouB,KACAJ,SAAAD,GAAAA,GAAA/tB,IAAAA,GAAA,EAAA9F,IAAApgF,MAMAkmF,MAAAiuB,QAIAF,GAAApnH,KAAAsF,IAAA,KAAAkiH,IAAAD,UAAAE,KACApuB,GAAA+tB,GAAA,GAAAG,UAAAvnH,KAAAY,IAAAZ,KAAAsF,KAAAiiH,WAAAh0B,IAAAg0B,WACAF,SAAAD,GAAAA,GAAA/tB,IAAAA,GAAA,EAAA9F,IAAApgF,GAEAkmF,IAAAiuB,QAIAF,GAAA,EACA/tB,GAAAr5F,KAAAY,IAAAZ,KAAAsF,KAAAiiH,WAAAh0B,IAAAg0B,WACAF,QAAAhuB,IAAAA,GAAA,EAAA9F,IAAApgF,IAMAi0G,GAAApnH,KAAAsF,IAAA,IAAAkiH,IAAAD,UAAAE,KACApuB,GAAA+tB,GAAA,EAAAG,UAAAvnH,KAAAY,IAAAZ,KAAAsF,KAAAiiH,WAAAh0B,IAAAg0B,WACAF,SAAAD,GAAAA,GAAA/tB,IAAAA,GAAA,EAAA9F,IAAApgF,OAUAkmF,IAAAmuB,IAAA,GAAAD,UAAAA,UACAH,GAAApnH,KAAAsF,IAAA,IAAAkiH,IAAAnuB,GAAAouB,KACAJ,SAAAD,GAAAA,GAAA/tB,IAAAA,GAAA,EAAA9F,IAAApgF,CAgBA,OAZA+zG,qBAEAA,mBAAA3sF,KAAAnpC,KAAAusB,WAAAw7B,eAAAiuE,IAAAz4H,IAAAyC,KAAAqhD,QAIA00E,wBAEAA,uBAAA5sF,KAAA0sF,QAAA9tE,eAAAkgD,IAAA1qG,IAAAq4H,WAIAK,YAMAM,gBAAA,WAEA,GAAA9nC,IAAA,GAAA3wD,QAEA,OAAA,UAAAgqF,OAAArL,gBAEAhuB,GAAAtP,WAAA2oC,OAAA72E,OAAAjxC,KAAAqhD,OACA,IAAAm1E,KAAA/nC,GAAAxG,IAAAjoF,KAAAusB,WACAm+F,GAAAj8B,GAAAxG,IAAAwG,IAAA+nC,IAAAA,IACAC,QAAA3O,OAAA52E,OAAA42E,OAAA52E,MAEA,IAAAw5E,GAAA+L,QAAA,MAAA,KAEA,IAAAC,KAAA9nH,KAAA8kE,KAAA+iD,QAAA/L,IAGAttB,GAAAo5B,IAAAE,IAGAr5B,GAAAm5B,IAAAE,GAGA,OAAAt5B,IAAA,GAAAC,GAAA,EAAA,KAKAD,GAAA,EAAAp9F,KAAAs1H,GAAAj4B,GAAAof,gBAGAz8G,KAAAs1H,GAAAl4B,GAAAqf,oBAMAmL,iBAAA,SAAAE,QAEA,MAAA9nH,MAAAqmH,gBAAAyB,OAAA72E,SAAA62E,OAAA52E,QAIAylF,gBAAA,SAAA1uD,OAEA,GAAA8gD,aAAA9gD,MAAA52B,OAAA42C,IAAAjoF,KAAAusB,UAEA,IAAA,IAAAw8F,YAGA,MAAA,KAAA9gD,MAAAo+C,gBAAArmH,KAAAqhD,QAEA,EAMA,IAIA,IAAAntB,KAAAl0B,KAAAqhD,OAAA4mC,IAAAhgB,MAAA52B,QAAA42B,MAAA32B,UAAAy3E,WAIA,OAAA70F,IAAA,EAAAA,EAAA,MAIA0iG,eAAA,SAAA3uD,MAAAw0C,gBAEA,GAAAvoF,GAAAl0B,KAAA22H,gBAAA1uD,MAEA,OAAA,QAAA/zC,EAEA,KAIAl0B,KAAAs1H,GAAAphG,EAAAuoF,iBAIAsL,gBAAA,SAAA9/C,OAIA,GAAA4uD,aAAA5uD,MAAAo+C,gBAAArmH,KAAAqhD,OAEA,OAAA,KAAAw1E,aAMA5uD,MAAA52B,OAAA42C,IAAAjoF,KAAAusB,WAEAsqG,YAAA,GAYAC,aAAA,SAAAz6B,IAAAogB,gBAEA,GAAAsa,MAAAC,KAAAC,MAAAC,MAAAC,MAAAC,MAEAC,QAAA,EAAAr3H,KAAAusB,UAAA/U,EACA8/G,QAAA,EAAAt3H,KAAAusB,UAAAtS,EACAs9G,QAAA,EAAAv3H,KAAAusB,UAAAqQ,EAEAykB,OAAArhD,KAAAqhD,MA0BA,OAxBAg2E,UAAA,GAEAN,MAAA16B,IAAA7sF,IAAAgI,EAAA6pC,OAAA7pC,GAAA6/G,QACAL,MAAA36B,IAAAnoF,IAAAsD,EAAA6pC,OAAA7pC,GAAA6/G,UAIAN,MAAA16B,IAAAnoF,IAAAsD,EAAA6pC,OAAA7pC,GAAA6/G,QACAL,MAAA36B,IAAA7sF,IAAAgI,EAAA6pC,OAAA7pC,GAAA6/G,SAIAC,SAAA,GAEAL,OAAA56B,IAAA7sF,IAAAyK,EAAAonC,OAAApnC,GAAAq9G,QACAJ,OAAA76B,IAAAnoF,IAAA+F,EAAAonC,OAAApnC,GAAAq9G,UAIAL,OAAA56B,IAAAnoF,IAAA+F,EAAAonC,OAAApnC,GAAAq9G,QACAJ,OAAA76B,IAAA7sF,IAAAyK,EAAAonC,OAAApnC,GAAAq9G,SAIAP,KAAAG,OAAAD,MAAAD,KAAA,OAKAC,MAAAF,MAAAA,OAAAA,QAAAA,KAAAE,QAEAC,MAAAF,MAAAA,OAAAA,QAAAA,KAAAE,OAEAK,SAAA,GAEAJ,OAAA96B,IAAA7sF,IAAAotB,EAAAykB,OAAAzkB,GAAA26F,QACAH,OAAA/6B,IAAAnoF,IAAA0oB,EAAAykB,OAAAzkB,GAAA26F,UAIAJ,OAAA96B,IAAAnoF,IAAA0oB,EAAAykB,OAAAzkB,GAAA26F,QACAH,OAAA/6B,IAAA7sF,IAAAotB,EAAAykB,OAAAzkB,GAAA26F,SAIAR,KAAAK,OAAAD,MAAAH,KAAA,OAEAG,MAAAJ,MAAAA,OAAAA,QAAAA,KAAAI,QAEAC,MAAAJ,MAAAA,OAAAA,QAAAA,KAAAI,OAIAJ,KAAA,EAAA,KAEAh3H,KAAAs1H,GAAAyB,MAAA,EAAAA,KAAAC,KAAAva,mBAIA0J,cAAA,WAEA,GAAA7mF,GAAA,GAAAxB,QAEA,OAAA,UAAAu+D,KAEA,MAAA,QAAAr8F,KAAA82H,aAAAz6B,IAAA/8D,OAMAk4F,kBAAA,WAGA,GAAAhlH,MAAA,GAAAsrB,SACAsgD,MAAA,GAAAtgD,SACAugD,MAAA,GAAAvgD,SACAuT,OAAA,GAAAvT,QAEA,OAAA,UAAAlzB,EAAAC,EAAAkX,EAAA01G,gBAAAhb,gBAIAr+B,MAAAe,WAAAt0E,EAAAD,GACAyzE,MAAAc,WAAAp9D,EAAAnX,GACAymC,OAAA+tC,aAAAhB,MAAAC,MAOA,IACA/0D,MADAouG,IAAA13H,KAAAusB,UAAA07D,IAAA52C,OAGA,IAAAqmF,IAAA,EAAA,CAEA,GAAAD,gBAAA,MAAA,KACAnuG,MAAA,MAEA,CAAA,KAAAouG,IAAA,GAOA,MAAA,KALApuG,OAAA,EACAouG,KAAAA,IAQAllH,KAAA2sE,WAAAn/E,KAAAqhD,OAAAz2C,EACA,IAAA+sH,QAAAruG,KAAAtpB,KAAAusB,UAAA07D,IAAA5J,MAAAe,aAAA5sE,KAAA6rE,OAGA,IAAAs5C,OAAA,EAEA,MAAA,KAIA,IAAAC,QAAAtuG,KAAAtpB,KAAAusB,UAAA07D,IAAA7J,MAAAmsB,MAAA/3F,MAGA,IAAAolH,OAAA,EAEA,MAAA,KAKA,IAAAD,OAAAC,OAAAF,IAEA,MAAA;iCAKA,IAAAG,MAAAvuG,KAAA9W,KAAAy1E,IAAA52C,OAGA,OAAAwmF,KAAA,EAEA,KAKA73H,KAAAs1H,GAAAuC,IAAAH,IAAAjb,oBAMAzzE,aAAA,SAAAigB,SAKA,MAHAjpD,MAAAqhD,OAAArY,aAAAigB,SACAjpD,KAAAusB,UAAA27B,mBAAAe,SAEAjpD,MAIAw7D,OAAA,SAAA+8B,KAEA,MAAAA,KAAAl3C,OAAAma,OAAAx7D,KAAAqhD,SAAAk3C,IAAAhsE,UAAAivC,OAAAx7D,KAAAusB,cAiBA1iB,OAAAm3F,OAAA1/C,MAAA9kD,WAEAqU,IAAA,SAAAstC,MAAAoD,KAKA,MAHAvhD,MAAAm+C,MAAAhV,KAAAgV,OACAn+C,KAAAuhD,IAAApY,KAAAoY,KAEAvhD,MAIA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAAuxD,MAKA,MAHA16F,MAAAm+C,MAAAhV,KAAAuxD,KAAAv8C,OACAn+C,KAAAuhD,IAAApY,KAAAuxD,KAAAn5C,KAEAvhD,MAIA+lH,UAAA,SAAAtJ,gBAGA,OADAA,gBAAA,GAAA3+E,UACA4lD,WAAA1jF,KAAAm+C,MAAAn+C,KAAAuhD,KAAAwG,eAAA,KAIA+0D,MAAA,SAAAL,gBAGA,OADAA,gBAAA,GAAA3+E,UACAqhD,WAAAn/E,KAAAuhD,IAAAvhD,KAAAm+C,QAIA25E,WAAA,WAEA,MAAA93H,MAAAm+C,MAAAkmD,kBAAArkG,KAAAuhD,MAIAmF,SAAA,WAEA,MAAA1mD,MAAAm+C,MAAAimD,WAAApkG,KAAAuhD,MAIA+zE,GAAA,SAAAphG,EAAAuoF,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,QAEA,OAAA99B,MAAA88G,MAAAj4F,QAAAkjC,eAAA7zB,GAAA32B,IAAAyC,KAAAm+C,QAIA45E,6BAAA,WAEA,GAAAC,QAAA,GAAAl6F,SACAm6F,SAAA,GAAAn6F,QAEA,OAAA,UAAAyrB,MAAA2uE,aAEAF,OAAA74C,WAAA51B,MAAAvpD,KAAAm+C,OACA85E,SAAA94C,WAAAn/E,KAAAuhD,IAAAvhD,KAAAm+C,MAEA,IAAAg6E,WAAAF,SAAAhwC,IAAAgwC,UACAG,gBAAAH,SAAAhwC,IAAA+vC,QAEA9jG,EAAAkkG,gBAAAD,SAQA,OANAD,eAEAhkG,EAAAwH,MAAA0qD,MAAAlyD,EAAA,EAAA,IAIAA,MAMAshG,oBAAA,SAAAjsE,MAAA2uE,YAAAzb,gBAEA,GAAAvoF,GAAAl0B,KAAA+3H,6BAAAxuE,MAAA2uE,aAEArzG,OAAA43F,gBAAA,GAAA3+E,QAEA,OAAA99B,MAAA88G,MAAAj4F,QAAAkjC,eAAA7zB,GAAA32B,IAAAyC,KAAAm+C,QAIAnV,aAAA,SAAAkO,QAKA,MAHAl3C,MAAAm+C,MAAAnV,aAAAkO,QACAl3C,KAAAuhD,IAAAvY,aAAAkO,QAEAl3C,MAIAw7D,OAAA,SAAAk/B,MAEA,MAAAA,MAAAv8C,MAAAqd,OAAAx7D,KAAAm+C,QAAAu8C,KAAAn5C,IAAAia,OAAAx7D,KAAAuhD,QAmBA13C,OAAAm3F,OAAAx/C,UAEAnQ,OAAA,WAEA,GAAAm9C,IAAA,GAAA1wD,QAEA,OAAA,UAAAlzB,EAAAC,EAAAkX,EAAA06F,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,QAEAjZ,QAAAs6D,WAAAp9D,EAAAlX,GACA2jF,GAAArP,WAAAv0E,EAAAC,GACAga,OAAA0lF,MAAA/b,GAEA,IAAA6pC,gBAAAxzG,OAAAq/E,UACA,OAAAm0B,gBAAA,EAEAxzG,OAAAkjC,eAAA,EAAAn5C,KAAA8kE,KAAA2kD,iBAIAxzG,OAAAhU,IAAA,EAAA,EAAA,OAQAynH,mBAAA,WAEA,GAAA9pC,IAAA,GAAA1wD,SACA2wD,GAAA,GAAA3wD,SACAyxD,GAAA,GAAAzxD,QAEA,OAAA,UAAAyrB,MAAA3+C,EAAAC,EAAAkX,EAAA06F,gBAEAjuB,GAAArP,WAAAp9D,EAAAnX,GACA6jF,GAAAtP,WAAAt0E,EAAAD,GACA2kF,GAAApQ,WAAA51B,MAAA3+C,EAEA,IAAA2tH,OAAA/pC,GAAAvG,IAAAuG,IACAgqC,MAAAhqC,GAAAvG,IAAAwG,IACAgqC,MAAAjqC,GAAAvG,IAAAsH,IACAmpC,MAAAjqC,GAAAxG,IAAAwG,IACAkqC,MAAAlqC,GAAAxG,IAAAsH,IAEAqpC,MAAAL,MAAAG,MAAAF,MAAAA,MAEA3zG,OAAA43F,gBAAA,GAAA3+E,QAGA,IAAA,IAAA86F,MAIA,MAAA/zG,QAAAhU,KAAA,GAAA,GAAA,EAIA,IAAAgoH,UAAA,EAAAD,MACAllH,GAAAglH,MAAAD,MAAAD,MAAAG,OAAAE,SACAv5F,GAAAi5F,MAAAI,MAAAH,MAAAC,OAAAI,QAGA,OAAAh0G,QAAAhU,IAAA,EAAA6C,EAAA4rB,EAAAA,EAAA5rB,OAMA01B,cAAA,WAEA,GAAAqlD,IAAA,GAAA3wD,QAEA,OAAA,UAAAyrB,MAAA3+C,EAAAC,EAAAkX,GAEA,GAAA8C,QAAA28B,SAAA82E,mBAAA/uE,MAAA3+C,EAAAC,EAAAkX,EAAA0sE,GAEA,OAAA5pE,QAAArN,GAAA,GAAAqN,OAAA5K,GAAA,GAAA4K,OAAArN,EAAAqN,OAAA5K,GAAA,QAQApQ,OAAAm3F,OAAAx/C,SAAAhlD,WAEAqU,IAAA,SAAAjG,EAAAC,EAAAkX,GAMA,MAJA/hB,MAAA4K,EAAAu+B,KAAAv+B,GACA5K,KAAA6K,EAAAs+B,KAAAt+B,GACA7K,KAAA+hB,EAAAonB,KAAApnB,GAEA/hB,MAIA84H,wBAAA,SAAA3zE,OAAA4zE,GAAAC,GAAAC,IAMA,MAJAj5H,MAAA4K,EAAAu+B,KAAAgc,OAAA4zE,KACA/4H,KAAA6K,EAAAs+B,KAAAgc,OAAA6zE,KACAh5H,KAAA+hB,EAAAonB,KAAAgc,OAAA8zE,KAEAj5H,MAIA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAA+vF,UAMA,MAJAl5H,MAAA4K,EAAAu+B,KAAA+vF,SAAAtuH,GACA5K,KAAA6K,EAAAs+B,KAAA+vF,SAAAruH,GACA7K,KAAA+hB,EAAAonB,KAAA+vF,SAAAn3G,GAEA/hB,MAIAm5H,KAAA,WAEA,GAAA3qC,IAAA,GAAA1wD,SACA2wD,GAAA,GAAA3wD,QAEA,OAAA,YAKA,MAHA0wD,IAAArP,WAAAn/E,KAAA+hB,EAAA/hB,KAAA6K,GACA4jF,GAAAtP,WAAAn/E,KAAA4K,EAAA5K,KAAA6K,GAEA,GAAA2jF,GAAA+b,MAAA9b,IAAA7uF,aAMAw5H,SAAA,SAAA3c,gBAGA,OADAA,gBAAA,GAAA3+E,UACA4lD,WAAA1jF,KAAA4K,EAAA5K,KAAA6K,GAAAtN,IAAAyC,KAAA+hB,GAAAgmC,eAAA,EAAA,IAIA1W,OAAA,SAAAorE,gBAEA,MAAAj7D,UAAAnQ,OAAArxC,KAAA4K,EAAA5K,KAAA6K,EAAA7K,KAAA+hB,EAAA06F,iBAIAx0C,MAAA,SAAAw0C,gBAIA,OAFAA,gBAAA,GAAArrE,QAEAs3E,sBAAA1oH,KAAA4K,EAAA5K,KAAA6K,EAAA7K,KAAA+hB,IAIAu2G,mBAAA,SAAA/uE,MAAAkzD,gBAEA,MAAAj7D,UAAA82E,mBAAA/uE,MAAAvpD,KAAA4K,EAAA5K,KAAA6K,EAAA7K,KAAA+hB,EAAA06F,iBAIArzE,cAAA,SAAAmgB,OAEA,MAAA/H,UAAApY,cAAAmgB,MAAAvpD,KAAA4K,EAAA5K,KAAA6K,EAAA7K,KAAA+hB,IAIAyzG,oBAAA,WAEA,GAAAvtD,OAAA,GAAA72B,OACAioF,UAAA,GAAA/3E,OAAA,GAAAA,OAAA,GAAAA,QACAg4E,eAAA,GAAAx7F,SACA+pF,aAAA,GAAA/pF,QAEA,OAAA,UAAAyrB,MAAAkzD,gBAEA,GAAA53F,QAAA43F,gBAAA,GAAA3+E,SACAy7F,YAAAr1F,EAAAA,CASA,IALA+jC,MAAAygD,sBAAA1oH,KAAA4K,EAAA5K,KAAA6K,EAAA7K,KAAA+hB,GACAkmD,MAAA4gD,aAAAt/D,MAAA+vE,iBAIA,IAAAt5H,KAAAopC,cAAAkwF,gBAIAz0G,OAAAskB,KAAAmwF,oBAEA,CAIAD,SAAA,GAAAxoH,IAAA7Q,KAAA4K,EAAA5K,KAAA6K,GACAwuH,SAAA,GAAAxoH,IAAA7Q,KAAA6K,EAAA7K,KAAA+hB,GACAs3G,SAAA,GAAAxoH,IAAA7Q,KAAA+hB,EAAA/hB,KAAA4K,EAEA,KAAA,GAAA9G,GAAA,EAAAA,EAAAu1H,SAAAz5H,OAAAkE,IAAA,CAEAu1H,SAAAv1H,GAAA0xH,oBAAA8D,gBAAA,EAAAzR,aAEA,IAAAnhE,UAAA4yE,eAAAj1B,kBAAAwjB,aAEAnhE,UAAA6yE,cAEAA,YAAA7yE,SAEA7hC,OAAAskB,KAAA0+E,gBAQA,MAAAhjG,YAMA22C,OAAA,SAAA09D,UAEA,MAAAA,UAAAtuH,EAAA4wD,OAAAx7D,KAAA4K,IAAAsuH,SAAAruH,EAAA2wD,OAAAx7D,KAAA6K,IAAAquH,SAAAn3G,EAAAy5C,OAAAx7D,KAAA+hB,MA4BA0/B,KAAAjlD,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAArqC,KAEArN,QAAA,EAEAolF,YAAA,SAAAtqH,OAEAlP,KAAA2hD,SAAAzyC,OAIAi6B,KAAA,SAAA1jC,QAMA,MAJAs0C,UAAAv9C,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA2hD,SAAAl8C,OAAAk8C,SAEA3hD,MAIA6hD,mBAAA,WAEA,GACAv1C,GAAAmtH,GAAA77H,KADAy0C,SAAAryC,KAAAqyC,QAGA,IAAAA,SAAAQ,iBAAA,CAEA,GAAAC,iBAAAT,SAAAS,gBACA9xB,KAAAnX,OAAAmX,KAAA8xB,gBAEA,IAAA9xB,KAAAphB,OAAA,EAAA,CAEA,GAAAy1H,gBAAAviF,gBAAA9xB,KAAA,GAEA,QAAA7T,KAAAkoH,eAKA,IAHAr1H,KAAAukD,yBACAvkD,KAAA05H,yBAEAptH,EAAA,EAAAmtH,GAAApE,eAAAz1H,OAAA0M,EAAAmtH,GAAAntH,IAEA1O,KAAAy3H,eAAA/oH,GAAA1O,MAAA+7H,OAAArtH,GAEAtM,KAAAukD,sBAAArkD,KAAA,GACAF,KAAA05H,sBAAA97H,MAAA0O,OAQA,CAEA,GAAAmjC,cAAA4C,SAAA5C,YAEA,QAAAtiC,KAAAsiC,cAAAA,aAAA7vC,OAAA,EAKA,IAHAI,KAAAukD,yBACAvkD,KAAA05H,yBAEAptH,EAAA,EAAAmtH,GAAAhqF,aAAA7vC,OAAA0M,EAAAmtH,GAAAntH,IAEA1O,KAAA6xC,aAAAnjC,GAAA1O,MAAA+7H,OAAArtH,GAEAtM,KAAAukD,sBAAArkD,KAAA,GACAF,KAAA05H,sBAAA97H,MAAA0O,IAUAysF,QAAA,WAuBA,QAAA6gC,gBAAArwE,MAAAxzC,GAAAC,GAAAC,GAAA4jH,IAAA5pF,IAAA6pF,KAUA,MARAt4E,UAAA82E,mBAAA/uE,MAAAxzC,GAAAC,GAAAC,GAAA8jH,WAEAF,IAAA9xE,eAAAgyE,UAAAviH,GACAy4B,IAAA8X,eAAAgyE,UAAA9/G,GACA6/G,IAAA/xE,eAAAgyE,UAAAn9F,GAEAi9F,IAAAt8H,IAAA0yC,KAAA1yC,IAAAu8H,KAEAD,IAAA9vG,QAIA,QAAAiwG,mBAAAhoF,OAAAnF,SAAA+rD,UAAAL,IAAAq8B,GAAAC,GAAAC,GAAAvrE,OAcA,GAAA,QAVA1c,SAAAe,OAAAmG,SAEAwkD,IAAAi/B,kBAAA1C,GAAAD,GAAAD,IAAA,EAAArrE,OAIAgvC,IAAAi/B,kBAAA5C,GAAAC,GAAAC,GAAAjoF,SAAAe,OAAAiG,WAAA0V,QAIA,MAAA,KAEA0wE,wBAAA9wF,KAAAogB,OACA0wE,uBAAAjxF,aAAAgJ,OAAAjJ,YAEA,IAAA2d,UAAAkyC,UAAAL,IAAAl3C,OAAA+iD,WAAA61B,uBAEA,OAAAvzE,UAAAkyC,UAAApsD,MAAAka,SAAAkyC,UAAAnsD,IAAA,MAGAia,SAAAA,SACA6C,MAAA0wE,uBAAAlwG,QACAioB,OAAAA,QAKA,QAAAkoF,iCAAAloF,OAAA4mD,UAAAL,IAAAxtD,SAAAvE,GAAA57B,EAAAC,EAAAkX,GAEAmtG,GAAAvwC,oBAAA5zC,SAAAngC,GACAukH,GAAAxwC,oBAAA5zC,SAAAlgC,GACAukH,GAAAzwC,oBAAA5zC,SAAAhpB,EAEA,IAAAo4G,cAAAH,kBAAAhoF,OAAAA,OAAAnF,SAAA+rD,UAAAL,IAAA22B,GAAAC,GAAAC,GAAAgL,kBAmBA,OAjBAD,gBAEA3zF,KAEA85C,IAAA3B,oBAAAn4C,GAAA57B,GACA21E,IAAA5B,oBAAAn4C,GAAA37B,GACA21E,IAAA7B,oBAAAn4C,GAAAzkB,GAEAo4G,aAAA3zF,GAAAozF,eAAAQ,kBAAAlL,GAAAC,GAAAC,GAAA9uC,IAAAC,IAAAC,MAIA25C,aAAAziF,KAAA,GAAA+D,OAAA7wC,EAAAC,EAAAkX,EAAAy/B,SAAAnQ,OAAA69E,GAAAC,GAAAC,KACA+K,aAAAE,UAAAzvH,GAIAuvH,aA3FA,GAAAG,eAAA,GAAAv8F,SACAw6D,IAAA,GAAAn3C,KACA0mE,OAAA,GAAA92E,QAEAk+E,GAAA,GAAApxF,SACAqxF,GAAA,GAAArxF,SACAsxF,GAAA,GAAAtxF,SAEAy8F,MAAA,GAAAz8F,SACA08F,MAAA,GAAA18F,SACA28F,MAAA,GAAA38F,SAEAwiD,IAAA,GAAA1lD,SACA2lD,IAAA,GAAA3lD,SACA4lD,IAAA,GAAA5lD,SAEAm/F,UAAA,GAAAj8F,SAEAs8F,kBAAA,GAAAt8F,SACAm8F,uBAAA,GAAAn8F,QA4EA,OAAA,UAAA86D,UAAAC,YAEA,GAAAxmD,UAAAryC,KAAAqyC,SACAxF,SAAA7sC,KAAA6sC,SACA9D,YAAA/oC,KAAA+oC,WAEA,QAAA57B,KAAA0/B,WAIA,OAAAwF,SAAAgK,gBAAAhK,SAAAiqD,wBAEAwrB,OAAA3+E,KAAAkJ,SAAAgK,gBACAyrE,OAAA9+E,aAAAD,cAEA,IAAA6vD,UAAAL,IAAAqvB,iBAAAE,UAIAwS,cAAAl0D,WAAAr9B,aACAwvD,IAAApvD,KAAAyvD,UAAAL,KAAAvvD,aAAAsxF,eAIA,OAAAjoF,SAAA+J,cAEA,IAAAm8C,IAAA4tB,cAAA9zE,SAAA+J,eAFA,CAMA,GAAA+9E,aAEA,IAAA9nF,SAAAQ,iBAAA,CAEA,GAAAjoC,GAAAC,EAAAkX,EAIAje,EAAA4f,EAHAqN,MAAAshB,SAAAthB,MACAga,SAAAsH,SAAA1qC,WAAAojC,SACAvE,GAAA6L,SAAA1qC,WAAA6+B,EAGA,IAAA,OAAAzV,MAIA,IAAAjtB,EAAA,EAAA4f,EAAAqN,MAAAooB,MAAAr1C,EAAA4f,EAAA5f,GAAA,EAEA8G,EAAAmmB,MAAA2tD,KAAA56E,GACA+G,EAAAkmB,MAAA2tD,KAAA56E,EAAA,GACAie,EAAAgP,MAAA2tD,KAAA56E,EAAA,IAEAq2H,aAAAD,gCAAAl6H,KAAA44F,UAAAL,IAAAxtD,SAAAvE,GAAA57B,EAAAC,EAAAkX,MAIAo4G,aAAAE,UAAAzrH,KAAAE,MAAAhL,EAAA,GACA+0F,WAAA34F,KAAAi6H,mBAUA,KAAAr2H,EAAA,EAAA4f,EAAAqnB,SAAAoO,MAAAr1C,EAAA4f,EAAA5f,GAAA,EAEA8G,EAAA9G,EACA+G,EAAA/G,EAAA,EACAie,EAAAje,EAAA,GAEAq2H,aAAAD,gCAAAl6H,KAAA44F,UAAAL,IAAAxtD,SAAAvE,GAAA57B,EAAAC,EAAAkX,MAIAo4G,aAAAppG,MAAAnmB,EACAiuF,WAAA34F,KAAAi6H,mBAQA,IAAA9nF,SAAAU,WAAA,CAEA,GAAA2nF,KAAAC,IAAAC,IAKA98E,IAJA8gD,gBAAAriG,MAAAoN,QAAAkjC,UAEAtI,SAAA8N,SAAA9N,SACAC,MAAA6N,SAAA7N,MAGAwX,cAAA3J,SAAA2J,cAAA,EACAA,eAAAp8C,OAAA,IAAAk+C,IAAA9B,cAEA,KAAA,GAAAmZ,GAAA,EAAA85D,GAAAzqF,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAAA,CAEA,GAAAzd,MAAAlT,MAAA2wB,GACA0lE,aAAAj8B,gBAAA/xD,SAAA6K,KAAA1C,eAAAnI,QAEA,QAAA1/B,KAAA0tH,aAAA,CAMA,GAJAH,IAAAn2F,SAAAmT,KAAA9sC,GACA+vH,IAAAp2F,SAAAmT,KAAA7sC,GACA+vH,IAAAr2F,SAAAmT,KAAA31B,IAEA,IAAA84G,aAAAprF,aAAA,CAEA,GAAAA,cAAA4C,SAAA5C,aACAkV,gBAAA3kD,KAAAukD,qBAEA2qE,IAAAr+G,IAAA,EAAA,EAAA,GACAs+G,GAAAt+G,IAAA,EAAA,EAAA,GACAu+G,GAAAv+G,IAAA,EAAA,EAAA,EAEA,KAAA,GAAAqjB,GAAA,EAAA4mG,GAAArrF,aAAA7vC,OAAAs0B,EAAA4mG,GAAA5mG,IAAA,CAEA,GAAAwwB,WAAAC,gBAAAzwB,EAEA,IAAA,IAAAwwB,UAAA,CAEA,GAAAq2E,SAAAtrF,aAAAvb,GAAAqQ,QAEA2qF,IAAAzrB,gBAAA82B,MAAAp7C,WAAA47C,QAAArjF,KAAA9sC,GAAA8vH,KAAAh2E,WACAyqE,GAAA1rB,gBAAA+2B,MAAAr7C,WAAA47C,QAAArjF,KAAA7sC,GAAA8vH,KAAAj2E,WACA0qE,GAAA3rB,gBAAAg3B,MAAAt7C,WAAA47C,QAAArjF,KAAA31B,GAAA64G,KAAAl2E,YAIAwqE,GAAA3xH,IAAAm9H,KACAvL,GAAA5xH,IAAAo9H,KACAvL,GAAA7xH,IAAAq9H,KAEAF,IAAAxL,GACAyL,IAAAxL,GACAyL,IAAAxL,GAMA,GAFA+K,aAAAH,kBAAAh6H,KAAA66H,aAAAjiC,UAAAL,IAAAmiC,IAAAC,IAAAC,IAAAR,mBAEA,CAEA,GAAAt8E,KAAAA,IAAAqX,GAAA,CAEA,GAAA6lE,OAAAl9E,IAAAqX,EACAmrB,KAAAn3C,KAAA6xF,MAAA,IACAz6C,IAAAp3C,KAAA6xF,MAAA,IACAx6C,IAAAr3C,KAAA6xF,MAAA,IAEAb,aAAA3zF,GAAAozF,eAAAQ,kBAAAM,IAAAC,IAAAC,IAAAt6C,IAAAC,IAAAC,KAIA25C,aAAAziF,KAAAA,KACAyiF,aAAAE,UAAAllE,EACA0jC,WAAA34F,KAAAi6H,uBAYApwG,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAAqyC,SAAAryC,KAAA6sC,UAAA1D,KAAAnpC,QA6nCA,IAAAsxD,gBAAA,CA+yFA2S,aAAAznE,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAxrD,kBAAA3+C,YAEAsvF,YAAA7nB,YAEA6M,eAAA,IAk/FAqL,QAAA3/E,UAAAkwC,WAAA,EAEAyvC,QAAA3/E,UAAAutB,MAAA,WAEA,MAAA,IAAAoyD,SAAAn8E,KAAA6mC,MAAAy1E,SAAAt8G,KAAA2sC,UAIAwvC,QAAA3/E,UAAA4yB,OAAA,SAAAw1E,MAEA,OACAxpE,KAAA,UACAyL,MAAA7mC,KAAA6mC,MAAAy1E,SACA3vE,QAAA3sC,KAAA2sC,UAqBAyvC,IAAA5/E,UAAA+vC,OAAA,EAEA6vC,IAAA5/E,UAAAutB,MAAA,WAEA,MAAA,IAAAqyD,KAAAp8E,KAAA6mC,MAAAy1E,SAAAt8G,KAAAwsC,KAAAxsC,KAAAysC,MAIA2vC,IAAA5/E,UAAA4yB,OAAA,SAAAw1E,MAEA,OACAxpE,KAAA,MACAyL,MAAA7mC,KAAA6mC,MAAAy1E,SACA9vE,KAAAxsC,KAAAwsC,KACAC,IAAAzsC,KAAAysC,MAuBA4vC,MAAA7/E,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAAzP,MAEAlzC,KAAA,SAAA1jC,OAAAqzF,WAWA,MATA/+C,UAAAv9C,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,OAAAqzF,WAEA,OAAArzF,OAAAy8C,aAAAliD,KAAAkiD,WAAAz8C,OAAAy8C,WAAAn4B,SACA,OAAAtkB,OAAA6mC,MAAAtsC,KAAAssC,IAAA7mC,OAAA6mC,IAAAviB,SACA,OAAAtkB,OAAAorE,mBAAA7wE,KAAA6wE,iBAAAprE,OAAAorE,iBAAA9mD,SAEA/pB,KAAAg2C,WAAAvwC,OAAAuwC,WACAh2C,KAAA26C,iBAAAl1C,OAAAk1C,iBAEA36C,MAIAovB,OAAA,SAAAw1E,MAEA,GAAArkF,MAAAw5B,SAAAv9C,UAAA4yB,OAAAxoB,KAAA5G,KAAA4kG,KAKA,OAHA,QAAA5kG,KAAAkiD,aAAA3hC,KAAAyxB,OAAAkQ,WAAAliD,KAAAkiD,WAAA9yB,OAAAw1E,OACA,OAAA5kG,KAAAssC,MAAA/rB,KAAAyxB,OAAA1F,IAAAtsC,KAAAssC,IAAAld,UAEA7O,QA4BA+7D,UAAA9/E,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAAxP,UAEA/L,aAAA,EAEApnC,KAAA,SAAA1jC,QAEAs0C,SAAAv9C,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA+pC,eAAAZ,KAAA1jC,OAAAskC,gBACA/pC,KAAAgqC,qBAAAvkC,OAAAukC,oBAEA,KAAA,GAAAlmC,GAAA,EAAA4f,EAAAje,OAAA0kC,WAAAvqC,OAAAkE,EAAA4f,EAAA5f,IAEA9D,KAAAmqC,WAAAjqC,KAAAuF,OAAA0kC,WAAArmC,GAIA,OAAA9D,OAIAzC,IAAA,SAAA4/B,QAAA4E,KAAA2kB,SAAApc,SAAAzD,MAAAD,aAEAz5B,KAAA40B,OAAAA,MAAA,OACA50B,KAAAu5C,WAAAA,SAAA,OACAv5C,KAAAy5B,UAAAA,QAAA,OACAz5B,KAAA05B,QAAAA,MAAA,GAAA9C,OAAA,eACA52B,KAAAm9B,WAAAA,SAAAqD,gBAEA+Y,SAAA93C,KAAAY,IAAAk3C,SAAA93C,KAAAsF,IAAA,EAAAwyC,WAEA1mD,KAAAmqC,WAAAjqC,MACAi9B,QAAAA,QACA4E,KAAAA,KACA2kB,SAAAA,SACAlvC,EAAA,EAAAyC,EAAA,EAAA2iB,EAAA,EACAkK,MAAA,EACAC,SAAA,EACAH,QAAAA,QACAC,MAAAA,MACAyD,SAAAA,YAUAL,iBAAA,WAEA,GAAAkrB,GACArsB,MADAmmF,GAAAjvH,KAAAmqC,WAAAvqC,OAEAq7H,KAAA,GAAAj7H,KAAA+pC,eAAAvyB,EACA0jH,KAAA,GAAAl7H,KAAA+pC,eAAA9vB,CAEA,KAAAk7C,EAAA,EAAAA,EAAA85D,GAAA95D,IAEArsB,MAAA9oC,KAAAmqC,WAAAgrB,GAEArsB,MAAAtxB,EAAAxX,KAAA+pC,eAAAvyB,EAAAyjH,KAAAnyF,MAAA4d,SACA5d,MAAA7uB,EAAAja,KAAA+pC,eAAA9vB,EAAAihH,KAAApyF,MAAA4d,SAEA5d,MAAAqyF,eAAAryF,MAAAtxB,EAAA5I,KAAAiyE,GAAA,IACA/3C,MAAA/B,UAAA,KAAA+B,MAAAqyF,eAAAryF,MAAA/B,aAuCAw1C,eAAA//E,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACA+/E,eAAA//E,UAAAsvF,YAAAvP,eACAA,eAAA//E,UAAA4+H,kBAAA,EAEA7+C,eAAA//E,UAAA2sC,KAAA,SAAA1jC,QASA,MAPA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA6mC,MAAAsC,KAAA1jC,OAAAohC,OACA7mC,KAAAwK,IAAA/E,OAAA+E,IAEAxK,KAAA+mC,SAAAthC,OAAAshC,SAEA/mC,MAmBAw8E,OAAAhgF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAAtP,OAEApM,UAAA,EAEA2oB,QAAA,WAEA,GAAAsiC,gBAAA,GAAAv9F,SACAw9F,cAAA,GAAAx9F,SACAy9F,WAAA,GAAAz9F,QAEA,OAAA,UAAA86D,UAAAC,YAEAyiC,cAAAnkF,sBAAAn3C,KAAA+oC,aACA6vD,UAAAL,IAAAi9B,oBAAA8F,cAAAD,gBAEAE,WAAAhwB,mBAAAvrG,KAAA+oC,YACA,IAAAyyF,aAAAD,WAAA/jH,EAAA+jH,WAAAthH,EAAA,CAEA,MAAAqhH,cAAAj3B,kBAAAg3B,gBAAAG,aAAA,CAEA,GAAA90E,UAAAkyC,UAAAL,IAAAl3C,OAAA+iD,WAAAi3B,eAEA30E,UAAAkyC,UAAApsD,MAAAka,SAAAkyC,UAAAnsD,KAEAosD,WAAA34F,MAEAwmD,SAAAA,SACA6C,MAAA8xE,eAAAtxG,QACA2tB,KAAA,KACA1F,OAAAhyC,YAQA+pB,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAA6sC,UAAA1D,KAAAnpC,SA2BAy8E,IAAAjgF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAArP,IAEAtzC,KAAA,SAAA1jC,QAEAs0C,SAAAv9C,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAAA,EAIA,KAAA,GAFAi3E,QAAAj3E,OAAAi3E,OAEA54E,EAAA,EAAA4f,EAAAg5D,OAAA98E,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA23H,OAAA/+C,OAAA54E,EAEA9D,MAAA07H,SAAAD,MAAAzpF,OAAAjoB,QAAA0xG,MAAA/0E,UAIA,MAAA1mD,OAIA07H,SAAA,SAAA1pF,OAAA0U,cAEAv5C,KAAAu5C,WAAAA,SAAA,GAEAA,SAAA93C,KAAAc,IAAAg3C,SAIA,KAAA,GAFAg2B,QAAA18E,KAAA08E,OAEAh5D,EAAA,EAAAA,EAAAg5D,OAAA98E,UAEA8mD,SAAAg2B,OAAAh5D,GAAAgjC,UAFAhjC,KAUAg5D,OAAA4kB,OAAA59E,EAAA,GAAAgjC,SAAAA,SAAA1U,OAAAA,SAEAhyC,KAAAzC,IAAAy0C,SAIA2pF,qBAAA,SAAAj1E,UAIA,IAAA,GAFAg2B,QAAA18E,KAAA08E,OAEA54E,EAAA,EAAA4f,EAAAg5D,OAAA98E,OAAAkE,EAAA4f,KAEAgjC,SAAAg2B,OAAA54E,GAAA4iD,UAFA5iD,KAUA,MAAA44E,QAAA54E,EAAA,GAAAkuC,QAIA+mD,QAAA,WAEA,GAAA6iC,gBAAA,GAAA99F,QAEA,OAAA,UAAA86D,UAAAC,YAEA+iC,eAAAzkF,sBAAAn3C,KAAA+oC,YAEA,IAAA2d,UAAAkyC,UAAAL,IAAAl3C,OAAA+iD,WAAAw3B,eAEA57H,MAAA27H,qBAAAj1E,UAAAqyC,QAAAH,UAAAC,gBAMAlkD,OAAA,WAEA,GAAA85C,IAAA,GAAA3wD,SACAyxD,GAAA,GAAAzxD,QAEA,OAAA,UAAA8J,QAEA,GAAA80C,QAAA18E,KAAA08E,MAEA,IAAAA,OAAA98E,OAAA,EAAA,CAEA6uF,GAAAt3C,sBAAAvP,OAAAmB,aACAwmD,GAAAp4C,sBAAAn3C,KAAA+oC,YAEA,IAAA2d,UAAA+nC,GAAA2V,WAAA7U,GAEA7S,QAAA,GAAA1qC,OAAA5uC,SAAA,CAEA,KAAA,GAAAU,GAAA,EAAA4f,EAAAg5D,OAAA98E,OAAAkE,EAAA4f,GAEAgjC,UAAAg2B,OAAA54E,GAAA4iD,SAFA5iD,IAIA44E,OAAA54E,EAAA,GAAAkuC,OAAA5uC,SAAA,EACAs5E,OAAA54E,GAAAkuC,OAAA5uC,SAAA,CAUA,MAAAU,EAAA4f,EAAA5f,IAEA44E,OAAA54E,GAAAkuC,OAAA5uC,SAAA,OAUAgsB,OAAA,SAAAw1E,MAEA,GAAArkF,MAAAw5B,SAAAv9C,UAAA4yB,OAAAxoB,KAAA5G,KAAA4kG,KAEArkF,MAAAyxB,OAAA0qC,SAIA,KAAA,GAFAA,QAAA18E,KAAA08E,OAEA54E,EAAA,EAAA4f,EAAAg5D,OAAA98E,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA23H,OAAA/+C,OAAA54E,EAEAyc,MAAAyxB,OAAA0qC,OAAAx8E,MACA8xC,OAAAypF,MAAAzpF,OAAAvW,KACAirB,SAAA+0E,MAAA/0E,WAKA,MAAAnmC,SAoDA1W,OAAAm3F,OAAArkB,SAAAngF,WAEAqgF,kBAAA,WAEA78E,KAAA48E,eAEA,KAAA,GAAA94E,GAAA,EAAAyyC,GAAAv2C,KAAA2xD,MAAA/xD,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAA8kG,SAAA,GAAA7qE,QAEA/9B,MAAA2xD,MAAA7tD,IAEA8kG,QAAAxiC,WAAApmE,KAAA2xD,MAAA7tD,GAAAilC,aAIA/oC,KAAA48E,aAAA18E,KAAA0oG,WAMA7iC,KAAA,WAEA,GAAAs0B,MAAAv2F,EAAAyyC,EAIA,KAAAzyC,EAAA,EAAAyyC,GAAAv2C,KAAA2xD,MAAA/xD,OAAAkE,EAAAyyC,GAAAzyC,KAEAu2F,KAAAr6F,KAAA2xD,MAAA7tD,KAIAu2F,KAAAtxD,YAAAq9B,WAAApmE,KAAA48E,aAAA94E,GAQA,KAAAA,EAAA,EAAAyyC,GAAAv2C,KAAA2xD,MAAA/xD,OAAAkE,EAAAyyC,GAAAzyC,KAEAu2F,KAAAr6F,KAAA2xD,MAAA7tD,MAIAu2F,KAAAp7F,QAAAo7F,KAAAp7F,OAAAg7F,QAEAI,KAAAnjD,OAAAkvB,WAAAi0B,KAAAp7F,OAAA8pC,aACAsxD,KAAAnjD,OAAAK,SAAA8iD,KAAAtxD,cAIAsxD,KAAAnjD,OAAA/N,KAAAkxD,KAAAtxD,aAIAsxD,KAAAnjD,OAAAnK,UAAAstD,KAAAtvD,SAAAsvD,KAAApgD,WAAAogD,KAAAvzD,SAQA6N,OAAA,WAEA,GAAAknF,cAAA,GAAA99F,SACA+9F,eAAA,GAAA/9F,QAEA,OAAA,YASA,IAAA,GAPA4zB,OAAA3xD,KAAA2xD,MACAirB,aAAA58E,KAAA48E,aACAhJ,aAAA5zE,KAAA4zE,aACAH,YAAAzzE,KAAAyzE,YAIA3vE,EAAA,EAAAyyC,GAAAob,MAAA/xD,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAIA,GAAAozC,QAAAya,MAAA7tD,GAAA6tD,MAAA7tD,GAAAilC,YAAA+yF,cAEAD,cAAAjvF,iBAAAsK,OAAA0lC,aAAA94E,IACA+3H,aAAAtwG,QAAAqoD,aAAA,GAAA9vE,OAIAqJ,KAAAsmE,cAEAA,YAAA5oC,aAAA,OAQA9gB,MAAA,WAEA,MAAA,IAAA4yD,UAAA38E,KAAA2xD,MAAA3xD,KAAA48E,iBAoBAE,KAAAtgF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAAhP,KAEAmd,QAAA,IA6BAld,YAAAvgF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAllD,KAAAjlD,YAEAsvF,YAAA/O,YAEA/pC,eAAA,EAEAmqC,UAAA,WAEA,GAAAkd,MAAA0hC,MACAj4H,EAAAyyC,GADAob,QAGA,IAAA3xD,KAAAqyC,cAAAllC,KAAAnN,KAAAqyC,SAAAsf,MAAA,CAIA,IAAA7tD,EAAA,EAAAyyC,GAAAv2C,KAAAqyC,SAAAsf,MAAA/xD,OAAAkE,EAAAyyC,GAAAzyC,IAEAi4H,MAAA/7H,KAAAqyC,SAAAsf,MAAA7tD,GAIAu2F,KAAA,GAAAvd,MACAnrB,MAAAzxD,KAAAm6F,MAIAA,KAAAz8F,KAAAm+H,MAAAn+H,KACAy8F,KAAAtvD,SAAAi7B,UAAA+1D,MAAA7kG,KACAmjE,KAAApgD,WAAA+rB,UAAA+1D,MAAAC,UACA7uH,KAAA4uH,MAAAE,KAAA5hC,KAAAvzD,MAAAk/B,UAAA+1D,MAAAE,IAMA,KAAAn4H,EAAA,EAAAyyC,GAAAv2C,KAAAqyC,SAAAsf,MAAA/xD,OAAAkE,EAAAyyC,GAAAzyC,IAEAi4H,MAAA/7H,KAAAqyC,SAAAsf,MAAA7tD,IAEA,IAAAi4H,MAAA98H,QAAA,OAAA88H,MAAA98H,YAAAkO,KAAAwkD,MAAAoqE,MAAA98H,QAIA0yD,MAAAoqE,MAAA98H,QAAA1B,IAAAo0D,MAAA7tD,IAMA9D,KAAAzC,IAAAo0D,MAAA7tD,IAaA,MAFA9D,MAAAs3C,mBAAA,GAEAqa,OAIAyrB,KAAA,SAAA1rB,SAAAurB,YAEAj9E,KAAA0xD,SAAAA,aAEAvkD,KAAA8vE,aAEAj9E,KAAAs3C,mBAAA,GAEAt3C,KAAA0xD,SAAAmrB,oBAEAI,WAAAj9E,KAAA+oC,aAIA/oC,KAAAi9E,WAAA9zC,KAAA8zC,YACAj9E,KAAAk9E,kBAAA9W,WAAA6W,aAIAlX,KAAA,WAEA/lE,KAAA0xD,SAAAqU,QAIAsX,qBAAA,WAEA,GAAAv2C,OAAAhjC,CAEA,IAAA9D,KAAAqyC,UAAAryC,KAAAqyC,SAAAU,WAEA,IAAAjvC,EAAA,EAAAA,EAAA9D,KAAAqyC,SAAA4J,YAAAr8C,OAAAkE,IAAA,CAEA,GAAAo4H,IAAAl8H,KAAAqyC,SAAA4J,YAAAn4C,EAEAgjC,OAAA,EAAAo1F,GAAA/3B,kBAEAr9D,QAAA5C,EAAAA,EAEAg4F,GAAAn0E,eAAAjhB,OAIAo1F,GAAArrH,IAAA,EAAA,EAAA,EAAA,OAMA,IAAA7Q,KAAAqyC,UAAAryC,KAAAqyC,SAAAQ,iBAAA,CAEA,GAAAspF,KAAA,GAAAx/F,SAEAy/F,WAAAp8H,KAAAqyC,SAAA1qC,WAAAy0H,UAEA,KAAAt4H,EAAA,EAAAA,EAAAs4H,WAAAjjF,MAAAr1C,IAEAq4H,IAAA3kH,EAAA4kH,WAAA19C,KAAA56E,GACAq4H,IAAAliH,EAAAmiH,WAAA13B,KAAA5gG,GACAq4H,IAAAv/F,EAAAw/F,WAAA31B,KAAA3iG,GACAq4H,IAAAp5G,EAAAq5G,WAAA11B,KAAA5iG,GAEAgjC,MAAA,EAAAq1F,IAAAh4B,kBAEAr9D,QAAA5C,EAAAA,EAEAi4F,IAAAp0E,eAAAjhB,OAIAq1F,IAAAtrH,IAAA,EAAA,EAAA,EAAA,GAIAurH,WAAA5I,QAAA1vH,EAAAq4H,IAAA3kH,EAAA2kH,IAAAliH,EAAAkiH,IAAAv/F,EAAAu/F,IAAAp5G,KAQAu0B,kBAAA,SAAAy1E,OAEAtrE,KAAAjlD,UAAA86C,kBAAA1wC,KAAA5G,KAAA+sH,OAEA,aAAA/sH,KAAAg9E,SAEAh9E,KAAAk9E,kBAAA9W,WAAApmE,KAAA+oC,aAEA,aAAA/oC,KAAAg9E,SAEAh9E,KAAAk9E,kBAAA9W,WAAApmE,KAAAi9E,YAIAltE,QAAAH,KAAA,6CAAA5P,KAAAg9E,WAMAjzD,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAAqyC,SAAAryC,KAAA6sC,UAAA1D,KAAAnpC,SAsCA2yD,kBAAAn2D,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACAm2D,kBAAAn2D,UAAAsvF,YAAAn5B,kBAEAA,kBAAAn2D,UAAAu4E,qBAAA,EAEApiB,kBAAAn2D,UAAA2sC,KAAA,SAAA1jC,QAUA,MARA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA6mC,MAAAsC,KAAA1jC,OAAAohC,OAEA7mC,KAAAovC,UAAA3pC,OAAA2pC,UACApvC,KAAAs9E,QAAA73E,OAAA63E,QACAt9E,KAAAu9E,SAAA93E,OAAA83E,SAEAv9E,MA0BAw9E,KAAAhhF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAAtO,KAEAnpC,QAAA,EAEA0kD,QAAA,WAEA,GAAAuhC,eAAA,GAAAv8F,SACAw6D,IAAA,GAAAn3C,KACA0mE,OAAA,GAAA92E,OAEA,OAAA,UAAA4nD,UAAAC,YAEA,GAAAzxD,WAAAwxD,UAAAyjC,cACAC,YAAAl1F,UAAAA,UAEAiL,SAAAryC,KAAAqyC,SACAtJ,YAAA/oC,KAAA+oC,WASA,IALA,OAAAsJ,SAAAgK,gBAAAhK,SAAAiqD,wBAEAwrB,OAAA3+E,KAAAkJ,SAAAgK,gBACAyrE,OAAA9+E,aAAAD,cAEA,IAAA6vD,UAAAL,IAAAqvB,iBAAAE,QAAA,CAIAwS,cAAAl0D,WAAAr9B,aACAwvD,IAAApvD,KAAAyvD,UAAAL,KAAAvvD,aAAAsxF,cAEA,IAAAiC,QAAA,GAAAz+F,SACA0+F,KAAA,GAAA1+F,SACA2+F,aAAA,GAAA3+F,SACA4+F,SAAA,GAAA5+F,SACAk9D,KAAAh7F,MAAAA,KAAA46E,eAAA,EAAA,CAEA,IAAAvoC,SAAAQ,iBAAA,CAEA,GAAA9hB,OAAAshB,SAAAthB,MACAppB,WAAA0qC,SAAA1qC,WACAiyF,UAAAjyF,WAAAojC,SAAAl2B,KAEA,IAAA,OAAAkc,MAIA,IAAA,GAFA6sB,SAAA7sB,MAAAlc,MAEA/Q,EAAA,EAAA4f,EAAAk6B,QAAAh+C,OAAA,EAAAkE,EAAA4f,EAAA5f,GAAAk3F,KAAA,CAEA,GAAApwF,GAAAgzC,QAAA95C,GACA+G,EAAA+yC,QAAA95C,EAAA,EAEAy4H,QAAAv2D,UAAA4zB,UAAA,EAAAhvF,GACA4xH,KAAAx2D,UAAA4zB,UAAA,EAAA/uF,EAEA,IAAA8xH,QAAApkC,IAAAo9B,oBAAA4G,OAAAC,KAAAE,SAAAD,aAEA,MAAAE,OAAAL,aAAA,CAEAI,SAAA1zF,aAAAhpC,KAAA+oC,YAEA,IAAA2d,UAAAkyC,UAAAL,IAAAl3C,OAAA+iD,WAAAs4B,SAEAh2E,UAAAkyC,UAAApsD,MAAAka,SAAAkyC,UAAAnsD,KAEAosD,WAAA34F,MAEAwmD,SAAAA,SAGA6C,MAAAkzE,aAAA1yG,QAAAif,aAAAhpC,KAAA+oC,aACAhY,MAAAjtB,EACA4zC,KAAA,KACA2iF,UAAA,KACAroF,OAAAhyC,YAQA,KAAA,GAAA8D,GAAA,EAAA4f,EAAAk2E,UAAAh6F,OAAA,EAAA,EAAAkE,EAAA4f,EAAA5f,GAAAk3F,KAAA,CAEAuhC,OAAAv2D,UAAA4zB,UAAA,EAAA91F,GACA04H,KAAAx2D,UAAA4zB,UAAA,EAAA91F,EAAA,EAEA,IAAA64H,QAAApkC,IAAAo9B,oBAAA4G,OAAAC,KAAAE,SAAAD,aAEA,MAAAE,OAAAL,aAAA,CAEAI,SAAA1zF,aAAAhpC,KAAA+oC,YAEA,IAAA2d,UAAAkyC,UAAAL,IAAAl3C,OAAA+iD,WAAAs4B,SAEAh2E,UAAAkyC,UAAApsD,MAAAka,SAAAkyC,UAAAnsD,KAEAosD,WAAA34F,MAEAwmD,SAAAA,SAGA6C,MAAAkzE,aAAA1yG,QAAAif,aAAAhpC,KAAA+oC,aACAhY,MAAAjtB,EACA4zC,KAAA,KACA2iF,UAAA,KACAroF,OAAAhyC,aAQA,IAAAqyC,SAAAU,WAKA,IAAA,GAHAxO,UAAA8N,SAAA9N,SACAq4F,WAAAr4F,SAAA3kC,OAEAkE,EAAA,EAAAA,EAAA84H,WAAA,EAAA94H,GAAAk3F,KAAA,CAEA,GAAA2hC,QAAApkC,IAAAo9B,oBAAApxF,SAAAzgC,GAAAygC,SAAAzgC,EAAA,GAAA44H,SAAAD,aAEA,MAAAE,OAAAL,aAAA,CAEAI,SAAA1zF,aAAAhpC,KAAA+oC,YAEA,IAAA2d,UAAAkyC,UAAAL,IAAAl3C,OAAA+iD,WAAAs4B,SAEAh2E,UAAAkyC,UAAApsD,MAAAka,SAAAkyC,UAAAnsD,KAEAosD,WAAA34F,MAEAwmD,SAAAA,SAGA6C,MAAAkzE,aAAA1yG,QAAAif,aAAAhpC,KAAA+oC,aACAhY,MAAAjtB,EACA4zC,KAAA,KACA2iF,UAAA,KACAroF,OAAAhyC,cAYA+pB,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAAqyC,SAAAryC,KAAA6sC,UAAA1D,KAAAnpC,SAkBAy9E,aAAAjhF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAnpB,KAAAhhF,YAEAsvF,YAAArO,aAEA7C,gBAAA,IAgBA8C,SAAAlhF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAnpB,KAAAhhF,YAEAsvF,YAAApO,SAEA7C,YAAA,IAqCAhoB,eAAAr2D,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACAq2D,eAAAr2D,UAAAsvF,YAAAj5B,eAEAA,eAAAr2D,UAAA24E,kBAAA,EAEAtiB,eAAAr2D,UAAA2sC,KAAA,SAAA1jC,QAWA,MATA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA6mC,MAAAsC,KAAA1jC,OAAAohC,OAEA7mC,KAAAwK,IAAA/E,OAAA+E,IAEAxK,KAAA+hC,KAAAt8B,OAAAs8B,KACA/hC,KAAAsvD,gBAAA7pD,OAAA6pD,gBAEAtvD,MAmBA29E,OAAAnhF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAAnO,OAEArpC,UAAA,EAEAykD,QAAA,WAEA,GAAAuhC,eAAA,GAAAv8F,SACAw6D,IAAA,GAAAn3C,KACA0mE,OAAA,GAAA92E,OAEA,OAAA,UAAA4nD,UAAAC,YA0BA,QAAAgkC,WAAAtzE,MAAAx4B,OAEA,GAAA+rG,oBAAAvkC,IAAAm9B,kBAAAnsE,MAEA,IAAAuzE,mBAAAC,iBAAA,CAEA,GAAA1B,gBAAA9iC,IAAAi9B,oBAAAjsE,MACA8xE,gBAAAryF,aAAAD,YAEA,IAAA2d,UAAAkyC,UAAAL,IAAAl3C,OAAA+iD,WAAAi3B,eAEA,IAAA30E,SAAAkyC,UAAApsD,MAAAka,SAAAkyC,UAAAnsD,IAAA,MAEAosD,YAAA34F,MAEAwmD,SAAAA,SACAs2E,cAAApuH,KAAA8kE,KAAAopD,oBACAvzE,MAAA8xE,eAAAtxG,QACAgH,MAAAA,MACA2mB,KAAA,KACA1F,OAAAA,UA5CA,GAAAA,QAAAhyC,KACAqyC,SAAAryC,KAAAqyC,SACAtJ,YAAA/oC,KAAA+oC,YACA5V,UAAAylE,UAAAJ,OAAA7a,OAAAxqD,SAUA,IANA,OAAAkf,SAAAgK,gBAAAhK,SAAAiqD,wBAEAwrB,OAAA3+E,KAAAkJ,SAAAgK,gBACAyrE,OAAA9+E,aAAAD,aACA++E,OAAA52E,QAAA/d,WAEA,IAAAylE,UAAAL,IAAAqvB,iBAAAE,QAAA,CAIAwS,cAAAl0D,WAAAr9B,aACAwvD,IAAApvD,KAAAyvD,UAAAL,KAAAvvD,aAAAsxF,cAEA,IAAA2C,gBAAA9pG,YAAAnzB,KAAA8mC,MAAAtvB,EAAAxX,KAAA8mC,MAAA7sB,EAAAja,KAAA8mC,MAAAlK,GAAA,GACAmgG,iBAAAE,eAAAA,eACAlyF,SAAA,GAAAjN,QA8BA,IAAAuU,SAAAQ,iBAAA,CAEA,GAAA9hB,OAAAshB,SAAAthB,MACAppB,WAAA0qC,SAAA1qC,WACAiyF,UAAAjyF,WAAAojC,SAAAl2B,KAEA,IAAA,OAAAkc,MAIA,IAAA,GAFA6sB,SAAA7sB,MAAAlc,MAEA/Q,EAAA,EAAAyyC,GAAAqH,QAAAh+C,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAA8G,GAAAgzC,QAAA95C,EAEAinC,UAAAi7B,UAAA4zB,UAAA,EAAAhvF,GAEAiyH,UAAA9xF,SAAAngC,OAMA,KAAA,GAAA9G,GAAA,EAAA4f,EAAAk2E,UAAAh6F,OAAA,EAAAkE,EAAA4f,EAAA5f,IAEAinC,SAAAi7B,UAAA4zB,UAAA,EAAA91F,GAEA+4H,UAAA9xF,SAAAjnC,OAUA,KAAA,GAFAygC,UAAA8N,SAAA9N,SAEAzgC,EAAA,EAAA4f,EAAA6gB,SAAA3kC,OAAAkE,EAAA4f,EAAA5f,IAEA+4H,UAAAt4F,SAAAzgC,GAAAA,QAUAimB,MAAA,WAEA,MAAA,IAAA/pB,MAAA8rF,YAAA9rF,KAAAqyC,SAAAryC,KAAA6sC,UAAA1D,KAAAnpC,SAkBA49E,MAAAphF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAAlO,QAgCAC,aAAArhF,UAAAqN,OAAA88F,OAAA9rE,QAAAr+B,WACAqhF,aAAArhF,UAAAsvF,YAAAjO,aAyBAG,kBAAAxhF,UAAAqN,OAAA88F,OAAA9rE,QAAAr+B,WACAwhF,kBAAAxhF,UAAAsvF,YAAA9N,kBAEAA,kBAAAxhF,UAAAs6D,qBAAA,EAgCAmnB,aAAAzhF,UAAAqN,OAAA88F,OAAA9rE,QAAAr+B,WACAyhF,aAAAzhF,UAAAsvF,YAAA7N,aACAA,aAAAzhF,UAAA+7D,gBAAA,EA4KA2lB,kBAAA1hF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACA0hF,kBAAA1hF,UAAAsvF,YAAA5N,kBA6BAU,mBAAApiF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAoiF,mBAAApiF,UAAAsvF,YAAAlN,mBAuHAG,yBAAAviF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACAuiF,yBAAAviF,UAAAsvF,YAAA/M,yBA6BAM,mBAAA7iF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACA6iF,mBAAA7iF,UAAAsvF,YAAAzM,mBA8SAC,yBAAA9iF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACA8iF,yBAAA9iF,UAAAsvF,YAAAxM,yBAyBA4B,oBAAA1kF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACA0kF,oBAAA1kF,UAAAsvF,YAAA5K,oBAyBAC,0BAAA3kF,UAAAqN,OAAA88F,OAAArnB,yBAAA9iF,WACA2kF,0BAAA3kF,UAAAsvF,YAAA3K,0BAyBAC,mBAAA5kF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACA4kF,mBAAA5kF,UAAAsvF,YAAA1K,mBAyBAC,yBAAA7kF,UAAAqN,OAAA88F,OAAArnB,yBAAA9iF,WACA6kF,yBAAA7kF,UAAAsvF,YAAAzK,yBAyBAC,oBAAA9kF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACA8kF,oBAAA9kF,UAAAsvF,YAAAxK,oBAgCAC,0BAAA/kF,UAAAqN,OAAA88F,OAAArnB,yBAAA9iF,WACA+kF,0BAAA/kF,UAAAsvF,YAAAvK,0BAyBAC,qBAAAhlF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAglF,qBAAAhlF,UAAAsvF,YAAAtK,qBAwDAC,2BAAAjlF,UAAAqN,OAAA88F,OAAArnB,yBAAA9iF,WACAilF,2BAAAjlF,UAAAsvF,YAAArK,2BA6CAC,aAAAllF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAklF,aAAAllF,UAAAsvF,YAAApK,aAuKAM,mBAAAxlF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACAwlF,mBAAAxlF,UAAAsvF,YAAA9J,mBAiCAa,kBAAArmF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAqmF,kBAAArmF,UAAAsvF,YAAAjJ,kBAwJAI,wBAAAzmF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACAymF,wBAAAzmF,UAAAsvF,YAAA7I,wBA6BAY,cAAArnF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAqnF,cAAArnF,UAAAsvF,YAAAjI,cAwGAE,oBAAAvnF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACAunF,oBAAAvnF,UAAAsvF,YAAA/H,mBAMA,IAAAoD,aAIAgyC,KAAA,SAAA+D,SAKA,IAAA,GAHA3lH,GAAA2lH,QAAAt9H,OACAgL,EAAA,EAEAopD,EAAAz8C,EAAA,EAAAwrE,EAAA,EAAAA,EAAAxrE,EAAAy8C,EAAA+uB,IAEAn4E,GAAAsyH,QAAAlpE,GAAAx8C,EAAA0lH,QAAAn6C,GAAA9oE,EAAAijH,QAAAn6C,GAAAvrE,EAAA0lH,QAAAlpE,GAAA/5C,CAIA,OAAA,GAAArP,GAIAuyH,YAAA,WAgBA,QAAAC,MAAAF,QAAAxpH,EAAA4rB,EAAAvc,EAAAxL,EAAA8lH,OAEA,GAAArpE,GACAw2C,GAAAC,GAAAE,GAAAC,GACAjnB,GAAAC,GAAA05C,GAAAC,EAWA,IATA/yB,GAAA0yB,QAAAG,MAAA3pH,IAAA8D,EACAizF,GAAAyyB,QAAAG,MAAA3pH,IAAAuG,EAEA0wF,GAAAuyB,QAAAG,MAAA/9F,IAAA9nB,EACAozF,GAAAsyB,QAAAG,MAAA/9F,IAAArlB,EAEA0pE,GAAAu5C,QAAAG,MAAAt6G,IAAAvL,EACAosE,GAAAs5C,QAAAG,MAAAt6G,IAAA9I,GAEA0wF,GAAAH,KAAA5mB,GAAA6mB,KAAAG,GAAAH,KAAA9mB,GAAA6mB,KAAA,EAAA,OAAA,CAEA,IAAA5a,IAAAC,GAAA2tC,GAAAC,GAAAC,GAAAC,GACAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IACAC,SAAAC,SAAAC,QAMA,KAJAxuC,GAAAjM,GAAAgnB,GAAA9a,GAAAjM,GAAAgnB,GACA4yB,GAAAhzB,GAAA7mB,GAAA85C,GAAAhzB,GAAA7mB,GACA85C,GAAA/yB,GAAAH,GAAAmzB,GAAA/yB,GAAAH,GAEAz2C,EAAA,EAAAA,EAAAz8C,EAAAy8C,IAKA,GAHAspE,GAAAJ,QAAAG,MAAArpE,IAAAx8C,EACA+lH,GAAAL,QAAAG,MAAArpE,IAAA/5C,IAEAqjH,KAAA9yB,IAAA+yB,KAAA9yB,IACA6yB,KAAA3yB,IAAA4yB,KAAA3yB,IACA0yB,KAAA35C,IAAA45C,KAAA35C,MAEAg6C,IAAAN,GAAA9yB,GAAAqzB,IAAAN,GAAA9yB,GACAqzB,IAAAR,GAAA3yB,GAAAozB,IAAAR,GAAA3yB,GACAozB,IAAAV,GAAA35C,GAAAs6C,IAAAV,GAAA35C,GAIAw6C,SAAAxuC,GAAAmuC,IAAAluC,GAAAiuC,IACAI,SAAAR,GAAAG,IAAAF,GAAAC,IACAO,SAAAX,GAAAS,IAAAR,GAAAO,IAEAI,WAAAv9B,OAAAC,SAAAq9B,WAAAt9B,OAAAC,SAAAo9B,WAAAr9B,OAAAC,SAAA,OAAA,CAIA,QAAA,EAMA,MAAA,UAAAo8B,QAAAt/E,SAEA,GAAArmC,GAAA2lH,QAAAt9H,MAEA,IAAA2X,EAAA,EAAA,MAAA,KAEA,IAMA7D,GAAA4rB,EAAAvc,EANA8B,UACAw4G,SACAgB,cAMA,IAAAl3C,WAAAgyC,KAAA+D,SAAA,EAEA,IAAA59F,EAAA,EAAAA,EAAA/nB,EAAA+nB,IAAA+9F,MAAA/9F,GAAAA,MAIA,KAAAA,EAAA,EAAAA,EAAA/nB,EAAA+nB,IAAA+9F,MAAA/9F,GAAA/nB,EAAA,EAAA+nB,CAIA,IAAAg/F,IAAA/mH,EAIA4hC,MAAA,EAAAmlF,EAEA,KAAAh/F,EAAAg/F,GAAA,EAAAA,GAAA,GAAA,CAIA,GAAAnlF,SAAA,EASA,MAFAppC,SAAAH,KAAA,qEAEAguC,QAAAygF,YACAx5G,MAUA,IAJAnR,EAAA4rB,EAAAg/F,IAAA5qH,IAAAA,EAAA,GACA4rB,EAAA5rB,EAAA,EAAA4qH,IAAAh/F,IAAAA,EAAA,GACAvc,EAAAuc,EAAA,EAAAg/F,IAAAv7G,IAAAA,EAAA,GAEAq6G,KAAAF,QAAAxpH,EAAA4rB,EAAAvc,EAAAu7G,GAAAjB,OAAA,CAEA,GAAAzyH,GAAAC,EAAAkX,EAAAnM,EAAAse,CAmBA,KAfAtpB,EAAAyyH,MAAA3pH,GACA7I,EAAAwyH,MAAA/9F,GACAvd,EAAAs7G,MAAAt6G,GAIA8B,OAAA3kB,MAAAg9H,QAAAtyH,GACAsyH,QAAAryH,GACAqyH,QAAAn7G,KAGAs8G,YAAAn+H,MAAAm9H,MAAA3pH,GAAA2pH,MAAA/9F,GAAA+9F,MAAAt6G,KAIAnN,EAAA0pB,EAAApL,EAAAoL,EAAA,EAAApL,EAAAoqG,GAAA1oH,IAAAse,IAEAmpG,MAAAznH,GAAAynH,MAAAnpG,EAIAoqG,MAIAnlF,MAAA,EAAAmlF,IAMA,MAAA1gF,SAAAygF,YACAx5G,WAMAyiE,iBAAA,SAAA41C,QAAAh2C,OAEA,QAAAq3C,iBAAAp5E,QAEA,GAAAzhC,GAAAyhC,OAAAvlD,MAEA8jB,GAAA,GAAAyhC,OAAAzhC,EAAA,GAAA83C,OAAArW,OAAA,KAEAA,OAAAiP,MASA,QAAAoqE,2BAAAC,SAAAC,SAAAC,WAGA,MAAAF,UAAAjnH,IAAAknH,SAAAlnH,EAEAinH,SAAAjnH,EAAAknH,SAAAlnH,EAEAinH,SAAAjnH,GAAAmnH,UAAAnnH,GAAAmnH,UAAAnnH,GAAAknH,SAAAlnH,EAIAknH,SAAAlnH,GAAAmnH,UAAAnnH,GAAAmnH,UAAAnnH,GAAAinH,SAAAjnH,EAMAinH,SAAAxkH,EAAAykH,SAAAzkH,EAEAwkH,SAAAxkH,GAAA0kH,UAAA1kH,GAAA0kH,UAAA1kH,GAAAykH,SAAAzkH,EAIAykH,SAAAzkH,GAAA0kH,UAAA1kH,GAAA0kH,UAAA1kH,GAAAwkH,SAAAxkH,EAQA,QAAA2kH,uBAAAC,UAAAC,UAAAC,UAAAC,UAAAC,uBAEA,GAAAC,QAAAJ,UAAAtnH,EAAAqnH,UAAArnH,EAAA2nH,OAAAL,UAAA7kH,EAAA4kH,UAAA5kH,EACAmlH,OAAAJ,UAAAxnH,EAAAunH,UAAAvnH,EAAA6nH,OAAAL,UAAA/kH,EAAA8kH,UAAA9kH,EAEAqlH,WAAAT,UAAArnH,EAAAunH,UAAAvnH,EACA+nH,WAAAV,UAAA5kH,EAAA8kH,UAAA9kH,EAEAmZ,MAAA+rG,OAAAC,OAAAF,OAAAG,OACAG,SAAAL,OAAAG,WAAAJ,OAAAK,UAEA,IAAA3wH,KAAAc,IAAA0jB,OAAAytE,OAAAC,QAAA,CAIA,GAAA2+B,SACA,IAAArsG,MAAA,EAAA,CAEA,GAAAosG,SAAA,GAAAA,SAAApsG,MAAA,QAEA,KADAqsG,SAAAJ,OAAAC,WAAAF,OAAAG,YACA,GAAAE,SAAArsG,MAAA,aAEA,CAEA,GAAAosG,SAAA,GAAAA,SAAApsG,MAAA,QAEA,KADAqsG,SAAAJ,OAAAC,WAAAF,OAAAG,YACA,GAAAE,SAAArsG,MAAA,SAMA,GAAA,IAAAqsG,SAEA,OAAA,uBACA,IAAAD,UAAAA,WAAApsG,OACAyrG,aAGA,IAAAY,WAAArsG,MAEA,OAAA,uBACA,IAAAosG,UAAAA,WAAApsG,OACA0rG,aAIA,IAAA,IAAAU,SAAA,OAAAT,UACA,IAAAS,WAAApsG,MAAA,OAAA4rG,UAGA,IAAAU,YAAAD,SAAArsG,KACA,SAAA5b,EAAAqnH,UAAArnH,EAAAkoH,WAAAR,OACAjlH,EAAA4kH,UAAA5kH,EAAAylH,WAAAP,SAKA,GAAA,IAAAK,UACAH,OAAAC,YAAAF,OAAAG,WAAA,QAGA,IAAAI,QAAA,IAAAT,QAAA,IAAAC,OACAS,OAAA,IAAAR,QAAA,IAAAC,MAEA,IAAAM,QAAAC,OAEA,MAAAf,WAAArnH,IAAAunH,UAAAvnH,GACAqnH,UAAA5kH,IAAA8kH,UAAA9kH,MACA4kH,UAIA,IAAAc,OAEA,MAAAnB,2BAAAO,UAAAC,UAAAH,YACAA,aAIA,IAAAe,OAEA,MAAApB,2BAAAK,UAAAC,UAAAC,YACAA,aAKA,IAAAc,SAAAC,QAAAC,WAAAC,WACAC,QAAAC,QAAAC,WAAAC,UAsDA,OArDA,KAAAlB,QAGAL,UAAArnH,EAAAsnH,UAAAtnH,GAEAqoH,QAAAhB,UAAAkB,WAAAlB,UAAArnH,EACAsoH,QAAAhB,UAAAkB,WAAAlB,UAAAtnH,IAIAqoH,QAAAf,UAAAiB,WAAAjB,UAAAtnH,EACAsoH,QAAAjB,UAAAmB,WAAAnB,UAAArnH,GAGAunH,UAAAvnH,EAAAwnH,UAAAxnH,GAEAyoH,QAAAlB,UAAAoB,WAAApB,UAAAvnH,EACA0oH,QAAAlB,UAAAoB,WAAApB,UAAAxnH,IAIAyoH,QAAAjB,UAAAmB,WAAAnB,UAAAxnH,EACA0oH,QAAAnB,UAAAqB,WAAArB,UAAAvnH,KAOAqnH,UAAA5kH,EAAA6kH,UAAA7kH,GAEA4lH,QAAAhB,UAAAkB,WAAAlB,UAAA5kH,EACA6lH,QAAAhB,UAAAkB,WAAAlB,UAAA7kH,IAIA4lH,QAAAf,UAAAiB,WAAAjB,UAAA7kH,EACA6lH,QAAAjB,UAAAmB,WAAAnB,UAAA5kH,GAGA8kH,UAAA9kH,EAAA+kH,UAAA/kH,GAEAgmH,QAAAlB,UAAAoB,WAAApB,UAAA9kH,EACAimH,QAAAlB,UAAAoB,WAAApB,UAAA/kH,IAIAgmH,QAAAjB,UAAAmB,WAAAnB,UAAA/kH,EACAimH,QAAAnB,UAAAqB,WAAArB,UAAA9kH,IAKA8lH,YAAAI,WAEAH,WAAAG,cACAH,aAAAG,WAEAlB,0BACAgB,SAGAD,YAAAI,YAAAH,QAAAH,UACAG,QAAAC,SAIAH,WAAAK,cACAL,aAAAK,WAEAnB,0BACAY,SAGAG,YAAAI,YAAAP,QAAAC,UACAD,QAAAK,SAQA,QAAAG,oBAAAC,SAAAC,YAAAC,UAAA7B,WAKA,GAAA8B,YAAAF,YAAA/oH,EAAA8oH,SAAA9oH,EAAAkpH,WAAAH,YAAAtmH,EAAAqmH,SAAArmH,EACA0mH,SAAAH,UAAAhpH,EAAA8oH,SAAA9oH,EAAAopH,SAAAJ,UAAAvmH,EAAAqmH,SAAArmH,EACA4mH,SAAAlC,UAAAnnH,EAAA8oH,SAAA9oH,EAAAspH,SAAAnC,UAAA1kH,EAAAqmH,SAAArmH,EAGA8mH,aAAAN,WAAAG,SAAAF,WAAAC,SACAK,gBAAAP,WAAAK,SAAAJ,WAAAG;wTAEA,IAAAjyH,KAAAc,IAAAqxH,cAAAlgC,OAAAC,QAAA,CAIA,GAAAmgC,eAAAJ,SAAAD,SAAAE,SAAAH,QAGA,OAAAI,cAAA,EAGAC,iBAAA,GAAAC,eAAA,EAKAD,iBAAA,GAAAC,eAAA,EAQA,MAAAD,iBAAA,EAnPAzC,gBAAArB,SACAh2C,MAAA5qF,QAAAiiI,gBAuaA,KAAA,GARAz6H,GAAAyyC,GAAA4e,EAAAzd,KACAtnC,IAAA2gB,MACAmwG,gBAIAC,UAAAjE,QAAA31C,SAEAptE,EAAA,EAAAinH,GAAAl6C,MAAAtnF,OAAAua,EAAAinH,GAAAjnH,IAEA5d,MAAAC,UAAA0D,KAAAJ,MAAAqhI,UAAAj6C,MAAA/sE,GAQA,KAAArW,EAAA,EAAAyyC,GAAA4qF,UAAAvhI,OAAAkE,EAAAyyC,GAAAzyC,IAEAsM,IAAA+wH,UAAAr9H,GAAA0T,EAAA,IAAA2pH,UAAAr9H,GAAAmW,MAEA9M,KAAA+zH,aAAA9wH,MAEAL,QAAAH,KAAA,oCAAAQ,IAAAtM,GAIAo9H,aAAA9wH,KAAAtM,CAKA,IAAAu9H,mBAvMA,SAAAnE,QAAAh2C,OA0FA,IAAA,GAvFAo6C,MAiFAC,UAAAC,WACAC,QAAAC,OACAC,QAAAC,OACAC,UAAAC,UACAC,SAAAC,SAtFAp7C,MAAAs2C,QAAA31C,SA2DA06C,cAyBAC,cAIA/nH,EAAA,EAAAinH,GAAAl6C,MAAAtnF,OAAAua,EAAAinH,GAAAjnH,IAEA8nH,WAAA/hI,KAAAia,EAMA,KAFA,GAAAgoH,eAAA,EACAC,QAAA,EAAAH,WAAAriI,OACAqiI,WAAAriI,OAAA,GAAA,CAGA,KADAwiI,QACA,EAAA,CAEAryH,QAAAghD,IAAA,sGACA,OAMA,IAAAywE,WAAAW,cAAAX,WAAA56C,MAAAhnF,OAAA4hI,aAAA,CAEAC,QAAA76C,MAAA46C,YACAD,WAAA,CAGA,KAAA,GAAApnH,GAAA,EAAAA,EAAA8nH,WAAAriI,OAAAua,IAMA,GAJAwnH,QAAAM,WAAA9nH,GAGAynH,OAAAH,QAAAjqH,EAAA,IAAAiqH,QAAAxnH,EAAA,IAAA0nH,YACAx0H,KAAA+0H,WAAAN,QAAA,CAEAN,KAAAp6C,MAAAy6C,QACA,KAAA,GAAAU,IAAA,EAAAA,GAAAf,KAAA1hI,OAAAyiI,KAGA,GADAX,OAAAJ,KAAAe,IA1HA,SAAAC,WAAAC,WAGA,GAAAC,cAAA57C,MAAAhnF,OAAA,EAEA6iI,aAAAH,WAAA,CACAG,cAAA,IAAAA,aAAAD,aAEA,IAAAE,cAAAJ,WAAA,CACAI,cAAAF,eAAAE,aAAA,EAEA,IAAAC,aAAAtC,mBAAAz5C,MAAA07C,YAAA17C,MAAA67C,cAAA77C,MAAA87C,cAAApB,KAAAiB,WACA,KAAAI,YAGA,OAAA,CAKA,IAAAC,aAAAtB,KAAA1hI,OAAA,EAEAijI,YAAAN,UAAA,CACAM,aAAA,IAAAA,YAAAD,YAEA,IAAAE,aAAAP,UAAA,CAIA,OAHAO,aAAAF,cAAAE,YAAA,MAEAH,YAAAtC,mBAAAiB,KAAAiB,WAAAjB,KAAAuB,aAAAvB,KAAAwB,aAAAl8C,MAAA07C,eA+FAd,WAAAa,MAnFA,SAAAU,UAAAC,UAGA,GAAAC,MAAAC,QAAA/I,YACA,KAAA8I,KAAA,EAAAA,KAAAr8C,MAAAhnF,OAAAqjI,OAIA,GAFAC,QAAAD,KAAA,EAAAC,SAAAt8C,MAAAhnF,OACAu6H,aAAAyE,sBAAAmE,UAAAC,SAAAp8C,MAAAq8C,MAAAr8C,MAAAs8C,UAAA,GACA/I,aAAAv6H,OAAA,EAAA,OAAA,CAIA,QAAA,GAwEA6hI,QAAAC,UAlEA,SAAAqB,UAAAC,UAGA,GAAAG,OAAAC,QACAC,KAAAH,QAAA/I,YACA,KAAAgJ,MAAA,EAAAA,MAAAlB,WAAAriI,OAAAujI,QAGA,IADAC,QAAAl8C,MAAA+6C,WAAAkB,QACAE,KAAA,EAAAA,KAAAD,QAAAxjI,OAAAyjI,OAIA,GAFAH,QAAAG,KAAA,EAAAH,SAAAE,QAAAxjI,OACAu6H,aAAAyE,sBAAAmE,UAAAC,SAAAI,QAAAC,MAAAD,QAAAF,UAAA,GACA/I,aAAAv6H,OAAA,EAAA,OAAA,CAKA,QAAA,GAkDA6hI,QAAAC,QAAA,CAEAH,UAAAc,GACAJ,WAAA3gC,OAAAnnF,EAAA,GAEA0nH,UAAAj7C,MAAAv2E,MAAA,EAAAmxH,WAAA,GACAM,UAAAl7C,MAAAv2E,MAAAmxH,YACAO,SAAAT,KAAAjxH,MAAAkxH,WACAS,SAAAV,KAAAjxH,MAAA,EAAAkxH,UAAA,GAEA36C,MAAAi7C,UAAAt6C,OAAAw6C,UAAAx6C,OAAAy6C,UAAAz6C,OAAAu6C,WAEAK,cAAAX,UAKA,OAGA,GAAAD,WAAA,EAAA,KAEAW,YAAAN,SAAA,EAGA,GAAAL,WAAA,EAAA,OAMA,MAAA36C,QAsCAs2C,QAAAh2C,OAEAo8C,UAAAn8C,WAAAg2C,YAAAkE,mBAAA,EAKA,KAAAv9H,EAAA,EAAAyyC,GAAA+sF,UAAA1jI,OAAAkE,EAAAyyC,GAAAzyC,IAIA,IAFA4zC,KAAA4rF,UAAAx/H,GAEAqxD,EAAA,EAAAA,EAAA,EAAAA,IAEA/kD,IAAAsnC,KAAAyd,GAAA39C,EAAA,IAAAkgC,KAAAyd,GAAAl7C,MAIA9M,MAFA4jB,MAAAmwG,aAAA9wH,QAIAsnC,KAAAyd,GAAApkC,MAQA,OAAAuyG,WAAA/7C,UAIAH,YAAA,SAAAm8C,KAEA,MAAAp8C,YAAAgyC,KAAAoK,KAAA,GAgDAv/C,iBAAAxnF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAwnF,gBAAAxnF,UAAAsvF,YAAA9H,gBAgCAE,sBAAA1nF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACA0nF,sBAAA1nF,UAAAsvF,YAAA5H,sBAEAA,sBAAA1nF,UAAAgnI,UAAA,WAEA,GAAAC,mBAAAzjI,KAAA66F,aAAA,YACA6oC,cAAAD,kBAAAlnI,MAAAC,UAAA6T,MAAAzJ,KAAA68H,kBAAA5uH,UAEA8uH,YAAA3jI,KAAA66F,aAAA,MACAjhB,QAAA+pD,YAAApnI,MAAAC,UAAA6T,MAAAzJ,KAAA+8H,YAAA9uH,UAEA+uH,eAAA5jI,KAAA+wB,KAGA,QACAga,SAAA24F,cACAl9F,GAAAozC,QACA7oD,MALA6yG,eAAArnI,MAAAC,UAAA6T,MAAAzJ,KAAAg9H,eAAA/uH,YAUAqvE,sBAAA1nF,UAAA2nF,aAAA,SAAAF,OAAAlnD,SAEA,GAAA8mG,IAAA5/C,OAAArkF,MACAm9B,SAAA+mG,OAAA9jI,KAAAwjI,WAEA,KAAA,GAAA5tH,GAAA,EAAAA,EAAAiuH,GAAAjuH,IAAA,CAEA,GAAAgxE,OAAA3C,OAAAruE,EACA5V,MAAA2mF,SAAAC,MAAA7pD,SAIA/8B,KAAA+/C,SAAAhjB,QAAA+mG,OAAA/yG,OACA/wB,KAAAggD,aAAA,WAAA,GAAAvC,wBAAA1gB,QAAA+mG,OAAA/4F,SAAA,IACA/qC,KAAAggD,aAAA,KAAA,GAAAvC,wBAAA1gB,QAAA+mG,OAAAt9F,GAAA,KAIA09C,sBAAA1nF,UAAAmqF,SAAA,SAAAC,MAAA7pD,SA4GA,QAAAgnG,UAAAC,GAAA7H,IAAAp6F,MAIA,MAFAo6F,MAAApsH,QAAAiuB,MAAA,6CAEAm+F,IAAApyG,QAAAg+B,eAAAhmB,MAAAxkC,IAAAymI,IAYA,QAAAC,aAAAC,KAAAC,OAAAC,QASA,GAAAC,WAAAC,UAAAC,UAKAC,SAAAN,KAAA1sH,EAAA2sH,OAAA3sH,EACAitH,SAAAP,KAAAjqH,EAAAkqH,OAAAlqH,EACAyqH,SAAAN,OAAA5sH,EAAA0sH,KAAA1sH,EACAmtH,SAAAP,OAAAnqH,EAAAiqH,KAAAjqH,EAEA2qH,aAAAJ,SAAAA,SAAAC,SAAAA,SAGAI,WAAAL,SAAAG,SAAAF,SAAAC,QAEA,IAAA91H,KAAAc,IAAAm1H,YAAAhkC,OAAAC,QAAA,CAMA,GAAAgkC,YAAAl2H,KAAA8kE,KAAAkxD,cACAG,WAAAn2H,KAAA8kE,KAAAgxD,SAAAA,SAAAC,SAAAA,UAIAK,cAAAb,OAAA3sH,EAAAitH,SAAAK,WACAG,cAAAd,OAAAlqH,EAAAuqH,SAAAM,WAEAI,cAAAd,OAAA5sH,EAAAmtH,SAAAI,WACAI,cAAAf,OAAAnqH,EAAAyqH,SAAAK,WAIAK,KAAAF,cAAAF,eAAAL,UACAQ,cAAAF,eAAAP,WACAF,SAAAG,SAAAF,SAAAC,SAIAL,WAAAW,cAAAR,SAAAY,GAAAlB,KAAA1sH,EACA8sH,UAAAW,cAAAR,SAAAW,GAAAlB,KAAAjqH,CAIA,IAAAorH,eAAAhB,UAAAA,UAAAC,UAAAA,SACA,IAAAe,eAAA,EAEA,MAAA,IAAAzqG,SAAAypG,UAAAC,UAIAC,WAAA31H,KAAA8kE,KAAA2xD,cAAA,OAIA,CAIA,GAAAC,eAAA,CACAd,UAAA3jC,OAAAC,QAEA4jC,SAAA7jC,OAAAC,UAEAwkC,cAAA,GAMAd,UAAA3jC,OAAAC,QAEA4jC,UAAA7jC,OAAAC,UAEAwkC,cAAA,GAMA12H,KAAA0a,KAAAm7G,YAAA71H,KAAA0a,KAAAq7G,YAEAW,cAAA,GAQAA,cAGAjB,WAAAI,SACAH,UAAAE,SACAD,UAAA31H,KAAA8kE,KAAAkxD,gBAKAP,UAAAG,SACAF,UAAAG,SACAF,UAAA31H,KAAA8kE,KAAAkxD,aAAA,IAMA,MAAA,IAAAhqG,SAAAypG,UAAAE,UAAAD,UAAAC,WA0RA,QAAAgB,WAAArI,QAAAsI,aAEA,GAAA5lH,GAAAzV,CAGA,KAFArG,EAAAo5H,QAAAt9H,SAEAkE,GAAA,GAAA,CAEA8b,EAAA9b,EACAqG,EAAArG,EAAA,EACAqG,EAAA,IAAAA,EAAA+yH,QAAAt9H,OAAA,EAIA,IAAAgW,GAAA,EACAiuH,GAAA4B,MAAA,EAAAC,aAEA,KAAA9vH,EAAA,EAAAA,EAAAiuH,GAAAjuH,IAAA,CAEA,GAAA+vH,OAAAC,KAAAhwH,EACAiwH,MAAAD,MAAAhwH,EAAA,EAOAkwH,IALAN,YAAA5lH,EAAA+lH,MACAH,YAAAr7H,EAAAw7H,MACAH,YAAAr7H,EAAA07H,MACAL,YAAA5lH,EAAAimH,MAEA3I,QAAAtnH,EAAAiuH,GAAAjkH,EAAAzV,KAQA,QAAAm1B,GAAA9nB,EAAAyC,EAAA2iB,GAEAmpG,YAAA7lI,KAAAsX,GACAuuH,YAAA7lI,KAAA+Z,GACA8rH,YAAA7lI,KAAA08B,GAKA,QAAAopG,IAAAp7H,EAAAC,EAAAkX,GAEAkkH,UAAAr7H,GACAq7H,UAAAp7H,GACAo7H,UAAAlkH,EAEA,IAAAmkH,WAAAxC,cAAA9jI,OAAA,EACAk+C,IAAAqoF,MAAAC,cAAAzyF,MAAA+vF,cAAAwC,UAAA,EAAAA,UAAA,EAAAA,UAAA,EAEAG,OAAAvoF,IAAA,IACAuoF,MAAAvoF,IAAA,IACAuoF,MAAAvoF,IAAA,IAIA,QAAAgoF,IAAAl7H,EAAAC,EAAAkX,EAAA7H,EAAAosH,YAAAC,UAAAC,YAAAC,cAAAC,eAEAT,UAAAr7H,GACAq7H,UAAAp7H,GACAo7H,UAAA/rH,GAEA+rH,UAAAp7H,GACAo7H,UAAAlkH,GACAkkH,UAAA/rH,EAGA,IAAAgsH,WAAAxC,cAAA9jI,OAAA,EACAk+C,IAAAqoF,MAAAQ,mBAAAhzF,MAAA+vF,cAAAwC,UAAA,EAAAA,UAAA,EAAAA,UAAA,EAAAA,UAAA,EAEAG,OAAAvoF,IAAA,IACAuoF,MAAAvoF,IAAA,IACAuoF,MAAAvoF,IAAA,IAEAuoF,MAAAvoF,IAAA,IACAuoF,MAAAvoF,IAAA,IACAuoF,MAAAvoF,IAAA,IAIA,QAAAmoF,WAAAl1G,OAEA61G,aAAA1mI,KAAAwjI,cAAA9jI,OAAA,GACA8jI,cAAAxjI,KAAA6lI,YAAA,EAAAh1G,MAAA,IACA2yG,cAAAxjI,KAAA6lI,YAAA,EAAAh1G,MAAA,IACA2yG,cAAAxjI,KAAA6lI,YAAA,EAAAh1G,MAAA,IAKA,QAAAs1G,OAAAQ,SAEAjtD,QAAA15E,KAAA2mI,QAAArvH,GACAoiE,QAAA15E,KAAA2mI,QAAA5sH,GAzmBA,GAqBA6sH,YAKAC,WAAAC,SAAA31F,OAAA41F,UA1BAnD,OAAA/mG,QAAA+mG,OAAA/mG,QAAA+mG,OAAA9jI,KAAAwjI,YACAE,cAAAI,OAAA/4F,SACA67F,aAAA9C,OAAA/yG,MACA6oD,QAAAkqD,OAAAt9F,GAEAu/F,eAGAphD,WAAAx3E,KAAA4vB,QAAA4nD,OAAA5nD,QAAA4nD,OAAA,IAEAC,mBAAAz3E,KAAA4vB,QAAA6nD,eAAA7nD,QAAA6nD,eAAA,EACAC,cAAA13E,KAAA4vB,QAAA8nD,UAAA9nD,QAAA8nD,UAAAD,eAAA,EACA8gD,kBAAAv4H,KAAA4vB,QAAA2oG,cAAA3oG,QAAA2oG,cAAA,EAEA5gD,iBAAA33E,KAAA4vB,QAAA+nD,cAAA/nD,QAAA+nD,aAEAJ,kBAAAv3E,KAAA4vB,QAAA2nD,cAAA3nD,QAAA2nD,cAAA,GAEA+gD,UAAAt4H,KAAA4vB,QAAA0oG,MAAA1oG,QAAA0oG,MAAA,EAEAyB,YAAAnqG,QAAAmqG,YACAC,eAAA,EAGAhB,UAAAh5H,KAAA4vB,QAAAqqG,YAAArqG,QAAAqqG,YAAApjD,gBAAAqjD,gBAGAH,eAEAJ,WAAAI,YAAAI,gBAAA7B,OAEA0B,eAAA,EACAriD,cAAA,EAMAiiD,eAAA55H,KAAA4vB,QAAAwlD,OAAAxlD,QAAAwlD,OAAA2kD,YAAAtkD,oBAAA6iD,OAAA,GAIAuB,SAAA,GAAAlpG,SACAuT,OAAA,GAAAvT,SACAmpG,UAAA,GAAAnpG,UAMAgnD,eAEA4gD,cAAA,EACA9gD,eAAA,EACAC,UAAA,EAMA,IAAA0iD,OAAAptH,EAAAinH,GACAztF,MAAA3zC,KAEAwnI,YAAA5gD,MAAAG,cAAArC,eAEAngD,SAAAijG,YAAA5gD,MACAM,MAAAsgD,YAAAtgD,KAIA,KAFAC,WAAAC,YAAA7iD,UAQA,IAJAA,SAAAA,SAAA8iD,UAIAltE,EAAA,EAAAinH,GAAAl6C,MAAAtnF,OAAAua,EAAAinH,GAAAjnH,IAEAotH,MAAArgD,MAAA/sE,GAEAgtE,WAAAC,YAAAmgD,SAEArgD,MAAA/sE,GAAAotH,MAAAlgD,UASA,IAAA7iD,OAAA2iD,WAAAG,iBAAA/iD,SAAA2iD,OAIAg2C,QAAA34F,QAEA,KAAApqB,EAAA,EAAAinH,GAAAl6C,MAAAtnF,OAAAua,EAAAinH,GAAAjnH,IAEAotH,MAAArgD,MAAA/sE,GAEAoqB,SAAAA,SAAAgjD,OAAAggD,MAkJA,KAAA,GArIA18H,GAAA48H,GAAAvzG,EAAA0I,EACA8qG,KACAhwF,KADAkuF,KAAArhG,SAAA3kC,OACA+nI,KAAAnjG,MAAA5kC,OAiIAgoI,oBAEA9jI,EAAA,EAAAyyC,GAAA2mF,QAAAt9H,OAAAggB,EAAA22B,GAAA,EAAApsC,EAAArG,EAAA,EAAAA,EAAAyyC,GAAAzyC,IAAA8b,IAAAzV,IAEAyV,IAAA22B,KAAA32B,EAAA,GACAzV,IAAAosC,KAAApsC,EAAA,GAKAy9H,iBAAA9jI,GAAAmgI,YAAA/G,QAAAp5H,GAAAo5H,QAAAt9G,GAAAs9G,QAAA/yH,GAIA,IACA09H,kBADAC,kBACAC,kBAAAH,iBAAArgD,QAEA,KAAAptE,EAAA,EAAAinH,GAAAl6C,MAAAtnF,OAAAua,EAAAinH,GAAAjnH,IAAA,CAMA,IAJAotH,MAAArgD,MAAA/sE,GAEA0tH,oBAEA/jI,EAAA,EAAAyyC,GAAAgxF,MAAA3nI,OAAAggB,EAAA22B,GAAA,EAAApsC,EAAArG,EAAA,EAAAA,EAAAyyC,GAAAzyC,IAAA8b,IAAAzV,IAEAyV,IAAA22B,KAAA32B,EAAA,GACAzV,IAAAosC,KAAApsC,EAAA,GAGA09H,iBAAA/jI,GAAAmgI,YAAAsD,MAAAzjI,GAAAyjI,MAAA3nH,GAAA2nH,MAAAp9H,GAIA29H,gBAAA5nI,KAAA2nI,kBACAE,kBAAAA,kBAAAxgD,OAAAsgD,kBAOA,IAAAh9H,EAAA,EAAAA,EAAA66H,cAAA76H,IAAA,CAUA,IANAqpB,EAAArpB,EAAA66H,cACA9oG,EAAAgoD,eAAAh2E,KAAA45C,IAAAt0B,EAAAtlB,KAAAiyE,GAAA,GACA4mD,GAAA5iD,UAAAj2E,KAAA6zE,IAAAvuD,EAAAtlB,KAAAiyE,GAAA,GAIA/8E,EAAA,EAAAyyC,GAAA2mF,QAAAt9H,OAAAkE,EAAAyyC,GAAAzyC,IAEA4jI,KAAA3D,SAAA7G,QAAAp5H,GAAA8jI,iBAAA9jI,GAAA2jI,IAEAnoG,EAAAooG,KAAAlwH,EAAAkwH,KAAAztH,GAAA2iB,EAMA,KAAAziB,EAAA,EAAAinH,GAAAl6C,MAAAtnF,OAAAua,EAAAinH,GAAAjnH,IAKA,IAHAotH,MAAArgD,MAAA/sE,GACA0tH,iBAAAC,eAAA3tH,GAEArW,EAAA,EAAAyyC,GAAAgxF,MAAA3nI,OAAAkE,EAAAyyC,GAAAzyC,IAEA4jI,KAAA3D,SAAAwD,MAAAzjI,GAAA+jI,iBAAA/jI,GAAA2jI,IAEAnoG,EAAAooG,KAAAlwH,EAAAkwH,KAAAztH,GAAA2iB,GAYA,IAJA6qG,GAAA5iD,UAIA/gF,EAAA,EAAAA,EAAA8hI,KAAA9hI,IAEA4jI,KAAA5iD,aAAAi/C,SAAAx/F,SAAAzgC,GAAAikI,kBAAAjkI,GAAA2jI,IAAAljG,SAAAzgC,GAEAqjI,eAQA91F,OAAAlI,KAAA49F,WAAAlpF,QAAA,IAAAkK,eAAA2/E,KAAAlwH,GACAwvH,SAAA79F,KAAA49F,WAAA7kD,UAAA,IAAAn6B,eAAA2/E,KAAAztH,GAEAgtH,UAAA99F,KAAA29F,WAAA,IAAAvpI,IAAA8zC,QAAA9zC,IAAAypI,UAEA1nG,EAAA2nG,UAAAzvH,EAAAyvH,UAAAhtH,EAAAgtH,UAAArqG,IAXA0C,EAAAooG,KAAAlwH,EAAAkwH,KAAAztH,EAAA,EAoBA,IAAArE,EAEA,KAAAA,EAAA,EAAAA,GAAA6vH,MAAA7vH,IAEA,IAAA9R,EAAA,EAAAA,EAAA8hI,KAAA9hI,IAEA4jI,KAAA5iD,aAAAi/C,SAAAx/F,SAAAzgC,GAAAikI,kBAAAjkI,GAAA2jI,IAAAljG,SAAAzgC,GAEAqjI,eAQA91F,OAAAlI,KAAA49F,WAAAlpF,QAAAjoC,IAAAmyC,eAAA2/E,KAAAlwH,GACAwvH,SAAA79F,KAAA49F,WAAA7kD,UAAAtsE,IAAAmyC,eAAA2/E,KAAAztH,GAEAgtH,UAAA99F,KAAA29F,WAAAlxH,IAAArY,IAAA8zC,QAAA9zC,IAAAypI,UAEA1nG,EAAA2nG,UAAAzvH,EAAAyvH,UAAAhtH,EAAAgtH,UAAArqG,IAXA0C,EAAAooG,KAAAlwH,EAAAkwH,KAAAztH,EAAA0qE,OAAA8gD,MAAA7vH,EAuBA,KAAA/K,EAAA66H,cAAA,EAAA76H,GAAA,EAAAA,IAAA,CAQA,IANAqpB,EAAArpB,EAAA66H,cACA9oG,EAAAgoD,eAAAh2E,KAAA45C,IAAAt0B,EAAAtlB,KAAAiyE,GAAA,GACA4mD,GAAA5iD,UAAAj2E,KAAA6zE,IAAAvuD,EAAAtlB,KAAAiyE,GAAA,GAIA/8E,EAAA,EAAAyyC,GAAA2mF,QAAAt9H,OAAAkE,EAAAyyC,GAAAzyC,IAEA4jI,KAAA3D,SAAA7G,QAAAp5H,GAAA8jI,iBAAA9jI,GAAA2jI,IACAnoG,EAAAooG,KAAAlwH,EAAAkwH,KAAAztH,EAAA0qE,OAAA/nD,EAMA,KAAAziB,EAAA,EAAAinH,GAAAl6C,MAAAtnF,OAAAua,EAAAinH,GAAAjnH,IAKA,IAHAotH,MAAArgD,MAAA/sE,GACA0tH,iBAAAC,eAAA3tH,GAEArW,EAAA,EAAAyyC,GAAAgxF,MAAA3nI,OAAAkE,EAAAyyC,GAAAzyC,IAEA4jI,KAAA3D,SAAAwD,MAAAzjI,GAAA+jI,iBAAA/jI,GAAA2jI,IAEAN,cAMA7nG,EAAAooG,KAAAlwH,EAAAkwH,KAAAztH,EAAA6sH,WAAArB,MAAA,GAAAxrH,EAAA6sH,WAAArB,MAAA,GAAAjuH,EAAAolB,GAJA0C,EAAAooG,KAAAlwH,EAAAkwH,KAAAztH,EAAA0qE,OAAA/nD,IA2BA,WAEA,GAAAuhB,OAAAulF,cAAA9jI,OAAA,CAEA,IAAAklF,aAAA,CAEA,GAAApe,OAAA,EACAv9C,OAAAy8G,KAAAl/D,KAIA,KAAA5iE,EAAA,EAAAA,EAAA6jI,KAAA7jI,IAEA4zC,KAAAlT,MAAA1gC,GACAkiI,GAAAtuF,KAAA,GAAAvuB,OAAAuuB,KAAA,GAAAvuB,OAAAuuB,KAAA,GAAAvuB,OASA,KALAu9C,MAAA++D,MAAA,EAAAC,cACAv8G,OAAAy8G,KAAAl/D,MAIA5iE,EAAA,EAAAA,EAAA6jI,KAAA7jI,IAEA4zC,KAAAlT,MAAA1gC,GACAkiI,GAAAtuF,KAAA,GAAAvuB,OAAAuuB,KAAA,GAAAvuB,OAAAuuB,KAAA,GAAAvuB,YAIA,CAIA,IAAArlB,EAAA,EAAAA,EAAA6jI,KAAA7jI,IAEA4zC,KAAAlT,MAAA1gC,GACAkiI,GAAAtuF,KAAA,GAAAA,KAAA,GAAAA,KAAA,GAMA,KAAA5zC,EAAA,EAAAA,EAAA6jI,KAAA7jI,IAEA4zC,KAAAlT,MAAA1gC,GACAkiI,GAAAtuF,KAAA,GAAAkuF,KAAAH,MAAA/tF,KAAA,GAAAkuF,KAAAH,MAAA/tF,KAAA,GAAAkuF,KAAAH,OAMA9xF,MAAAkM,SAAA1B,MAAAulF,cAAA9jI,OAAA,EAAAu+C,UAAAhxC,KAAA4vB,QAAA8P,SAAA9P,QAAA8P,SAAA,MAMA,WAEA,GAAAsR,OAAAulF,cAAA9jI,OAAA,EACA4lI,YAAA,CAIA,KAHAD,UAAArI,QAAAsI,aACAA,aAAAtI,QAAAt9H,OAEAua,EAAA,EAAAinH,GAAAl6C,MAAAtnF,OAAAua,EAAAinH,GAAAjnH,IAEAotH,MAAArgD,MAAA/sE,GACAorH,UAAAgC,MAAA/B,aAGAA,aAAA+B,MAAA3nI,MAKA+zC,OAAAkM,SAAA1B,MAAAulF,cAAA9jI,OAAA,EAAAu+C,UAAAhxC,KAAA4vB,QAAAirG,gBAAAjrG,QAAAirG,gBAAA,MAwGAjrG,QAAA+mG,SAEA9jI,KAAA+/C,SAAA6mF,cACA5mI,KAAAggD,aAAA,WAAA,GAAAvC,wBAAAimF,cAAA,IACA1jI,KAAAggD,aAAA,KAAA,GAAAvC,wBAAA1gB,QAAA+mG,OAAAt9F,GAAA,MAMAw9C,gBAAAqjD,kBAEAjB,cAAA,SAAA/zF,SAAA9N,SAAA0jG,OAAAC,OAAAC,QAEA,GAAAC,KAAA7jG,SAAA,EAAA0jG,QACAI,IAAA9jG,SAAA,EAAA0jG,OAAA,GACAK,IAAA/jG,SAAA,EAAA2jG,QACAK,IAAAhkG,SAAA,EAAA2jG,OAAA,GACAM,IAAAjkG,SAAA,EAAA4jG,QACAM,IAAAlkG,SAAA,EAAA4jG,OAAA,EAEA,QACA,GAAAvtG,SAAAwtG,IAAAC,KACA,GAAAztG,SAAA0tG,IAAAC,KACA,GAAA3tG,SAAA4tG,IAAAC,OAKA9B,mBAAA,SAAAt0F,SAAA9N,SAAA0jG,OAAAC,OAAAC,OAAAO,QAEA,GAAAN,KAAA7jG,SAAA,EAAA0jG,QACAI,IAAA9jG,SAAA,EAAA0jG,OAAA,GACAU,IAAApkG,SAAA,EAAA0jG,OAAA,GACAK,IAAA/jG,SAAA,EAAA2jG,QACAK,IAAAhkG,SAAA,EAAA2jG,OAAA,GACAU,IAAArkG,SAAA,EAAA2jG,OAAA,GACAM,IAAAjkG,SAAA,EAAA4jG,QACAM,IAAAlkG,SAAA,EAAA4jG,OAAA,GACAU,IAAAtkG,SAAA,EAAA4jG,OAAA,GACAW,IAAAvkG,SAAA,EAAAmkG,QACAK,IAAAxkG,SAAA,EAAAmkG,OAAA,GACAM,IAAAzkG,SAAA,EAAAmkG,OAAA,EAEA,OAAA95H,MAAAc,IAAA24H,IAAAE,KAAA,KAGA,GAAA3tG,SAAAwtG,IAAA,EAAAO,KACA,GAAA/tG,SAAA0tG,IAAA,EAAAM,KACA,GAAAhuG,SAAA4tG,IAAA,EAAAK,KACA,GAAAjuG,SAAAkuG,IAAA,EAAAE,OAMA,GAAApuG,SAAAytG,IAAA,EAAAM,KACA,GAAA/tG,SAAA2tG,IAAA,EAAAK,KACA,GAAAhuG,SAAA6tG,IAAA,EAAAI,KACA,GAAAjuG,SAAAmuG,IAAA,EAAAC,QA6CA5kD,aAAA5nF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACA4nF,aAAA5nF,UAAAsvF,YAAA1H,aAmCAE,mBAAA9nF,UAAAqN,OAAA88F,OAAAziB,sBAAA1nF,WACA8nF,mBAAA9nF,UAAAsvF,YAAAxH,mBA+BAS,eAAAvoF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAuoF,eAAAvoF,UAAAsvF,YAAA/G,eAgHAK,qBAAA5oF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACA4oF,qBAAA5oF,UAAAsvF,YAAA1G,qBA6BAI,aAAAhpF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAgpF,aAAAhpF,UAAAsvF,YAAAtG,aAiHAK,mBAAArpF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACAqpF,mBAAArpF,UAAAsvF,YAAAjG,mBA6BAI,cAAAzpF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAypF,cAAAzpF,UAAAsvF,YAAA7F,cAmJAE,oBAAA3pF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACA2pF,oBAAA3pF,UAAAsvF,YAAA3F,oBAiCAM,cAAAjqF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACAiqF,cAAAjqF,UAAAsvF,YAAArF,cAsIAC,oBAAAlqF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACAkqF,oBAAAlqF,UAAAsvF,YAAApF,oBAyGAc,cAAAhrF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACAgrF,cAAAhrF,UAAAsvF,YAAAtE,cA+BAU,iBAAA1rF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACA0rF,iBAAA1rF,UAAAsvF,YAAA5D,iBAmRAI,uBAAA9rF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACA8rF,uBAAA9rF,UAAAsvF,YAAAxD,uBA0BAU,aAAAxsF,UAAAqN,OAAA88F,OAAAze,iBAAA1rF,WACAwsF,aAAAxsF,UAAAsvF,YAAA9C,aAsBAC,mBAAAzsF,UAAAqN,OAAA88F,OAAAre,uBAAA9rF,WACAysF,mBAAAzsF,UAAAsvF,YAAA7C,mBA4BAC,eAAA1sF,UAAAqN,OAAA88F,OAAA7qD,SAAAt/C,WACA0sF,eAAA1sF,UAAAsvF,YAAA5C,eAmFAC,qBAAA3sF,UAAAqN,OAAA88F,OAAA1oD,eAAAzhD,WACA2sF,qBAAA3sF,UAAAsvF,YAAA3C,oBAIA,IAAA8/C,YAAAp/H,OAAAq/H,QACAhrD,kBAAAA,kBACAU,mBAAAA,mBACAG,yBAAAA,yBACAmC,oBAAAA,oBACAC,0BAAAA,0BACAC,mBAAAA,mBACAC,yBAAAA,yBACAC,oBAAAA,oBACAC,0BAAAA,0BACAC,qBAAAA,qBACAC,2BAAAA,2BACApC,mBAAAA,mBACAC,yBAAAA,yBACAoC,aAAAA,aACAM,mBAAAA,mBACAa,kBAAAA,kBACAI,wBAAAA,wBACAY,cAAAA,cACAE,oBAAAA,oBACAK,aAAAA,aACAE,mBAAAA,mBACAS,eAAAA,eACAK,qBAAAA,qBACAI,aAAAA,aACAK,mBAAAA,mBACA5lC,cAAAA,cACAC,oBAAAA,oBACA+lC,cAAAA,cACAE,oBAAAA,oBACAM,cAAAA,cACAC,oBAAAA,oBACA1C,gBAAAA,gBACAE,sBAAAA,sBACAsD,cAAAA,cACAwB,aAAAA,aACAC,mBAAAA,mBACAf,iBAAAA,iBACAI,uBAAAA,uBACAY,eAAAA,eACAC,qBAAAA,qBACA/qC,YAAAA,YACAK,kBAAAA,mBA4BAqU,gBAAAt2D,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACAs2D,eAAAt2D,UAAAsvF,YAAAh5B,eAEAA,eAAAt2D,UAAA64E,kBAAA,EAcA+T,kBAAA5sF,UAAAqN,OAAA88F,OAAA13D,eAAAzyC,WACA4sF,kBAAA5sF,UAAAsvF,YAAA1C,kBAEAA,kBAAA5sF,UAAAiyD,qBAAA,EA+GAgE,qBAAAj2D,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACAi2D,qBAAAj2D,UAAAsvF,YAAAr5B,qBAEAA,qBAAAj2D,UAAA22E,wBAAA,EAEA1gB,qBAAAj2D,UAAA2sC,KAAA,SAAA1jC,QAoDA,MAlDA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAAmvC,SAAAk6C,SAAA,IAEArpF,KAAA6mC,MAAAsC,KAAA1jC,OAAAohC,OACA7mC,KAAAy2E,UAAAhxE,OAAAgxE,UACAz2E,KAAA02E,UAAAjxE,OAAAixE,UAEA12E,KAAAwK,IAAA/E,OAAA+E,IAEAxK,KAAAwgD,SAAA/6C,OAAA+6C,SACAxgD,KAAAygD,kBAAAh7C,OAAAg7C,kBAEAzgD,KAAA0gD,MAAAj7C,OAAAi7C,MACA1gD,KAAA2gD,eAAAl7C,OAAAk7C,eAEA3gD,KAAA61E,SAAA1sC,KAAA1jC,OAAAowE,UACA71E,KAAA8uD,YAAArpD,OAAAqpD,YACA9uD,KAAA81E,kBAAArwE,OAAAqwE,kBAEA91E,KAAA2rD,QAAAlmD,OAAAkmD,QACA3rD,KAAAu2E,UAAA9wE,OAAA8wE,UAEAv2E,KAAA4rD,UAAAnmD,OAAAmmD,UACA5rD,KAAAw2E,YAAArtC,KAAA1jC,OAAA+wE,aAEAx2E,KAAAwwC,gBAAA/qC,OAAA+qC,gBACAxwC,KAAAywC,kBAAAhrC,OAAAgrC,kBACAzwC,KAAA0wC,iBAAAjrC,OAAAirC,iBAEA1wC,KAAA+uD,aAAAtpD,OAAAspD,aAEA/uD,KAAAgvD,aAAAvpD,OAAAupD,aAEAhvD,KAAAuwC,SAAA9qC,OAAA8qC,SAEAvwC,KAAA6gD,OAAAp7C,OAAAo7C,OACA7gD,KAAA22E,gBAAAlxE,OAAAkxE,gBAEA32E,KAAAihD,gBAAAx7C,OAAAw7C,gBAEAjhD,KAAAqvC,UAAA5pC,OAAA4pC,UACArvC,KAAAsvC,mBAAA7pC,OAAA6pC,mBACAtvC,KAAAkhD,iBAAAz7C,OAAAy7C,iBACAlhD,KAAAmhD,kBAAA17C,OAAA07C,kBAEAnhD,KAAAwvC,SAAA/pC,OAAA+pC,SACAxvC,KAAAyvC,aAAAhqC,OAAAgqC,aACAzvC,KAAA0vC,aAAAjqC,OAAAiqC,aAEA1vC,MA6BA0yD,qBAAAl2D,UAAAqN,OAAA88F,OAAAl0C,qBAAAj2D,WACAk2D,qBAAAl2D,UAAAsvF,YAAAp5B,qBAEAA,qBAAAl2D,UAAA+3E,wBAAA,EAEA7hB,qBAAAl2D,UAAA2sC,KAAA,SAAA1jC,QAWA,MATAgtD,sBAAAj2D,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAAmvC,SAAAm6C,SAAA,IAEAtpF,KAAAghD,aAAAv7C,OAAAu7C,aAEAhhD,KAAA42E,UAAAnxE,OAAAmxE,UACA52E,KAAA62E,mBAAApxE,OAAAoxE,mBAEA72E,MA4GAuyD,kBAAA/1D,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACA+1D,kBAAA/1D,UAAAsvF,YAAAv5B,kBAEAA,kBAAA/1D,UAAA02E,qBAAA,EAEA3gB,kBAAA/1D,UAAA2sC,KAAA,SAAA1jC,QAgDA,MA9CA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA6mC,MAAAsC,KAAA1jC,OAAAohC,OACA7mC,KAAAq2E,SAAAltC,KAAA1jC,OAAA4wE,UACAr2E,KAAAs2E,UAAA7wE,OAAA6wE,UAEAt2E,KAAAwK,IAAA/E,OAAA+E,IAEAxK,KAAAwgD,SAAA/6C,OAAA+6C,SACAxgD,KAAAygD,kBAAAh7C,OAAAg7C,kBAEAzgD,KAAA0gD,MAAAj7C,OAAAi7C,MACA1gD,KAAA2gD,eAAAl7C,OAAAk7C,eAEA3gD,KAAA61E,SAAA1sC,KAAA1jC,OAAAowE,UACA71E,KAAA8uD,YAAArpD,OAAAqpD,YACA9uD,KAAA81E,kBAAArwE,OAAAqwE,kBAEA91E,KAAA2rD,QAAAlmD,OAAAkmD,QACA3rD,KAAAu2E,UAAA9wE,OAAA8wE,UAEAv2E,KAAA4rD,UAAAnmD,OAAAmmD,UACA5rD,KAAAw2E,YAAArtC,KAAA1jC,OAAA+wE,aAEAx2E,KAAAwwC,gBAAA/qC,OAAA+qC,gBACAxwC,KAAAywC,kBAAAhrC,OAAAgrC,kBACAzwC,KAAA0wC,iBAAAjrC,OAAAirC,iBAEA1wC,KAAA4gD,YAAAn7C,OAAAm7C,YAEA5gD,KAAAuwC,SAAA9qC,OAAA8qC,SAEAvwC,KAAA6gD,OAAAp7C,OAAAo7C,OACA7gD,KAAA8gD,QAAAr7C,OAAAq7C,QACA9gD,KAAAghD,aAAAv7C,OAAAu7C,aACAhhD,KAAAihD,gBAAAx7C,OAAAw7C,gBAEAjhD,KAAAqvC,UAAA5pC,OAAA4pC,UACArvC,KAAAsvC,mBAAA7pC,OAAA6pC,mBACAtvC,KAAAkhD,iBAAAz7C,OAAAy7C,iBACAlhD,KAAAmhD,kBAAA17C,OAAA07C,kBAEAnhD,KAAAwvC,SAAA/pC,OAAA+pC,SACAxvC,KAAAyvC,aAAAhqC,OAAAgqC,aACAzvC,KAAA0vC,aAAAjqC,OAAAiqC,aAEA1vC,MA0BAwyD,iBAAAh2D,UAAAqN,OAAA88F,OAAAp0C,kBAAA/1D,WACAg2D,iBAAAh2D,UAAAsvF,YAAAt5B,iBAEAA,iBAAAh2D,UAAA43E,oBAAA,EAEA5hB,iBAAAh2D,UAAA2sC,KAAA,SAAA1jC,QAMA,MAJA8sD,mBAAA/1D,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAAuvD,YAAA9pD,OAAA8pD,YAEAvvD,MA4DAqyD,mBAAA71D,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACA61D,mBAAA71D,UAAAsvF,YAAAz5B,mBAEAA,mBAAA71D,UAAAq4E,sBAAA,EAEAxiB,mBAAA71D,UAAA2sC,KAAA,SAAA1jC,QAqBA,MAnBA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA2rD,QAAAlmD,OAAAkmD,QACA3rD,KAAAu2E,UAAA9wE,OAAA8wE,UAEAv2E,KAAA4rD,UAAAnmD,OAAAmmD,UACA5rD,KAAAw2E,YAAArtC,KAAA1jC,OAAA+wE,aAEAx2E,KAAAwwC,gBAAA/qC,OAAA+qC,gBACAxwC,KAAAywC,kBAAAhrC,OAAAgrC,kBACAzwC,KAAA0wC,iBAAAjrC,OAAAirC,iBAEA1wC,KAAAqvC,UAAA5pC,OAAA4pC,UACArvC,KAAAsvC,mBAAA7pC,OAAA6pC,mBAEAtvC,KAAAwvC,SAAA/pC,OAAA+pC,SACAxvC,KAAAyvC,aAAAhqC,OAAAgqC,aACAzvC,KAAA0vC,aAAAjqC,OAAAiqC,aAEA1vC,MAoFAsyD,oBAAA91D,UAAAqN,OAAA88F,OAAAn5D,SAAAhxC,WACA81D,oBAAA91D,UAAAsvF,YAAAx5B,oBAEAA,oBAAA91D,UAAA82E,uBAAA,EAEAhhB,oBAAA91D,UAAA2sC,KAAA,SAAA1jC,QAoCA,MAlCA+nC,UAAAhxC,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA6mC,MAAAsC,KAAA1jC,OAAAohC,OAEA7mC,KAAAwK,IAAA/E,OAAA+E,IAEAxK,KAAAwgD,SAAA/6C,OAAA+6C,SACAxgD,KAAAygD,kBAAAh7C,OAAAg7C,kBAEAzgD,KAAA0gD,MAAAj7C,OAAAi7C,MACA1gD,KAAA2gD,eAAAl7C,OAAAk7C,eAEA3gD,KAAA61E,SAAA1sC,KAAA1jC,OAAAowE,UACA71E,KAAA8uD,YAAArpD,OAAAqpD,YACA9uD,KAAA81E,kBAAArwE,OAAAqwE,kBAEA91E,KAAA4gD,YAAAn7C,OAAAm7C,YAEA5gD,KAAAuwC,SAAA9qC,OAAA8qC,SAEAvwC,KAAA6gD,OAAAp7C,OAAAo7C,OACA7gD,KAAA8gD,QAAAr7C,OAAAq7C,QACA9gD,KAAAghD,aAAAv7C,OAAAu7C,aACAhhD,KAAAihD,gBAAAx7C,OAAAw7C,gBAEAjhD,KAAAqvC,UAAA5pC,OAAA4pC,UACArvC,KAAAsvC,mBAAA7pC,OAAA6pC,mBACAtvC,KAAAkhD,iBAAAz7C,OAAAy7C,iBACAlhD,KAAAmhD,kBAAA17C,OAAA07C,kBAEAnhD,KAAAwvC,SAAA/pC,OAAA+pC,SACAxvC,KAAAyvC,aAAAhqC,OAAAgqC,aACAzvC,KAAA0vC,aAAAjqC,OAAAiqC,aAEA1vC,MAiCA4yD,mBAAAp2D,UAAAqN,OAAA88F,OAAAh0C,kBAAAn2D,WACAo2D,mBAAAp2D,UAAAsvF,YAAAl5B,mBAEAA,mBAAAp2D,UAAAy4E,sBAAA,EAEAriB,mBAAAp2D,UAAA2sC,KAAA,SAAA1jC,QAQA,MANAktD,mBAAAn2D,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA8mC,MAAArhC,OAAAqhC,MACA9mC,KAAAk2E,SAAAzwE,OAAAywE,SACAl2E,KAAAo2E,QAAA3wE,OAAA2wE,QAEAp2E,KAMA,IAAAmpI,WAAAt/H,OAAAq/H,QACAp2E,eAAAA,eACAypB,eAAAA,eACA6M,kBAAAA,kBACAn6C,eAAAA,eACA4jB,eAAAA,eACAH,qBAAAA,qBACAD,qBAAAA,qBACAF,kBAAAA,kBACAC,iBAAAA,iBACAH,mBAAAA,mBACAC,oBAAAA,oBACAliB,kBAAAA,kBACAO,qBAAAA,qBACA4P,kBAAAA,kBACAqS,mBAAAA,mBACAD,kBAAAA,kBACAnlB,SAAAA,WAOA47F,OAEArzF,SAAA,EAEAszF,SAEA9rI,IAAA,SAAA6S,IAAAk5H,OAEA,IAAAtpI,KAAA+1C,UAIA/1C,KAAAqpI,MAAAj5H,KAAAk5H,OAIAtyH,IAAA,SAAA5G,KAEA,IAAA,IAAApQ,KAAA+1C,QAIA,MAAA/1C,MAAAqpI,MAAAj5H,MAIAmpC,OAAA,SAAAnpC,WAEApQ,MAAAqpI,MAAAj5H,MAIAqnC,MAAA,WAEAz3C,KAAAqpI,WA2EAh/C,sBAAA,GAAAb,eAYA3/E,QAAAm3F,OAAA7W,WAAA3tF,WAEA+sI,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,aAEAx8E,KAAA68E,MAAAA,IAAA,QAEA78E,KAAAnN,KAAAkjC,OAAA8mD,IAAAhqF,KAAAkjC,KAAA8mD,IAEA,IAAAr2C,OAAA3zC,KAEAwpI,OAAAJ,MAAApyH,IAAAgzE,IAEA,QAAA78E,KAAAq8H,OAYA,MAVA71F,OAAAy2C,QAAAL,UAAAC,KAEAhuF,WAAA,WAEAytF,QAAAA,OAAA+/C,QAEA71F,MAAAy2C,QAAAH,QAAAD,MAEA,GAEAw/C,MAKA,IAAAC,cAAA,8BACAC,mBAAA1/C,IAAAr1E,MAAA80H,aAGA,IAAAC,mBAAA,CAEA,GAAAC,UAAAD,mBAAA,GACAE,WAAAF,mBAAA,GACAnpH,KAAAmpH,mBAAA,EAEAnpH,MAAAnlB,OAAAyuI,mBAAAtpH,MAEAqpH,WAAArpH,KAAAnlB,OAAA0uI,KAAAvpH,MAEA,KAEA,GAAAwpH,UACAC,cAAAhqI,KAAAgqI,cAAA,IAAAn3H,aAEA,QAAAm3H,cAEA,IAAA,cACA,IAAA,OAEAD,SAAA,GAAAE,aAAA1pH,KAAA3gB,OAIA,KAAA,GAFAs7C,MAAA,GAAApC,YAAAixF,UAEAjmI,EAAA,EAAAA,EAAAyc,KAAA3gB,OAAAkE,IAEAo3C,KAAAp3C,GAAAyc,KAAA2pH,WAAApmI,EAIA,UAAAkmI,eAEAD,SAAA,GAAAI,OAAAJ,WAAA3uG,KAAAuuG,WAIA,MAEA,KAAA,WAEA,GAAAS,QAAA,GAAAC,UACAN,UAAAK,OAAAE,gBAAA/pH,KAAAopH,SAEA,MAEA,KAAA,OAEAI,SAAAljB,KAAAE,MAAAxmG,KAEA,MAEA,SAEAwpH,SAAAxpH,KAOAnlB,OAAAY,WAAA,WAEAytF,QAAAA,OAAAsgD,UAEAp2F,MAAAy2C,QAAAH,QAAAD,MAEA,GAEA,MAAAhsD,OAGA5iC,OAAAY,WAAA,WAEA2tF,SAAAA,QAAA3rD,OAEA2V,MAAAy2C,QAAAH,QAAAD,KACAr2C,MAAAy2C,QAAAF,UAAAF,MAEA,QAIA,CAEA,GAAAugD,SAAA,GAAAC,eACAD,SAAAE,KAAA,MAAAzgD,KAAA,GAEAugD,QAAAxuI,iBAAA,OAAA,SAAAiC,OAEA,GAAA+rI,UAAA/rI,MAAAgF,OAAA+mI,QAEAX,OAAA7rI,IAAAysF,IAAA+/C,UAEA,MAAA/pI,KAAA0qI,QAEAjhD,QAAAA,OAAAsgD,UAEAp2F,MAAAy2C,QAAAH,QAAAD,MAEA,IAAAhqF,KAAA0qI,QAKA36H,QAAAH,KAAA,6CAEA65E,QAAAA,OAAAsgD,UAEAp2F,MAAAy2C,QAAAH,QAAAD,OAIAL,SAAAA,QAAA3rF,OAEA21C,MAAAy2C,QAAAH,QAAAD,KACAr2C,MAAAy2C,QAAAF,UAAAF,QAIA,OAEA78E,KAAAu8E,YAEA6gD,QAAAxuI,iBAAA,WAAA,SAAAiC,OAEA0rF,WAAA1rF,SAEA,GAIAusI,QAAAxuI,iBAAA,QAAA,SAAAiC,OAEA2rF,SAAAA,QAAA3rF,OAEA21C,MAAAy2C,QAAAH,QAAAD,KACAr2C,MAAAy2C,QAAAF,UAAAF,OAEA,OAEA78E,KAAAnN,KAAAgqI,eAAAO,QAAAP,aAAAhqI,KAAAgqI,kBACA78H,KAAAnN,KAAAouF,kBAAAm8C,QAAAn8C,gBAAApuF,KAAAouF,iBAEAm8C,QAAAI,kBAAAJ,QAAAI,qBAAAx9H,KAAAnN,KAAA2pI,SAAA3pI,KAAA2pI,SAAA,aAEA,KAAA,GAAAiB,UAAA5qI,MAAA6qI,cAEAN,QAAAO,iBAAAF,OAAA5qI,KAAA6qI,cAAAD,QAIAL,SAAAQ,KAAA,MAMA,MAFAp3F,OAAAy2C,QAAAL,UAAAC,KAEAugD,SAIAS,QAAA,SAAA97H,OAGA,MADAlP,MAAAkjC,KAAAh0B,MACAlP,MAIAirI,gBAAA,SAAA/7H,OAGA,MADAlP,MAAAgqI,aAAA96H,MACAlP,MAIAkrI,mBAAA,SAAAh8H,OAGA,MADAlP,MAAAouF,gBAAAl/E,MACAlP,MAIAmrI,YAAA,SAAAj8H,OAGA,MADAlP,MAAA2pI,SAAAz6H,MACAlP,MAIA8qI,iBAAA,SAAA57H,OAGA,MADAlP,MAAA6qI,cAAA37H,MACAlP,QAqBA6J,OAAAm3F,OAAA1W,wBAAA9tF,WAEA+sI,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,SAEA,GAAAh2C,OAAA3zC,KAEAo+B,UAEAjB,QAAA,GAAA6gD,kBACA7gD,SAAArC,MAAAsD,MAEA,IAAA98B,QAAA,GAAA6oF,YAAAnqF,KAAAoqF,QAmCA,IAlCA9oF,OAAA0pI,QAAAhrI,KAAAkjC,MACA5hC,OAAA2pI,gBAAA,eAiCA1uI,MAAAoN,QAAAqgF,KAIA,IAAA,GAFAohD,QAAA,EAEAtnI,EAAA,EAAAyyC,GAAAyzC,IAAApqF,OAAAkE,EAAAyyC,KAAAzyC,GAnCA,SAAAA,GAEAxC,OAAAioI,KAAAv/C,IAAAlmF,GAAA,SAAAs0C,QAEA,GAAAizF,UAAA13F,MAAA42C,QAAAnyC,QAAA,EAEAha,QAAAt6B,IACA5E,MAAAmsI,SAAAnsI,MACA49B,OAAAuuG,SAAAvuG,OACA7xB,OAAAogI,SAAApgI,OACA4wB,QAAAwvG,SAAAxvG,SAKA,KAFAuvG,QAAA,KAIA,IAAAC,SAAAC,cACAnuG,QAAAhC,UAAAa,cAEAmB,QAAAlyB,OAAAogI,SAAApgI,OACAkyB,QAAA0N,aAAA,EAEA4+C,QAAAA,OAAAtsD,WAIAusD,WAAAC,UAUA7lF,OAQAxC,QAAAioI,KAAAv/C,IAAA,SAAA5xC,QAEA,GAAAizF,UAAA13F,MAAA42C,QAAAnyC,QAAA,EAEA,IAAAizF,SAAAE,UAIA,IAAA,GAFA/mG,OAAA6mG,SAAAxvG,QAAAj8B,OAAAyrI,SAAAC,YAEAn2E,EAAA,EAAAA,EAAA3wB,MAAA2wB,IAAA,CAEA/2B,OAAA+2B,IAAAt5B,WAEA,KAAA,GAAA/3B,GAAA,EAAAA,EAAAunI,SAAAC,YAAAxnI,IAEAs6B,OAAA+2B,GAAAt5B,QAAA37B,KAAAmrI,SAAAxvG,QAAAs5B,EAAAk2E,SAAAC,YAAAxnI,IACAs6B,OAAA+2B,GAAAlqD,OAAAogI,SAAApgI,OACAmzB,OAAA+2B,GAAAj2D,MAAAmsI,SAAAnsI,MACAk/B,OAAA+2B,GAAAr4B,OAAAuuG,SAAAvuG,WAQAK,SAAArC,MAAA57B,MAAAmsI,SAAAnsI,MACAi+B,QAAArC,MAAAgC,OAAAuuG,SAAAvuG,OACAK,QAAAtB,QAAAwvG,SAAAxvG,OAIA,KAAAwvG,SAAAC,cAEAnuG,QAAAhC,UAAAa,cAIAmB,QAAAlyB,OAAAogI,SAAApgI,OACAkyB,QAAA0N,aAAA,EAEA4+C,QAAAA,OAAAtsD,UAEAusD,WAAAC,QAIA,OAAAxsD,UAIA6tG,QAAA,SAAA97H,OAGA,MADAlP,MAAAkjC,KAAAh0B,MACAlP,QAqBA6J,OAAAm3F,OAAAxW,kBAAAhuF,WAEA+sI,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,SAEA,GAAAh2C,OAAA3zC,KAEAm9B,QAAA,GAAAc,aAEA38B,OAAA,GAAA6oF,YAAAnqF,KAAAoqF,QA2DA,OA1DA9oF,QAAA2pI,gBAAA,eAEA3pI,OAAAioI,KAAAv/C,IAAA,SAAA5xC,QAEA,GAAAozF,SAAA73F,MAAA42C,QAAAnyC,OAEAozF,eAEAr+H,KAAAq+H,QAAA1wG,MAEAqC,QAAArC,MAAA0wG,QAAA1wG,UAEA3tB,KAAAq+H,QAAAjrH,OAEA4c,QAAArC,MAAA57B,MAAAssI,QAAAtsI,MACAi+B,QAAArC,MAAAgC,OAAA0uG,QAAA1uG,OACAK,QAAArC,MAAAva,KAAAirH,QAAAjrH,MAIA4c,QAAAnC,UAAA7tB,KAAAq+H,QAAAxwG,MAAAwwG,QAAAxwG,MAAAe,oBACAoB,QAAAlC,UAAA9tB,KAAAq+H,QAAAvwG,MAAAuwG,QAAAvwG,MAAAc,oBAEAoB,QAAAjC,cAAA/tB,KAAAq+H,QAAAtwG,UAAAswG,QAAAtwG,UAAAc,aACAmB,QAAAhC,cAAAhuB,KAAAq+H,QAAArwG,UAAAqwG,QAAArwG,UAAAc,yBAEAkB,QAAA9B,eAAAluB,KAAAq+H,QAAAnwG,WAAAmwG,QAAAnwG,WAAA,MAEAluB,KAAAq+H,QAAAvgI,SAEAkyB,QAAAlyB,OAAAugI,QAAAvgI,YAGAkC,KAAAq+H,QAAApwG,OAEA+B,QAAA/B,KAAAowG,QAAApwG,UAIAjuB,KAAAq+H,QAAA3vG,UAEAsB,QAAAtB,QAAA2vG,QAAA3vG,SAIA,IAAA2vG,QAAAF,cAEAnuG,QAAAhC,UAAAa,cAIAmB,QAAA0N,aAAA,EAEA4+C,QAAAA,OAAAtsD,QAAAquG,WAEA9hD,WAAAC,SAGAxsD,WAgBAtzB,OAAAm3F,OAAAvW,YAAAjuF,WAEAivI,YAAA,YAEAlC,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,aAEAx8E,KAAA68E,MAAAA,IAAA,QAEA78E,KAAAnN,KAAAkjC,OAAA8mD,IAAAhqF,KAAAkjC,KAAA8mD,IAEA,IAAAr2C,OAAA3zC,KAEAwpI,OAAAJ,MAAApyH,IAAAgzE,IAEA,QAAA78E,KAAAq8H,OAYA,MAVA71F,OAAAy2C,QAAAL,UAAAC,KAEAhuF,WAAA,WAEAytF,QAAAA,OAAA+/C,QAEA71F,MAAAy2C,QAAAH,QAAAD,MAEA,GAEAw/C,MAIA,IAAA1uG,OAAAv/B,SAAAkwC,gBAAA,+BAAA,MAuCA,OArCA3Q,OAAA/+B,iBAAA,OAAA,WAEAqtI,MAAA7rI,IAAAysF,IAAAhqF,MAEAypF,QAAAA,OAAAzpF,MAEA2zC,MAAAy2C,QAAAH,QAAAD,OAEA,GAUAlvD,MAAA/+B,iBAAA,QAAA,SAAAiC,OAEA2rF,SAAAA,QAAA3rF,OAEA21C,MAAAy2C,QAAAH,QAAAD,KACAr2C,MAAAy2C,QAAAF,UAAAF,OAEA,GAEA,UAAAA,IAAA71E,OAAA,EAAA,QAEAhH,KAAAnN,KAAAyrI,cAAA3wG,MAAA2wG,YAAAzrI,KAAAyrI,aAIA93F,MAAAy2C,QAAAL,UAAAC,KAEAlvD,MAAAl8B,IAAAorF,IAEAlvD,OAIA4wG,eAAA,SAAAx8H,OAGA,MADAlP,MAAAyrI,YAAAv8H,MACAlP,MAIAgrI,QAAA,SAAA97H,OAGA,MADAlP,MAAAkjC,KAAAh0B,MACAlP,QAgBA6J,OAAAm3F,OAAAtW,kBAAAluF,WAEAivI,YAAA,YAEAlC,KAAA,SAAAoC,KAAAliD,OAAAC,WAAAC,SAEA,GAAAxsD,SAAA,GAAAgB,aAEA78B,OAAA,GAAAmpF,aAAAzqF,KAAAoqF,QACA9oF,QAAAoqI,eAAA1rI,KAAAyrI,aACAnqI,OAAA0pI,QAAAhrI,KAAAkjC,KAwBA,KAAA,GAtBAkoG,QAAA,EAsBAtnI,EAAA,EAAAA,EAAA6nI,KAAA/rI,SAAAkE,GApBA,SAAAA,GAEAxC,OAAAioI,KAAAoC,KAAA7nI,GAAA,SAAAg3B,OAEAqC,QAAAiB,OAAAt6B,GAAAg3B,MAIA,KAFAswG,SAIAjuG,QAAA0N,aAAA,EAEA4+C,QAAAA,OAAAtsD,eAIAhwB,GAAAw8E,UAMA7lF,EAIA,OAAAq5B,UAIAuuG,eAAA,SAAAx8H,OAGA,MADAlP,MAAAyrI,YAAAv8H,MACAlP,MAIAgrI,QAAA,SAAA97H,OAGA,MADAlP,MAAAkjC,KAAAh0B,MACAlP,QAgBA6J,OAAAm3F,OAAArW,cAAAnuF,WAEAivI,YAAA,YAEAlC,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,SAEA,GAAAroF,QAAA,GAAAmpF,aAAAzqF,KAAAoqF,QACA9oF,QAAAoqI,eAAA1rI,KAAAyrI,aACAnqI,OAAA0pI,QAAAhrI,KAAAkjC,KAEA,IAAA/F,SAAA,GAAAtC,QAiBA,OAhBAsC,SAAArC,MAAAx5B,OAAAioI,KAAAv/C,IAAA,WAGA,GAAA4hD,QAAA5hD,IAAA6hD,OAAA,iBAAA,GAAA,IAAA7hD,IAAA6hD,OAAA,qBAEA1uG,SAAAlyB,OAAA2gI,OAAAp0E,UAAAt7B,WACAiB,QAAA0N,aAAA,MAEA19B,KAAAs8E,QAEAA,OAAAtsD,UAIAusD,WAAAC,SAEAxsD,SAIAuuG,eAAA,SAAAx8H,OAGA,MADAlP,MAAAyrI,YAAAv8H,MACAlP,MAIAgrI,QAAA,SAAA97H,OAGA,MADAlP,MAAAkjC,KAAAh0B,MACAlP,QAwBA4qF,MAAApuF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAAlB,MAEA3a,SAAA,EAEA9mC,KAAA,SAAA1jC,QAOA,MALAs0C,UAAAv9C,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA6mC,MAAAsC,KAAA1jC,OAAAohC,OACA7mC,KAAA2nD,UAAAliD,OAAAkiD,UAEA3nD,MAIAovB,OAAA,SAAAw1E,MAEA,GAAArkF,MAAAw5B,SAAAv9C,UAAA4yB,OAAAxoB,KAAA5G,KAAA4kG,KAcA,OAZArkF,MAAAyxB,OAAAnL,MAAA7mC,KAAA6mC,MAAAy1E,SACA/7F,KAAAyxB,OAAA2V,UAAA3nD,KAAA2nD,cAEAx6C,KAAAnN,KAAA+mD,cAAAxmC,KAAAyxB,OAAA+U,YAAA/mD,KAAA+mD,YAAAu1D;mFAEAnvG,KAAAnN,KAAA0mD,WAAAnmC,KAAAyxB,OAAA0U,SAAA1mD,KAAA0mD,cACAv5C,KAAAnN,KAAAyoD,QAAAloC,KAAAyxB,OAAAyW,MAAAzoD,KAAAyoD,WACAt7C,KAAAnN,KAAA6mD,QAAAtmC,KAAAyxB,OAAA6U,MAAA7mD,KAAA6mD,WACA15C,KAAAnN,KAAA0oD,WAAAnoC,KAAAyxB,OAAA0W,SAAA1oD,KAAA0oD,cAEAv7C,KAAAnN,KAAAy2C,SAAAl2B,KAAAyxB,OAAAyE,OAAAz2C,KAAAy2C,OAAArnB,UAEA7O,QAyBAsqE,gBAAAruF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA/b,MAAApuF,YAEAsvF,YAAAjB,gBAEArhC,mBAAA,EAEArgB,KAAA,SAAA1jC,QAMA,MAJAmlF,OAAApuF,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA+mD,YAAA5d,KAAA1jC,OAAAshD,aAEA/mD,QAwBA6J,OAAAm3F,OAAAjW,YAAAvuF,WAEA2sC,KAAA,SAAA1jC,QASA,MAPAzF,MAAA4nC,OAAAniC,OAAAmiC,OAAA7d,QAEA/pB,KAAAmoD,KAAA1iD,OAAA0iD,KACAnoD,KAAAkxC,OAAAzrC,OAAAyrC,OAEAlxC,KAAA02C,QAAAvN,KAAA1jC,OAAAixC,SAEA12C,MAIA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAovB,OAAA,WAEA,GAAA4iB,UASA,OAPA,KAAAhyC,KAAAmoD,OAAAnW,OAAAmW,KAAAnoD,KAAAmoD,MACA,IAAAnoD,KAAAkxC,SAAAc,OAAAd,OAAAlxC,KAAAkxC,QACA,MAAAlxC,KAAA02C,QAAAl/B,GAAA,MAAAxX,KAAA02C,QAAAz8B,IAAA+3B,OAAA0E,QAAA12C,KAAA02C,QAAAnrB,WAEAymB,OAAApK,OAAA5nC,KAAA4nC,OAAAxY,QAAA,GAAA4iB,aACAA,QAAApK,OAAAsP,OAEAlF,UAgBAg5C,gBAAAxuF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5b,YAAAvuF,YAEAsvF,YAAAd,gBAEAj0C,mBAAA,EAEApC,OAAA,SAAA6B,OAEA,GAAA5O,QAAA5nC,KAAA4nC,OAEAwT,IAAA,EAAA1f,MAAAkmE,QAAAprD,MAAAiS,MACApN,OAAAr7C,KAAA02C,QAAAx3C,MAAAc,KAAA02C,QAAA5Z,OACA2P,IAAA+J,MAAAkQ,UAAA9e,OAAA6E,GAEA2O,OAAAxT,OAAAwT,KAAAC,SAAAzT,OAAAyT,QAAA5O,MAAA7E,OAAA6E,MAEA7E,OAAAwT,IAAAA,IACAxT,OAAAyT,OAAAA,OACAzT,OAAA6E,IAAAA,IACA7E,OAAAkP,6BA6CAm0C,UAAAzuF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA/b,MAAApuF,YAEAsvF,YAAAb,UAEA1iC,aAAA,EAEApf,KAAA,SAAA1jC,QAaA,MAXAmlF,OAAApuF,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA0mD,SAAAjhD,OAAAihD,SACA1mD,KAAAyoD,MAAAhjD,OAAAgjD,MACAzoD,KAAA0oD,SAAAjjD,OAAAijD,SACA1oD,KAAA6mD,MAAAphD,OAAAohD,MAEA7mD,KAAAgD,OAAAyC,OAAAzC,OAAA+mB,QAEA/pB,KAAAy2C,OAAAhxC,OAAAgxC,OAAA1sB,QAEA/pB,QAsCAmrF,WAAA3uF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA/b,MAAApuF,YAEAsvF,YAAAX,WAEAl5C,cAAA,EAEA9I,KAAA,SAAA1jC,QASA,MAPAmlF,OAAApuF,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA0mD,SAAAjhD,OAAAihD,SACA1mD,KAAA6mD,MAAAphD,OAAAohD,MAEA7mD,KAAAy2C,OAAAhxC,OAAAgxC,OAAA1sB,QAEA/pB,QAgBAorF,uBAAA5uF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5b,YAAAvuF,YAEAsvF,YAAAV,yBAwBAC,iBAAA7uF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA/b,MAAApuF,YAEAsvF,YAAAT,iBAEAxjC,oBAAA,EAEA1e,KAAA,SAAA1jC,QAQA,MANAmlF,OAAApuF,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAAgD,OAAAyC,OAAAzC,OAAA+mB,QAEA/pB,KAAAy2C,OAAAhxC,OAAAgxC,OAAA1sB,QAEA/pB,QAoBAsrF,aAAA9uF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA/b,MAAApuF,YAEAsvF,YAAAR,aAEA1jC,gBAAA,IA6BA2jC,cAAA/uF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA/b,MAAApuF,YAEAsvF,YAAAP,cAEAziC,iBAAA,EAEA3f,KAAA,SAAA1jC,QAOA,MALAmlF,OAAApuF,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAAd,MAAAuG,OAAAvG,MACAc,KAAA88B,OAAAr3B,OAAAq3B,OAEA98B,MAIAovB,OAAA,SAAAw1E,MAEA,GAAArkF,MAAAqqE,MAAApuF,UAAA4yB,OAAAxoB,KAAA5G,KAAA4kG,KAKA,OAHArkF,MAAAyxB,OAAA9yC,MAAAc,KAAAd,MACAqhB,KAAAyxB,OAAAlV,OAAA98B,KAAA88B,OAEAvc,OAYA,IAAAmsE,iBAGAo/C,WAAA,SAAAj3H,MAAAnH,KAAAD,IAEA,MAAAi/E,gBAAAq/C,aAAAl3H,OAIA,GAAAA,OAAAi3E,YAAAj3E,MAAAwkC,SAAA3rC,SAAAP,KAAAM,GAAAA,GAAAoH,MAAAjV,SAIAiV,MAAAxE,MAAA3C,KAAAD,KAKAk/E,aAAA,SAAA93E,MAAAumB,KAAA4wG,YAEA,OAAAn3H,QACAm3H,YAAAn3H,MAAAi3E,cAAA1wD,KAAAvmB,MAEA,gBAAAumB,MAAA4d,kBAEA,GAAA5d,MAAAvmB,OAIAtY,MAAAC,UAAA6T,MAAAzJ,KAAAiO,QAIAk3H,aAAA,SAAA/5F,QAEA,MAAAi4F,aAAAgC,OAAAj6F,WACAA,iBAAAk6F,YAKAC,iBAAA,SAAA3/C,OAEA,QAAA4/C,aAAAtoI,EAAA8b,GAEA,MAAA4sE,OAAA1oF,GAAA0oF,MAAA5sE,GAMA,IAAA,GAFArI,GAAAi1E,MAAA5sF,OACAilB,OAAA,GAAAtoB,OAAAgb,GACAzT,EAAA,EAAAA,IAAAyT,IAAAzT,EAAA+gB,OAAA/gB,GAAAA,CAIA,OAFA+gB,QAAAlR,KAAAy4H,aAEAvnH,QAKAwnH,YAAA,SAAA/rH,OAAA8uD,OAAA11B,OAKA,IAAA,GAHA4yF,SAAAhsH,OAAA1gB,OACAilB,OAAA,GAAAvE,QAAAwrE,YAAAwgD,SAEAxoI,EAAA,EAAA2jE,UAAA,EAAAA,YAAA6kE,UAAAxoI,EAIA,IAAA,GAFAyoI,WAAA7yF,MAAA51C,GAAAsrE,OAEAxvD,EAAA,EAAAA,IAAAwvD,SAAAxvD,EAEAiF,OAAA4iD,aAAAnnD,OAAAisH,UAAA3sH,EAMA,OAAAiF,SAKA2nH,YAAA,SAAAC,SAAAjgD,MAAAlsE,OAAAosH,mBAIA,IAFA,GAAA5oI,GAAA,EAAAsM,IAAAq8H,SAAA,OAEAt/H,KAAAiD,SAAAjD,KAAAiD,IAAAs8H,oBAEAt8H,IAAAq8H,SAAA3oI,IAIA,QAAAqJ,KAAAiD,IAAA,CAEA,GAAAlB,OAAAkB,IAAAs8H,kBACA,QAAAv/H,KAAA+B,MAEA,GAAA3S,MAAAoN,QAAAuF,OAEA,GAEAA,MAAAkB,IAAAs8H,uBAEAv/H,KAAA+B,QAEAs9E,MAAAtsF,KAAAkQ,IAAA2c,MACAzM,OAAApgB,KAAAJ,MAAAwgB,OAAApR,QAIAkB,IAAAq8H,SAAA3oI,eAEAqJ,KAAAiD,SAEA,QAAAjD,KAAA+B,MAAAqc,QAIA,GAEArc,MAAAkB,IAAAs8H,uBAEAv/H,KAAA+B,QAEAs9E,MAAAtsF,KAAAkQ,IAAA2c,MACA7d,MAAAqc,QAAAjL,OAAAA,OAAA1gB,SAIAwQ,IAAAq8H,SAAA3oI,eAEAqJ,KAAAiD,SAMA,IAEAlB,MAAAkB,IAAAs8H,uBAEAv/H,KAAA+B,QAEAs9E,MAAAtsF,KAAAkQ,IAAA2c,MACAzM,OAAApgB,KAAAgP,QAIAkB,IAAAq8H,SAAA3oI,eAEAqJ,KAAAiD,OA0CAvG,QAAAm3F,OAAAxV,YAAAhvF,WAEAmwI,SAAA,SAAAz4G,GAEA,GAAA04G,IAAA5sI,KAAAyrF,mBACAutC,GAAAh5H,KAAA6rF,aAEAwR,GAAAuvC,GAAA5T,IACA57B,GAAAwvC,GAAA5T,GAAA,EAEA6T,mBAAA,CAEAC,KAAA,CAEA,GAAArpI,MAEAspI,aAAA,CAKAC,aAAA,KAAA94G,EAAAmpE,IAAA,CAEA,IAAA,GAAA4vC,UAAAjU,GAAA,IAAA,CAEA,OAAA7rH,KAAAkwF,GAAA,CAEA,GAAAnpE,EAAAkpE,GAAA,KAAA4vC,aAMA,OAFAhU,IAAA4T,GAAAhtI,OACAI,KAAA6rF,aAAAmtC,GACAh5H,KAAAktI,UAAAlU,GAAA,EAAA9kG,EAAAkpE,IAIA,GAAA47B,KAAAiU,SAAA,KAKA,IAHA7vC,GAAAC,GACAA,GAAAuvC,KAAA5T,IAEA9kG,EAAAmpE,GAGA,KAAAyvC,MAOArpI,MAAAmpI,GAAAhtI,MACA,MAAAmtI,aAMA,CAAA,GAAA74G,GAAAkpE,GAiDA,KAAAyvC,kBA7CA,IAAAM,UAAAP,GAAA,EAEA14G,GAAAi5G,WAEAnU,GAAA,EACA57B,GAAA+vC,SAMA,KAAA,GAAAF,UAAAjU,GAAA,IAAA,CAEA,OAAA7rH,KAAAiwF,GAKA,MADAp9F,MAAA6rF,aAAA,EACA7rF,KAAAotI,aAAA,EAAAl5G,EAAAmpE,GAIA,IAAA27B,KAAAiU,SAAA,KAKA,IAHA5vC,GAAAD,GACAA,GAAAwvC,KAAA5T,GAAA,GAEA9kG,GAAAkpE,GAGA,KAAA0vC,MAOArpI,MAAAu1H,GACAA,GAAA,GAaA,KAAAA,GAAAv1H,OAAA,CAEA,GAAA4pI,KAAArU,GAAAv1H,QAAA,CAEAywB,GAAA04G,GAAAS,KAEA5pI,MAAA4pI,IAIArU,GAAAqU,IAAA,EAWA,GALAhwC,GAAAuvC,GAAA5T,QAKA7rH,MAJAiwF,GAAAwvC,GAAA5T,GAAA,IAOA,MADAh5H,MAAA6rF,aAAA,EACA7rF,KAAAotI,aAAA,EAAAl5G,EAAAmpE,GAIA,QAAAlwF,KAAAkwF,GAIA,MAFA27B,IAAA4T,GAAAhtI,OACAI,KAAA6rF,aAAAmtC,GACAh5H,KAAAktI,UAAAlU,GAAA,EAAA57B,GAAAlpE,GAMAl0B,KAAA6rF,aAAAmtC,GAEAh5H,KAAAstI,iBAAAtU,GAAA57B,GAAAC,IAIA,MAAAr9F,MAAAutI,aAAAvU,GAAA57B,GAAAlpE,EAAAmpE,KAIA/G,SAAA,KAKAk3C,oBAEAC,aAAA,WAEA,MAAAztI,MAAAs2F,UAAAt2F,KAAAwtI,kBAIAE,iBAAA,SAAA38G,OASA,IAAA,GALAlM,QAAA7kB,KAAA4rF,aACAtrE,OAAAtgB,KAAA0rF,aACAtc,OAAApvE,KAAA+rF,UACA5iE,OAAA4H,MAAAq+C,OAEAtrE,EAAA,EAAAA,IAAAsrE,SAAAtrE,EAEA+gB,OAAA/gB,GAAAwc,OAAA6I,OAAArlB,EAIA,OAAA+gB,SAMA0oH,aAAA,SAAAvU,GAAA57B,GAAAlpE,EAAAmpE,IAEA,KAAA,IAAA9sF,OAAA,4BAKA+8H,iBAAA,SAAAtU,GAAA57B,GAAAC,QASAxzF,OAAAm3F,OAAAxV,YAAAhvF,WAGA4wI,aAAA5hD,YAAAhvF,UAAAkxI,iBAGAR,UAAA1hD,YAAAhvF,UAAAkxI,mBA0BA1hD,iBAAAxvF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAnb,YAAAhvF,YAEAsvF,YAAAE,iBAEAwhD,kBAEAv3C,YAAAC,oBACAC,UAAAD,qBAIAo3C,iBAAA,SAAAtU,GAAA57B,GAAAC,IAEA,GAAAuvC,IAAA5sI,KAAAyrF,mBACAkiD,MAAA3U,GAAA,EACA4U,MAAA5U,GAAA,EAEA6U,MAAAjB,GAAAe,OACAG,MAAAlB,GAAAgB,MAEA,QAAAzgI,KAAA0gI,MAEA,OAAA7tI,KAAAytI,eAAAx3C,aAEA,IA1g9BA,MA6g9BA03C,MAAA3U,GACA6U,MAAA,EAAAzwC,GAAAC,EAEA,MAEA,KAjh9BA,MAoh9BAswC,MAAAf,GAAAhtI,OAAA,EACAiuI,MAAAzwC,GAAAwvC,GAAAe,OAAAf,GAAAe,MAAA,EAEA,MAEA,SAGAA,MAAA3U,GACA6U,MAAAxwC,GAMA,OAAAlwF,KAAA2gI,MAEA,OAAA9tI,KAAAytI,eAAAt3C,WAEA,IAxi9BA,MA2i9BAy3C,MAAA5U,GACA8U,MAAA,EAAAzwC,GAAAD,EAEA,MAEA,KA/i9BA,MAkj9BAwwC,MAAA,EACAE,MAAAzwC,GAAAuvC,GAAA,GAAAA,GAAA,EAEA,MAEA,SAGAgB,MAAA5U,GAAA,EACA8U,MAAA1wC,GAMA,GAAA2wC,QAAA,IAAA1wC,GAAAD,IACAhuB,OAAApvE,KAAA+rF,SAEA/rF,MAAAisF,YAAA8hD,QAAA3wC,GAAAywC,OACA7tI,KAAAmsF,YAAA4hD,QAAAD,MAAAzwC,IACAr9F,KAAAksF,YAAAyhD,MAAAv+D,OACApvE,KAAAosF,YAAAwhD,MAAAx+D,QAIAm+D,aAAA,SAAAvU,GAAA57B,GAAAlpE,EAAAmpE,IAuBA,IAAA,GArBAx4E,QAAA7kB,KAAA4rF,aACAtrE,OAAAtgB,KAAA0rF,aACAtc,OAAApvE,KAAA+rF,UAEAiiD,GAAAhV,GAAA5pD,OAAA6+D,GAAAD,GAAA5+D,OACA8+D,GAAAluI,KAAAksF,YAAAiiD,GAAAnuI,KAAAosF,YACAgiD,GAAApuI,KAAAisF,YAAAoiD,GAAAruI,KAAAmsF,YAEAn4B,GAAA9/B,EAAAkpE,KAAAC,GAAAD,IACAwvC,GAAA54E,EAAAA,EACAs6E,IAAA1B,GAAA54E,EAIAu6E,IAAAH,GAAAE,IAAA,EAAAF,GAAAxB,GAAAwB,GAAAp6E,EACAgiE,IAAA,EAAAoY,IAAAE,MAAA,IAAA,EAAAF,IAAAxB,KAAA,GAAAwB,IAAAp6E,EAAA,EACAi0C,KAAA,EAAAomC,IAAAC,KAAA,IAAAD,IAAAzB,GAAA,GAAA54E,EACAw6E,GAAAH,GAAAC,IAAAD,GAAAzB,GAIA9oI,EAAA,EAAAA,IAAAsrE,SAAAtrE,EAEA+gB,OAAA/gB,GACAyqI,GAAAjuH,OAAA4tH,GAAApqI,GACAkyH,GAAA11G,OAAA2tH,GAAAnqI,GACAmkG,GAAA3nF,OAAA0tH,GAAAlqI,GACA0qI,GAAAluH,OAAA6tH,GAAArqI,EAIA,OAAA+gB,WAgBAwnE,kBAAA7vF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAnb,YAAAhvF,YAEAsvF,YAAAO,kBAEAkhD,aAAA,SAAAvU,GAAA57B,GAAAlpE,EAAAmpE,IAYA,IAAA,GAVAx4E,QAAA7kB,KAAA4rF,aACAtrE,OAAAtgB,KAAA0rF,aACAtc,OAAApvE,KAAA+rF,UAEA0iD,QAAAzV,GAAA5pD,OACAs/D,QAAAD,QAAAr/D,OAEAu/D,SAAAz6G,EAAAkpE,KAAAC,GAAAD,IACAwxC,QAAA,EAAAD,QAEA7qI,EAAA,EAAAA,IAAAsrE,SAAAtrE,EAEA+gB,OAAA/gB,GACAwc,OAAAouH,QAAA5qI,GAAA8qI,QACAtuH,OAAAmuH,QAAA3qI,GAAA6qI,OAIA,OAAA9pH,WAoBAynE,oBAAA9vF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAnb,YAAAhvF,YAEAsvF,YAAAQ,oBAEAihD,aAAA,SAAAvU,GAAA57B,GAAAlpE,EAAAmpE,IAEA,MAAAr9F,MAAA0tI,iBAAA1U,GAAA,KAMA,IAAA6V,uBAEAA,yBAEAjiD,eAAA9tD,aACA+tD,gBAAA/tD,aAEAiuD,qBA/r9BA,KAis9BA+hD,iCAAA,SAAAjqH,QAEA,MAAA,IAAAynE,qBACAtsF,KAAAwsF,MAAAxsF,KAAAsgB,OAAAtgB,KAAA+uI,eAAAlqH,SAIAmqH,+BAAA,SAAAnqH,QAEA,MAAA,IAAAwnE,mBACArsF,KAAAwsF,MAAAxsF,KAAAsgB,OAAAtgB,KAAA+uI,eAAAlqH,SAIAoqH,+BAAA,SAAApqH,QAEA,MAAA,IAAAmnE,kBACAhsF,KAAAwsF,MAAAxsF,KAAAsgB,OAAAtgB,KAAA+uI,eAAAlqH,SAIAioE,iBAAA,SAAAL,eAEA,GAAAyiD,cAEA,QAAAziD,eAEA,IA7t9BA,MA+t9BAyiD,cAAAlvI,KAAA8uI,gCAEA,MAEA,KAlu9BA,MAou9BAI,cAAAlvI,KAAAgvI,8BAEA,MAEA,KAvu9BA,MAyu9BAE,cAAAlvI,KAAAivI,+BAMA,OAAA9hI,KAAA+hI,cAAA,CAEA,GAAAC,SAAA,iCACAnvI,KAAAovI,cAAA,yBAAApvI,KAAApC,IAEA,QAAAuP,KAAAnN,KAAAq2F,kBAAA,CAGA,GAAA5J,gBAAAzsF,KAAA+sF,qBAMA,KAAA,IAAAx8E,OAAA4+H,QAJAnvI,MAAA8sF,iBAAA9sF,KAAA+sF,sBAWA,WADAh9E,SAAAH,KAAA,gCAAAu/H,SAKAnvI,KAAAq2F,kBAAA64C,eAIAG,iBAAA,WAEA,OAAArvI,KAAAq2F,mBAEA,IAAAr2F,MAAA8uI,iCAEA,MApx9BA,KAsx9BA,KAAA9uI,MAAAgvI,+BAEA,MAvx9BA,KAyx9BA,KAAAhvI,MAAAivI,+BAEA,MA1x9BA,QAgy9BAF,aAAA,WAEA,MAAA/uI,MAAAsgB,OAAA1gB,OAAAI,KAAAwsF,MAAA5sF,QAKAC,MAAA,SAAAyvI,YAEA,GAAA,IAAAA,WAIA,IAAA,GAFA9iD,OAAAxsF,KAAAwsF,MAEA1oF,EAAA,EAAAyT,EAAAi1E,MAAA5sF,OAAAkE,IAAAyT,IAAAzT,EAEA0oF,MAAA1oF,IAAAwrI,UAMA,OAAAtvI,OAKA8mC,MAAA,SAAAmwD,WAEA,GAAA,IAAAA,UAIA,IAAA,GAFAzK,OAAAxsF,KAAAwsF,MAEA1oF,EAAA,EAAAyT,EAAAi1E,MAAA5sF,OAAAkE,IAAAyT,IAAAzT,EAEA0oF,MAAA1oF,IAAAmzF,SAMA,OAAAj3F,OAMAhD,KAAA,SAAAs1F,UAAAi9C,SAOA,IALA,GAAA/iD,OAAAxsF,KAAAwsF,MACAgjD,MAAAhjD,MAAA5sF,OACA8N,KAAA,EACAD,GAAA+hI,MAAA,EAEA9hI,OAAA8hI,OAAAhjD,MAAA9+E,MAAA4kF,aAAA5kF,IACA,OAAA,IAAAD,IAAA++E,MAAA/+E,IAAA8hI,WAAA9hI,EAIA,MAFAA,GAEA,IAAAC,MAAAD,KAAA+hI,MAAA,CAGA9hI,MAAAD,KAAAA,GAAAmB,KAAAsF,IAAAzG,GAAA,GAAAC,KAAAD,GAAA,EAEA,IAAA2hE,QAAApvE,KAAA+uI,cACA/uI,MAAAwsF,MAAAE,eAAAo/C,WAAAt/C,MAAA9+E,KAAAD,IACAzN,KAAAsgB,OAAAosE,eACAo/C,WAAA9rI,KAAAsgB,OAAA5S,KAAA0hE,OAAA3hE,GAAA2hE,QAIA,MAAApvE,OAKAgtF,SAAA,WAEA,GAAAyiD,QAAA,EAEA1jD,UAAA/rF,KAAA+uI,cACAhjD,WAAAn9E,KAAAE,MAAAi9E,YAAA,IAEAh8E,QAAAiuB,MAAA,6DAAAh+B,MACAyvI,OAAA,EAIA,IAAAjjD,OAAAxsF,KAAAwsF,MACAlsE,OAAAtgB,KAAAsgB,OAEAkvH,MAAAhjD,MAAA5sF,MAEA,KAAA4vI,QAEAz/H,QAAAiuB,MAAA,gDAAAh+B,MACAyvI,OAAA,EAMA,KAAA,GAFAC,UAAA,KAEA5rI,EAAA,EAAAA,IAAA0rI,MAAA1rI,IAAA,CAEA,GAAA6rI,UAAAnjD,MAAA1oF,EAEA,IAAA,gBAAA6rI,WAAA7iI,MAAA6iI,UAAA,CAEA5/H,QAAAiuB,MAAA,4DAAAh+B,KAAA8D,EAAA6rI,UACAF,OAAA,CACA,OAIA,GAAA,OAAAC,UAAAA,SAAAC,SAAA,CAEA5/H,QAAAiuB,MAAA,mDAAAh+B,KAAA8D,EAAA6rI,SAAAD,UACAD,OAAA,CACA,OAIAC,SAAAC,SAIA,OAAAxiI,KAAAmT,QAEAosE,eAAAq/C,aAAAzrH,QAEA,IAAA,GAAAxc,GAAA,EAAAyT,EAAA+I,OAAA1gB,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAoL,OAAAoR,OAAAxc,EAEA,IAAAgJ,MAAAoC,OAAA,CAEAa,QAAAiuB,MAAA,6DAAAh+B,KAAA8D,EAAAoL,OACAugI,OAAA,CACA,QAUA,MAAAA,QAMAxiD,SAAA,WAWA,IAAA,GATAT,OAAAxsF,KAAAwsF,MACAlsE,OAAAtgB,KAAAsgB,OACA8uD,OAAApvE,KAAA+uI,eAEAa,oBA/79BA,OA+79BA5vI,KAAAqvI,mBAEAQ,WAAA,EACAz6H,UAAAo3E,MAAA5sF,OAAA,EAEAkE,EAAA,EAAAA,EAAAsR,YAAAtR,EAAA,CAEA,GAAAgsI,OAAA,EAEA/iH,KAAAy/D,MAAA1oF,EAKA,IAAAipB,OAJAy/D,MAAA1oF,EAAA,KAIA,IAAAA,GAAAipB,OAAAA,KAAA,IAEA,GAAA6iH,oBAsBAE,MAAA,MAdA,KAAA,GAJA3mH,QAAArlB,EAAAsrE,OACA2gE,QAAA5mH,OAAAimD,OACA4gE,QAAA7mH,OAAAimD,OAEAxvD,EAAA,EAAAA,IAAAwvD,SAAAxvD,EAAA,CAEA,GAAA1Q,OAAAoR,OAAA6I,OAAAvJ,EAEA,IAAA1Q,QAAAoR,OAAAyvH,QAAAnwH,IACA1Q,QAAAoR,OAAA0vH,QAAApwH,GAAA,CAEAkwH,MAAA,CACA,QAYA,GAAAA,KAAA,CAEA,GAAAhsI,IAAA+rI,WAAA,CAEArjD,MAAAqjD,YAAArjD,MAAA1oF,EAKA,KAAA,GAHAmsI,YAAAnsI,EAAAsrE,OACA8gE,YAAAL,WAAAzgE,OAEAxvD,EAAA,EAAAA,IAAAwvD,SAAAxvD,EAEAU,OAAA4vH,YAAAtwH,GAAAU,OAAA2vH,WAAArwH,KAIAiwH,YAQA,GAAAz6H,UAAA,EAAA,CAEAo3E,MAAAqjD,YAAArjD,MAAAp3E,UAEA,KAAA,GAAA66H,YAAA76H,UAAAg6D,OAAA8gE,YAAAL,WAAAzgE,OAAAxvD,EAAA,EAAAA,IAAAwvD,SAAAxvD,EAEAU,OAAA4vH,YAAAtwH,GAAAU,OAAA2vH,WAAArwH,KAEAiwH,WAWA,MAPAA,cAAArjD,MAAA5sF,SAEAI,KAAAwsF,MAAAE,eAAAo/C,WAAAt/C,MAAA,EAAAqjD,YACA7vI,KAAAsgB,OAAAosE,eAAAo/C,WAAAxrH,OAAA,EAAAuvH,WAAAzgE,SAIApvE,OA4CAktF,oBAAA1wF,UACAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAkoC,yBAEA/iD,YAAAoB,oBAEAkiD,cAAA,WAoBAjiD,4BAAA3wF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAnb,YAAAhvF,YAEAsvF,YAAAqB,4BAEAogD,aAAA,SAAAvU,GAAA57B,GAAAlpE,EAAAmpE,IAUA,IAAA,GARAx4E,QAAA7kB,KAAA4rF,aACAtrE,OAAAtgB,KAAA0rF,aACAtc,OAAApvE,KAAA+rF,UAEA5iE,OAAA6vG,GAAA5pD,OAEAhsB,OAAAlvB,EAAAkpE,KAAAC,GAAAD,IAEA77C,IAAAp4B,OAAAimD,OAAAjmD,SAAAo4B,IAAAp4B,QAAA,EAEAuU,WAAAspE,UAAAniF,OAAA,EACAvE,OAAA6I,OAAAimD,OAAA9uD,OAAA6I,OAAAi6B,MAIA,OAAAv+B,WAqBAuoE,wBAAA5wF,UACAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAkoC,yBAEA/iD,YAAAsB,wBAEAgiD,cAAA,aAIAriD,qBA9o+BA,KAgp+BAiiD,+BAAA,SAAAnqH,QAEA,MAAA,IAAAsoE,6BACAntF,KAAAwsF,MAAAxsF,KAAAsgB,OAAAtgB,KAAA+uI,eAAAlqH,SAIAoqH,mCAAA9hI,KAmBAkgF,oBAAA7wF,UACAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAkoC,yBAEA/iD,YAAAuB,oBAEA+hD,cAAA,WAwBA9hD,oBAAA9wF,UACAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAkoC,yBAEA/iD,YAAAwB,oBAEA8hD,cAAA,SACAviD,gBAAAtwF,MAEAwwF,qBAht+BA,KAkt+BAiiD,mCAAA7hI,GAEA8hI,mCAAA9hI,KAoBAogF,qBAAA/wF,UACAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAkoC,yBAEA/iD,YAAAyB,qBAEA6hD,cAAA,OACAviD,gBAAAtwF,MAEAwwF,qBAhv+BA,KAkv+BAiiD,mCAAA7hI,GACA8hI,mCAAA9hI,KAwBAqgF,mBAAAhxF,UACAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAkoC,yBAEA/iD,YAAA0B,mBAEA4hD,cAAA,UA4BA3hD,cAAAjxF,UAAAqyI,uBACAA,uBAAA/iD,YAAA2B,cAIA5jF,OAAAm3F,OAAAvT,eAKAs5B,MAAA,SAAAopB,MAEA,OAAAhjI,KAAAgjI,KAAA/0G,KAEA,KAAA,IAAA7qB,OAAA,sCAIA,IAAA6/H,WAAA3iD,cAAA4iD,8BAAAF,KAAA/0G,KAEA,QAAAjuB,KAAAgjI,KAAA3jD,MAAA,CAEA,GAAAA,UAAAlsE,SAEAosE,gBAAA8/C,YAAA2D,KAAAnvH,KAAAwrE,MAAAlsE,OAAA,SAEA6vH,KAAA3jD,MAAAA,MACA2jD,KAAA7vH,OAAAA,OAKA,WAAAnT,KAAAijI,UAAArpB,MAEAqpB,UAAArpB,MAAAopB,MAKA,GAAAC,WACAD,KAAAvyI,KAAAuyI,KAAA3jD,MAAA2jD,KAAA7vH,OAAA6vH,KAAA1jD,gBAMAr9D,OAAA,SAAAkhH,OAEA,GAEAH,MAFAC,UAAAE,MAAAxkD,WAKA,QAAA3+E,KAAAijI,UAAAhhH,OAEA+gH,KAAAC,UAAAhhH,OAAAkhH,WAEA,CAGAH,MAEAvyI,KAAA0yI,MAAA1yI,KACA4uF,MAAAE,eAAAC,aAAA2jD,MAAA9jD,MAAAjwF,OACA+jB,OAAAosE,eAAAC,aAAA2jD,MAAAhwH,OAAA/jB,OAIA,IAAAkwF,eAAA6jD,MAAAjB,kBAEA5iD,iBAAA6jD,MAAAvjD,uBAEAojD,KAAA1jD,cAAAA,eAQA,MAFA0jD,MAAA/0G,KAAAk1G,MAAAlB,cAEAe,MAIAE,8BAAA,SAAA78C,UAEA,OAAAA,SAAA3gF,eAEA,IAAA,SACA,IAAA,SACA,IAAA,QACA,IAAA,SACA,IAAA,UAEA,MAAAw6E,oBAEA,KAAA,SACA,IAAA,UACA,IAAA,UACA,IAAA,UAEA,MAAAH,oBAEA,KAAA,QAEA,MAAAM,mBAEA,KAAA,aAEA,MAAAJ,wBAEA,KAAA,OACA,IAAA,UAEA,MAAAG,qBAEA,KAAA,SAEA,MAAAD,qBAIA,KAAA,IAAA/8E,OAAA,yBAAAijF,aAiCA3pF,OAAAm3F,OAAAtT,eAEAq5B,MAAA,SAAAopB,MAMA,IAAA,GAJAxiD,WACA4iD,WAAAJ,KAAAxiD,OACA6iD,UAAA,GAAAL,KAAAM,KAAA,GAEA3sI,EAAA,EAAAyT,EAAAg5H,WAAA3wI,OAAAkE,IAAAyT,IAAAzT,EAEA6pF,OAAAztF,KAAAutF,cAAAs5B,MAAAwpB,WAAAzsI,IAAAgjC,MAAA0pG,WAIA,OAAA,IAAA9iD,eAAAyiD,KAAAvyI,KAAAuyI,KAAA/nH,SAAAulE,SAIAv+D,OAAA,SAAAqmE,MAaA,IAAA,GAXA9H,WACA+iD,WAAAj7C,KAAA9H,OAEAwiD,MAEAvyI,KAAA63F,KAAA73F,KACAwqB,SAAAqtE,KAAArtE,SACAulE,OAAAA,QAIA7pF,EAAA,EAAAyT,EAAAm5H,WAAA9wI,OAAAkE,IAAAyT,IAAAzT,EAEA6pF,OAAAztF,KAAAutF,cAAAr+D,OAAAshH,WAAA5sI,IAIA,OAAAqsI,OAIAQ,8BAAA,SAAA/yI,KAAAgzI,oBAAAH,IAAAI,QAKA,IAAA,GAHAC,iBAAAF,oBAAAhxI,OACA+tF,UAEA7pF,EAAA,EAAAA,EAAAgtI,gBAAAhtI,IAAA,CAEA,GAAA0oF,UACAlsE,SAEAksE,OAAAtsF,MACA4D,EAAAgtI,gBAAA,GAAAA,gBACAhtI,GACAA,EAAA,GAAAgtI,iBAEAxwH,OAAApgB,KAAA,EAAA,EAAA,EAEA,IAAAw5C,OAAAgzC,eAAAy/C,iBAAA3/C,MACAA,OAAAE,eAAA2/C,YAAA7/C,MAAA,EAAA9yC,OACAp5B,OAAAosE,eAAA2/C,YAAA/rH,OAAA,EAAAo5B,OAIAm3F,QAAA,IAAArkD,MAAA,KAEAA,MAAAtsF,KAAA4wI,iBACAxwH,OAAApgB,KAAAogB,OAAA,KAIAqtE,OAAAztF,KACA,GAAAmtF,qBACA,0BAAAujD,oBAAA9sI,GAAAlG,KAAA,IACA4uF,MAAAlsE,QACAwmB,MAAA,EAAA2pG,MAIA,MAAA,IAAA/iD,eAAA9vF,MAAA,EAAA+vF,SAIAojD,WAAA,SAAAC,kBAAApzI,MAEA,GAAAqzI,WAAAD,iBAEA,KAAAz0I,MAAAoN,QAAAqnI,mBAAA,CAEA,GAAAr6G,GAAAq6G,iBACAC,WAAAt6G,EAAA0b,UAAA1b,EAAA0b,SAAA6+F,YAAAv6G,EAAAu6G,WAIA,IAAA,GAAAptI,GAAA,EAAAA,EAAAmtI,UAAArxI,OAAAkE,IAEA,GAAAmtI,UAAAntI,GAAAlG,OAAAA,KAEA,MAAAqzI,WAAAntI,EAMA,OAAA,OAIAqtI,oCAAA,SAAA1hG,aAAAghG,IAAAI,QAUA,IAAA,GARAO,4BAIArkF,QAAA,qBAIAjpD,EAAA,EAAAyyC,GAAA9G,aAAA7vC,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA,GAAA2uH,aAAAhjF,aAAA3rC,GACA6lB,MAAA8oG,YAAA70H,KAAA+W,MAAAo4C,QAEA,IAAApjC,OAAAA,MAAA/pB,OAAA,EAAA,CAEA,GAAAhC,MAAA+rB,MAAA,GAEA0nH,sBAAAD,wBAAAxzI,KACAyzI,yBAEAD,wBAAAxzI,MAAAyzI,0BAIAA,sBAAAnxI,KAAAuyH,cAMA,GAAA6e,SAEA,KAAA,GAAA1zI,QAAAwzI,yBAEAE,MAAApxI,KAAAwtF,cAAAijD,8BAAA/yI,KAAAwzI,wBAAAxzI,MAAA6yI,IAAAI,QAIA,OAAAS,QAKAC,eAAA,SAAAC,UAAA7/E,OAEA,IAAA6/E,UAGA,MADAzhI,SAAAiuB,MAAA,yDACA,IAkCA,KAAA,GA9BAyzG,kBAAA,SAAArB,UAAAsB,UAAAC,cAAAC,aAAAC,YAGA,GAAA,IAAAF,cAAA/xI,OAAA,CAEA,GAAA4sF,UACAlsE,SAEAosE,gBAAA8/C,YAAAmF,cAAAnlD,MAAAlsE,OAAAsxH,cAGA,IAAAplD,MAAA5sF,QAEAiyI,WAAA3xI,KAAA,GAAAkwI,WAAAsB,UAAAllD,MAAAlsE,WAQAqtE,UAEAmkD,SAAAN,UAAA5zI,MAAA,UAEAwqB,SAAAopH,UAAA5xI,SAAA,EACA6wI,IAAAe,UAAAf,KAAA,GAEAsB,gBAAAP,UAAAQ,cAEA73H,EAAA,EAAAA,EAAA43H,gBAAAnyI,OAAAua,IAAA,CAEA,GAAAw3H,eAAAI,gBAAA53H,GAAA6G,IAGA,IAAA2wH,eAAA,IAAAA,cAAA/xI,OAGA,GAAA+xI,cAAA,GAAAliG,aAAA,CAKA,IAAA,GAFAwiG,qBAEA9nI,EAAA,EAAAA,EAAAwnI,cAAA/xI,OAAAuK,IAEA,GAAAwnI,cAAAxnI,GAAAslC,aAEA,IAAA,GAAAnjC,GAAA,EAAAA,EAAAqlI,cAAAxnI,GAAAslC,aAAA7vC,OAAA0M,IAEA2lI,iBAAAN,cAAAxnI,GAAAslC,aAAAnjC,KAAA,CAWA,KAAA,GAAA4lI,mBAAAD,kBAAA,CAKA,IAAA,GAHAzlD,UACAlsE,UAEAhU,EAAA,EAAAA,IAAAqlI,cAAAxnI,GAAAslC,aAAA7vC,SAAA0M,EAAA,CAEA,GAAA6lI,cAAAR,cAAAxnI,EAEAqiF,OAAAtsF,KAAAiyI,aAAAplH,MACAzM,OAAApgB,KAAAiyI,aAAA1f,cAAAyf,gBAAA,EAAA,GAIAvkD,OAAAztF,KAAA,GAAAmtF,qBAAA,yBAAA6kD,gBAAA,IAAA1lD,MAAAlsE,SAIA8H,SAAA6pH,iBAAAryI,QAAA6wI,KAAA,OAEA,CAIA,GAAA2B,UAAA,UAAAzgF,MAAAx3C,GAAAvc,KAAA,GAEA6zI,kBACAvkD,oBAAAklD,SAAA,YACAT,cAAA,MAAAhkD,QAEA8jD,iBACArkD,wBAAAglD,SAAA,cACAT,cAAA,MAAAhkD,QAEA8jD,iBACAvkD,oBAAAklD,SAAA,SACAT,cAAA,MAAAhkD,SAMA,MAAA,KAAAA,OAAA/tF,OAEA,KAIA,GAAA8tF,eAAAokD,SAAA1pH,SAAAulE,WAQA9jF,OAAAm3F,OAAAtT,cAAAlxF,WAEAoxF,cAAA,WAIA,IAAA,GAFAD,QAAA3tF,KAAA2tF,OAAAvlE,SAAA,EAEAtkB,EAAA,EAAAyT,EAAAo2E,OAAA/tF,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAwsI,OAAAtwI,KAAA2tF,OAAA7pF,EAEAskB,UAAAxZ,KAAAsF,IAAAkU,SAAAkoH,MAAA9jD,MAAA8jD,MAAA9jD,MAAA5sF,OAAA,IAIAI,KAAAooB,SAAAA,UAIAprB,KAAA,WAEA,IAAA,GAAA8G,GAAA,EAAAA,EAAA9D,KAAA2tF,OAAA/tF,OAAAkE,IAEA9D,KAAA2tF,OAAA7pF,GAAA9G,KAAA,EAAAgD,KAAAooB,SAIA,OAAApoB,OAIAitF,SAAA,WAEA,IAAA,GAAAnpF,GAAA,EAAAA,EAAA9D,KAAA2tF,OAAA/tF,OAAAkE,IAEA9D,KAAA2tF,OAAA7pF,GAAAmpF,UAIA,OAAAjtF,SAiBA6J,OAAAm3F,OAAAnT,eAAArxF,WAEA+sI,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,SAEA,GAAAh2C,OAAA3zC,IAEA,IAAAmqF,YAAAx2C,MAAAy2C,SACAm/C,KAAAv/C,IAAA,SAAA3F,MAEAoF,OAAA91C,MAAAozE,MAAAF,KAAAE,MAAA1iC,SAEAqF,WAAAC,UAIA0oD,YAAA,SAAAnjI,OAEAlP,KAAAqkC,SAAAn1B,OAIA63G,MAAA,SAAAopB,MAIA,QAAAmC,YAAA10I,MAQA,WANAuP,KAAAk3B,SAAAzmC,OAEAmS,QAAAH,KAAA,0CAAAhS,MAIAymC,SAAAzmC,MAVA,GAAAymC,UAAArkC,KAAAqkC,SAcAwI,SAAA,GAAAs8F,WAAAgH,KAAA/0G,KA8DA,QA5DAjuB,KAAAgjI,KAAA10G,OAAAoR,SAAApR,KAAA00G,KAAA10G,UACAtuB,KAAAgjI,KAAAvyI,OAAAivC,SAAAjvC,KAAAuyI,KAAAvyI,UACAuP,KAAAgjI,KAAAtpG,OAAAgG,SAAAhG,MAAA+0E,OAAAu0B,KAAAtpG,WACA15B,KAAAgjI,KAAA15D,YAAA5pC,SAAA4pC,UAAA05D,KAAA15D,eACAtpE,KAAAgjI,KAAAz5D,YAAA7pC,SAAA6pC,UAAAy5D,KAAAz5D,eACAvpE,KAAAgjI,KAAAt6D,UAAAhpC,SAAAgpC,SAAA+lC,OAAAu0B,KAAAt6D,cACA1oE,KAAAgjI,KAAA95D,UAAAxpC,SAAAwpC,SAAAulC,OAAAu0B,KAAA95D,cACAlpE,KAAAgjI,KAAA75D,YAAAzpC,SAAAypC,UAAA65D,KAAA75D,eACAnpE,KAAAgjI,KAAAv5D,YAAA/pC,SAAA+pC,UAAAu5D,KAAAv5D,eACAzpE,KAAAgjI,KAAAt5D,qBAAAhqC,SAAAgqC,mBAAAs5D,KAAAt5D,wBACA1pE,KAAAgjI,KAAA1pG,WAAAoG,SAAApG,SAAA0pG,KAAA1pG,cACAt5B,KAAAgjI,KAAAhqG,eAAA0G,SAAA1G,aAAAgqG,KAAAhqG,kBACAh5B,KAAAgjI,KAAA/pG,iBAAAyG,SAAAzG,eAAA+pG,KAAA/pG,oBACAj5B,KAAAgjI,KAAApiG,eAAAlB,SAAAkB,aAAAoiG,KAAApiG,kBACA5gC,KAAAgjI,KAAA7jG,MAAAO,SAAAP,IAAA6jG,KAAA7jG,SACAn/B,KAAAgjI,KAAAriG,cAAAjB,SAAAiB,YAAAqiG,KAAAriG,iBACA3gC,KAAAgjI,KAAA7lG,WAAAuC,SAAAvC,SAAA6lG,KAAA7lG,cACAn9B,KAAAgjI,KAAAviG,OAAAf,SAAAe,KAAAuiG,KAAAviG,UACAzgC,KAAAgjI,KAAAvpG,UAAAiG,SAAAjG,QAAAupG,KAAAvpG,aACAz5B,KAAAgjI,KAAAliG,cAAApB,SAAAoB,YAAAkiG,KAAAliG,iBACA9gC,KAAAgjI,KAAA3kG,YAAAqB,SAAArB,UAAA2kG,KAAA3kG,eACAr+B,KAAAgjI,KAAA9iG,YAAAR,SAAAQ,UAAA8iG,KAAA9iG,eACAlgC,KAAAgjI,KAAA7iG,aAAAT,SAAAS,WAAA6iG,KAAA7iG,gBACAngC,KAAAgjI,KAAAzhG,aAAA7B,SAAA6B,WAAAyhG,KAAAzhG,gBACAvhC,KAAAgjI,KAAA9gG,YAAAxC,SAAAwC,UAAA8gG,KAAA9gG,eACAliC,KAAAgjI,KAAA7gG,qBAAAzC,SAAAyC,mBAAA6gG,KAAA7gG,wBACAniC,KAAAgjI,KAAAjvF,mBAAArU,SAAAqU,iBAAAivF,KAAAjvF,sBACA/zC,KAAAgjI,KAAAhvF,oBAAAtU,SAAAsU,kBAAAgvF,KAAAhvF,uBAEAh0C,KAAAgjI,KAAA3gG,WAAA3C,SAAA2C,SAAA2gG,KAAA3gG,cACAriC,KAAAgjI,KAAA1gG,eAAA5C,SAAA4C,aAAA0gG,KAAA1gG,kBACAtiC,KAAAgjI,KAAArhG,YAAAjC,SAAAiC,UAAAqhG,KAAArhG,eAEA3hC,KAAAgjI,KAAA/sI,UAAAypC,SAAAzpC,QAAA+sI,KAAA/sI,aACA+J,KAAAgjI,KAAAnhG,WAAAnC,SAAAmC,SAAAmhG,KAAAnhG,cAIA7hC,KAAAgjI,KAAAoC,UAAA1lG,SAAAiB,YAAA,IAAAqiG,KAAAoC,aAIAplI,KAAAgjI,KAAApuG,OAAA8K,SAAA9K,KAAAouG,KAAApuG,UACA50B,KAAAgjI,KAAA7gF,kBAAAziB,SAAAyiB,gBAAA6gF,KAAA7gF,qBAIAniD,KAAAgjI,KAAA3lI,MAAAqiC,SAAAriC,IAAA8nI,WAAAnC,KAAA3lI,UAEA2C,KAAAgjI,KAAA5/F,WAEA1D,SAAA0D,SAAA+hG,WAAAnC,KAAA5/F,UACA1D,SAAAoB,aAAA,OAIA9gC,KAAAgjI,KAAAxkF,UAAA9e,SAAA8e,QAAA2mF,WAAAnC,KAAAxkF,cACAx+C,KAAAgjI,KAAA55D,YAAA1pC,SAAA0pC,UAAA45D,KAAA55D,eAEAppE,KAAAgjI,KAAAvkF,YAAA/e,SAAA+e,UAAA0mF,WAAAnC,KAAAvkF,gBACAz+C,KAAAgjI,KAAA35D,YAAA,CAEA,GAAAA,aAAA25D,KAAA35D,aAEA,IAAAj6E,MAAAoN,QAAA6sE,eAIAA,aAAAA,YAAAA,cAIA3pC,SAAA2pC,aAAA,GAAA57C,UAAAorC,UAAAwQ,aA4BA,WAxBArpE,KAAAgjI,KAAA3/F,kBAAA3D,SAAA2D,gBAAA8hG,WAAAnC,KAAA3/F,sBACArjC,KAAAgjI,KAAA1/F,oBAAA5D,SAAA4D,kBAAA0/F,KAAA1/F,uBACAtjC,KAAAgjI,KAAAz/F,mBAAA7D,SAAA6D,iBAAAy/F,KAAAz/F,sBAEAvjC,KAAAgjI,KAAAphF,eAAAliB,SAAAkiB,aAAAujF,WAAAnC,KAAAphF,mBACA5hD,KAAAgjI,KAAAnhF,eAAAniB,SAAAmiB,aAAAsjF,WAAAnC,KAAAnhF,mBAEA7hD,KAAAgjI,KAAArhF,cAAAjiB,SAAAiiB,YAAAwjF,WAAAnC,KAAArhF,kBACA3hD,KAAAgjI,KAAAr6D,oBAAAjpC,SAAAipC,kBAAAq6D,KAAAr6D,uBAEA3oE,KAAAgjI,KAAAvvF,cAAA/T,SAAA+T,YAAA0xF,WAAAnC,KAAAvvF,kBAEAzzC,KAAAgjI,KAAAtvF,SAAAhU,SAAAgU,OAAAyxF,WAAAnC,KAAAtvF,aAEA1zC,KAAAgjI,KAAAnvF,eAAAnU,SAAAmU,aAAAmvF,KAAAnvF,kBAEA7zC,KAAAgjI,KAAA3vF,WAAA3T,SAAA2T,SAAA8xF,WAAAnC,KAAA3vF,eACArzC,KAAAgjI,KAAA1vF,oBAAA5T,SAAA4T,kBAAA0vF,KAAA1vF,uBAEAtzC,KAAAgjI,KAAAzvF,QAAA7T,SAAA6T,MAAA4xF,WAAAnC,KAAAzvF,YACAvzC,KAAAgjI,KAAAxvF,iBAAA9T,SAAA8T,eAAAwvF,KAAAxvF,oBAEAxzC,KAAAgjI,KAAA5gF,cAAA1iB,SAAA0iB,YAAA+iF,WAAAnC,KAAA5gF,cAEA1iB,YAgBAhjC,OAAAm3F,OAAAlT,qBAAAtxF,WAEA+sI,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,SAEA,GAAAh2C,OAAA3zC,IAEA,IAAAmqF,YAAAx2C,MAAAy2C,SACAm/C,KAAAv/C,IAAA,SAAA3F,MAEAoF,OAAA91C,MAAAozE,MAAAF,KAAAE,MAAA1iC,SAEAqF,WAAAC,UAIAo9B,MAAA,SAAAopB,MAEA,GAAA99F,UAAA,GAAA4L,gBAEAltB,MAAAo/G,KAAA5vH,KAAAwQ,KAEA,QAAA5jB,KAAA4jB,MAAA,CAEA,GAAAyhH,YAAA,GAAAC,cAAA1hH,MAAAqK,MAAArK,MAAAlc,MACAw9B,UAAA0N,SAAA,GAAAlD,iBAAA21F,WAAA,IAIA,GAAA7qI,YAAAwoI,KAAA5vH,KAAA5Y,UAEA,KAAA,GAAAyI,OAAAzI,YAAA,CAEA,GAAAowC,WAAApwC,WAAAyI,KACAoiI,WAAA,GAAAC,cAAA16F,UAAA3c,MAAA2c,UAAAljC,MAEAw9B,UAAA2N,aAAA5vC,IAAA,GAAAysC,iBAAA21F,WAAAz6F,UAAA+E,SAAA/E,UAAAgF,aAIA,GAAAnI,QAAAu7F,KAAA5vH,KAAAq0B,QAAAu7F,KAAA5vH,KAAAmyH,WAAAvC,KAAA5vH,KAAAoyH,OAEA,QAAAxlI,KAAAynC,OAEA,IAAA,GAAA9wC,GAAA,EAAAyT,EAAAq9B,OAAAh1C,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAgxC,OAAAF,OAAA9wC,EAEAuuC,UAAAwN,SAAA/K,MAAAqJ,MAAArJ,MAAAqE,MAAArE,MAAAE,eAMA,GAAAqH,gBAAA8zF,KAAA5vH,KAAA87B,cAEA,QAAAlvC,KAAAkvC,eAAA,CAEA,GAAApL,QAAA,GAAAnT,aAEA3wB,KAAAkvC,eAAApL,QAEAA,OAAA+0B,UAAA3pB,eAAApL,QAIAoB,SAAAgK,eAAA,GAAArL,QAAAC,OAAAoL,eAAAnL,QAIA,MAAAmB,YAMA,IAAAogG,eACA75F,UAAAA,UACAE,WAAAA,WAEAsE,kBAAA,mBAAAA,mBAAAA,kBAAAtE,WACAP,WAAAA,WACA9T,YAAAA,YACAvF,WAAAA,WACAuZ,YAAAA,YACA3Z,aAAAA,aACAwZ,aAAAA,aAeAy1C,QAAA6kD,UAEAC,YAEAt1I,IAAA,SAAA+X,MAAAhU,QAEAtB,KAAA6yI,SAAA3yI,KAAAoV,MAAAhU,SAIA0V,IAAA,SAAAsyH,MAIA,IAAA,GAFAuJ,UAAA7yI,KAAA6yI,SAEA/uI,EAAA,EAAA4f,EAAAmvH,SAAAjzI,OAAAkE,EAAA4f,EAAA5f,GAAA,EAAA,CAEA,GAAAwR,OAAAu9H,SAAA/uI,GACAxC,OAAAuxI,SAAA/uI,EAAA,EAEA,IAAAwR,MAAAzY,KAAAysI,MAEA,MAAAhoI,QAMA,MAAA,QAMAuI,OAAAm3F,OAAAjT,OAAAvxF,WAEAivI,gBAAAt+H,GAEA2lI,eAAA,SAAA9oD,KAEA,GAAArgE,OAAAqgE,IAAAlqE,MAAA,IAEA,OAAA,KAAA6J,MAAA/pB,OAAA,MAEA+pB,MAAAyqC,MAEAzqC,MAAArZ,KAAA,KAAA,MAIAyiI,cAAA,SAAAr0C,UAAApQ,YAAAm9C,aAIA,IAAA,GAFA52H,UAEA/Q,EAAA,EAAAA,EAAA46F,UAAA9+F,SAAAkE,EAEA+Q,MAAA/Q,GAAA9D,KAAAgzI,eAAAt0C,UAAA56F,GAAAwqF,YAAAm9C,YAIA,OAAA52H,QAIAm+H,eAAA,WAEA,GAAAC,eACAj0E,WAAAA,WACArxB,eAAAA,eACAyxB,iBAAAA,iBACAO,oBAAAA,oBACAI,iBAAAA,iBACAd,eAAAA,gBAGAp4B,MAAA,GAAA9C,OACAmvG,cAAA,GAAAvoD,eACAwoD,eAAA,GAAAtlD,eAEA,OAAA,UAAAvhF,EAAAgiF,YAAAm9C,aAMA,QAAA2H,aAAAlwG,KAAA9G,OAAAjT,OAAA47E,KAAA1pE,YAEA,GAGA8B,SAHAk2G,SAAA/kD,YAAAprD,KACA5hC,OAAAysF,OAAA6kD,SAAA57H,IAAAq8H,SAIA,QAAA/xI,OAEA67B,QAAA77B,OAAAioI,KAAA8J,WAIAH,cAAAxH,eAAAD,aACAtuG,QAAA+1G,cAAA3J,KAAA8J,eAIAlmI,KAAAivB,SAEAe,QAAAf,OAAA4pC,UAAA5pC,QAEA,IAAAA,OAAA,KAAAe,QAAAnC,MAAA4tC,gBACA,IAAAxsC,OAAA,KAAAe,QAAAlC,MAAA2tC,qBAIAz7D,KAAAgc,QAEAgU,QAAAhU,OAAA68C,UAAA78C,YAIAhc,KAAA43F,OAEA,WAAAA,KAAA,KAAA5nE,QAAAnC,MAAA4tC,gBACA,WAAAm8B,KAAA,KAAA5nE,QAAAnC,MAAA8tC,wBAEA,WAAAi8B,KAAA,KAAA5nE,QAAAlC,MAAA2tC,gBACA,WAAAm8B,KAAA,KAAA5nE,QAAAlC,MAAA6tC,6BAIA37D,KAAAkuB,aAEA8B,QAAA9B,WAAAA,WAIA,IAAAI,MAAAC,MAAAC,cAIA,OAFA0I,UAAA5I,MAAA0B,QAEA1B,KAvDA,GAAA4I,aA6DA8rG,MACA10G,KAAAC,MAAAC,eACAP,KAAA,sBAGA,KAAA,GAAAx9B,QAAA0O,GAAA,CAEA,GAAA4C,OAAA5C,EAAA1O,KAEA,QAAAA,MAEA,IAAA,WACA,IAAA,WACA,IAAA,iBACA,IAAA,eACA,KACA,KAAA,UACAuyI,KAAAvyI,KAAAsR,KACA,MACA,KAAA,WACAihI,KAAA7lG,SAAA2oG,aAAA/jI,MACA,MACA,KAAA,eACA,IAAA,aACAa,QAAAH,KAAA,+BAAAhS,KAAA,0BACA,MACA,KAAA,eACAuyI,KAAAtpG,MAAAA,MAAAm/B,UAAA92D,OAAAotG,QACA,MACA,KAAA,gBACA6zB,KAAA95D,SAAAxvC,MAAAm/B,UAAA92D,OAAAotG,QACA,MACA,KAAA,gBACA6zB,KAAAt6D,SAAAhvC,MAAAm/B,UAAA92D,OAAAotG,QACA,MACA,KAAA,eACA6zB,KAAA75D,UAAApnE,KACA,MACA,KAAA,UACA,UAAAA,MAAA2D,gBAAAs9H,KAAA/0G,KAAA,qBACA,UAAAlsB,MAAA2D,gBAAAs9H,KAAA/0G,KAAA,qBACA,aAAAlsB,MAAA2D,gBAAAs9H,KAAA/0G,KAAA,uBACA,MACA,KAAA,aACA+0G,KAAA3lI,IAAA4oI,YAAAlkI,MAAA5C,EAAAgnI,iBAAAhnI,EAAAinI,iBAAAjnI,EAAAknI,eAAAlnI,EAAAmnI,qBACA,MACA,KAAA,mBACA,IAAA,mBACA,IAAA,iBACA,IAAA,uBACA,KACA,KAAA,cACAtD,KAAArhF,YAAAskF,YAAAlkI,MAAA5C,EAAAonI,kBAAApnI,EAAAqnI,kBAAArnI,EAAAsnI,gBAAAtnI,EAAAunI,sBACA,MACA,KAAA,oBACA,IAAA,oBACA,IAAA,kBACA,IAAA,wBACA,KACA,KAAA,WACA1D,KAAA3vF,SAAA4yF,YAAAlkI,MAAA5C,EAAAwnI,eAAAxnI,EAAAynI,eAAAznI,EAAA0nI,aAAA1nI,EAAA2nI,mBACA,MACA,KAAA,iBACA,IAAA,iBACA,IAAA,eACA,IAAA,qBACA,KACA,KAAA,QACA9D,KAAAzvF,MAAA0yF,YAAAlkI,MAAA5C,EAAA4nI,YAAA5nI,EAAA6nI,YAAA7nI,EAAA8nI,UAAA9nI,EAAA+nI,gBACA,MACA,KAAA,cACA,IAAA,cACA,IAAA,YACA,IAAA,kBACA,KACA,KAAA,UACAlE,KAAAxkF,QAAAynF,YAAAlkI,MAAA5C,EAAAgoI,cAAAhoI,EAAAioI,cAAAjoI,EAAAkoI,YAAAloI,EAAAmoI,kBACA,MACA,KAAA,eACAtE,KAAA55D,UAAArnE,KACA,MACA,KAAA,gBACA,IAAA,gBACA,IAAA,cACA,IAAA,oBACA,KACA,KAAA,YACAihI,KAAAvkF,UAAAwnF,YAAAlkI,MAAA5C,EAAAooI,gBAAApoI,EAAAqoI,gBAAAroI,EAAAsoI,cAAAtoI,EAAAuoI,oBACA,MACA,KAAA,kBACA1E,KAAA35D,aAAAtnE,MAAAA,MACA,MACA,KAAA,kBACA,IAAA,kBACA,IAAA,gBACA,IAAA,sBACA,KACA,KAAA,cACAihI,KAAAvvF,YAAAwyF,YAAAlkI,MAAA5C,EAAAwoI,kBAAAxoI,EAAAyoI,kBAAAzoI,EAAA0oI,gBAAA1oI,EAAA2oI,sBACA,MACA,KAAA,oBACA,IAAA,oBACA,IAAA,kBACA,IAAA,wBACA,KACA,KAAA,eACA9E,KAAAnhF,aAAAokF,YAAAlkI,MAAA5C,EAAA4oI,mBAAA5oI,EAAA6oI,mBAAA7oI,EAAA8oI,iBAAA9oI,EAAA+oI,uBACA,MACA,KAAA,qBACA,IAAA,qBACA,IAAA,mBACA,IAAA,yBACA,KACA,KAAA,eACAlF,KAAAphF,aAAAqkF,YAAAlkI,MAAA5C,EAAAgpI,mBAAAhpI,EAAAipI,mBAAAjpI,EAAAkpI,iBAAAlpI,EAAAmpI,uBACA,MACA,KAAA,qBACA,IAAA,qBACA,IAAA,mBACA,IAAA,yBACA,KACA,KAAA,WACAtF,KAAA5/F,SAAA6iG,YAAAlkI,MAAA5C,EAAAopI,eAAAppI,EAAAqpI,eAAArpI,EAAAspI,aAAAtpI,EAAAupI,mBACA,MACA,KAAA,iBACA,IAAA,iBACA,IAAA,eACA,IAAA,qBACA,KACA,KAAA,YACA1F,KAAAviG,KAAAmG,QACA,MACA,KAAA,cACAo8F,KAAAviG,KAAAiG,UACA,MACA,KAAA,eACA9jC,QAAAH,KAAA,yEACAugI,KAAAvpG,QAAA13B,KACA,MACA,KAAA,YACA,IAAA,aACA,IAAA,aACA,IAAA,UACA,IAAA,eACA,IAAA,cACA,IAAA,UACA,IAAA,YACAihI,KAAAvyI,MAAAsR,KACA,MACA,KAAA,gBACA,IAAAA,QAAAihI,KAAApiG,aAAAusD,cACA,SAAAprF,QAAAihI,KAAApiG,aAAA8tD,WACA,MACA,SACA9rF,QAAAiuB,MAAA,2CAAApgC,KAAAsR,QAcA,MAPA,sBAAAihI,KAAA/0G,YAAA+0G,MAAAt6D,SACA,sBAAAs6D,KAAA/0G,YAAA+0G,MAAA95D,SAEA85D,KAAAvpG,QAAA,IAAAupG,KAAAliG,aAAA,GAEAklG,eAAAd,YAAAhuG,UAEA8uG,eAAApsB,MAAAopB,YA4BAtmI,OAAAm3F,OAAA7S,WAAA3xF,WAEA+sI,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,SAEA,GAAAh2C,OAAA3zC,KAEAsuF,YAAAtuF,KAAAsuF,aAAA,gBAAAtuF,MAAAsuF,YAAAtuF,KAAAsuF,YAAAP,OAAAvxF,UAAAs2I,eAAA9oD,KAEA1oF,OAAA,GAAA6oF,YAAAnqF,KAAAoqF,QACA9oF,QAAA4pI,mBAAAlrI,KAAAouF,iBACA9sF,OAAAioI,KAAAv/C,IAAA,SAAA3F,MAEA,GAAA8rD,MAAAtpB,KAAAE,MAAA1iC,MACAwgB,SAAAsrC,KAAAtrC,QAEA,QAAA13F,KAAA03F,SAAA,CAEA,GAAAzpE,MAAAypE,SAAAzpE,IAEA,QAAAjuB,KAAAiuB,KAAA,CAEA,GAAA,WAAAA,KAAAvoB,cAGA,WADA9C,SAAAiuB,MAAA,qBAAAgsD,IAAA;yIAKA,IAAA,UAAA5uD,KAAAvoB,cAGA,WADA9C,SAAAiuB,MAAA,qBAAAgsD,IAAA,sDASA,GAAAh4C,QAAA2B,MAAAozE,MAAAopB,KAAA7hD,YACA7E,QAAAz3C,OAAAK,SAAAL,OAAA0sD,YAEAhV,WAAAC,UAIAmsD,eAAA,SAAA5mI,OAEAlP,KAAAsuF,YAAAp/E,OAIA63G,MAAA,WAEA,QAAAgvB,YAAA5F,KAAA99F,UAEA,QAAA2jG,UAAA9mI,MAAA67B,UAEA,MAAA77B,OAAA,GAAA67B,SAIA,GAAAjnC,GAAA8b,EAAAq2H,GAEA9sH,OAAA+sH,QAEAC,WAAAC,YAAAC,QAAArhG,cAEA5Z,KACAk7G,OACAC,YACArkB,gBACAC,cAAAC,oBACAC,aAAAC,mBAEAhsF,OAAAoR,KAAA8+F,MAAAC,MAAAh9C,IAAApoD,OAEAqlG,QAAAlwG,GAAA9yB,EAAA4rB,EAEAkF,MAAA2rG,KAAA3rG,MACAD,SAAA4rG,KAAA5rG,SACAsZ,QAAAsyF,KAAAtyF,QACA9B,OAAAo0F,KAAAp0F,OAEAjV,MAAAqpG,KAAArpG,MAEA6vG,UAAA,CAGA,QAAAxpI,KAAAgjI,KAAAryF,IAAA,CAIA,IAAAh6C,EAAA,EAAAA,EAAAqsI,KAAAryF,IAAAl+C,OAAAkE,IAEAqsI,KAAAryF,IAAAh6C,GAAAlE,QAAA+2I,WAIA,KAAA7yI,EAAA,EAAAA,EAAA6yI,UAAA7yI,IAEAuuC,SAAA2J,cAAAl4C,MASA,IAHAqlB,OAAA,EACA+sH,QAAA3xG,SAAA3kC,OAEAupB,OAAA+sH,SAEA5vG,OAAA,GAAAxI,SAEAwI,OAAA9uB,EAAA+sB,SAAApb,UAAA2d,MACAR,OAAArsB,EAAAsqB,SAAApb,UAAA2d,MACAR,OAAA1J,EAAA2H,SAAApb,UAAA2d,MAEAuL,SAAA9N,SAAArkC,KAAAomC,OAOA,KAHAnd,OAAA,EACA+sH,QAAA1xG,MAAA5kC,OAEAupB,OAAA+sH,SAcA,GAZA96G,KAAAoJ,MAAArb,UAEAmtH,OAAAN,SAAA56G,KAAA,GACAm7G,YAAAP,SAAA56G,KAAA,GACA82F,gBAAA8jB,SAAA56G,KAAA,GACA+2F,cAAA6jB,SAAA56G,KAAA,GACAg3F,oBAAA4jB,SAAA56G,KAAA,GACAi3F,aAAA2jB,SAAA56G,KAAA,GACAk3F,mBAAA0jB,SAAA56G,KAAA,GAIAk7G,OAAA,CA0BA,GAxBAE,MAAA,GAAA/6F,OACA+6F,MAAA5rI,EAAA45B,MAAArb,QACAqtH,MAAA3rI,EAAA25B,MAAArb,OAAA,GACAqtH,MAAAz0H,EAAAyiB,MAAArb,OAAA,GAEAstH,MAAA,GAAAh7F,OACAg7F,MAAA7rI,EAAA45B,MAAArb,OAAA,GACAstH,MAAA5rI,EAAA25B,MAAArb,OAAA,GACAstH,MAAA10H,EAAAyiB,MAAArb,OAAA,GAEAA,QAAA,EAEAotH,cAEAvhG,cAAAxQ,MAAArb,UACAqtH,MAAAxhG,cAAAA,cACAyhG,MAAAzhG,cAAAA,eAMAihG,GAAA5jG,SAAA7N,MAAA5kC,OAEAsyH,gBAEA,IAAApuH,EAAA,EAAAA,EAAA6yI,UAAA7yI,IAOA,IALA4yI,QAAAvG,KAAAryF,IAAAh6C,GAEAuuC,SAAA2J,cAAAl4C,GAAAmyI,OACA5jG,SAAA2J,cAAAl4C,GAAAmyI,GAAA,MAEAr2H,EAAA,EAAAA,EAAA,EAAAA,IAEAy2H,QAAA7xG,MAAArb,UAEAzV,EAAAgjI,QAAA,EAAAL,SACA/2G,EAAAo3G,QAAA,EAAAL,QAAA,GAEA7vG,GAAA,GAAA5L,SAAAlnB,EAAA4rB,GAEA,IAAA1f,GAAAyyB,SAAA2J,cAAAl4C,GAAAmyI,IAAA/1I,KAAAsmC,IACA,IAAA5mB,GAAAyyB,SAAA2J,cAAAl4C,GAAAmyI,GAAA,GAAA/1I,KAAAsmC,GAsBA,IAdA2rF,gBAEAikB,YAAA,EAAA5xG,MAAArb,UAEAqtH,MAAAnlG,OAAAxgC,IACAgtC,QAAAu4F,eACAv4F,QAAAu4F,eACAv4F,QAAAu4F,cAGAK,MAAAplG,OAAAlI,KAAAqtG,MAAAnlG,SAIA+gF,oBAEA,IAAAtuH,EAAA,EAAAA,EAAA,EAAAA,IAEAsyI,YAAA,EAAA5xG,MAAArb,UAEAkoB,OAAA,GAAAvT,SACA+f,QAAAu4F,eACAv4F,QAAAu4F,eACAv4F,QAAAu4F,cAIA,IAAAtyI,GAAA0yI,MAAA76F,cAAAz7C,KAAAmxC,QACA,IAAAvtC,GAAA2yI,MAAA96F,cAAAz7C,KAAAmxC,OAkBA,IAXAghF,eAEA8jB,WAAA3xG,MAAArb,UACAswE,IAAA19C,OAAAo6F,YAEAK,MAAA3vG,MAAA+0E,OAAAniB,KACAg9C,MAAA5vG,MAAA+0E,OAAAniB,MAKA64B,mBAEA,IAAAxuH,EAAA,EAAAA,EAAA,EAAAA,IAEAqyI,WAAA3xG,MAAArb,UACAswE,IAAA19C,OAAAo6F,YAEA,IAAAryI,GAAA0yI,MAAAzoG,aAAA7tC,KAAA,GAAA6jC,OAAA01D,MACA,IAAA31F,GAAA2yI,MAAA1oG,aAAA7tC,KAAA,GAAA6jC,OAAA01D,KAMApnD,UAAA7N,MAAAtkC,KAAAs2I,OACAnkG,SAAA7N,MAAAtkC,KAAAu2I,WAEA,CAkBA,GAhBA/+F,KAAA,GAAA+D,OACA/D,KAAA9sC,EAAA45B,MAAArb,UACAuuB,KAAA7sC,EAAA25B,MAAArb,UACAuuB,KAAA31B,EAAAyiB,MAAArb,UAEAotH,cAEAvhG,cAAAxQ,MAAArb,UACAuuB,KAAA1C,cAAAA,eAMAihG,GAAA5jG,SAAA7N,MAAA5kC,OAEAsyH,gBAEA,IAAApuH,EAAA,EAAAA,EAAA6yI,UAAA7yI,IAMA,IAJA4yI,QAAAvG,KAAAryF,IAAAh6C,GAEAuuC,SAAA2J,cAAAl4C,GAAAmyI,OAEAr2H,EAAA,EAAAA,EAAA,EAAAA,IAEAy2H,QAAA7xG,MAAArb,UAEAzV,EAAAgjI,QAAA,EAAAL,SACA/2G,EAAAo3G,QAAA,EAAAL,QAAA,GAEA7vG,GAAA,GAAA5L,SAAAlnB,EAAA4rB,GAEA+S,SAAA2J,cAAAl4C,GAAAmyI,IAAA/1I,KAAAsmC,GAoBA,IAZA2rF,gBAEAikB,YAAA,EAAA5xG,MAAArb,UAEAuuB,KAAArG,OAAAxgC,IACAgtC,QAAAu4F,eACAv4F,QAAAu4F,eACAv4F,QAAAu4F,eAKAhkB,oBAEA,IAAAtuH,EAAA,EAAAA,EAAA,EAAAA,IAEAsyI,YAAA,EAAA5xG,MAAArb,UAEAkoB,OAAA,GAAAvT,SACA+f,QAAAu4F,eACAv4F,QAAAu4F,eACAv4F,QAAAu4F,cAGA1+F,KAAAiE,cAAAz7C,KAAAmxC,OAeA,IARAghF,eAEA8jB,WAAA3xG,MAAArb,UACAuuB,KAAA7Q,MAAA+0E,OAAA7/D,OAAAo6F,cAKA7jB,mBAEA,IAAAxuH,EAAA,EAAAA,EAAA,EAAAA,IAEAqyI,WAAA3xG,MAAArb,UACAuuB,KAAA3J,aAAA7tC,KAAA,GAAA6jC,OAAAgY,OAAAo6F,aAMA9jG,UAAA7N,MAAAtkC,KAAAw3C,OAQA,QAAAk/F,WAAAzG,KAAA99F,UAEA,GAAAwkG,yBAAA1pI,KAAAgjI,KAAA0G,oBAAA1G,KAAA0G,oBAAA,CAEA,IAAA1G,KAAAl0F,YAEA,IAAA,GAAAn4C,GAAA,EAAA4f,EAAAysH,KAAAl0F,YAAAr8C,OAAAkE,EAAA4f,EAAA5f,GAAA+yI,oBAAA,CAEA,GAAAr/H,GAAA24H,KAAAl0F,YAAAn4C,GACAmW,EAAA48H,oBAAA,EAAA1G,KAAAl0F,YAAAn4C,EAAA,GAAA,EACA84B,EAAAi6G,oBAAA,EAAA1G,KAAAl0F,YAAAn4C,EAAA,GAAA,EACAif,EAAA8zH,oBAAA,EAAA1G,KAAAl0F,YAAAn4C,EAAA,GAAA,CAEAuuC,UAAA4J,YAAA/7C,KAAA,GAAAy8B,SAAAnlB,EAAAyC,EAAA2iB,EAAA7Z,IAMA,GAAAotH,KAAAj0F,YAEA,IAAA,GAAAp4C,GAAA,EAAA4f,EAAAysH,KAAAj0F,YAAAt8C,OAAAkE,EAAA4f,EAAA5f,GAAA+yI,oBAAA,CAEA,GAAAjsI,GAAAulI,KAAAj0F,YAAAp4C,GACA+G,EAAAgsI,oBAAA,EAAA1G,KAAAj0F,YAAAp4C,EAAA,GAAA,EACAie,EAAA80H,oBAAA,EAAA1G,KAAAj0F,YAAAp4C,EAAA,GAAA,EACAoW,EAAA28H,oBAAA,EAAA1G,KAAAj0F,YAAAp4C,EAAA,GAAA,CAEAuuC,UAAA6J,YAAAh8C,KAAA,GAAAy8B,SAAA/xB,EAAAC,EAAAkX,EAAA7H,IAMAm4B,SAAAsf,MAAAw+E,KAAAx+E,MAEAtf,SAAAsf,OAAAtf,SAAAsf,MAAA/xD,OAAA,IAAAyyC,SAAA4J,YAAAr8C,SAAAyyC,SAAA6J,YAAAt8C,QAAAyyC,SAAA6J,YAAAt8C,SAAAyyC,SAAA9N,SAAA3kC,SAEAmQ,QAAAH,KAAA,sCAAAyiC,SAAA9N,SAAA3kC,OAAA,mBACAyyC,SAAA6J,YAAAt8C,OAAA,uBAAAyyC,SAAA4J,YAAAr8C,OAAA,mBAMA,QAAAk3I,eAAA3G,KAAA99F,UAEA,GAAAvL,OAAAqpG,KAAArpG,KAEA,QAAA35B,KAAAgjI,KAAA1gG,aAEA,IAAA,GAAA3rC,GAAA,EAAA4f,EAAAysH,KAAA1gG,aAAA7vC,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEAuuC,SAAA5C,aAAA3rC,MACAuuC,SAAA5C,aAAA3rC,GAAAlG,KAAAuyI,KAAA1gG,aAAA3rC,GAAAlG,KACAy0C,SAAA5C,aAAA3rC,GAAAygC,WAKA,KAAA,GAHAwyG,aAAA1kG,SAAA5C,aAAA3rC,GAAAygC,SACAyyG,YAAA7G,KAAA1gG,aAAA3rC,GAAAygC,SAEAjF,EAAA,EAAAgwF,GAAA0nB,YAAAp3I,OAAA0/B,EAAAgwF,GAAAhwF,GAAA,EAAA,CAEA,GAAAgH,QAAA,GAAAxI,QACAwI,QAAA9uB,EAAAw/H,YAAA13G,GAAAwH,MACAR,OAAArsB,EAAA+8H,YAAA13G,EAAA,GAAAwH,MACAR,OAAA1J,EAAAo6G,YAAA13G,EAAA,GAAAwH,MAEAiwG,YAAA72I,KAAAomC,SAQA,OAAAn5B,KAAAgjI,KAAA8G,aAAA9G,KAAA8G,YAAAr3I,OAAA,EAAA,CAEAmQ,QAAAH,KAAA,kFAKA,KAAA,GAHA40B,OAAA6N,SAAA7N,MACAyyG,YAAA9G,KAAA8G,YAAA,GAAAl7F,OAEAj4C,EAAA,EAAA4f,EAAA8gB,MAAA5kC,OAAAkE,EAAA4f,EAAA5f,IAEA0gC,MAAA1gC,GAAA+iC,MAAAm/B,UAAAixE,YAAA,EAAAnzI,IAQA,QAAAozI,iBAAA/G,KAAA99F,UAEA,GAAA8kG,qBAGAjG,kBAEA/jI,KAAAgjI,KAAAqB,WAEAN,WAAAhxI,KAAAiwI,KAAAqB,eAIArkI,KAAAgjI,KAAAe,aAEAf,KAAAe,WAAAtxI,OAEAsxI,WAAAA,WAAA3pD,OAAA4oD,KAAAe,YAIAA,WAAAhxI,KAAAiwI,KAAAe,YAMA,KAAA,GAAAptI,GAAA,EAAAA,EAAAotI,WAAAtxI,OAAAkE,IAAA,CAEA,GAAA2xF,MAAA/H,cAAA6jD,eAAAL,WAAAptI,GAAAuuC,SAAAsf,MACA8jC,OAAA0hD,iBAAAj3I,KAAAu1F,MAKA,GAAApjD,SAAA5C,aAAA,CAGA,GAAA2nG,qBAAA1pD,cAAAyjD,oCAAA9+F,SAAA5C,aAAA,GACA0nG,kBAAAA,iBAAA5vD,OAAA6vD,qBAIAD,iBAAAv3I,OAAA,IAAAyyC,SAAA6+F,WAAAiG,kBAIA,MAAA,UAAAhH,KAAA7hD,iBAEAnhF,KAAAgjI,KAAA5vH,OAGA4vH,KAAAA,KAAA5vH,UAIApT,KAAAgjI,KAAArpG,MAEAqpG,KAAArpG,MAAA,EAAAqpG,KAAArpG,MAIAqpG,KAAArpG,MAAA,CAIA,IAAAuL,UAAA,GAAAyJ,SAUA,OARAi6F,YAAA5F,KAAA99F,UACAukG,UAAAzG,KAAA99F,UACAykG,cAAA3G,KAAA99F,UACA6kG,gBAAA/G,KAAA99F,UAEAA,SAAAw1C,qBACAx1C,SAAAiqD,4BAEAnvF,KAAAgjI,KAAAzxC,WAAA,IAAAyxC,KAAAzxC,UAAA9+F,QAEAyyC,SAAAA,WAMAA,SAAAA,SAAAqsD,UAFA3Q,OAAAvxF,UAAAu2I,cAAA5C,KAAAzxC,UAAApQ,YAAAtuF,KAAAyrI,oBAuBA5hI,OAAAm3F,OAAA3S,aAAA7xF,WAEA+sI,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,SAEA,KAAA3pF,KAAAsuF,cAEAtuF,KAAAsuF,YAAAtE,IAAAqtD,UAAA,EAAArtD,IAAAstD,YAAA,KAAA,GAIA,IAAA3jG,OAAA3zC,IAEA,IAAAmqF,YAAAx2C,MAAAy2C,SACAm/C,KAAAv/C,IAAA,SAAA3F,MAEA,GAAA8rD,MAAA,IAEA,KAEAA,KAAAtpB,KAAAE,MAAA1iC,MAEA,MAAArmD,OAMA,WAJA7wB,KAAAw8E,SAAAA,QAAA3rD,WAEAjuB,SAAAiuB,MAAA,mCAAAgsD,IAAA,IAAAhsD,MAAAmxG,SAMA,GAAAtqC,UAAAsrC,KAAAtrC,QAEA,QAAA13F,KAAA03F,cAAA13F,KAAA03F,SAAAzpE,MAAA,aAAAypE,SAAAzpE,KAAAvoB,cAGA,WADA9C,SAAAiuB,MAAA,kCAAAgsD,IAAA,kCAKAr2C,OAAAozE,MAAAopB,KAAA1mD,SAEAC,WAAAC,UAIAmsD,eAAA,SAAA5mI,OAEAlP,KAAAsuF,YAAAp/E,OAIAw8H,eAAA,SAAAx8H,OAEAlP,KAAAyrI,YAAAv8H,OAIA63G,MAAA,SAAAopB,KAAA1mD,QAEA,GAAA1nC,YAAA/hD,KAAAu3I,gBAAApH,KAAApuF,YAEA3jB,OAAAp+B,KAAAw3I,YAAArH,KAAA/xG,OAAA,eAEAjxB,KAAAs8E,QAAAA,OAAAz3C,UAIA3N,SAAArkC,KAAAy3I,cAAAtH,KAAA9rG,SAAAjG,QACAsgE,UAAA1+F,KAAA03I,eAAAvH,KAAAzxC,UAAAr6D,UAEA2N,OAAAhyC,KAAA23I,YAAAxH,KAAAn+F,OAAA+P,WAAA28C,UAcA,OAZAyxC,MAAAe,aAEAl/F,OAAAk/F,WAAAlxI,KAAAk3I,gBAAA/G,KAAAe,iBAIA/jI,KAAAgjI,KAAA/xG,QAAA,IAAA+xG,KAAA/xG,OAAAx+B,YAEAuN,KAAAs8E,QAAAA,OAAAz3C,QAIAA,QAIAulG,gBAAA,SAAApH,MAEA,GAAApuF,cAEA,QAAA50C,KAAAgjI,KAKA,IAAA,GAHAyH,gBAAA,GAAAzpD,YACA0pD,qBAAA,GAAA/pD,sBAEAhqF,EAAA,EAAA4f,EAAAysH,KAAAvwI,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAuuC,UACA9xB,KAAA4vH,KAAArsI,EAEA,QAAAyc,KAAA6a,MAEA,IAAA,gBACA,IAAA,sBAEAiX,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAArhB,MACAqhB,KAAAuc,OACAvc,KAAA89B,cACA99B,KAAA+9B,eAGA,MAEA,KAAA,cACA,IAAA,oBACA,IAAA,eAEAjM,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAArhB,MACAqhB,KAAAuc,OACAvc,KAAAqoB,MACAroB,KAAA89B,cACA99B,KAAA+9B,eACA/9B,KAAAg+B,cAGA,MAEA,KAAA,iBACA,IAAA,uBAEAlM,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAA2wB,OACA3wB,KAAA2lE,SACA3lE,KAAA2kE,WACA3kE,KAAA4kE,YAGA,MAEA,KAAA,mBACA,IAAA,yBAEA9yC,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAA4nE,UACA5nE,KAAA6nE,aACA7nE,KAAAuc,OACAvc,KAAAqhE,eACArhE,KAAA+9B,eACA/9B,KAAA8nE,UACA9nE,KAAA2kE,WACA3kE,KAAA4kE,YAGA,MAEA,KAAA,eACA,IAAA,qBAEA9yC,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAA2wB,OACA3wB,KAAAuc,OACAvc,KAAAqhE,eACArhE,KAAA+9B,eACA/9B,KAAA8nE,UACA9nE,KAAA2kE,WACA3kE,KAAA4kE,YAGA,MAEA,KAAA,iBACA,IAAA,uBAEA9yC,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAA2wB,OACA3wB,KAAA89B,cACA99B,KAAA+9B,eACA/9B,KAAAykE,SACAzkE,KAAA0kE,UACA1kE,KAAA2kE,WACA3kE,KAAA4kE,YAGA,MAEA,KAAA,uBACA,IAAA,sBACA,IAAA,qBACA,IAAA,sBAEA9yC,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAA2wB,OACA3wB,KAAA1iB,OAGA,MAEA,KAAA,eACA,IAAA,qBAEAw0C,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAAklE,YACAllE,KAAAmlE,YACAnlE,KAAAolE,cACAplE,KAAAqlE,YACArlE,KAAA2kE,WACA3kE,KAAA4kE,YAGA,MAEA,KAAA,gBACA,IAAA,sBAEA9yC,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAA2wB,OACA3wB,KAAAuiE,KACAviE,KAAAqhE,eACArhE,KAAAohE,gBACAphE,KAAAujE,IAGA,MAEA,KAAA,oBACA,IAAA,0BAEAzxC,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAA2wB,OACA3wB,KAAAuiE,KACAviE,KAAAohE,gBACAphE,KAAAqhE,eACArhE,KAAAyzC,EACAzzC,KAAAwiE,EAGA,MAEA,KAAA,gBACA,IAAA,sBAEA1wC,SAAA,GAAA42F,YAAA1oH,KAAA6a,MACA7a,KAAA4kC,OACA5kC,KAAA2lE,SACA3lE,KAAAykE,SACAzkE,KAAA0kE,UAGA,MAEA,KAAA,iBAEA5yC,SAAAwlG,qBAAA9wB,MAAAxmG,KAEA,MAEA,KAAA,WAEA8xB,SAAAulG,eAAA7wB,MAAAxmG,KAAAvgB,KAAAsuF,aAAAj8C,QAEA,MAEA,SAEAtiC,QAAAH,KAAA,kDAAA2Q,KAAA6a,KAAA,IAEA,UAIAiX,SAAA5W,KAAAlb,KAAAkb,SAEAtuB,KAAAoT,KAAA3iB,OAAAy0C,SAAAz0C,KAAA2iB,KAAA3iB,MAEAmkD,WAAAxhC,KAAAkb,MAAA4W,SAMA,MAAA0P,aAIA21F,eAAA,SAAAvH,KAAA9rG,UAEA,GAAAq6D,aAEA,QAAAvxF,KAAAgjI,KAAA,CAEA,GAAA7uI,QAAA,GAAAusF,eACAvsF,QAAA+wI,YAAAhuG,SAEA,KAAA,GAAAvgC,GAAA,EAAA4f,EAAAysH,KAAAvwI,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAyc,MAAA4vH,KAAArsI,EAEA,IAAA,kBAAAyc,KAAA6a,KAAA,CAMA,IAAA,GAFAvmB,UAEA+K,EAAA,EAAAA,EAAAW,KAAAm+E,UAAA9+F,OAAAggB,IAEA/K,MAAA3U,KAAAoB,OAAAylH,MAAAxmG,KAAAm+E,UAAA9+E,IAIA8+E,WAAAn+E,KAAAkb,MAAA5mB,UAIA6pF,WAAAn+E,KAAAkb,MAAAn6B,OAAAylH,MAAAxmG,OAQA,MAAAm+E,YAIAw4C,gBAAA,SAAA/G,MAIA,IAAA,GAFAe,eAEAptI,EAAA,EAAAA,EAAAqsI,KAAAvwI,OAAAkE,IAAA,CAEA,GAAA2xF,MAAA/H,cAAAq5B,MAAAopB,KAAArsI,GAEAotI,YAAAhxI,KAAAu1F,MAIA,MAAAy7C,aAIAsG,YAAA,SAAArH,KAAA1mD,QAEA,GAAA91C,OAAA3zC,KACAo+B,SAmBA,QAAAjxB,KAAAgjI,MAAAA,KAAAvwI,OAAA,EAAA,CAEA,GAAAwqF,SAAA,GAAAZ,gBAAAC,QAEAnoF,OAAA,GAAAmpF,aAAAL,QACA9oF,QAAAoqI,eAAA1rI,KAAAyrI,YAEA,KAAA,GAAA3nI,GAAA,EAAA4f,EAAAysH,KAAAvwI,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAg3B,OAAAq1G,KAAArsI,GACAo/B,KAAA,4BAAArmC,KAAAi+B,MAAAkvD,KAAAlvD,MAAAkvD,IAAAr2C,MAAA26C,YAAAxzD,MAAAkvD,GAEA5rD,QAAAtD,MAAAW,MA7BA,SAAAuuD,KAIA,MAFAr2C,OAAAy2C,QAAAL,UAAAC,KAEA1oF,OAAAioI,KAAAv/C,IAAA,WAEAr2C,MAAAy2C,QAAAH,QAAAD,UAEA78E,GAAA,WAEAwmC,MAAAy2C,QAAAH,QAAAD,KACAr2C,MAAAy2C,QAAAF,UAAAF,QAkBA9mD,OAMA,MAAA9E,SAIAq5G,cAAA,SAAAtH,KAAA/xG,QAEA,QAAA05G,eAAA5oI,MAAAksB,MAEA,MAAA,gBAAA,OAAAlsB,OAEAa,QAAAH,KAAA,uEAAAV,OAEAksB,KAAAlsB,QAIA,GAAAm1B,YAEA,QAAAl3B,KAAAgjI,KAEA,IAAA,GAAArsI,GAAA,EAAA4f,EAAAysH,KAAAvwI,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAyc,MAAA4vH,KAAArsI,OAEAqJ,KAAAoT,KAAAua,OAEA/qB,QAAAH,KAAA,+CAAA2Q,KAAAkb,UAIAtuB,KAAAixB,OAAA7d,KAAAua,QAEA/qB,QAAAH,KAAA,sCAAA2Q,KAAAua,MAIA,IAAAqC,SAAA,GAAAtC,SAAAuD,OAAA7d,KAAAua,OACAqC,SAAA0N,aAAA,EAEA1N,QAAA1B,KAAAlb,KAAAkb,SAEAtuB,KAAAoT,KAAA3iB,OAAAu/B,QAAAv/B,KAAA2iB,KAAA3iB,UAEAuP,KAAAoT,KAAAwa,UAAAoC,QAAApC,QAAA+8G,cAAAv3H,KAAAwa,QAAAg9G,sBAEA5qI,KAAAoT,KAAA4I,QAAAgU,QAAAhU,OAAA68C,UAAAzlD,KAAA4I,YACAhc,KAAAoT,KAAA6b,QAAAe,QAAAf,OAAA4pC,UAAAzlD,KAAA6b,YACAjvB,KAAAoT,KAAAwkF,OAEA5nE,QAAAnC,MAAA88G,cAAAv3H,KAAAwkF,KAAA,GAAAizC,kBACA76G,QAAAlC,MAAA68G,cAAAv3H,KAAAwkF,KAAA,GAAAizC,uBAIA7qI,KAAAoT,KAAA4a,YAAAgC,QAAAhC,UAAA28G,cAAAv3H,KAAA4a,UAAA88G,qBACA9qI,KAAAoT,KAAA2a,YAAAiC,QAAAjC,UAAA48G,cAAAv3H,KAAA2a,UAAA+8G,qBACA9qI,KAAAoT,KAAA8a,aAAA8B,QAAA9B,WAAA9a,KAAA8a,gBAEAluB,KAAAoT,KAAAgc,QAAAY,QAAAZ,MAAAhc,KAAAgc,OAEA8H,SAAA9jB,KAAAkb,MAAA0B,QAMA,MAAAkH,WAIAszG,YAAA,WAEA,GAAAzgG,QAAA,GAAAnZ,QAEA,OAAA,UAAAxd,KAAAwhC,WAAA28C,WAIA,QAAAw5C,aAAAt6I,MAQA,WANAuP,KAAA40C,WAAAnkD,OAEAmS,QAAAH,KAAA,yCAAAhS,MAIAmkD,WAAAnkD,MAIA,QAAAu6I,aAAAv6I,MAEA,OAAAuP,KAAAvP,KAAA,CAEA,GAAArB,MAAAoN,QAAA/L,MAAA,CAIA,IAAA,GAFAiX,UAEA/Q,EAAA,EAAA4f,EAAA9lB,KAAAgC,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA23B,MAAA79B,KAAAkG,OAEAqJ,KAAAuxF,UAAAjjE,OAEA1rB,QAAAH,KAAA,yCAAA6rB,MAIA5mB,MAAA3U,KAAAw+F,UAAAjjE,OAIA,MAAA5mB,OAUA,WANA1H,KAAAuxF,UAAA9gG,OAEAmS,QAAAH,KAAA,yCAAAhS,MAIA8gG,UAAA9gG,OA9CA,GAAAo0C,OAkDA,QAAAzxB,KAAA6a,MAEA,IAAA,QAEA4W,OAAA,GAAAqqC,WAEAlvE,KAAAoT,KAAA2hC,YAEA2+C,OAAAE,UAAAxgF,KAAA2hC,cAEAlQ,OAAAkQ,WAAA,GAAAne,OAAAxjB,KAAA2hC,iBAMA/0C,KAAAoT,KAAA+rB,MAEA,QAAA/rB,KAAA+rB,IAAAlR,KAEA4W,OAAA1F,IAAA,GAAA8vC,KAAA77D,KAAA+rB,IAAAzF,MAAAtmB,KAAA+rB,IAAAE,KAAAjsB,KAAA+rB,IAAAG,KAEA,YAAAlsB,KAAA+rB,IAAAlR,OAEA4W,OAAA1F,IAAA,GAAA6vC,SAAA57D,KAAA+rB,IAAAzF,MAAAtmB,KAAA+rB,IAAAK,UAMA,MAEA,KAAA,oBAEAqF,OAAA,GAAAmJ,mBAAA56B,KAAA66B,IAAA76B,KAAA86B,OAAA96B,KAAAisB,KAAAjsB,KAAAksB,SAEAt/B,KAAAoT,KAAA+6B,QAAAtJ,OAAAsJ,MAAA/6B,KAAA+6B,WACAnuC,KAAAoT,KAAA06B,OAAAjJ,OAAAiJ,KAAA16B,KAAA06B,UACA9tC,KAAAoT,KAAAg7B,YAAAvJ,OAAAuJ,UAAAh7B,KAAAg7B,eACApuC,KAAAoT,KAAAi7B,aAAAxJ,OAAAwJ,WAAAj7B,KAAAi7B,gBACAruC,KAAAoT,KAAA26B,OAAAlJ,OAAAkJ,KAAArxC,OAAAm3F,UAAAzgF,KAAA26B,MAEA,MAEA,KAAA,qBAEAlJ,OAAA,GAAAgJ,oBAAAz6B,KAAA/c,KAAA+c,KAAA9c,MAAA8c,KAAA7c,IAAA6c,KAAA5c,OAAA4c,KAAAisB,KAAAjsB,KAAAksB,IAEA,MAEA,KAAA,eAEAuF,OAAA,GAAAs5C,cAAA/qE,KAAAsmB,MAAAtmB,KAAAonC,UAEA,MAEA,KAAA,mBAEA3V,OAAA,GAAAq5C,kBAAA9qE,KAAAsmB,MAAAtmB,KAAAonC,UAEA,MAEA,KAAA,aAEA3V,OAAA,GAAAm5C,YAAA5qE,KAAAsmB,MAAAtmB,KAAAonC,UAAApnC,KAAAmmC,SAAAnmC,KAAAsmC,MAEA,MAEA,KAAA,gBAEA7U,OAAA,GAAAu5C,eAAAhrE,KAAAsmB,MAAAtmB,KAAAonC,UAAApnC,KAAArhB,MAAAqhB,KAAAuc,OAEA,MAEA,KAAA,YAEAkV,OAAA,GAAAi5C,WAAA1qE,KAAAsmB,MAAAtmB,KAAAonC,UAAApnC,KAAAmmC,SAAAnmC,KAAAkoC,MAAAloC,KAAAmoC,SAAAnoC,KAAAsmC,MAEA,MAEA,KAAA,kBAEA7U,OAAA,GAAA64C,iBAAAtqE,KAAAsmB,MAAAtmB,KAAAwmC,YAAAxmC,KAAAonC,UAEA,MAEA,KAAA,cAEA53C,QAAAH,KAAA,qEAEA,KAAA,OAEA,GAAAyiC,UAAA6lG,YAAA33H,KAAA8xB,UACAxF,SAAAsrG,YAAA53H,KAAAssB,SAIAmF,QAFAK,SAAAsf,OAAAtf,SAAAsf,MAAA/xD,OAAA,EAEA,GAAAm9E,aAAA1qC,SAAAxF,UAIA,GAAA4U,MAAApP,SAAAxF,SAIA,MAEA,KAAA,MAEAmF,OAAA,GAAAyqC,IAEA,MAEA,KAAA,OAEAzqC,OAAA,GAAAwrC,MAAA06D,YAAA33H,KAAA8xB,UAAA8lG,YAAA53H,KAAAssB,UAAAtsB,KAAAykC,KAEA,MAEA,KAAA,WAEAhT,OAAA,GAAA0rC,UAAAw6D,YAAA33H,KAAA8xB,UAAA8lG,YAAA53H,KAAAssB,UAEA,MAEA,KAAA,eAEAmF,OAAA,GAAAyrC,cAAAy6D,YAAA33H,KAAA8xB,UAAA8lG,YAAA53H,KAAAssB,UAEA,MAEA,KAAA,aACA,IAAA,SAEAmF,OAAA,GAAA2rC,QAAAu6D,YAAA33H,KAAA8xB,UAAA8lG,YAAA53H,KAAAssB,UAEA,MAEA,KAAA,SAEAmF,OAAA,GAAAwqC,QAAA27D,YAAA53H,KAAAssB,UAEA,MAEA,KAAA,QAEAmF,OAAA,GAAA4rC,MAEA,MAEA,SAEA5rC,OAAA,GAAA+H,UAoCA,GAhCA/H,OAAAvW,KAAAlb,KAAAkb,SAEAtuB,KAAAoT,KAAA3iB,OAAAo0C,OAAAp0C,KAAA2iB,KAAA3iB,UACAuP,KAAAoT,KAAA22B,QAEAA,OAAA8uB,UAAAzlD,KAAA22B,QACAA,OAAAnK,UAAAiF,OAAAjH,SAAAiH,OAAAiI,WAAAjI,OAAAlL,aAIA35B,KAAAoT,KAAAwqB,UAAAiH,OAAAjH,SAAAi7B,UAAAzlD,KAAAwqB,cACA59B,KAAAoT,KAAAwmB,UAAAiL,OAAAjL,SAAAi/B,UAAAzlD,KAAAwmB,cACA55B,KAAAoT,KAAA05B,YAAAjI,OAAAiI,WAAA+rB,UAAAzlD,KAAA05B,gBACA9sC,KAAAoT,KAAAumB,OAAAkL,OAAAlL,MAAAk/B,UAAAzlD,KAAAumB,YAIA35B,KAAAoT,KAAAg0B,aAAAvC,OAAAuC,WAAAh0B,KAAAg0B,gBACApnC,KAAAoT,KAAAu6B,gBAAA9I,OAAA8I,cAAAv6B,KAAAu6B,eAEAv6B,KAAAk2B,aAEAtpC,KAAAoT,KAAAk2B,OAAA0R,OAAAnW,OAAAyE,OAAA0R,KAAA5nC,KAAAk2B,OAAA0R,UACAh7C,KAAAoT,KAAAk2B,OAAAvF,SAAAc,OAAAyE,OAAAvF,OAAA3wB,KAAAk2B,OAAAvF,YACA/jC,KAAAoT,KAAAk2B,OAAAC,SAAA1E,OAAAyE,OAAAC,QAAAsvB,UAAAzlD,KAAAk2B,OAAAC,aACAvpC,KAAAoT,KAAAk2B,OAAA7O,SAAAoK,OAAAyE,OAAA7O,OAAA5nC,KAAA23I,YAAAp3H,KAAAk2B,OAAA7O,cAIAz6B,KAAAoT,KAAAnd,UAAA4uC,OAAA5uC,QAAAmd,KAAAnd,aACA+J,KAAAoT,KAAAyuB,WAAAgD,OAAAhD,SAAAzuB,KAAAyuB,cAEA7hC,KAAAoT,KAAA60B,SAIA,IAAA,GAFAA,UAAA70B,KAAA60B,SAEAtxC,EAAA,EAAAA,EAAAsxC,SAAAx1C,OAAAkE,IAEAkuC,OAAAz0C,IAAAyC,KAAA23I,YAAAviG,SAAAtxC,GAAAi+C,WAAA28C,WAMA,IAAA,QAAAn+E,KAAA6a,KAIA,IAAA,GAFAshD,QAAAn8D,KAAAm8D,OAEAh5D,EAAA,EAAAA,EAAAg5D,OAAA98E,OAAA8jB,IAAA,CAEA,GAAA+3G,OAAA/+C,OAAAh5D,GACA6oG,MAAAv6E,OAAAq6E,oBAAA,OAAAoP,MAAAzpF,YAEA7kC,KAAAo/G,OAEAv6E,OAAA0pF,SAAAnP,MAAAkP,MAAA/0E,UAQA,MAAA1U,aAQA,IAAA+lG,kBACAK,UApqjCA,IAqqjCA/5G,sBAAAA,sBACAsvB,sBAAAA,sBACAG,iCAAAA,iCACAC,iCAAAA,iCACAC,2BAAAA,2BACAJ,wBAAAA,wBACAC,wBAAAA,yBAGAmqF,kBACApvE,eAAAA,eACA7sC,oBAAAA,oBACA+sC,uBAAAA,wBAGAmvE,gBACA/5G,cAAAA,cACAk3B,2BAAAA,2BACAC,0BAAAA,0BACAr5B,aAAAA,aACAktC,0BAAAA,0BACAjtC,yBAAAA,yBA4HApyB,QAAAm3F,OAAA5R,MAAA5yF,WAKA67I,SAAA,WAGA,MADAtoI,SAAAH,KAAA,6CACA,MAOAyyE,WAAA,SAAA3uE,GAEA,GAAAwgB,GAAAl0B,KAAAs4I,eAAA5kI,EACA,OAAA1T,MAAAq4I,SAAAnkH,IAMAqkH,UAAA,SAAAx9C,eAEA5tF,KAAA4tF,YAAAA,UAAA,EAIA,KAAA,GAFA51C,WAEAjrC,EAAA,EAAAA,GAAA6gF,UAAA7gF,IAEAirC,OAAAjlD,KAAAF,KAAAq4I,SAAAn+H,EAAA6gF,WAIA,OAAA51C,SAMAmiF,gBAAA,SAAAvsC,eAEA5tF,KAAA4tF,YAAAA,UAAA,EAIA,KAAA,GAFA51C,WAEAjrC,EAAA,EAAAA,GAAA6gF,UAAA7gF,IAEAirC,OAAAjlD,KAAAF,KAAAqiF,WAAAnoE,EAAA6gF,WAIA,OAAA51C,SAMAqzF,UAAA,WAEA,GAAAC,SAAAz4I,KAAA04I,YACA,OAAAD,SAAAA,QAAA74I,OAAA,IAMA84I,WAAA,SAAA39C,WAIA,OAFA5tF,KAAA4tF,YAAAA,UAAA/6F,KAAAqvF,oBAEArvF,KAAA24I,iBACA34I,KAAA24I,gBAAA/4I,SAAAm7F,UAAA,IACA/6F,KAAA6qC,YAEA,MAAA7qC,MAAA24I,eAIA34I,MAAA6qC,aAAA,CAEA,IACA+tG,SACA5kF,EAFAlM,SACAzmD,KAAArB,KAAAq4I,SAAA,GACAQ,IAAA,CAIA,KAFA/wF,MAAA5nD,KAAA,GAEA8zD,EAAA,EAAAA,GAAA+mC,UAAA/mC,IAEA4kF,QAAA54I,KAAAq4I,SAAArkF,EAAA+mC,WACA89C,KAAAD,QAAAx0C,WAAA/iG,MACAymD,MAAA5nD,KAAA24I,KACAx3I,KAAAu3I,OAMA,OAFA54I,MAAA24I,gBAAA7wF,MAEAA,OAIAgxF,iBAAA,WAEA94I,KAAA6qC,aAAA,EACA7qC,KAAA04I,cAMAJ,eAAA,SAAA5kI,EAAAgzC,UAEA,GAIAqyF,iBAJAC,WAAAh5I,KAAA04I,aAEA50I,EAAA,EAAAyyC,GAAAyiG,WAAAp5I,MAMAm5I,iBAFAryF,UAMAhzC,EAAAslI,WAAAziG,GAAA,EAQA,KAFA,GAAA0iG,YAAAz2C,IAAA,EAAAC,KAAAlsD,GAAA,EAEAisD,KAAAC,MAMA,GAJA3+F,EAAA8K,KAAAE,MAAA0zF,KAAAC,KAAAD,KAAA,IAEAy2C,WAAAD,WAAAl1I,GAAAi1I,iBAEA,EAEAv2C,IAAA1+F,EAAA,MAEA,CAAA,KAAAm1I,WAAA,GAIA,CAEAx2C,KAAA3+F,CACA,OALA2+F,KAAA3+F,EAAA,EAeA,GAFAA,EAAA2+F,KAEAu2C,WAAAl1I,KAAAi1I,gBAEA,MAAAj1I,IAAAyyC,GAAA,EAMA,IAAA2iG,cAAAF,WAAAl1I,EAaA,QAFAA,GAJAi1I,gBAAAG,eANAF,WAAAl1I,EAAA,GAEAo1I,gBAQA3iG,GAAA,IAWA4iG,WAAA,SAAAjlH,GAEA,GACAmpE,IAAAnpE,EADA,KAEAw6D,GAAAx6D,EAFA,IAMAmpE,IAAA,IAAAA,GAAA,GACA3O,GAAA,IAAAA,GAAA,EAEA,IAAA0qD,KAAAp5I,KAAAq4I,SAAAh7C,GAIA,OAHAr9F,MAAAq4I,SAAA3pD,IAEA3kE,QAAAk+B,IAAAmxF,KACA3vF,aAIA4vF,aAAA,SAAA3lI,GAEA,GAAAwgB,GAAAl0B,KAAAs4I,eAAA5kI,EACA,OAAA1T,MAAAm5I,WAAAjlH,IAIA0uD,oBAAA,SAAAsD,SAAArE,QAIA,GASA/9E,GAAA4P,EAAAg1E,MATAr3C,OAAA,GAAAvT,SAEAmkD,YACApkC,WACAqkC,aAEAi6C,IAAA,GAAAr+F,SACAw7G,IAAA,GAAAv7G,QAMA,KAAAj6B,EAAA,EAAAA,GAAAoiF,SAAApiF,IAEA4P,EAAA5P,EAAAoiF,SAEAjE,SAAAn+E,GAAA9D,KAAAq5I,aAAA3lI,GACAuuE,SAAAn+E,GAAA2lD,WAOA5L,SAAA,GAAA,GAAA/f,SACAokD,UAAA,GAAA,GAAApkD,QACA,IAAAtuB,KAAAqxF,OAAA04C,UACAznC,GAAAljG,KAAAc,IAAAuyE,SAAA,GAAAzqE,GACAu6F,GAAAnjG,KAAAc,IAAAuyE,SAAA,GAAAhoE,GACAu/H,GAAA5qI,KAAAc,IAAAuyE,SAAA,GAAArlD,EA8BA,KA5BAk1E,IAAAtiG,MAEAA,IAAAsiG,GACAzgE,OAAAxgC,IAAA,EAAA,EAAA,IAIAkhG,IAAAviG,MAEAA,IAAAuiG,GACA1gE,OAAAxgC,IAAA,EAAA,EAAA,IAIA2oI,IAAAhqI,KAEA6hC,OAAAxgC,IAAA,EAAA,EAAA,GAIAsrH,IAAA/8C,aAAA6C,SAAA,GAAA5wC,QAAAoY,YAEA5L,QAAA,GAAAuhC,aAAA6C,SAAA,GAAAk6C,KACAj6C,UAAA,GAAA9C,aAAA6C,SAAA,GAAApkC,QAAA,IAKA/5C,EAAA,EAAAA,GAAAoiF,SAAApiF,IAEA+5C,QAAA/5C,GAAA+5C,QAAA/5C,EAAA,GAAAimB,QAEAm4D,UAAAp+E,GAAAo+E,UAAAp+E,EAAA,GAAAimB,QAEAoyG,IAAA/8C,aAAA6C,SAAAn+E,EAAA,GAAAm+E,SAAAn+E,IAEAq4H,IAAAv8H,SAAAihG,OAAAC,UAEAq7B,IAAA1yE,YAEAi/B,MAAA95E,KAAA42F,KAAA9pE,MAAA0qD,MAAAnE,SAAAn+E,EAAA,GAAAmkF,IAAAhG,SAAAn+E,KAAA,EAAA,IAEA+5C,QAAA/5C,GAAAklC,aAAAswG,IAAAznC,iBAAAsqB,IAAAzzC,SAIAxG,UAAAp+E,GAAAs7E,aAAA6C,SAAAn+E,GAAA+5C,QAAA/5C,GAMA,KAAA,IAAA+9E,OAWA,IATA6G,MAAA95E,KAAA42F,KAAA9pE,MAAA0qD,MAAAvoC,QAAA,GAAAoqC,IAAApqC,QAAAqoC,YAAA,EAAA,IACAwC,OAAAxC,SAEAjE,SAAA,GAAAgG,IAAAk0C,IAAA/8C,aAAAvhC,QAAA,GAAAA,QAAAqoC,YAAA,IAEAwC,OAAAA,OAIA5kF,EAAA,EAAAA,GAAAoiF,SAAApiF,IAGA+5C,QAAA/5C,GAAAklC,aAAAswG,IAAAznC,iBAAA5vB,SAAAn+E,GAAA4kF,MAAA5kF,IACAo+E,UAAAp+E,GAAAs7E,aAAA6C,SAAAn+E,GAAA+5C,QAAA/5C,GAMA,QACAm+E,SAAAA,SACApkC,QAAAA,QACAqkC,UAAAA,cAgBAoN,UAAA9yF,UAAAqN,OAAA88F,OAAAvX,MAAA5yF,WACA8yF,UAAA9yF,UAAAsvF,YAAAwD,UAEAA,UAAA9yF,UAAAi9I,aAAA,EAEAnqD,UAAA9yF,UAAA67I,SAAA,SAAAnkH,GAEA,GAAA,IAAAA,EAEA,MAAAl0B,MAAAuvF,GAAAxlE,OAIA,IAAAw/B,OAAAvpD,KAAAuvF,GAAAxlE,QAAAk+B,IAAAjoD,KAAAyuF,GAGA,OAFAllC,OAAAxB,eAAA7zB,GAAA32B,IAAAyC,KAAAyuF,IAEAllC,OAMA+lC,UAAA9yF,UAAA6lF,WAAA,SAAA3uE,GAEA,MAAA1T,MAAAq4I,SAAA3kI,IAIA47E,UAAA9yF,UAAA28I,WAAA,SAAAjlH,GAIA,MAFAl0B,MAAAuvF,GAAAxlE,QAAAk+B,IAAAjoD,KAAAyuF,IAEAhlC,aAwBA+lC,UAAAhzF,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAvX,MAAA5yF,YAEAsvF,YAAA0D,UAEAjyF,IAAA,SAAAm8I,OAEA15I,KAAAyvF,OAAAvvF,KAAAw5I,QAIAC,UAAA,WAGA,GAAAC,YAAA55I,KAAAyvF,OAAA,GAAA4oD,SAAA,GACAwB,SAAA75I,KAAAyvF,OAAAzvF,KAAAyvF,OAAA7vF,OAAA,GAAAy4I,SAAA,EAEAuB,YAAAp+E,OAAAq+E,WAEA75I,KAAAyvF,OAAAvvF,KAAA,GAAAovF,WAAAuqD,SAAAD,cAeAvB,SAAA,SAAAnkH,GAQA,IANA,GAAAha,GAAAga,EAAAl0B,KAAAw4I,YACAsB,aAAA95I,KAAA+5I,kBACAj2I,EAAA,EAIAA,EAAAg2I,aAAAl6I,QAAA,CAEA,GAAAk6I,aAAAh2I,IAAAoW,EAAA,CAEA,GAAA1H,MAAAsnI,aAAAh2I,GAAAoW,EACAw/H,MAAA15I,KAAAyvF,OAAA3rF,GAEAk2I,cAAAN,MAAAlB,YACA9kI,EAAA,IAAAsmI,cAAA,EAAA,EAAAxnI,KAAAwnI,aAEA,OAAAN,OAAAr3D,WAAA3uE,GAIA5P,IAIA,MAAA,OAUA00I,UAAA,WAEA,GAAAyB,MAAAj6I,KAAA+5I,iBACA,OAAAE,MAAAA,KAAAr6I,OAAA,IAKAk5I,iBAAA,WAEA94I,KAAA6qC,aAAA,EACA7qC,KAAAk6I,aAAA,KACAl6I,KAAA+5I,mBAOAA,gBAAA,WAIA,GAAA/5I,KAAAk6I,cAAAl6I,KAAAk6I,aAAAt6I,SAAAI,KAAAyvF,OAAA7vF,OAEA,MAAAI,MAAAk6I,YASA,KAAA,GAFAzB,YAAA0B,KAAA,EAEAr2I,EAAA,EAAA4f,EAAA1jB,KAAAyvF,OAAA7vF,OAAAkE,EAAA4f,EAAA5f,IAEAq2I,MAAAn6I,KAAAyvF,OAAA3rF,GAAA00I,YACAC,QAAAv4I,KAAAi6I,KAMA,OAFAn6I,MAAAk6I,aAAAzB,QAEAA,SAIAnR,gBAAA,SAAAvsC,eAEA5tF,KAAA4tF,YAAAA,UAAA,GAIA,KAAA,GAFA51C,WAEArhD,EAAA,EAAAA,GAAAi3F,UAAAj3F,IAEAqhD,OAAAjlD,KAAAF,KAAAq4I,SAAAv0I,EAAAi3F,WAUA,OANA/6F,MAAA0vF,WAEAvqC,OAAAjlD,KAAAilD,OAAA,IAIAA,QAIAozF,UAAA,SAAAx9C,WAEAA,UAAAA,WAAA,EAIA,KAAA,GAFA15F,MAAA8jD,UAEArhD,EAAA,EAAA2rF,OAAAzvF,KAAAyvF,OAAA3rF,EAAA2rF,OAAA7vF,OAAAkE,IAUA,IAAA,GARA41I,OAAAjqD,OAAA3rF,GACAs2I,WAAAV,OAAAA,MAAAW,eAAA,EAAAt/C,UACA2+C,OAAAA,MAAAD,YAAA,EACAC,OAAAA,MAAAY,cAAAv/C,UAAA2+C,MAAAv0F,OAAAvlD,OACAm7F,UAEAwoC,IAAAmW,MAAAnB,UAAA6B,YAEAx6H,EAAA,EAAAA,EAAA2jH,IAAA3jI,OAAAggB,IAAA,CAEA,GAAA2pC,OAAAg6E,IAAA3jH,EAEAve,OAAAA,KAAAm6D,OAAAjS,SAEApE,OAAAjlD,KAAAqpD,OACAloD,KAAAkoD,OAYA,MANAvpD,MAAA0vF,WAAAvqC,OAAAvlD,OAAA,IAAAulD,OAAAA,OAAAvlD,OAAA,GAAA47D,OAAArW,OAAA,KAEAA,OAAAjlD,KAAAilD,OAAA,IAIAA,QAUAo1F,qBAAA,SAAAx/C,WAEA,GAAAwoC,KAAAvjI,KAAAu4I,UAAAx9C,UACA,OAAA/6F,MAAAw6I,eAAAjX,MAMAkX,2BAAA,SAAA1/C,WAEA,GAAAwoC,KAAAvjI,KAAAsnI,gBAAAvsC,UACA,OAAA/6F,MAAAw6I,eAAAjX,MAIAiX,eAAA,SAAAr1F,QAIA,IAAA,GAFA9S,UAAA,GAAAyJ,UAEAh4C,EAAA,EAAA4f,EAAAyhC,OAAAvlD,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAylD,OAAApE,OAAArhD,EACAuuC,UAAA9N,SAAArkC,KAAA,GAAA49B,SAAAyrB,MAAA/xC,EAAA+xC,MAAAtvC,EAAAsvC,MAAA3sB,GAAA,IAIA,MAAAyV,aAyBAs9C,aAAAnzF,UAAAqN,OAAA88F,OAAAvX,MAAA5yF,WACAmzF,aAAAnzF,UAAAsvF,YAAA6D,aAEAA,aAAAnzF,UAAA69I,gBAAA,EAEA1qD,aAAAnzF,UAAA67I,SAAA,SAAAnkH,GAOA,IALA,GAAAwmH,OAAA,EAAA9rI,KAAAiyE,GACA85D,WAAA36I,KAAAiwF,UAAAjwF,KAAAgwF,YACA4qD,WAAAhsI,KAAAc,IAAAirI,YAAA95C,OAAAC,QAGA65C,WAAA,GAAAA,YAAAD,KACA,MAAAC,WAAAD,OAAAC,YAAAD,KAEAC,YAAA95C,OAAAC,UAIA65C,WAFAC,WAEA,EAIAF,QAMA,IAAA16I,KAAAkwF,YAAA0qD,aAEAD,aAAAD,MAEAC,YAAAD,MAIAC,YAAAD,MAMA,IAAAjyF,OAAAzoD,KAAAgwF,YAAA97D,EAAAymH,WACAnjI,EAAAxX,KAAA4vF,GAAA5vF,KAAA8vF,QAAAlhF,KAAA45C,IAAAC,OACAxuC,EAAAja,KAAA6vF,GAAA7vF,KAAA+vF,QAAAnhF,KAAA6zE,IAAAh6B,MAEA,IAAA,IAAAzoD,KAAAmwF,UAAA,CAEA,GAAA3nC,KAAA55C,KAAA45C,IAAAxoD,KAAAmwF,WACA1N,IAAA7zE,KAAA6zE,IAAAziF,KAAAmwF,WAEA2hB,GAAAt6F,EAAAxX,KAAA4vF,GACAmiB,GAAA93F,EAAAja,KAAA6vF,EAGAr4E,GAAAs6F,GAAAtpD,IAAAupD,GAAAtvB,IAAAziF,KAAA4vF,GACA31E,EAAA63F,GAAArvB,IAAAsvB,GAAAvpD,IAAAxoD,KAAA6vF,GAIA,MAAA,IAAAj1D,SAAApjB,EAAAyC,IAYAm2E,YAAA5zF,UAAAqN,OAAA88F,OAAAvX,MAAA5yF,WACA4zF,YAAA5zF,UAAAsvF,YAAAsE,YAEAA,YAAA5zF,UAAA89I,eAAA,EAEAlqD,YAAA5zF,UAAA67I,SAAA,SAAAnkH,GAEA,GAAAixB,QAAAnlD,KAAAmlD,OACAoE,OAAApE,OAAAvlD,OAAA,GAAAs0B,EAEA2mH,SAAAjsI,KAAAE,MAAAy6C,OACA4tC,OAAA5tC,MAAAsxF,SAEAC,OAAA31F,OAAA,IAAA01F,SAAAA,SAAAA,SAAA,GACAE,OAAA51F,OAAA01F,UACAG,OAAA71F,OAAA01F,SAAA11F,OAAAvlD,OAAA,EAAAulD,OAAAvlD,OAAA,EAAAi7I,SAAA,GACAI,OAAA91F,OAAA01F,SAAA11F,OAAAvlD,OAAA,EAAAulD,OAAAvlD,OAAA,EAAAi7I,SAAA,EAEA,OAAA,IAAAjgH,SACA2zD,WAAA4I,OAAA2jD,OAAAtjI,EAAAujI,OAAAvjI,EAAAwjI,OAAAxjI,EAAAyjI,OAAAzjI,GACA+2E,WAAA4I,OAAA2jD,OAAA7gI,EAAA8gI,OAAA9gI,EAAA+gI,OAAA/gI,EAAAghI,OAAAhhI,KAgBAo2E,iBAAA7zF,UAAAqN,OAAA88F,OAAAvX,MAAA5yF,WACA6zF,iBAAA7zF,UAAAsvF,YAAAuE,iBAEAA,iBAAA7zF,UAAA67I,SAAA,SAAAnkH,GAEA,GAAAs6D,IAAAxuF,KAAAwuF,GAAAC,GAAAzuF,KAAAyuF,GAAAc,GAAAvvF,KAAAuvF,GAAAe,GAAAtwF,KAAAswF,EAEA,OAAA,IAAA11D,SACAu0D,YAAAj7D,EAAAs6D,GAAAh3E,EAAAi3E,GAAAj3E,EAAA+3E,GAAA/3E,EAAA84E,GAAA94E,GACA23E,YAAAj7D,EAAAs6D,GAAAv0E,EAAAw0E,GAAAx0E,EAAAs1E,GAAAt1E,EAAAq2E,GAAAr2E,KAeAs2E,qBAAA/zF,UAAAqN,OAAA88F,OAAAvX,MAAA5yF,WACA+zF,qBAAA/zF,UAAAsvF,YAAAyE,qBAEAA,qBAAA/zF,UAAA67I,SAAA,SAAAnkH,GAEA,GAAAs6D,IAAAxuF,KAAAwuF,GAAAC,GAAAzuF,KAAAyuF,GAAAc,GAAAvvF,KAAAuvF,EAEA,OAAA,IAAA30D,SACAk0D,gBAAA56D,EAAAs6D,GAAAh3E,EAAAi3E,GAAAj3E,EAAA+3E,GAAA/3E,GACAs3E,gBAAA56D,EAAAs6D,GAAAv0E,EAAAw0E,GAAAx0E,EAAAs1E,GAAAt1E,IAKA,IAAAihI,eAAArxI,OAAAm3F,OAAAn3F,OAAA88F,OAAAnX,UAAAhzF,YAEAk0F,WAAA,SAAA0iC,SAEApzH,KAAAm7I,OAAA/nB,QAAA,GAAA57G,EAAA47G,QAAA,GAAAn5G,EAEA,KAAA,GAAAnW,GAAA,EAAA4f,EAAA0vG,QAAAxzH,OAAAkE,EAAA4f,EAAA5f,IAEA9D,KAAAo7I,OAAAhoB,QAAAtvH,GAAA0T,EAAA47G,QAAAtvH,GAAAmW,IAMAkhI,OAAA,SAAA3jI,EAAAyC,GAEAja,KAAAywF,aAAA5/E,IAAA2G,EAAAyC,IAIAmhI,OAAA,SAAA5jI,EAAAyC,GAEA,GAAAy/H,OAAA,GAAApqD,WAAAtvF,KAAAywF,aAAA1mE,QAAA,GAAA6Q,SAAApjB,EAAAyC,GACAja,MAAAyvF,OAAAvvF,KAAAw5I,OAEA15I,KAAAywF,aAAA5/E,IAAA2G,EAAAyC,IAIAohI,iBAAA,SAAAC,KAAAC,KAAA3rD,GAAAC,IAEA,GAAA6pD,OAAA,GAAAnpD,sBACAvwF,KAAAywF,aAAA1mE,QACA,GAAA6Q,SAAA0gH,KAAAC,MACA,GAAA3gH,SAAAg1D,GAAAC,IAGA7vF,MAAAyvF,OAAAvvF,KAAAw5I,OAEA15I,KAAAywF,aAAA5/E,IAAA++E,GAAAC,KAIA2rD,cAAA,SAAAC,MAAAC,MAAAC,MAAAC,MAAAhsD,GAAAC,IAEA,GAAA6pD,OAAA,GAAArpD,kBACArwF,KAAAywF,aAAA1mE,QACA,GAAA6Q,SAAA6gH,MAAAC,OACA,GAAA9gH,SAAA+gH,MAAAC,OACA,GAAAhhH,SAAAg1D,GAAAC,IAGA7vF,MAAAyvF,OAAAvvF,KAAAw5I,OAEA15I,KAAAywF,aAAA5/E,IAAA++E,GAAAC,KAIAgsD,WAAA,SAAAtY,KAEA,GAAAuY,OAAA97I,KAAAywF,aAAA1mE,SAAAw9D,OAAAg8C,KAEAmW,MAAA,GAAAtpD,aAAA0rD,KACA97I,MAAAyvF,OAAAvvF,KAAAw5I,OAEA15I,KAAAywF,aAAAtnD,KAAAo6F,IAAAA,IAAA3jI,OAAA,KAIAkkF,IAAA,SAAA8L,GAAAC,GAAA0O,QAAAvO,YAAAC,UAAAC,YAEA,GAAAlQ,IAAAhgF,KAAAywF,aAAAj5E,EACA8vF,GAAAtnG,KAAAywF,aAAAx2E,CAEAja,MAAA+7I,OAAAnsD,GAAA5P,GAAA6P,GAAAyX,GAAA/I,QACAvO,YAAAC,UAAAC,aAIA6rD,OAAA,SAAAnsD,GAAAC,GAAA0O,QAAAvO,YAAAC,UAAAC,YAEAlwF,KAAAg8I,WAAApsD,GAAAC,GAAA0O,QAAAA,QAAAvO,YAAAC,UAAAC,aAIA+rD,QAAA,SAAArsD,GAAAC,GAAAC,QAAAC,QAAAC,YAAAC,UAAAC,WAAAC,WAEA,GAAAnQ,IAAAhgF,KAAAywF,aAAAj5E,EACA8vF,GAAAtnG,KAAAywF,aAAAx2E,CAEAja,MAAAg8I,WAAApsD,GAAA5P,GAAA6P,GAAAyX,GAAAxX,QAAAC,QAAAC,YAAAC,UAAAC,WAAAC,YAIA6rD,WAAA,SAAApsD,GAAAC,GAAAC,QAAAC,QAAAC,YAAAC,UAAAC,WAAAC,WAEA,GAAAupD,OAAA,GAAA/pD,cAAAC,GAAAC,GAAAC,QAAAC,QAAAC,YAAAC,UAAAC,WAAAC,UAEA,IAAAnwF,KAAAyvF,OAAA7vF,OAAA,EAAA,CAGA,GAAAs8I,YAAAxC,MAAArB,SAAA,EAEA6D,YAAA1gF,OAAAx7D,KAAAywF,eAEAzwF,KAAAo7I,OAAAc,WAAA1kI,EAAA0kI,WAAAjiI,GAMAja,KAAAyvF,OAAAvvF,KAAAw5I,MAEA,IAAAyC,WAAAzC,MAAArB,SAAA,EACAr4I,MAAAywF,aAAAtnD,KAAAgzG,aAwBA3rD,MAAAh0F,UAAA0+I,cACAA,cAAApvD,YAAA0E,KAqBAG,MAAAn0F,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAu0C,gBAEApvD,YAAA6E,MAEAyrD,eAAA,SAAArhD,WAIA,IAAA,GAFAshD,aAEAv4I,EAAA,EAAA4f,EAAA1jB,KAAAknF,MAAAtnF,OAAAkE,EAAA4f,EAAA5f,IAEAu4I,SAAAv4I,GAAA9D,KAAAknF,MAAApjF,GAAAy0I,UAAAx9C,UAIA,OAAAshD,WAMAC,iBAAA,SAAAvhD,WAEA,OAEAnU,MAAA5mF,KAAAu4I,UAAAx9C,WACA7T,MAAAlnF,KAAAo8I,eAAArhD,aAMAhU,cAAA,SAAAgU,WAEA,MAAA/6F,MAAAs8I,iBAAAvhD,cAkBAlxF,OAAAm3F,OAAApQ,UAAAp0F,WAEA2+I,OAAA,SAAA3jI,EAAAyC,GAEAja,KAAA8wF,YAAA,GAAAN,MACAxwF,KAAA6wF,SAAA3wF,KAAAF,KAAA8wF,aACA9wF,KAAA8wF,YAAAqqD,OAAA3jI,EAAAyC,IAIAmhI,OAAA,SAAA5jI,EAAAyC,GAEAja,KAAA8wF,YAAAsqD,OAAA5jI,EAAAyC,IAIAohI,iBAAA,SAAAC,KAAAC,KAAA3rD,GAAAC,IAEA7vF,KAAA8wF,YAAAuqD,iBAAAC,KAAAC,KAAA3rD,GAAAC,KAIA2rD,cAAA,SAAAC,MAAAC,MAAAC,MAAAC,MAAAhsD,GAAAC,IAEA7vF,KAAA8wF,YAAA0qD,cAAAC,MAAAC,MAAAC,MAAAC,MAAAhsD,GAAAC,KAIAgsD,WAAA,SAAAtY,KAEAvjI,KAAA8wF,YAAA+qD,WAAAtY,MAIAgZ,SAAA,SAAAC,MAAAC,SAEA,QAAAC,iBAAAC,YAIA,IAAA,GAFA14D,WAEAngF,EAAA,EAAA4f,EAAAi5H,WAAA/8I,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA84I,SAAAD,WAAA74I,GAEA+4I,SAAA,GAAAlsD,MACAksD,UAAAptD,OAAAmtD,QAAAntD,OAEAxL,OAAA/jF,KAAA28I,UAIA,MAAA54D,QA+DA,GAAAmD,aAAAD,WAAAC,YAEAyJ,SAAA7wF,KAAA6wF,QACA,IAAA,IAAAA,SAAAjxF,OAAA,QAEA,KAAA,IAAA68I,QAAA,MAAAC,iBAAA7rD,SAGA,IAAAisD,OAAAF,QAAAC,SAAA54D,SAEA,IAAA,IAAA4M,SAAAjxF,OAMA,MAJAg9I,SAAA/rD,SAAA,GACAgsD,SAAA,GAAAlsD,OACAksD,SAAAptD,OAAAmtD,QAAAntD,OACAxL,OAAA/jF,KAAA28I,UACA54D,MAIA,IAAA84D,aAAA31D,YAAAyJ,SAAA,GAAA0nD,YACAwE,YAAAP,OAAAO,WAAAA,UAIA,IAIAC,WAJAC,oBACAC,aACAC,iBACAC,QAAA,CAGAF,WAAAE,aAAAjwI,GACAgwI,cAAAC,WAEA,KAAA,GAAAt5I,GAAA,EAAA4f,EAAAmtE,SAAAjxF,OAAAkE,EAAA4f,EAAA5f,IAEA84I,QAAA/rD,SAAA/sF,GACAk5I,UAAAJ,QAAArE,YACAuE,MAAA11D,YAAA41D,WACAF,MAAAN,OAAAM,MAAAA,MAEAA,QAEAC,YAAAG,UAAAE,UAAAA,UAEAF,UAAAE,UAAAxnI,EAAA,GAAA+6E,OAAA38B,EAAAgpF,WACAE,UAAAE,SAAAxnI,EAAA65E,OAAAmtD,QAAAntD,OAEAstD,YAAAK,UACAD,cAAAC,aAMAD,cAAAC,SAAAl9I,MAAAia,EAAAyiI,QAAA5oF,EAAAgpF,UAAA,IASA,KAAAE,UAAA,GAAA,MAAAR,iBAAA7rD,SAGA,IAAAqsD,UAAAt9I,OAAA,EAAA,CAKA,IAAA,GAHAy9I,YAAA,EACAC,YAEAra,KAAA,EAAAsa,KAAAL,UAAAt9I,OAAAqjI,KAAAsa,KAAAta,OAEAga,iBAAAha,QAIA,KAAA,GAAAA,MAAA,EAAAsa,KAAAL,UAAAt9I,OAAAqjI,KAAAsa,KAAAta,OAIA,IAAA,GAFAua,KAAAL,cAAAla,MAEAI,KAAA,EAAAA,KAAAma,IAAA59I,OAAAyjI,OAAA,CAKA,IAAA,GAHAoa,IAAAD,IAAAna,MACAqa,iBAAA,EAEAC,MAAA,EAAAA,MAAAT,UAAAt9I,OAAA+9I,SAlJA,SAAAzZ,KAAA0Z,WASA,IAAA,GAPAC,SAAAD,UAAAh+I,OAMAk+I,QAAA,EACA9pF,EAAA6pF,QAAA,EAAA96D,EAAA,EAAAA,EAAA86D,QAAA7pF,EAAA+uB,IAAA,CAEA,GAAAg7D,WAAAH,UAAA5pF,GACAgqF,WAAAJ,UAAA76D,GAEAk7D,OAAAD,WAAAxmI,EAAAumI,UAAAvmI,EACA0mI,OAAAF,WAAA/jI,EAAA8jI,UAAA9jI,CAEA,IAAArL,KAAAc,IAAAwuI,QAAAr9C,OAAAC,QAAA,CASA,GANAo9C,OAAA,IAEAH,UAAAH,UAAA76D,GAAAk7D,QAAAA,OACAD,WAAAJ,UAAA5pF,GAAAkqF,QAAAA,QAGAha,KAAAjqH,EAAA8jI,UAAA9jI,GAAAiqH,KAAAjqH,EAAA+jI,WAAA/jI,EAAA,QAEA,IAAAiqH,KAAAjqH,IAAA8jI,UAAA9jI,GAEA,GAAAiqH,KAAA1sH,IAAAumI,UAAAvmI,EAAA,OAAA,MAGA,CAEA,GAAA2mI,UAAAD,QAAAha,KAAA1sH,EAAAumI,UAAAvmI,GAAAymI,QAAA/Z,KAAAjqH,EAAA8jI,UAAA9jI,EACA,IAAA,IAAAkkI,SAAA,OAAA,CACA,IAAAA,SAAA,EAAA,QACAL,SAAAA,YAIA,CAGA,GAAA5Z,KAAAjqH,IAAA8jI,UAAA9jI,EAAA,QAEA,IAAA+jI,WAAAxmI,GAAA0sH,KAAA1sH,GAAA0sH,KAAA1sH,GAAAumI,UAAAvmI,GACAumI,UAAAvmI,GAAA0sH,KAAA1sH,GAAA0sH,KAAA1sH,GAAAwmI,WAAAxmI,EAAA,OAAA,GAOA,MAAAsmI,UA6FAL,GAAAzpF,EAAAkpF,UAAAS,OAAA3pF,KAEAivE,OAAA0a,OAAAL,SAAAp9I,MAAAk+I,MAAAnb,KAAAob,IAAAV,MAAArc,KAAA+B,OACAqa,iBAEAA,iBAAA,EACAT,iBAAAU,OAAAz9I,KAAAu9I,KAIAJ,WAAA,EAOAK,kBAEAT,iBAAAha,MAAA/iI,KAAAu9I,IAQAH,SAAA19I,OAAA,IAGAy9I,YAAAF,cAAAF,mBAQA,IAAA,GAFAqB,UAEAx6I,EAAA,EAAAyyC,GAAA2mG,UAAAt9I,OAAAkE,EAAAyyC,GAAAzyC,IAAA,CAEA+4I,SAAAK,UAAAp5I,GAAA8R,EACAquE,OAAA/jF,KAAA28I,UACAyB,SAAAnB,cAAAr5I,EAEA,KAAA,GAAA8b,GAAA,EAAAsqB,GAAAo0G,SAAA1+I,OAAAggB,EAAAsqB,GAAAtqB,IAEAi9H,SAAA31D,MAAAhnF,KAAAo+I,SAAA1+H,GAAAzF,GAQA,MAAA8pE,WAiBAp6E,OAAAm3F,OAAAjQ,KAAAv0F;8BAEAgoF,QAAA,EAEAC,eAAA,SAAAJ,KAAAtiD,KAAAg5D,WAmCA,QAAAwjD,YAAAx8H,EAAA+kB,MAAA2mF,QAAAC,SAEA,GAAA8wB,OAAAj+H,KAAAk+H,OAAA18H,IAAAxB,KAAAk+H,OAAA,IAEA,IAAAD,MAAA,CAEA,GAGAhnI,GAAAyC,EAAA+jH,IAAAC,IAAAygB,KAAAC,KAAAC,KAAAC,KAAAC,KAAAC,KAAAC,MAHA97G,KAAA,GAAA0tD,WAEA2yC,MAGA,IAAAib,MAAA7nH,EAIA,IAAA,GAFAsoH,SAAAT,MAAAU,iBAAAV,MAAAU,eAAAV,MAAA7nH,EAAA7W,MAAA,MAEAhc,EAAA,EAAA4f,EAAAu7H,QAAAr/I,OAAAkE,EAAA4f,GAAA,CAEA,GAAAlmB,QAAAyhJ,QAAAn7I,IAEA,QAAAtG,QAEA,IAAA,IAEAga,EAAAynI,QAAAn7I,KAAAgjC,MAAA2mF,QACAxzG,EAAAglI,QAAAn7I,KAAAgjC,MAAA4mF,QAEAxqF,KAAAi4G,OAAA3jI,EAAAyC,EAEA,MAEA,KAAA,IAEAzC,EAAAynI,QAAAn7I,KAAAgjC,MAAA2mF,QACAxzG,EAAAglI,QAAAn7I,KAAAgjC,MAAA4mF,QAEAxqF,KAAAk4G,OAAA5jI,EAAAyC,EAEA,MAEA,KAAA,IAWA,GATA+jH,IAAAihB,QAAAn7I,KAAAgjC,MAAA2mF,QACAwQ,IAAAghB,QAAAn7I,KAAAgjC,MAAA4mF,QACAkxB,KAAAK,QAAAn7I,KAAAgjC,MAAA2mF,QACAoxB,KAAAI,QAAAn7I,KAAAgjC,MAAA4mF,QAEAxqF,KAAAm4G,iBAAAuD,KAAAC,KAAA7gB,IAAAC,KAEA+gB,MAAAzb,IAAAA,IAAA3jI,OAAA,GAEA,CAEA8+I,KAAAM,MAAAxnI,EACAmnI,KAAAK,MAAA/kI,CAEA,KAAA,GAAAg/G,IAAA,EAAAA,IAAAl+B,UAAAk+B,KAAA,CAEA,GAAA/kG,GAAA+kG,GAAAl+B,SACAjM,iBAAA56D,EAAAwqH,KAAAE,KAAA5gB,KACAlvC,gBAAA56D,EAAAyqH,KAAAE,KAAA5gB,MAMA,KAEA,KAAA,IAaA,GAXAD,IAAAihB,QAAAn7I,KAAAgjC,MAAA2mF,QACAwQ,IAAAghB,QAAAn7I,KAAAgjC,MAAA4mF,QACAkxB,KAAAK,QAAAn7I,KAAAgjC,MAAA2mF,QACAoxB,KAAAI,QAAAn7I,KAAAgjC,MAAA4mF,QACAoxB,KAAAG,QAAAn7I,KAAAgjC,MAAA2mF,QACAsxB,KAAAE,QAAAn7I,KAAAgjC,MAAA4mF,QAEAxqF,KAAAs4G,cAAAoD,KAAAC,KAAAC,KAAAC,KAAA/gB,IAAAC,KAEA+gB,MAAAzb,IAAAA,IAAA3jI,OAAA,GAEA,CAEA8+I,KAAAM,MAAAxnI,EACAmnI,KAAAK,MAAA/kI,CAEA,KAAA,GAAAg/G,IAAA,EAAAA,IAAAl+B,UAAAk+B,KAAA,CAEA,GAAA/kG,GAAA+kG,GAAAl+B,SACA5L,aAAAj7D,EAAAwqH,KAAAE,KAAAE,KAAA9gB,KACA7uC,YAAAj7D,EAAAyqH,KAAAE,KAAAE,KAAA9gB,QAcA,OAAAxQ,QAAA+wB,MAAAW,GAAAr4G,MAAA5D,KAAAA,WAMA/1B,KAAA40B,OAAAA,KAAA,SACA50B,KAAA4tF,YAAAA,UAAA,EAOA,KAAA,GALAx6E,MAAAvgB,KAAAugB,KAEA6+H,MAnJA,SAAA/6D,MAUA,IAAA,GARAwd,OAAA83B,OAAAt1C,MAAAvkE,MAAA,IACAgnB,MAAA/E,KAAAxhB,KAAA65H,WACAiF,aAAA9+H,KAAA67B,YAAAkjG,KAAA/+H,KAAA67B,YAAAmjG,KAAAh/H,KAAAi/H,oBAAA14G,MAEA2mF,QAAA,EAAAC,QAAA,EAEA0xB,SAEAt7I,EAAA,EAAAA,EAAA+9F,MAAAjiG,OAAAkE,IAAA,CAEA,GAAA27I,MAAA59C,MAAA/9F,EAEA,IAAA,OAAA27I,KAEAhyB,QAAA,EACAC,SAAA2xB,gBAEA,CAEA,GAAA1zH,KAAA4yH,WAAAkB,KAAA34G,MAAA2mF,QAAAC,QACAD,UAAA9hG,IAAA8hG,QACA2xB,MAAAl/I,KAAAyrB,IAAAuX,OAMA,MAAAk8G,QAsHA/6D,MACAJ,UAEAjwB,EAAA,EAAAC,GAAAmrF,MAAAx/I,OAAAo0D,EAAAC,GAAAD,IAEAz3D,MAAAC,UAAA0D,KAAAJ,MAAAmkF,OAAAm7D,MAAAprF,GAAAuoF,WAIA,OAAAt4D,WAgBAp6E,OAAAm3F,OAAAhQ,WAAAx0F,WAEA+sI,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,SAEA,GAAAh2C,OAAA3zC,IAEA,IAAAmqF,YAAAnqF,KAAAoqF,SACAm/C,KAAAv/C,IAAA,SAAA3F,MAEA,GAAA8rD,KAEA,KAEAA,KAAAtpB,KAAAE,MAAA1iC,MAEA,MAAAthF,GAEAgN,QAAAH,KAAA,yFACAugI,KAAAtpB,KAAAE,MAAA1iC,KAAAgzD,UAAA,GAAAhzD,KAAAzkF,OAAA,IAIA,GAAA2kF,MAAA5wC,MAAAozE,MAAAopB,KAEA1mD,SAAAA,OAAAlF,OAEAmF,WAAAC,UAIAo9B,MAAA,SAAAopB,MAEA,MAAA,IAAAp/C,MAAAo/C,QAMA,IAAAzkG,SAEAmmD,cAEAlmD,WAAA,WAQA,WANAx+B,KAAAu+B,UAEAA,QAAA,IAAAtwC,OAAAy2F,cAAAz2F,OAAAskJ,qBAIAh0G,SAIAi0G,WAAA,SAAAzwI,OAEAw8B,QAAAx8B,OAgBArF,QAAAm3F,OAAA/P,YAAAz0F,WAEA+sI,KAAA,SAAAv/C,IAAAP,OAAAC,WAAAC,SAEA,GAAAroF,QAAA,GAAA6oF,YAAAnqF,KAAAoqF,QACA9oF,QAAA2pI,gBAAA,eACA3pI,OAAAioI,KAAAv/C,IAAA,SAAA5xC,QAEAy5C,aAAAlmD,aAEAi0G,gBAAAxnG,OAAA,SAAAynG,aAEAp2D,OAAAo2D,gBAIAn2D,WAAAC,YA4BA9/E,OAAAm3F,OAAA9P,aAAA10F,WAEAm4C,OAAA,WAEA,GAAAmrG,UAAAxkG,MAAAF,IAAAC,OAAA7O,KAAAC,IAAAwO,KAAAk2C,OAEA4uD,SAAA,GAAAhiH,SACAiiH,QAAA,GAAAjiH,QAEA,OAAA,UAAA6J,QAMA,GAJAk4G,WAAA9/I,MAAAs7C,QAAA1T,OAAA0T,OAAAF,MAAAxT,OAAAwT,KACAC,SAAAzT,OAAAyT,OAAAr7C,KAAAq7C,QAAA7O,OAAA5E,OAAA4E,MACAC,MAAA7E,OAAA6E,KAAAwO,OAAArT,OAAAqT,MAAAk2C,SAAAnxF,KAAAmxF,OAEA,CAEA2uD,SAAA9/I,KACAs7C,MAAA1T,OAAA0T,MACAF,IAAAxT,OAAAwT,IACAC,OAAAzT,OAAAyT,OAAAr7C,KAAAq7C,OACA7O,KAAA5E,OAAA4E,KACAC,IAAA7E,OAAA6E,IACAwO,KAAArT,OAAAqT,IAKA,IAAA/R,kBAAAtB,OAAAsB,iBAAAnf,OACAonE,QAAAnxF,KAAAmxF,OAAA,CACA,IAEA8uD,MAAAC,KAFAC,mBAAAhvD,OAAA3kD,KAAA8O,MACA8kG,KAAA5zG,KAAA59B,KAAAqsG,IAAAv/E,MAAAksD,QAAAxsC,IAAA,IAAAH,IAKA+kG,SAAArhJ,SAAA,KAAAwyF,OACA4uD,SAAAphJ,SAAA,IAAAwyF,OAIA8uD,MAAAG,KAAA/kG,OAAA8kG,mBACAD,KAAAE,KAAA/kG,OAAA8kG,mBAEAj3G,iBAAAvqC,SAAA,GAAA,EAAA6tC,MAAA0zG,KAAAD,MACA/2G,iBAAAvqC,SAAA,IAAAuhJ,KAAAD,OAAAC,KAAAD,MAEAjgJ,KAAAolE,QAAAl8B,iBAAAC,KAAAD,kBAIA+2G,MAAAG,KAAA/kG,OAAA8kG,mBACAD,KAAAE,KAAA/kG,OAAA8kG,mBAEAj3G,iBAAAvqC,SAAA,GAAA,EAAA6tC,MAAA0zG,KAAAD,MACA/2G,iBAAAvqC,SAAA,IAAAuhJ,KAAAD,OAAAC,KAAAD,MAEAjgJ,KAAAslE,QAAAp8B,iBAAAC,KAAAD,kBAIAlpC,KAAAolE,QAAAr8B,YAAAI,KAAAvB,OAAAmB,aAAAwO,SAAAyoG,SACAhgJ,KAAAslE,QAAAv8B,YAAAI,KAAAvB,OAAAmB,aAAAwO,SAAAwoG,gBA8GA3uD,WAAA50F,UAAAqN,OAAA88F,OAAA5sD,SAAAv9C,WACA40F,WAAA50F,UAAAsvF,YAAAsF,WAqBAQ,cAAAp1F,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAA8F,cAEAQ,SAAA,WAEA,MAAApyF,MAAA8xF,MAIAuuD,aAAA,WAEA,OAAArgJ,KAAA8rD,SAEA9rD,KAAA8xF,KAAAwuD,WAAAtgJ,KAAA8rD,QACA9rD,KAAA8rD,OAAAw0F,WAAAtgJ,KAAA0rC,QAAAumD,aACAjyF,KAAA8xF,KAAAE,QAAAhyF,KAAA0rC,QAAAumD,aACAjyF,KAAA8rD,OAAA,OAMAy0F,UAAA,WAEA,MAAAvgJ,MAAA8rD,QAIA00F,UAAA,SAAAtxI,OAEA,OAAAlP,KAAA8rD,QAEA9rD,KAAA8xF,KAAAwuD,WAAAtgJ,KAAA8rD,QACA9rD,KAAA8rD,OAAAw0F,WAAAtgJ,KAAA0rC,QAAAumD,cAIAjyF,KAAA8xF,KAAAwuD,WAAAtgJ,KAAA0rC,QAAAumD,aAIAjyF,KAAA8rD,OAAA58C,MACAlP,KAAA8xF,KAAAE,QAAAhyF,KAAA8rD,QACA9rD,KAAA8rD,OAAAkmC,QAAAhyF,KAAA0rC,QAAAumD,cAIAwuD,gBAAA,WAEA,MAAAzgJ,MAAA8xF,KAAAA,KAAA5iF,OAIAwxI,gBAAA,SAAAxxI,OAEAlP,KAAA8xF,KAAAA,KAAA5iF,MAAAA,OAIAooC,kBAAA,WAEA,GAAAvM,UAAA,GAAAjN,SACAmc,WAAA,GAAAvc,YACAoJ,MAAA,GAAAhJ,SAEAmoC,YAAA,GAAAnoC,QAEA,OAAA,UAAAivF,OAEAhzE,SAAAv9C,UAAA86C,kBAAA1wC,KAAA5G,KAAA+sH,MAEA,IAAA56B,UAAAnyF,KAAA0rC,QAAAymD,SACAx6C,GAAA33C,KAAA23C,EAEA33C,MAAA+oC,YAAAgE,UAAAhC,SAAAkP,WAAAnT,OAEAm/B,YAAAp1D,IAAA,EAAA,GAAA,GAAAi5F,gBAAA7vD,YAEAk4C,SAAAwuD,WAEAxuD,SAAAwuD,UAAAC,eAAA71G,SAAAvzB,EAAAxX,KAAA0rC,QAAAm1G,aACA1uD,SAAA2uD,UAAAF,eAAA71G,SAAA9wB,EAAAja,KAAA0rC,QAAAm1G,aACA1uD,SAAA4uD,UAAAH,eAAA71G,SAAAnO,EAAA58B,KAAA0rC,QAAAm1G,aACA1uD,SAAA6uD,SAAAJ,eAAA36E,YAAAzuD,EAAAxX,KAAA0rC,QAAAm1G,aACA1uD,SAAA8uD,SAAAL,eAAA36E,YAAAhsD,EAAAja,KAAA0rC,QAAAm1G,aACA1uD,SAAA+uD,SAAAN,eAAA36E,YAAArpC,EAAA58B,KAAA0rC,QAAAm1G,aACA1uD,SAAAgvD,IAAAP,eAAAjpG,GAAAngC,EAAAxX,KAAA0rC,QAAAm1G,aACA1uD,SAAAivD,IAAAR,eAAAjpG,GAAA19B,EAAAja,KAAA0rC,QAAAm1G,aACA1uD,SAAAkvD,IAAAT,eAAAjpG,GAAA/a,EAAA58B,KAAA0rC,QAAAm1G,eAIA1uD,SAAA2e,YAAA/lE,SAAAvzB,EAAAuzB,SAAA9wB,EAAA8wB,SAAAnO,GACAu1D,SAAAmvD,eAAAr7E,YAAAzuD,EAAAyuD,YAAAhsD,EAAAgsD,YAAArpC,EAAA+a,GAAAngC,EAAAmgC,GAAA19B,EAAA09B,GAAA/a,UAwCAs1D,MAAA11F,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA5sD,SAAAv9C,YAEAsvF,YAAAoG,MAEAmB,UAAA,WAEA,MAAArzF,MAAA8xF,MAIAyvD,cAAA,SAAAC,WAOA,MALAxhJ,MAAAyyF,oBAAA,EACAzyF,KAAA0yF,WAAA,YACA1yF,KAAAyF,OAAA+7I,UACAxhJ,KAAAgyF,UAEAhyF,MAIAyhJ,UAAA,SAAA5B,aAOA,MALA7/I,MAAAo4C,OAAAynG,YACA7/I,KAAA0yF,WAAA,SAEA1yF,KAAAqyF,UAAAryF,KAAA0hJ,OAEA1hJ,MAIA0hJ,KAAA,WAEA,IAAA,IAAA1hJ,KAAAwyF,UAGA,WADAziF,SAAAH,KAAA,yCAKA,KAAA,IAAA5P,KAAAyyF,mBAGA,WADA1iF,SAAAH,KAAA,mDAKA,IAAAnK,QAAAzF,KAAA0rC,QAAAi2G,oBAYA,OAVAl8I,QAAA2yC,OAAAp4C,KAAAo4C,OACA3yC,OAAAoqE,KAAA7vE,KAAA6vE,KACApqE,OAAAm8I,QAAA5hJ,KAAA6hJ,QAAAzkE,KAAAp9E,MACAyF,OAAA8sF,aAAAquD,eAAA5gJ,KAAAuyF,aAAAvyF,KAAAsyF,WACA7sF,OAAA04C,MAAA,EAAAn+C,KAAAsyF,WAEAtyF,KAAAwyF,WAAA,EAEAxyF,KAAAyF,OAAAA,OAEAzF,KAAAgyF,WAIA8vD,MAAA,WAEA,OAAA,IAAA9hJ,KAAAyyF,uBAEA1iF,SAAAH,KAAA,qDAKA5P,KAAAyF,OAAAs8I,OACA/hJ,KAAAsyF,UAAAtyF,KAAA0rC,QAAAm1G,YACA7gJ,KAAAwyF,WAAA,EAEAxyF,OAIA+hJ,KAAA,WAEA,OAAA,IAAA/hJ,KAAAyyF,uBAEA1iF,SAAAH,KAAA,qDAKA5P,KAAAyF,OAAAs8I,OACA/hJ,KAAAsyF,UAAA,EACAtyF,KAAAwyF,WAAA,EAEAxyF,OAIAgyF,QAAA,WAEA,GAAAhyF,KAAA2yF,QAAA/yF,OAAA,EAAA,CAEAI,KAAAyF,OAAAusF,QAAAhyF,KAAA2yF,QAAA,GAEA,KAAA,GAAA7uF,GAAA,EAAA4f,EAAA1jB,KAAA2yF,QAAA/yF,OAAAkE,EAAA4f,EAAA5f,IAEA9D,KAAA2yF,QAAA7uF,EAAA,GAAAkuF,QAAAhyF,KAAA2yF,QAAA7uF,GAIA9D,MAAA2yF,QAAA3yF,KAAA2yF,QAAA/yF,OAAA,GAAAoyF,QAAAhyF,KAAAqzF,iBAIArzF,MAAAyF,OAAAusF,QAAAhyF,KAAAqzF,YAIA,OAAArzF,OAIAsgJ,WAAA,WAEA,GAAAtgJ,KAAA2yF,QAAA/yF,OAAA,EAAA,CAEAI,KAAAyF,OAAA66I,WAAAtgJ,KAAA2yF,QAAA,GAEA,KAAA,GAAA7uF,GAAA,EAAA4f,EAAA1jB,KAAA2yF,QAAA/yF,OAAAkE,EAAA4f,EAAA5f,IAEA9D,KAAA2yF,QAAA7uF,EAAA,GAAAw8I,WAAAtgJ,KAAA2yF,QAAA7uF,GAIA9D,MAAA2yF,QAAA3yF,KAAA2yF,QAAA/yF,OAAA,GAAA0gJ,WAAAtgJ,KAAAqzF,iBAIArzF,MAAAyF,OAAA66I,WAAAtgJ,KAAAqzF,YAIA,OAAArzF,OAIAgiJ,WAAA,WAEA,MAAAhiJ,MAAA2yF,SAIAsvD,WAAA,SAAA/yI,OAgBA,MAdAA,SAAAA,WAEA,IAAAlP,KAAAwyF,WAEAxyF,KAAAsgJ,aACAtgJ,KAAA2yF,QAAAzjF,MACAlP,KAAAgyF,WAIAhyF,KAAA2yF,QAAAzjF,MAIAlP,MAIAugJ,UAAA,WAEA,MAAAvgJ,MAAAgiJ,aAAA,IAIAxB,UAAA,SAAA10F,QAEA,MAAA9rD,MAAAiiJ,WAAAn2F,QAAAA,aAIAo2F,gBAAA,SAAAhzI,OAEA,OAAA,IAAAlP,KAAAyyF,uBAEA1iF,SAAAH,KAAA,qDAKA5P,KAAAuyF,aAAArjF,OAEA,IAAAlP,KAAAwyF,WAEAxyF,KAAAyF,OAAA8sF,aAAAquD,eAAA5gJ,KAAAuyF,aAAAvyF,KAAA0rC,QAAAm1G,aAIA7gJ,OAIAmiJ,gBAAA,WAEA,MAAAniJ,MAAAuyF,cAIAsvD,QAAA,WAEA7hJ,KAAAwyF,WAAA,GAIA4vD,QAAA,WAEA,OAAA,IAAApiJ,KAAAyyF,oBAEA1iF,QAAAH,KAAA,qDACA,GAIA5P,KAAA6vE,MAIAwyE,QAAA,SAAAnzI,OAEA,OAAA,IAAAlP,KAAAyyF,uBAEA1iF,SAAAH,KAAA,qDAKA5P,KAAA6vE,KAAA3gE,OAEA,IAAAlP,KAAAwyF,YAEAxyF,KAAAyF,OAAAoqE,KAAA7vE,KAAA6vE,MAIA7vE,OAIAsiJ,UAAA,WAEA,MAAAtiJ,MAAA8xF,KAAAA,KAAA5iF,OAIAqzI,UAAA,SAAArzI,OAIA,MAFAlP,MAAA8xF,KAAAA,KAAA5iF,MAAAA,MAEAlP,QAmBA4yF,gBAAAp2F,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAzU,MAAA11F,YAEAsvF,YAAA8G,gBAEAS,UAAA,WAEA,MAAArzF,MAAA6yF,QAIA2vD,eAAA,WAEA,MAAAxiJ,MAAA6yF,OAAA4vD,aAIAC,eAAA,SAAAxzI,OAEAlP,KAAA6yF,OAAA4vD,YAAAvzI,OAIAyzI,iBAAA,WAEA,MAAA3iJ,MAAA6yF,OAAA+vD,eAIAC,iBAAA,SAAA3zI,OAEAlP,KAAA6yF,OAAA+vD,cAAA1zI,OAIA4zI,iBAAA,WAEA,MAAA9iJ,MAAA6yF,OAAAkwD,eAIAC,iBAAA,SAAA9zI,OAEAlP,KAAA6yF,OAAAkwD,cAAA7zI,OAIA+zI,eAAA,WAEA,MAAAjjJ,MAAA6yF,OAAAqwD,aAIAC,eAAA,SAAAj0I,OAEAlP,KAAA6yF,OAAAqwD,YAAAh0I,OAIAooC,kBAAA,WAEA,GAAAvM,UAAA,GAAAjN,QAEA,OAAA,UAAAivF,OAEAhzE,SAAAv9C,UAAA86C,kBAAA1wC,KAAA5G,KAAA+sH,OAEAhiF,SAAAoM,sBAAAn3C,KAAA+oC,aAEA/oC,KAAA6yF,OAAAie,YAAA/lE,SAAAvzB,EAAAuzB,SAAA9wB,EAAA8wB,SAAAnO,SAwBA/yB,OAAAm3F,OAAAjO,cAAAv2F,WAEA4mJ,iBAAA,WAIA,MAFApjJ,MAAAkzF,SAAAmwD,qBAAArjJ,KAAAugB,MAEAvgB,KAAAugB,MAIA+iI,oBAAA,WAIA,IAAA,GAFAp0I,OAAA,EAAAqR,KAAAvgB,KAAAojJ,mBAEAt/I,EAAA,EAAAA,EAAAyc,KAAA3gB,OAAAkE,IAEAoL,OAAAqR,KAAAzc,EAIA,OAAAoL,OAAAqR,KAAA3gB,UA8DAiK,OAAAm3F,OAAA1N,cAAA92F,WAGA+mJ,WAAA,SAAAC,UAAArsD,QAKA,GAAA/+C,QAAAp4C,KAAAo4C,OACAg3B,OAAApvE,KAAA+rF,UACA5iE,OAAAq6H,UAAAp0E,OAAAA,OAEAq0E,cAAAzjJ,KAAA8zF,gBAEA,IAAA,IAAA2vD,cAAA,CAIA,IAAA,GAAA3/I,GAAA,EAAAA,IAAAsrE,SAAAtrE,EAEAs0C,OAAAjvB,OAAArlB,GAAAs0C,OAAAt0C,EAIA2/I,eAAAtsD,WAEA,CAIAssD,eAAAtsD,MACA,IAAAusD,KAAAvsD,OAAAssD,aACAzjJ,MAAA6zF,iBAAAz7C,OAAAjvB,OAAA,EAAAu6H,IAAAt0E,QAIApvE,KAAA8zF,iBAAA2vD,eAKA3jJ,MAAA,SAAA0jJ,WAEA,GAAAp0E,QAAApvE,KAAA+rF,UACA3zC,OAAAp4C,KAAAo4C,OACAjvB,OAAAq6H,UAAAp0E,OAAAA,OAEA+nB,OAAAn3F,KAAA8zF,iBAEAP,QAAAvzF,KAAAuzF,OAIA,IAFAvzF,KAAA8zF,iBAAA,EAEAqD,OAAA,EAAA,CAIA,GAAAwsD,qBAAA,EAAAv0E,MAEApvE,MAAA6zF,iBACAz7C,OAAAjvB,OAAAw6H,oBAAA,EAAAxsD,OAAA/nB,QAIA,IAAA,GAAAtrE,GAAAsrE,OAAArsE,EAAAqsE,OAAAA,OAAAtrE,IAAAf,IAAAe,EAEA,GAAAs0C,OAAAt0C,KAAAs0C,OAAAt0C,EAAAsrE,QAAA,CAIAmkB,QAAA5wD,SAAAyV,OAAAjvB,OACA,SASAy6H,kBAAA,WAEA,GAAArwD,SAAAvzF,KAAAuzF,QAEAn7C,OAAAp4C,KAAAo4C,OACAg3B,OAAApvE,KAAA+rF,UAEA43D,oBAAA,EAAAv0E,MAEAmkB,SAAAswD,SAAAzrG,OAAAurG,oBAGA,KAAA,GAAA7/I,GAAAsrE,OAAArsE,EAAA4gJ,oBAAA7/I,IAAAf,IAAAe,EAEAs0C,OAAAt0C,GAAAs0C,OAAAurG,oBAAA7/I,EAAAsrE,OAIApvE,MAAA8zF,iBAAA,GAKAgwD,qBAAA,WAEA,GAAAH,qBAAA,EAAA3jJ,KAAA+rF,SACA/rF,MAAAuzF,QAAA5wD,SAAA3iC,KAAAo4C,OAAAurG,sBAOAhwD,QAAA,SAAAv7C,OAAAqvB,UAAA8kE,UAAAr4G,EAAAk7C,QAEA,GAAAl7C,GAAA,GAEA,IAAA,GAAApwB,GAAA,EAAAA,IAAAsrE,SAAAtrE,EAEAs0C,OAAAqvB,UAAA3jE,GAAAs0C,OAAAm0F,UAAAzoI,IAQA4vF,OAAA,SAAAt7C,OAAAqvB,UAAA8kE,UAAAr4G,GAEAwJ,WAAAspE,UAAA5uD,OAAAqvB,UAAArvB,OAAAqvB,UAAArvB,OAAAm0F,UAAAr4G,IAIA0/D,MAAA,SAAAx7C,OAAAqvB,UAAA8kE,UAAAr4G,EAAAk7C,QAIA,IAAA,GAFAx5D,GAAA,EAAAse,EAEApwB,EAAA,EAAAA,IAAAsrE,SAAAtrE,EAAA,CAEA,GAAA8b,GAAA6nD,UAAA3jE,CAEAs0C,QAAAx4B,GAAAw4B,OAAAx4B,GAAAhK,EAAAwiC,OAAAm0F,UAAAzoI,GAAAowB,MA2BArqB,OAAAm3F,OAAA/M,UAAAz3F,WAEAqnJ,SAAA,SAAAhvI,MAAAsU,QAEAnpB,KAAAo9E,MAEA,IAAA2mE,iBAAA/jJ,KAAAu0F,aAAAQ,gBACAxB,QAAAvzF,KAAAw0F,UAAAuvD,qBAGA52I,KAAAomF,SAAAA,QAAAswD,SAAAhvI,MAAAsU,SAIAwZ,SAAA,SAAA9tB,MAAAsU,QAIA,IAAA,GAFA66H,UAAAhkJ,KAAAw0F,UAEA1wF,EAAA9D,KAAAu0F,aAAAQ,gBACAx9E,EAAAysI,SAAApkJ,OAAAkE,IAAAyT,IAAAzT,EAEAkgJ,SAAAlgJ,GAAA6+B,SAAA9tB,MAAAsU,SAMAi0D,KAAA,WAIA,IAAA,GAFA4mE,UAAAhkJ,KAAAw0F,UAEA1wF,EAAA9D,KAAAu0F,aAAAQ,gBACAx9E,EAAAysI,SAAApkJ,OAAAkE,IAAAyT,IAAAzT,EAEAkgJ,SAAAlgJ,GAAAs5E,QAMA6mE,OAAA,WAIA,IAAA,GAFAD,UAAAhkJ,KAAAw0F,UAEA1wF,EAAA9D,KAAAu0F,aAAAQ,gBACAx9E,EAAAysI,SAAApkJ,OAAAkE,IAAAyT,IAAAzT,EAEAkgJ,SAAAlgJ,GAAAmgJ,YAoBAp6I,OAAAm3F,OAAA3M,iBAEAJ,UAAAA,UAEA0S,OAAA,SAAAhP,KAAAz0D,KAAAkxD,YAEA,MAAAuD,OAAAA,KAAAusD,uBAMA,GAAA7vD,iBAAAJ,UAAA0D,KAAAz0D,KAAAkxD,YAJA,GAAAC,iBAAAsD,KAAAz0D,KAAAkxD,aAiBA+vD,iBAAA,SAAAvmJ,MAEA,MAAAA,MAAAT,QAAA,MAAA,KAAAA,QAAA,UAAA,KAIAm3F,eAAA,WAIA,GAAA8vD,aAAA,qBAGAC,OAAA,cAIAC,SAAA,+BAIAC,WAAA,0BAEAC,QAAA,GAAA5nJ,QACA,IACAwnJ,YAAA3+I,OACA4+I,OAAA5+I,OACA6+I,SAAA7+I,OACA8+I,WAAA9+I,OACA,KAGAg/I,sBAAA,WAAA,YAAA,QAEA,OAAA,UAAA/S,WAEA,GAAAjoH,SAAA+6H,QAAAxgI,KAAA0tH,UAEA,KAAAjoH,QAEA,KAAA,IAAAlZ,OAAA,4CAAAmhI,UAIA,IAAAgT,UAEAh+I,SAAA+iB,QAAA,GACAk7H,WAAAl7H,QAAA,GACAm7H,YAAAn7H,QAAA,GACAmoH,aAAAnoH,QAAA,GACAo7H,cAAAp7H,QAAA,IAGAq7H,QAAAJ,QAAAh+I,UAAAg+I,QAAAh+I,SAAA4wI,YAAA,IAEA,QAAAnqI,KAAA23I,UAAA,IAAAA,QAAA,CAEA,GAAAH,YAAAD,QAAAh+I,SAAA2wI,UAAAyN,QAAA,IAMA,IAAAL,qBAAA/rI,QAAAisI,cAEAD,QAAAh+I,SAAAg+I,QAAAh+I,SAAA2wI,UAAA,EAAAyN,SACAJ,QAAAC,WAAAA,YAMA,GAAA,OAAAD,QAAA9S,cAAA,IAAA8S,QAAA9S,aAAAhyI,OAEA,KAAA,IAAA2Q,OAAA,+DAAAmhI,UAIA,OAAAgT,aAMA9vD,SAAA,SAAA+C,KAAAjxF,UAEA,IAAAA,UAAA,KAAAA,UAAA,SAAAA,UAAA,MAAAA,WAAA,IAAAA,UAAAA,WAAAixF,KAAA/5F,MAAA8I,WAAAixF,KAAAl8D,KAEA,MAAAk8D,KAKA,IAAAA,KAAAjmC,SAAA,CAEA,GAkBA2oC,MAlBA,SAAA3oC,UAEA,IAAA,GAAA5tD,GAAA,EAAAA,EAAA4tD,SAAAC,MAAA/xD,OAAAkE,IAAA,CAEA,GAAAu2F,MAAA3oC,SAAAC,MAAA7tD,EAEA,IAAAu2F,KAAAz8F,OAAA8I,SAEA,MAAA2zF,MAMA,MAAA,OAIA1C,KAAAjmC,SAEA,IAAA2oC,KAEA,MAAAA,MAOA,GAAA1C,KAAAviD,SAAA,CAEA,GAAA2vG,mBAAA,SAAA3vG,UAEA,IAAA,GAAAtxC,GAAA,EAAAA,EAAAsxC,SAAAx1C,OAAAkE,IAAA,CAEA,GAAAkhJ,WAAA5vG,SAAAtxC,EAEA,IAAAkhJ,UAAApnJ,OAAA8I,UAAAs+I,UAAAvpH,OAAA/0B,SAEA,MAAAs+I,UAIA,IAAAngI,QAAAkgI,kBAAAC,UAAA5vG,SAEA,IAAAvwB,OAAA,MAAAA,QAIA,MAAA,OAIAogI,YAAAF,kBAAAptD,KAAAviD,SAEA,IAAA6vG,YAEA,MAAAA,aAMA,MAAA,SAMAp7I,OAAAm3F,OAAA3M,gBAAA73F,WAGA0oJ,sBAAA,aACAC,sBAAA,aAEAC,aACAC,OAAA,EACAC,YAAA,EACAC,aAAA,EACAC,eAAA,GAGAC,YACAC,KAAA,EACAC,YAAA,EACAC,uBAAA,GAGAC,qBAEA,SAAAztG,OAAAjvB,QAEAivB,OAAAjvB,QAAAnpB,KAAA20F,KAAA30F,KAAA4xI,eAIA,SAAAx5F,OAAAjvB,QAIA,IAAA,GAFA1jB,QAAAzF,KAAA8lJ,iBAEAhiJ,EAAA,EAAAyT,EAAA9R,OAAA7F,OAAAkE,IAAAyT,IAAAzT,EAEAs0C,OAAAjvB,UAAA1jB,OAAA3B,IAMA,SAAAs0C,OAAAjvB,QAEAivB,OAAAjvB,QAAAnpB,KAAA8lJ,iBAAA9lJ,KAAA6kJ,gBAIA,SAAAzsG,OAAAjvB,QAEAnpB,KAAA8lJ,iBAAAv6H,QAAA6sB,OAAAjvB,UAMA48H,mCAKA,SAAA3tG,OAAAjvB,QAEAnpB,KAAA20F,KAAA30F,KAAA4xI,cAAAx5F,OAAAjvB,SAIA,SAAAivB,OAAAjvB,QAEAnpB,KAAA20F,KAAA30F,KAAA4xI,cAAAx5F,OAAAjvB,QACAnpB,KAAAgmJ,aAAAn7G,aAAA,GAIA,SAAAuN,OAAAjvB,QAEAnpB,KAAA20F,KAAA30F,KAAA4xI,cAAAx5F,OAAAjvB,QACAnpB,KAAAgmJ,aAAAnrG,wBAAA,KAQA,SAAAzC,OAAAjvB,QAIA,IAAA,GAFA88H,MAAAjmJ,KAAA8lJ,iBAEAhiJ,EAAA,EAAAyT,EAAA0uI,KAAArmJ,OAAAkE,IAAAyT,IAAAzT,EAEAmiJ,KAAAniJ,GAAAs0C,OAAAjvB,WAMA,SAAAivB,OAAAjvB,QAIA,IAAA,GAFA88H,MAAAjmJ,KAAA8lJ,iBAEAhiJ,EAAA,EAAAyT,EAAA0uI,KAAArmJ,OAAAkE,IAAAyT,IAAAzT,EAEAmiJ,KAAAniJ,GAAAs0C,OAAAjvB,SAIAnpB,MAAAgmJ,aAAAn7G,aAAA,GAIA,SAAAuN,OAAAjvB,QAIA,IAAA,GAFA88H,MAAAjmJ,KAAA8lJ,iBAEAhiJ,EAAA,EAAAyT,EAAA0uI,KAAArmJ,OAAAkE,IAAAyT,IAAAzT,EAEAmiJ,KAAAniJ,GAAAs0C,OAAAjvB,SAIAnpB,MAAAgmJ,aAAAnrG,wBAAA,KAQA,SAAAzC,OAAAjvB,QAEAnpB,KAAA8lJ,iBAAA9lJ,KAAA6kJ,eAAAzsG,OAAAjvB,SAIA,SAAAivB,OAAAjvB,QAEAnpB,KAAA8lJ,iBAAA9lJ,KAAA6kJ,eAAAzsG,OAAAjvB,QACAnpB,KAAAgmJ,aAAAn7G,aAAA,GAIA,SAAAuN,OAAAjvB,QAEAnpB,KAAA8lJ,iBAAA9lJ,KAAA6kJ,eAAAzsG,OAAAjvB,QACAnpB,KAAAgmJ,aAAAnrG,wBAAA,KAQA,SAAAzC,OAAAjvB,QAEAnpB,KAAA8lJ,iBAAA9/E,UAAA5tB,OAAAjvB,SAIA,SAAAivB,OAAAjvB,QAEAnpB,KAAA8lJ,iBAAA9/E,UAAA5tB,OAAAjvB,QACAnpB,KAAAgmJ,aAAAn7G,aAAA,GAIA,SAAAuN,OAAAjvB,QAEAnpB,KAAA8lJ,iBAAA9/E,UAAA5tB,OAAAjvB,QACAnpB,KAAAgmJ,aAAAnrG,wBAAA,KAQAgpG,SAAA,SAAAqC,YAAA/8H,QAEAnpB,KAAAo9E,OACAp9E,KAAA6jJ,SAAAqC,YAAA/8H,SAUAwZ,SAAA,SAAAwjH,YAAAh9H,QAEAnpB,KAAAo9E,OACAp9E,KAAA2iC,SAAAwjH,YAAAh9H,SAKAi0D,KAAA,WAEA,GAAA4oE,cAAAhmJ,KAAA20F,KACAP,WAAAp0F,KAAAo0F,WAEAuwD,WAAAvwD,WAAAuwD,WACA/S,aAAAx9C,WAAAw9C,aACAiT,cAAAzwD,WAAAywD,aAgBA,IAdAmB,eAEAA,aAAA3xD,gBAAAO,SACA50F,KAAA00F,SAAAN,WAAA1tF,WAAA1G,KAAA00F,SAEA10F,KAAA20F,KAAAqxD,cAKAhmJ,KAAA6jJ,SAAA7jJ,KAAAklJ,sBACAllJ,KAAA2iC,SAAA3iC,KAAAmlJ,uBAGAa,aAGA,WADAj2I,SAAAiuB,MAAA,2DAAAh+B,KAAAkjC,KAAA,wBAKA,IAAAyhH,WAAA,CAEA,GAAAC,aAAAxwD,WAAAwwD,WAGA,QAAAD,YAEA,IAAA,YAEA,IAAAqB,aAAAn5G,SAGA,WADA98B,SAAAiuB,MAAA,oFAAAh+B,KAKA,KAAAgmJ,aAAAn5G,SAAA6xD,UAGA,WADA3uF,SAAAiuB,MAAA,8GAAAh+B,KAKAgmJ,cAAAA,aAAAn5G,SAAA6xD,SAEA,MAEA,KAAA,QAEA,IAAAsnD,aAAAt0F,SAGA,WADA3hD,SAAAiuB,MAAA,iFAAAh+B,KAQAgmJ,cAAAA,aAAAt0F,SAAAC,KAGA,KAAA,GAAA7tD,GAAA,EAAAA,EAAAkiJ,aAAApmJ,OAAAkE,IAEA,GAAAkiJ,aAAAliJ,GAAAlG,OAAAgnJ,YAAA,CAEAA,YAAA9gJ,CACA,OAMA,KAEA,SAEA,OAAAqJ,KAAA64I,aAAArB,YAGA,WADA50I,SAAAiuB,MAAA,uEAAAh+B,KAKAgmJ,cAAAA,aAAArB,YAKA,OAAAx3I,KAAAy3I,YAAA,CAEA,OAAAz3I,KAAA64I,aAAApB,aAGA,WADA70I,SAAAiuB,MAAA,wFAAAh+B,KAAAgmJ,aAKAA,cAAAA,aAAApB,cAOA,GAAAwB,cAAAJ,aAAApU,aAEA,QAAAzkI,KAAAi5I,aAAA,CAEA,GAAA1/I,UAAA0tF,WAAA1tF,QAIA,YAFAqJ,SAAAiuB,MAAA,+DAAAt3B,SACA,IAAAkrI,aAAA,wBAAAoU,cAMA,GAAAK,YAAArmJ,KAAAylJ,WAAAC,SAEAv4I,KAAA64I,aAAAn7G,aAEAw7G,WAAArmJ,KAAAylJ,WAAAE,YACA3lJ,KAAAgmJ,aAAAA,kBAEA74I,KAAA64I,aAAAnrG,yBAEAwrG,WAAArmJ,KAAAylJ,WAAAG,uBACA5lJ,KAAAgmJ,aAAAA,aAKA,IAAAM,aAAAtmJ,KAAAolJ,YAAAC,MAEA,QAAAl4I,KAAA03I,cAAA,CAIA,GAAA,0BAAAjT,aAAA,CAKA,IAAAoU,aAAA3zG,SAGA,WADAtiC,SAAAiuB,MAAA,sGAAAh+B,KAKA,IAAAgmJ,aAAA3zG,SAAAQ,iBAAA,CAEA,IAAAmzG,aAAA3zG,SAAAS,gBAGA,WADA/iC,SAAAiuB,MAAA,sHAAAh+B,KAKA,KAAA,GAAA8D,GAAA,EAAAA,EAAA9D,KAAA20F,KAAAtiD,SAAAS,gBAAA/H,SAAAnrC,OAAAkE,IAEA,GAAAkiJ,aAAA3zG,SAAAS,gBAAA/H,SAAAjnC,GAAAlG,OAAAinJ,cAAA,CAEAA,cAAA/gJ,CACA,YAOA,CAEA,IAAAkiJ,aAAA3zG,SAAA5C,aAGA,WADA1/B,SAAAiuB,MAAA,mHAAAh+B,KAKA,KAAA,GAAA8D,GAAA,EAAAA,EAAA9D,KAAA20F,KAAAtiD,SAAA5C,aAAA7vC,OAAAkE,IAEA,GAAAkiJ,aAAA3zG,SAAA5C,aAAA3rC,GAAAlG,OAAAinJ,cAAA,CAEAA,cAAA/gJ,CACA,SAUAwiJ,YAAAtmJ,KAAAolJ,YAAAG,aAEAvlJ,KAAA8lJ,iBAAAM,aACApmJ,KAAA6kJ,cAAAA,uBAEA13I,KAAAi5I,aAAApgF,eAAA74D,KAAAi5I,aAAA76H,SAIA+6H,YAAAtmJ,KAAAolJ,YAAAI,eAEAxlJ,KAAA8lJ,iBAAAM,cAEA7pJ,MAAAoN,QAAAy8I,eAEAE,YAAAtmJ,KAAAolJ,YAAAE,YAEAtlJ,KAAA8lJ,iBAAAM,cAIApmJ,KAAA4xI,aAAAA,YAKA5xI,MAAA6jJ,SAAA7jJ,KAAA6lJ,oBAAAS,aACAtmJ,KAAA2iC,SAAA3iC,KAAA+lJ,iCAAAO,aAAAD,aAIApC,OAAA,WAEAjkJ,KAAA20F,KAAA,KAIA30F,KAAA6jJ,SAAA7jJ,KAAAumJ,kBACAvmJ,KAAA2iC,SAAA3iC,KAAAwmJ,qBAOA38I,OAAAm3F,OAAA3M,gBAAA73F,WAGA+pJ,kBAAAlyD,gBAAA73F,UAAAqnJ,SACA2C,kBAAAnyD,gBAAA73F,UAAAmmC,WA0EA94B,OAAAm3F,OAAAnM,qBAAAr4F,WAEA0nJ,wBAAA,EAEA3mJ,IAAA,SAAAu3F,UAWA,IAAA,GATArnB,SAAAztE,KAAA6xC,SACA40G,SAAAh5E,QAAA7tE,OACA8mJ,eAAA1mJ,KAAA+0F,gBACA4xD,cAAA3mJ,KAAAg1F,eACAoqD,MAAAp/I,KAAAi1F,OACA2xD,YAAA5mJ,KAAAk1F,aACA8uD,SAAAhkJ,KAAAw0F,UACAqyD,UAAA7C,SAAApkJ,OAEAkE,EAAA,EAAAyT,EAAAtX,UAAAL,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAkuC,QAAA/xC,UAAA6D,GACA23B,KAAAuW,OAAAvW,KACA1K,MAAA41H,cAAAlrH,MACAqrH,gBAAA35I,EAEA,QAAAA,KAAA4jB,MAAA,CAIAA,MAAA01H,WACAE,cAAAlrH,MAAA1K,MACA08C,QAAAvtE,KAAA8xC,OAIA,KAAA,GAAApyB,GAAA,EAAAtT,EAAAu6I,UAAAjnI,IAAAtT,IAAAsT,EAEAokI,SAAApkI,GAAA1f,KACA,GAAAm0F,iBACAriD,OAAAotG,MAAAx/H,GAAAgnI,YAAAhnI,SAIA,IAAAmR,MAAA21H,eAAA,CAEAI,YAAAr5E,QAAA18C,MAIA,IAAAg2H,oBAAAL,eACAM,iBAAAv5E,QAAAs5E,iBAEAJ,eAAAK,iBAAAvrH,MAAA1K,MACA08C,QAAA18C,OAAAi2H,iBAEAL,cAAAlrH,MAAAsrH,iBACAt5E,QAAAs5E,kBAAA/0G,MAIA,KAAA,GAAApyB,GAAA,EAAAtT,EAAAu6I,UAAAjnI,IAAAtT,IAAAsT,EAAA,CAEA,GAAAqnI,iBAAAjD,SAAApkI,GACAsnI,WAAAD,gBAAAF,kBACAxzD,QAAA0zD,gBAAAl2H,MAEAk2H,iBAAAl2H,OAAAm2H,eAEA/5I,KAAAomF,UAMAA,QAAA,GAAAc,iBACAriD,OAAAotG,MAAAx/H,GAAAgnI,YAAAhnI,KAIAqnI,gBAAAF,kBAAAxzD,aAIA9lB,SAAA18C,SAAA+1H,aAEA/2I,QAAAiuB,MAAA,sJAOAh+B,KAAA+0F,gBAAA2xD,gBAIAntG,OAAA,SAAAu7C,UAQA,IAAA,GANArnB,SAAAztE,KAAA6xC,SACA60G,eAAA1mJ,KAAA+0F,gBACA4xD,cAAA3mJ,KAAAg1F,eACAgvD,SAAAhkJ,KAAAw0F,UACAqyD,UAAA7C,SAAApkJ,OAEAkE,EAAA,EAAAyT,EAAAtX,UAAAL,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAkuC,QAAA/xC,UAAA6D,GACA23B,KAAAuW,OAAAvW,KACA1K,MAAA41H,cAAAlrH,KAEA,QAAAtuB,KAAA4jB,OAAAA,OAAA21H,eAAA,CAIA,GAAAS,iBAAAT,iBACAU,kBAAA35E,QAAA05E,gBAEAR,eAAAS,kBAAA3rH,MAAA1K,MACA08C,QAAA18C,OAAAq2H,kBAEAT,cAAAlrH,MAAA0rH,gBACA15E,QAAA05E,iBAAAn1G,MAIA,KAAA,GAAApyB,GAAA,EAAAtT,EAAAu6I,UAAAjnI,IAAAtT,IAAAsT,EAAA,CAEA,GAAAqnI,iBAAAjD,SAAApkI,GACAynI,YAAAJ,gBAAAE,iBACA5zD,QAAA0zD,gBAAAl2H,MAEAk2H,iBAAAl2H,OAAAs2H,YACAJ,gBAAAE,iBAAA5zD,UAQAvzF,KAAA+0F,gBAAA2xD,gBAKAY,QAAA,SAAAxyD,UASA,IAAA,GAPArnB,SAAAztE,KAAA6xC,SACA40G,SAAAh5E,QAAA7tE,OACA8mJ,eAAA1mJ,KAAA+0F,gBACA4xD,cAAA3mJ,KAAAg1F,eACAgvD,SAAAhkJ,KAAAw0F,UACAqyD,UAAA7C,SAAApkJ,OAEAkE,EAAA,EAAAyT,EAAAtX,UAAAL,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAkuC,QAAA/xC,UAAA6D,GACA23B,KAAAuW,OAAAvW,KACA1K,MAAA41H,cAAAlrH,KAEA,QAAAtuB,KAAA4jB,MAIA,SAFA41H,eAAAlrH,MAEA1K,MAAA21H,eAAA,CAIA,GAAAK,oBAAAL,eACAM,iBAAAv5E,QAAAs5E,kBACA3xI,YAAAqxI,SACAc,WAAA95E,QAAAr4D,UAGAuxI,eAAAK,iBAAAvrH,MAAA1K,MACA08C,QAAA18C,OAAAi2H,iBAGAL,cAAAY,WAAA9rH,MAAAsrH,iBACAt5E,QAAAs5E,kBAAAQ,WACA95E,QAAArZ,KAIA,KAAA,GAAAx0C,GAAA,EAAAtT,EAAAu6I,UAAAjnI,IAAAtT,IAAAsT,EAAA,CAEA,GAAAqnI,iBAAAjD,SAAApkI,GACAsnI,WAAAD,gBAAAF,kBACA1lJ,KAAA4lJ,gBAAA7xI,UAEA6xI,iBAAAl2H,OAAAm2H,WACAD,gBAAAF,kBAAA1lJ,KACA4lJ,gBAAA7yF,WAIA,CAIA,GAAAh/C,aAAAqxI,SACAc,WAAA95E,QAAAr4D,UAEAuxI,eAAAY,WAAA9rH,MAAA1K,MACA08C,QAAA18C,OAAAw2H,WACA95E,QAAArZ,KAIA,KAAA,GAAAx0C,GAAA,EAAAtT,EAAAu6I,UAAAjnI,IAAAtT,IAAAsT,EAAA,CAEA,GAAAqnI,iBAAAjD,SAAApkI,EAEAqnI,iBAAAl2H,OAAAk2H,gBAAA7xI,WACA6xI,gBAAA7yF,QAUAp0D,KAAA+0F,gBAAA2xD,gBAMAjyD,WAAA,SAAAvxD,KAAAkxD,YAKA,GAAAozD,eAAAxnJ,KAAAm1F,uBACApkE,MAAAy2H,cAAAtkH,MACA8gH,SAAAhkJ,KAAAw0F,SAEA,QAAArnF,KAAA4jB,MAAA,MAAAizH,UAAAjzH,MAEA,IAAAquH,OAAAp/I,KAAAi1F,OACA2xD,YAAA5mJ,KAAAk1F,aACAznB,QAAAztE,KAAA6xC,SACA40G,SAAAh5E,QAAA7tE,OACA8mJ,eAAA1mJ,KAAA+0F,gBACAkyD,gBAAA,GAAA1qJ,OAAAkqJ,SAEA11H,OAAAizH,SAAApkJ,OAEA4nJ,cAAAtkH,MAAAnS,MAEAquH,MAAAl/I,KAAAgjC,MACA0jH,YAAA1mJ,KAAAk0F,YACA4vD,SAAA9jJ,KAAA+mJ,gBAEA,KAAA,GAAAnjJ,GAAA4iJ,eAAAnvI,EAAAk2D,QAAA7tE,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAkuC,QAAAy7B,QAAA3pE,EACAmjJ,iBAAAnjJ,GAAA,GAAAuwF,iBAAAriD,OAAA9O,KAAAkxD,YAIA,MAAA6yD,kBAIAQ,aAAA,SAAAvkH,MAKA,GAAAskH,eAAAxnJ,KAAAm1F,uBACApkE,MAAAy2H,cAAAtkH,KAEA,QAAA/1B,KAAA4jB,MAAA,CAEA,GAAAquH,OAAAp/I,KAAAi1F,OACA2xD,YAAA5mJ,KAAAk1F,aACA8uD,SAAAhkJ,KAAAw0F,UACAkzD,kBAAA1D,SAAApkJ,OAAA,EACA+nJ,aAAA3D,SAAA0D,kBAGAF,eAFAtkH,KAAAwkH,oBAEA32H,MAEAizH,SAAAjzH,OAAA42H,aACA3D,SAAA5vF,MAEAwyF,YAAA71H,OAAA61H,YAAAc,mBACAd,YAAAxyF,MAEAgrF,MAAAruH,OAAAquH,MAAAsI,mBACAtI,MAAAhrF,UAoFAvqD,OAAAm3F,OAAAzL,gBAAA/4F,WAIAklJ,KAAA,WAIA,MAFA1hJ,MAAA21F,OAAAiyD,gBAAA5nJ,MAEAA,MAIA+hJ,KAAA,WAIA,MAFA/hJ,MAAA21F,OAAAkyD,kBAAA7nJ,MAEAA,KAAA0qC,SAIAA,MAAA,WASA,MAPA1qC,MAAAs3F,QAAA,EACAt3F,KAAA+1C,SAAA,EAEA/1C,KAAA+sB,KAAA,EACA/sB,KAAA+2F,YAAA,EACA/2F,KAAAg3F,WAAA,KAEAh3F,KAAA8nJ,aAAAC,eAIAC,UAAA,WAEA,MAAAhoJ,MAAA+1C,UAAA/1C,KAAAs3F,QAAA,IAAAt3F,KAAAi3F,WACA,OAAAj3F,KAAAg3F,YAAAh3F,KAAA21F,OAAAsyD,gBAAAjoJ,OAKAkoJ,YAAA,WAEA,MAAAloJ,MAAA21F,OAAAsyD,gBAAAjoJ,OAIAmoJ,QAAA,SAAAp7H,MAIA,MAFA/sB,MAAAg3F,WAAAjqE,KAEA/sB,MAIAqiJ,QAAA,SAAAr9F,KAAAqyC,aAKA,MAHAr3F,MAAA6vE,KAAA7qB,KACAhlD,KAAAq3F,YAAAA,YAEAr3F,MASAooJ,mBAAA,SAAAjxD,QAOA,MALAn3F,MAAAm3F,OAAAA,OAGAn3F,KAAAo3F,iBAAAp3F,KAAA+1C,QAAAohD,OAAA,EAEAn3F,KAAA8nJ,cAKAO,mBAAA,WAEA,MAAAroJ,MAAAo3F,kBAIAkxD,OAAA,SAAAlgI,UAEA,MAAApoB,MAAAuoJ,gBAAAngI,SAAA,EAAA,IAIAogI,QAAA,SAAApgI,UAEA,MAAApoB,MAAAuoJ,gBAAAngI,SAAA,EAAA,IAIAqgI,cAAA,SAAAC,cAAAtgI,SAAAugI,MAKA,GAHAD,cAAAF,QAAApgI,UACApoB,KAAAsoJ,OAAAlgI,UAEAugI,KAAA,CAEA,GAAAC,gBAAA5oJ,KAAA41F,MAAAxtE,SACAygI,gBAAAH,cAAA9yD,MAAAxtE,SAEA0gI,cAAAD,gBAAAD,eACAG,cAAAH,eAAAC,eAEAH,eAAAC,KAAA,EAAAG,cAAA1gI,UACApoB,KAAA2oJ,KAAAI,cAAA,EAAA3gI,UAIA,MAAApoB,OAIAgpJ,YAAA,SAAAC,aAAA7gI,SAAAugI,MAEA,MAAAM,cAAAR,cAAAzoJ,KAAAooB,SAAAugI,OAIAb,WAAA,WAEA,GAAAoB,mBAAAlpJ,KAAA62F,kBASA,OAPA,QAAAqyD,oBAEAlpJ,KAAA62F,mBAAA,KACA72F,KAAA21F,OAAAwzD,4BAAAD,oBAIAlpJ,MASAopJ,sBAAA,SAAAnyD,WAKA,MAHAj3F,MAAAi3F,UAAAA,UACAj3F,KAAAk3F,oBAAAl3F,KAAAs3F,OAAA,EAAAL,UAEAj3F,KAAA+nJ,eAKAsB,sBAAA,WAEA,MAAArpJ,MAAAk3F,qBAIAoyD,YAAA,SAAAlhI,UAIA,MAFApoB,MAAAi3F,UAAAj3F,KAAA41F,MAAAxtE,SAAAA,SAEApoB,KAAA+nJ,eAIAwB,SAAA,SAAA/rJ,QAKA,MAHAwC,MAAA+sB,KAAAvvB,OAAAuvB,KACA/sB,KAAAi3F,UAAAz5F,OAAAy5F,UAEAj3F,KAAA+nJ,eAIAyB,KAAA,SAAAphI,UAEA,MAAApoB,MAAA2oJ,KAAA3oJ,KAAAk3F,oBAAA,EAAA9uE,WAIAugI,KAAA,SAAAc,eAAAC,aAAAthI,UAEA,GAAAotE,OAAAx1F,KAAA21F,OAAA/0F,IAAA40F,MAAAzoE,KACAqpE,YAAAp2F,KAAA42F,sBAEAK,UAAAj3F,KAAAi3F,SAEA,QAAAb,cAEAA,YAAAZ,MAAAm0D,0BACA3pJ,KAAA42F,sBAAAR,YAIA,IAAA5J,OAAA4J,YAAA3K,mBACAnrE,OAAA81E,YAAA1K,YAQA,OANAc,OAAA,GAAA5rF,IACA4rF,MAAA,GAAA5rF,IAAAwnB,SAEA9H,OAAA,GAAAmpI,eAAAxyD,UACA32E,OAAA,GAAAopI,aAAAzyD,UAEAj3F,MAIA+nJ,YAAA,WAEA,GAAA6B,sBAAA5pJ,KAAA42F,qBASA,OAPA,QAAAgzD,uBAEA5pJ,KAAA42F,sBAAA,KACA52F,KAAA21F,OAAAwzD,4BAAAS,uBAIA5pJ,MAMA6pJ,SAAA,WAEA,MAAA7pJ,MAAA21F,QAIAm0D,QAAA,WAEA,MAAA9pJ,MAAA41F,OAIAm0D,QAAA,WAEA,MAAA/pJ,MAAA61F,YAAA71F,KAAA21F,OAAAiC,OAMAoyD,QAAA,SAAAj9H,KAAAk9H,UAAAC,cAAA1G,WAIA,IAAAxjJ,KAAA+1C,QAKA,WADA/1C,MAAAmqJ,cAAAp9H,KAKA,IAAAulE,WAAAtyF,KAAAg3F,UAEA,IAAA,OAAA1E,UAAA,CAIA,GAAA83D,cAAAr9H,KAAAulE,WAAA43D,aACA,IAAAE,YAAA,GAAA,IAAAF,cAEA,MAMAlqJ,MAAAg3F,WAAA,KACAizD,UAAAC,cAAAE,YAMAH,WAAAjqJ,KAAAqqJ,iBAAAt9H,KACA,IAAAu9H,UAAAtqJ,KAAAuqJ,YAAAN,WAKA9yD,OAAAn3F,KAAAmqJ,cAAAp9H,KAEA,IAAAoqE,OAAA,EAKA,IAAA,GAHApB,cAAA/1F,KAAAw2F,cACAg0D,eAAAxqJ,KAAAy2F,kBAEA72E,EAAA,EAAAtT,EAAAypF,aAAAn2F,OAAAggB,IAAAtT,IAAAsT,EAEAm2E,aAAAn2E,GAAA+sH,SAAA2d,UACAE,eAAA5qI,GAAA2jI,WAAAC,UAAArsD,SAQAgzD,cAAA,SAAAp9H,MAEA,GAAAoqE,QAAA,CAEA,IAAAn3F,KAAA+1C,QAAA,CAEAohD,OAAAn3F,KAAAm3F,MACA,IAAAf,aAAAp2F,KAAA62F,kBAEA,IAAA,OAAAT,YAAA,CAEA,GAAAq0D,kBAAAr0D,YAAAu2C,SAAA5/G,MAAA,EAEAoqE,SAAAszD,iBAEA19H,KAAAqpE,YAAA3K,mBAAA,KAEAzrF,KAAA8nJ,aAEA,IAAA2C,mBAGAzqJ,KAAA+1C,SAAA,KAWA,MADA/1C,MAAAo3F,iBAAAD,OACAA,QAIAkzD,iBAAA,SAAAt9H,MAEA,GAAAkqE,WAAA,CAEA,KAAAj3F,KAAAs3F,OAAA,CAEAL,UAAAj3F,KAAAi3F,SAEA,IAAAb,aAAAp2F,KAAA42F,qBAEA,IAAA,OAAAR,YAAA,CAIAa,WAFAb,YAAAu2C,SAAA5/G,MAAA,GAIAA,KAAAqpE,YAAA3K,mBAAA,KAEAzrF,KAAA+nJ,cAEA,IAAA9wD,UAGAj3F,KAAAs3F,QAAA,EAKAt3F,KAAAi3F,UAAAA,YAWA,MADAj3F,MAAAk3F,oBAAAD,UACAA,WAIAszD,YAAA,SAAAN,WAEA,GAAAl9H,MAAA/sB,KAAA+sB,KAAAk9H,SAEA,IAAA,IAAAA,UAAA,MAAAl9H,KAEA,IAAA3E,UAAApoB,KAAA41F,MAAAxtE,SAEAynD,KAAA7vE,KAAA6vE,KACA66E,UAAA1qJ,KAAA+2F,UAEA,IA3urCA,OA2urCAlnB,KAAA,EAEA,IAAA66E,YAGA1qJ,KAAA+2F,WAAA,EACA/2F,KAAA2qJ,aAAA,GAAA,GAAA,GAIAC,aAAA,CAEA,GAAA79H,MAAA3E,SAEA2E,KAAA3E,aAEA,CAAA,KAAA2E,KAAA,GAIA,KAAA69H,YAFA79H,MAAA,EAIA/sB,KAAAu3F,kBAAAv3F,KAAAs3F,QAAA,EACAt3F,KAAA+1C,SAAA,EAEA/1C,KAAA21F,OAAAx3F,eACAi9B,KAAA,WAAA59B,OAAAwC,KACAusB,UAAA09H,UAAA,GAAA,EAAA,SAKA,CAEA,GAAAY,UA3wrCA,OA2wrCAh7E,IAyBA,KAvBA,IAAA66E,YAGAT,WAAA,GAEAS,UAAA,EAEA1qJ,KAAA2qJ,aACA,EAAA,IAAA3qJ,KAAAq3F,YAAAwzD,WAQA7qJ,KAAA2qJ,YACA,IAAA3qJ,KAAAq3F,aAAA,EAAAwzD,WAMA99H,MAAA3E,UAAA2E,KAAA,EAAA,CAGA,GAAA+9H,WAAAl8I,KAAAE,MAAAie,KAAA3E,SACA2E,OAAA3E,SAAA0iI,UAEAJ,WAAA97I,KAAAc,IAAAo7I,UAEA,IAAAC,SAAA/qJ,KAAAq3F,YAAAqzD,SAEA,IAAAK,QAAA,EAGA/qJ,KAAAu3F,kBAAAv3F,KAAAs3F,QAAA,EACAt3F,KAAA+1C,SAAA,EAEAhpB,KAAAk9H,UAAA,EAAA7hI,SAAA,EAEApoB,KAAA21F,OAAAx3F,eACAi9B,KAAA,WAAA59B,OAAAwC,KACAusB,UAAA09H,UAAA,EAAA,GAAA,QAGA,CAGA,GAAA,IAAAc,QAAA,CAGA,GAAAC,SAAAf,UAAA,CACAjqJ,MAAA2qJ,YAAAK,SAAAA,QAAAH,cAIA7qJ,MAAA2qJ,aAAA,GAAA,EAAAE,SAIA7qJ,MAAA+2F,WAAA2zD,UAEA1qJ,KAAA21F,OAAAx3F,eACAi9B,KAAA,OAAA59B,OAAAwC,KAAA8qJ,UAAAA,aAOA,GAAAD,UAAA,IAAA,EAAAH,WAIA,MADA1qJ,MAAA+sB,KAAAA,KACA3E,SAAA2E,KAOA,MADA/sB,MAAA+sB,KAAAA,KACAA,MAIA49H,YAAA,SAAAK,QAAAC,MAAAJ,UAEA,GAAAv0D,UAAAt2F,KAAAu2F,oBAEAs0D,WAEAv0D,SAAAL,YAp2rCA,KAq2rCAK,SAAAH,UAr2rCA,OA62rCAG,SAAAL,YAFA+0D,QAEAhrJ,KAAAw3F,iBA72rCA,KA82rCAtB,oBA72rCA,KAu3rCAI,SAAAH,UAFA80D,MAEAjrJ,KAAAy3F,eAx3rCA,KAy3rCAvB,oBAx3rCA,OAo4rCAqyD,gBAAA,SAAAngI,SAAA8iI,UAAAC,YAEA,GAAA31D,OAAAx1F,KAAA21F,OAAA/0F,IAAA40F,MAAAzoE,KACAqpE,YAAAp2F,KAAA62F,kBAEA,QAAAT,cAEAA,YAAAZ,MAAAm0D,0BACA3pJ,KAAA62F,mBAAAT,YAIA,IAAA5J,OAAA4J,YAAA3K,mBACAnrE,OAAA81E,YAAA1K,YAKA,OAHAc,OAAA,GAAA5rF,IAAA0f,OAAA,GAAA4qI,UACA1+D,MAAA,GAAA5rF,IAAAwnB,SAAA9H,OAAA,GAAA6qI,WAEAnrJ,QA4BA6J,OAAAm3F,OAAAtJ,eAAAl7F,UAAAm+B,gBAAAn+B,WAEA4uJ,YAAA,SAAA5tJ,OAAA6tJ;6CAEA,GAAA1zD,MAAAn6F,OAAAq4F,YAAA71F,KAAA43F,MACAjK,OAAAnwF,OAAAo4F,MAAAjI,OACAmI,QAAAnI,OAAA/tF,OACAokJ,SAAAxmJ,OAAAi5F,kBACAV,aAAAv4F,OAAAg5F,cACA80D,SAAA3zD,KAAAl8D,KACA8vH,eAAAvrJ,KAAAwrJ,uBACAC,eAAAF,eAAAD,cAEAn+I,KAAAs+I,iBAEAA,kBACAF,eAAAD,UAAAG,eAIA,KAAA,GAAA3nJ,GAAA,EAAAA,IAAAgyF,UAAAhyF,EAAA,CAEA,GAAAwsI,OAAA3iD,OAAA7pF,GACA4tI,UAAApB,MAAA1yI,KACA21F,QAAAk4D,eAAA/Z,UAEA,QAAAvkI,KAAAomF,QAEAywD,SAAAlgJ,GAAAyvF,YAEA,CAIA,OAAApmF,MAFAomF,QAAAywD,SAAAlgJ,IAEA,CAIA,OAAAyvF,QAAAmD,gBAEAnD,QAAAS,eACAh0F,KAAA0rJ,oBAAAn4D,QAAA+3D,SAAA5Z,WAIA,UAIA,GAAAxuG,MAAAmoH,iBAAAA,gBACA50D,kBAAA3yF,GAAAyvF,QAAAa,UAEAb,SAAA,GAAAD,eACAe,gBAAAsS,OAAAhP,KAAA+5C,UAAAxuG,MACAotG,MAAAlB,cAAAkB,MAAAvB,kBAEAx7C,QAAAS,eACAh0F,KAAA0rJ,oBAAAn4D,QAAA+3D,SAAA5Z,WAEAsS,SAAAlgJ,GAAAyvF,QAIAwC,aAAAjyF,GAAA8nF,aAAA2H,QAAAn7C,SAMAwvG,gBAAA,SAAApqJ,QAEA,IAAAwC,KAAAioJ,gBAAAzqJ,QAAA,CAEA,GAAA,OAAAA,OAAAk5F,YAAA,CAKA,GAAA40D,WAAA9tJ,OAAAq4F,YAAA71F,KAAA43F,OAAAn8D,KACAkwH,SAAAnuJ,OAAAo4F,MAAAn6D,KACAmwH,eAAA5rJ,KAAA6rJ,eAAAF,SAEA3rJ,MAAAorJ,YAAA5tJ,OACAouJ,gBAAAA,eAAAE,aAAA,IAEA9rJ,KAAA+rJ,mBAAAvuJ,OAAAmuJ,SAAAL,UAOA,IAAA,GAHAtH,UAAAxmJ,OAAAi5F,kBAGA3yF,EAAA,EAAAyT,EAAAysI,SAAApkJ,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAyvF,SAAAywD,SAAAlgJ,EAEA,IAAAyvF,QAAAQ,aAEA/zF,KAAAgsJ,aAAAz4D,SACAA,QAAAqwD,qBAMA5jJ,KAAAisJ,YAAAzuJ,UAMAqqJ,kBAAA,SAAArqJ,QAEA,GAAAwC,KAAAioJ,gBAAAzqJ,QAAA,CAKA,IAAA,GAHAwmJ,UAAAxmJ,OAAAi5F,kBAGA3yF,EAAA,EAAAyT,EAAAysI,SAAApkJ,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAyvF,SAAAywD,SAAAlgJ,EAEA,MAAAyvF,QAAAQ,WAEAR,QAAAuwD,uBACA9jJ,KAAAksJ,iBAAA34D,UAMAvzF,KAAAmsJ,gBAAA3uJ,UAQAq6F,mBAAA,WAEA73F,KAAAosJ,YACApsJ,KAAAqsJ,gBAAA,EAEArsJ,KAAA6rJ,kBAQA7rJ,KAAAw0F,aACAx0F,KAAAssJ,iBAAA,EAEAtsJ,KAAAwrJ,0BAGAxrJ,KAAAusJ,wBACAvsJ,KAAAwsJ,4BAAA,CAEA,IAAA74G,OAAA3zC,IAEAA,MAAAo1F,OAEAq3D,SACA94H,YAAA,MAAAggB,OAAAy4G,SAAAxsJ,QACAy1F,YAAA,MAAA1hD,OAAA04G,kBAEArI,UACArwH,YAAA,MAAAggB,OAAA6gD,UAAA50F,QACAy1F,YAAA,MAAA1hD,OAAA24G,mBAEAI,qBACA/4H,YAAA,MAAAggB,OAAA44G,qBAAA3sJ,QACAy1F,YAAA,MAAA1hD,OAAA64G,gCASAvE,gBAAA,SAAAzqJ,QAEA,GAAAuzB,OAAAvzB,OAAAk5F,WACA,OAAA,QAAA3lE,OAAAA,MAAA/wB,KAAAqsJ,iBAIAN,mBAAA,SAAAvuJ,OAAAmuJ,SAAAL,UAEA,GAAAmB,SAAAzsJ,KAAAosJ,SACAO,cAAA3sJ,KAAA6rJ,eACAD,eAAAe,cAAAhB,SAEA,QAAAx+I,KAAAy+I,eAEAA,gBAEAE,cAAAtuJ,QACAovJ,iBAIApvJ,OAAAm5F,kBAAA,EAEAg2D,cAAAhB,UAAAC,mBAEA,CAEA,GAAAE,cAAAF,eAAAE,YAEAtuJ,QAAAm5F,kBAAAm1D,aAAAlsJ,OACAksJ,aAAA5rJ,KAAA1C,QAIAA,OAAAk5F,YAAA+1D,QAAA7sJ,OACA6sJ,QAAAvsJ,KAAA1C,QAEAouJ,eAAAgB,aAAAtB,UAAA9tJ,QAIAqvJ,sBAAA,SAAArvJ,QAEA,GAAAivJ,SAAAzsJ,KAAAosJ,SACAU,mBAAAL,QAAAA,QAAA7sJ,OAAA,GACAmtJ,WAAAvvJ,OAAAk5F,WAEAo2D,oBAAAp2D,YAAAq2D,WACAN,QAAAM,YAAAD,mBACAL,QAAAr4F,MAEA52D,OAAAk5F,YAAA,IAGA,IAAAi1D,UAAAnuJ,OAAAo4F,MAAAn6D,KACAkxH,cAAA3sJ,KAAA6rJ,eACAD,eAAAe,cAAAhB,UACAqB,oBAAApB,eAAAE,aAEAmB,gBACAD,oBAAAA,oBAAAptJ,OAAA,GAEAstJ,iBAAA1vJ,OAAAm5F,iBAEAs2D,iBAAAt2D,kBAAAu2D,iBACAF,oBAAAE,kBAAAD,gBACAD,oBAAA54F,MAEA52D,OAAAm5F,kBAAA,WAGAi1D,gBAAAgB,cACApvJ,OAAAq4F,YAAA71F,KAAA43F,OAAAn8D,MAIA,IAAAuxH,oBAAAptJ,cAEA+sJ,eAAAhB,UAIA3rJ,KAAAmtJ,iCAAA3vJ,SAIA2vJ,iCAAA,SAAA3vJ,QAGA,IAAA,GADAwmJ,UAAAxmJ,OAAAi5F,kBACA3yF,EAAA,EAAAyT,EAAAysI,SAAApkJ,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAyvF,SAAAywD,SAAAlgJ,EAEA,MAAAyvF,QAAAS,gBAEAh0F,KAAAotJ,uBAAA75D,WAQA04D,YAAA,SAAAzuJ,QAQA,GAAAivJ,SAAAzsJ,KAAAosJ,SACAiB,UAAA7vJ,OAAAk5F,YAEA42D,gBAAAttJ,KAAAqsJ,kBAEAkB,oBAAAd,QAAAa,gBAEA9vJ,QAAAk5F,YAAA42D,gBACAb,QAAAa,iBAAA9vJ,OAEA+vJ,oBAAA72D,YAAA22D,UACAZ,QAAAY,WAAAE,qBAIApB,gBAAA,SAAA3uJ,QAQA,GAAAivJ,SAAAzsJ,KAAAosJ,SACAiB,UAAA7vJ,OAAAk5F,YAEA82D,qBAAAxtJ,KAAAqsJ,gBAEAoB,iBAAAhB,QAAAe,mBAEAhwJ,QAAAk5F,YAAA82D,mBACAf,QAAAe,oBAAAhwJ,OAEAiwJ,iBAAA/2D,YAAA22D,UACAZ,QAAAY,WAAAI,kBAMA/B,oBAAA,SAAAn4D,QAAA+3D,SAAA5Z,WAEA,GAAA6Z,gBAAAvrJ,KAAAwrJ,uBACAkC,cAAAnC,eAAAD,UAEAtH,SAAAhkJ,KAAAw0F,cAEArnF,KAAAugJ,gBAEAA,iBACAnC,eAAAD,UAAAoC,eAIAA,cAAAhc,WAAAn+C,QAEAA,QAAAmD,YAAAstD,SAAApkJ,OACAokJ,SAAA9jJ,KAAAqzF,UAIA65D,uBAAA,SAAA75D,SAEA,GAAAywD,UAAAhkJ,KAAAw0F,UACAm5D,YAAAp6D,QAAAA,QACA+3D,SAAAqC,YAAAj5D,SAAAj5D,KACAi2G,UAAAic,YAAAzqH,KACAqoH,eAAAvrJ,KAAAwrJ,uBACAkC,cAAAnC,eAAAD,UAEAsC,oBAAA5J,SAAAA,SAAApkJ,OAAA,GACAmtJ,WAAAx5D,QAAAmD,WAEAk3D,qBAAAl3D,YAAAq2D,WACA/I,SAAA+I,YAAAa,oBACA5J,SAAA5vF,YAEAs5F,eAAAhc,UAEAmc,kBAAA,CAEA,IAAA,GAAAxmJ,KAAAqmJ,eAAA,KAAAG,wBAEAtC,gBAAAD,YAMAU,aAAA,SAAAz4D,SAEA,GAAAywD,UAAAhkJ,KAAAw0F,UACA64D,UAAA95D,QAAAmD,YAEA42D,gBAAAttJ,KAAAssJ,mBAEAwB,qBAAA9J,SAAAsJ,gBAEA/5D,SAAAmD,YAAA42D,gBACAtJ,SAAAsJ,iBAAA/5D,QAEAu6D,qBAAAp3D,YAAA22D,UACArJ,SAAAqJ,WAAAS,sBAIA5B,iBAAA,SAAA34D,SAEA,GAAAywD,UAAAhkJ,KAAAw0F,UACA64D,UAAA95D,QAAAmD,YAEA82D,qBAAAxtJ,KAAAssJ,iBAEAyB,kBAAA/J,SAAAwJ,mBAEAj6D,SAAAmD,YAAA82D,mBACAxJ,SAAAwJ,oBAAAj6D,QAEAw6D,kBAAAr3D,YAAA22D,UACArJ,SAAAqJ,WAAAU,mBAOApE,wBAAA,WAEA,GAAA5zD,cAAA/1F,KAAAusJ,qBACAe,gBAAAttJ,KAAAwsJ,8BACAp2D,YAAAL,aAAAu3D,gBAaA,YAXAngJ,KAAAipF,cAEAA,YAAA,GAAA/J,mBACA,GAAAvtD,cAAA,GAAA,GAAAA,cAAA,GACA,EAAA9+B,KAAAguJ,kCAEA53D,YAAA63D,aAAAX,gBACAv3D,aAAAu3D,iBAAAl3D,aAIAA,aAIA+yD,4BAAA,SAAA/yD,aAEA,GAAAL,cAAA/1F,KAAAusJ,qBACAc,UAAAj3D,YAAA63D,aAEAT,qBAAAxtJ,KAAAwsJ,4BAEA0B,sBAAAn4D,aAAAy3D,mBAEAp3D,aAAA63D,aAAAT,mBACAz3D,aAAAy3D,oBAAAp3D,YAEA83D,sBAAAD,aAAAZ,UACAt3D,aAAAs3D,WAAAa,uBAIAF,iCAAA,GAAAlvH,cAAA,GAKAqvH,WAAA,SAAA14D,KAAA24D,cAEA,GAAAz2D,MAAAy2D,cAAApuJ,KAAA43F,MACA0zD,SAAA3zD,KAAAl8D,KAEA4yH,WAAA,gBAAA54D,MACA/H,cAAAqjD,WAAAp5C,KAAAlC,MAAAA,KAEAk2D,SAAA,OAAA0C,WAAAA,WAAA5yH,KAAAg6D,KAEAm2D,eAAA5rJ,KAAA6rJ,eAAAF,UACAN,gBAAA,IAEA,QAAAl+I,KAAAy+I,eAAA,CAEA,GAAA0C,gBACA1C,eAAAgB,aAAAtB,SAEA,QAAAn+I,KAAAmhJ,eAEA,MAAAA,eAMAjD,iBAAAO,eAAAE,aAAA,GAGA,OAAAuC,aACAA,WAAAhD,gBAAAz1D,OAKA,GAAA,OAAAy4D,WAAA,MAAA,KAGA,IAAAE,WAAA,GAAAh5D,iBAAAv1F,KAAAquJ,WAAAD,aAOA,OALApuJ,MAAAorJ,YAAAmD,UAAAlD,iBAGArrJ,KAAA+rJ,mBAAAwC,UAAA5C,SAAAL,UAEAiD,WAKAD,eAAA,SAAA74D,KAAA24D,cAEA,GAAAz2D,MAAAy2D,cAAApuJ,KAAA43F,MACA0zD,SAAA3zD,KAAAl8D,KAEA4yH,WAAA,gBAAA54D,MACA/H,cAAAqjD,WAAAp5C,KAAAlC,MAAAA,KAEAk2D,SAAA0C,WAAAA,WAAA5yH,KAAAg6D,KAEAm2D,eAAA5rJ,KAAA6rJ,eAAAF,SAEA,YAAAx+I,KAAAy+I,eAEAA,eAAAgB,aAAAtB,WAAA,KAIA,MAKAkD,cAAA,WAEA,GAAA/B,SAAAzsJ,KAAAosJ,SACAqC,SAAAzuJ,KAAAqsJ,gBACArI,SAAAhkJ,KAAAw0F,UACAqyD,UAAA7mJ,KAAAssJ,gBAEAtsJ,MAAAqsJ,gBAAA,EACArsJ,KAAAssJ,iBAAA,CAEA,KAAA,GAAAxoJ,GAAA,EAAAA,IAAA2qJ,WAAA3qJ,EAEA2oJ,QAAA3oJ,GAAA4mC,OAIA,KAAA,GAAA5mC,GAAA,EAAAA,IAAA+iJ,YAAA/iJ,EAEAkgJ,SAAAlgJ,GAAAiwF,SAAA,CAIA,OAAA/zF,OAKA20C,OAAA,SAAAs1G,WAEAA,WAAAjqJ,KAAAi3F,SAYA,KAAA,GAVAw1D,SAAAzsJ,KAAAosJ,SACAqC,SAAAzuJ,KAAAqsJ,gBAEAt/H,KAAA/sB,KAAA+sB,MAAAk9H,UACAC,cAAAt7I,KAAA0a,KAAA2gI,WAEAzG,UAAAxjJ,KAAA83F,YAAA,EAIAh0F,EAAA,EAAAA,IAAA2qJ,WAAA3qJ,EAAA,CAEA2oJ,QAAA3oJ,GAEAkmJ,QAAAj9H,KAAAk9H,UAAAC,cAAA1G,WASA,IAAA,GAHAQ,UAAAhkJ,KAAAw0F,UACAqyD,UAAA7mJ,KAAAssJ,iBAEAxoJ,EAAA,EAAAA,IAAA+iJ,YAAA/iJ,EAEAkgJ,SAAAlgJ,GAAAhE,MAAA0jJ,UAIA,OAAAxjJ,OAKA+pJ,QAAA,WAEA,MAAA/pJ,MAAA43F,OAKA82D,YAAA,SAAAj5D,MAEA,GAAAg3D,SAAAzsJ,KAAAosJ,SACAT,SAAAl2D,KAAAh6D,KACAkxH,cAAA3sJ,KAAA6rJ,eACAD,eAAAe,cAAAhB,SAEA,QAAAx+I,KAAAy+I,eAAA,CAQA,IAAA,GAFA+C,iBAAA/C,eAAAE,aAEAhoJ,EAAA,EAAAyT,EAAAo3I,gBAAA/uJ,OAAAkE,IAAAyT,IAAAzT,EAAA,CAEA,GAAAtG,QAAAmxJ,gBAAA7qJ,EAEA9D,MAAA6nJ,kBAAArqJ,OAEA,IAAAuvJ,YAAAvvJ,OAAAk5F,YACAo2D,mBAAAL,QAAAA,QAAA7sJ,OAAA,EAEApC,QAAAk5F,YAAA,KACAl5F,OAAAm5F,kBAAA,KAEAm2D,mBAAAp2D,YAAAq2D,WACAN,QAAAM,YAAAD,mBACAL,QAAAr4F,MAEAp0D,KAAAmtJ,iCAAA3vJ,cAIAmvJ,eAAAhB,YAOAiD,YAAA,SAAAj3D,MAEA,GAAA2zD,UAAA3zD,KAAAl8D,KACAkxH,cAAA3sJ,KAAA6rJ,cAEA,KAAA,GAAAF,YAAAgB,eAAA,CAEA,GAAAC,cAAAD,cAAAhB,UAAAiB,aACApvJ,OAAAovJ,aAAAtB,cAEAn+I,KAAA3P,SAEAwC,KAAA6nJ,kBAAArqJ,QACAwC,KAAA6sJ,sBAAArvJ,SAMA,GAAA+tJ,gBAAAvrJ,KAAAwrJ,uBACAkC,cAAAnC,eAAAD,SAEA,QAAAn+I,KAAAugJ,cAEA,IAAA,GAAAhc,aAAAgc,eAAA,CAEA,GAAAn6D,SAAAm6D,cAAAhc,UACAn+C,SAAAuwD,uBACA9jJ,KAAAotJ,uBAAA75D,WASAs7D,cAAA,SAAAp5D,KAAA24D,cAEA,GAAA5wJ,QAAAwC,KAAAsuJ,eAAA74D,KAAA24D,aAEA,QAAA5wJ,SAEAwC,KAAA6nJ,kBAAArqJ,QACAwC,KAAA6sJ,sBAAArvJ,YAyBAu6F,QAAAv7F,UAAAutB,MAAA,WAEA,MAAA,IAAAguE,aAAA5qF,KAAAnN,KAAAkP,MAAA6a,MAAA/pB,KAAAkP,MAAAlP,KAAAkP,MAAA6a,UAiBAiuE,wBAAAx7F,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA1oD,eAAAzhD,YAEAsvF,YAAAkM,wBAEAjpB,2BAAA,EAEAlvB,SAAA,SAAA1B,MAAAhF,MAAAnE,eAEAh1C,KAAA40C,OAAA10C,MAEAi+C,MAAAA,MACAhF,MAAAA,MACAnE,cAAAA,iBAMA7L,KAAA,SAAA1jC,QAEA,GAAAsrB,OAAAtrB,OAAAsrB,KAEA,QAAAA,OAEA/wB,KAAA+/C,SAAAhvB,MAAAhH,QAIA,IAAApiB,YAAAlC,OAAAkC,UAEA,KAAA,GAAA/J,QAAA+J,YAAA,CAEA,GAAAowC,WAAApwC,WAAA/J,KACAoC,MAAAggD,aAAApiD,KAAAm6C,UAAAhuB,SAMA,IAAA,GAFA6qB,QAAAnvC,OAAAmvC,OAEA9wC,EAAA,EAAA4f,EAAAkxB,OAAAh1C,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAAgxC,OAAAF,OAAA9wC,EACA9D,MAAA6/C,SAAA/K,MAAAqJ,MAAArJ,MAAAqE,MAAArE,MAAAE,eAIA,MAAAh1C,SAsBA6J,OAAA2wC,iBAAAy9C,2BAAAz7F,WAEA28C,OAEAniC,IAAA,WAEA,MAAAhX,MAAAugB,KAAA44B,QAMAtkC,OAEAmC,IAAA,WAEA,MAAAhX,MAAAugB,KAAA1L,UAQAhL,OAAAm3F,OAAA/I,2BAAAz7F,WAEA88C,8BAAA,EAEA8pD,KAAA,SAAAryE,MAAAvZ,GAIA,MAFAxX,MAAAugB,KAAA1L,MAAAkc,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,QAAA3R,EAEAxX,MAIAqjG,KAAA,SAAAtyE,MAAA9W,GAIA,MAFAja,MAAAugB,KAAA1L,MAAAkc,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,OAAA,GAAAlP,EAEAja,MAIAqlG,KAAA,SAAAt0E,MAAA6L,GAIA,MAFA58B,MAAAugB,KAAA1L,MAAAkc,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,OAAA,GAAAyT,EAEA58B,MAIAslG,KAAA,SAAAv0E,MAAAhO,GAIA,MAFA/iB,MAAAugB,KAAA1L,MAAAkc,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,OAAA,GAAApG,EAEA/iB,MAIA0+E,KAAA,SAAA3tD,OAEA,MAAA/wB,MAAAugB,KAAA1L,MAAAkc,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,SAIAu7E,KAAA,SAAA3zE,OAEA,MAAA/wB,MAAAugB,KAAA1L,MAAAkc,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,OAAA,IAIAs9E,KAAA,SAAA11E,OAEA,MAAA/wB,MAAAugB,KAAA1L,MAAAkc,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,OAAA,IAIAu9E,KAAA,SAAA31E,OAEA,MAAA/wB,MAAAugB,KAAA1L,MAAAkc,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,OAAA,IAIAoqG,MAAA,SAAAxiG,MAAAvZ,EAAAyC,GAOA,MALA8W,OAAAA,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,OAEAnpB,KAAAugB,KAAA1L,MAAAkc,MAAA,GAAAvZ,EACAxX,KAAAugB,KAAA1L,MAAAkc,MAAA,GAAA9W,EAEAja,MAIA2wG,OAAA,SAAA5/E,MAAAvZ,EAAAyC,EAAA2iB,GAQA,MANA7L,OAAAA,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,OAEAnpB,KAAAugB,KAAA1L,MAAAkc,MAAA,GAAAvZ,EACAxX,KAAAugB,KAAA1L,MAAAkc,MAAA,GAAA9W,EACAja,KAAAugB,KAAA1L,MAAAkc,MAAA,GAAA6L,EAEA58B,MAIAwzH,QAAA,SAAAziG,MAAAvZ,EAAAyC,EAAA2iB,EAAA7Z,GASA,MAPAgO,OAAAA,MAAA/wB,KAAAugB,KAAA6uD,OAAApvE,KAAAmpB,OAEAnpB,KAAAugB,KAAA1L,MAAAkc,MAAA,GAAAvZ,EACAxX,KAAAugB,KAAA1L,MAAAkc,MAAA,GAAA9W,EACAja,KAAAugB,KAAA1L,MAAAkc,MAAA,GAAA6L,EACA58B,KAAAugB,KAAA1L,MAAAkc,MAAA,GAAAhO,EAEA/iB,QA2BA6J,OAAA0xB,eAAA48D,kBAAA37F,UAAA,eAEAqU,IAAA,SAAA3B,QAEA,IAAAA,OAAAlP,KAAAi6B,aAMApwB,OAAAm3F,OAAA7I,kBAAA37F,WAEAsyJ,qBAAA,EAEAh8B,SAAA,SAAAj+G,OAEA,GAAAtY,MAAAoN,QAAAkL,OAEA,KAAA,IAAAmoC,WAAA,wDAIAh9C,MAAAm5C,UAAAhsC,KAAA0H,MAAAA,MAAAjV,OAAAI,KAAAovE,OAAA,EACApvE,KAAA6U,MAAAA,OAIAuqF,WAAA,SAAAlwF,OAIA,MAFAlP,MAAAk4C,QAAAhpC,MAEAlP,MAIAmpC,KAAA,SAAA1jC,QAOA,MALAzF,MAAA6U,MAAA,GAAApP,QAAAoP,MAAAi3E,YAAArmF,OAAAoP,OACA7U,KAAAm5C,MAAA1zC,OAAA0zC,MACAn5C,KAAAovE,OAAA3pE,OAAA2pE,OACApvE,KAAAk4C,QAAAzyC,OAAAyyC,QAEAl4C,MAIA+yH,OAAA,SAAAv0C,OAAAzmC,UAAA0mC,QAEAD,QAAAx+E,KAAAovE,OACAqP,QAAA1mC,UAAAq3B,MAEA,KAAA,GAAAtrE,GAAA,EAAA4f,EAAA1jB,KAAAovE,OAAAtrE,EAAA4f,EAAA5f,IAEA9D,KAAA6U,MAAA2pE,OAAA16E,GAAAi0C,UAAAljC,MAAA4pE,OAAA36E,EAIA,OAAA9D,OAIA6Q,IAAA,SAAA3B,MAAAia,QAMA,WAJAhc,KAAAgc,SAAAA,OAAA,GAEAnpB,KAAA6U,MAAAhE,IAAA3B,MAAAia,QAEAnpB,MAIA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAyzH,SAAA,SAAAl/G,UAIA,MAFAvU,MAAAq4C,iBAAA9jC,SAEAvU,QAkBAo4F,2BAAA57F,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAAxO,kBAAA37F,YAEAsvF,YAAAsM,2BAEA/oB,8BAAA,EAEAlmC,KAAA,SAAA1jC,QAMA,MAJA0yF,mBAAA37F,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA0+D,iBAAAj5D,OAAAi5D,iBAEA1+D,QAkBAq4F,yBAAA77F,UAAAqN,OAAAm3F,OAAAn3F,OAAA88F,OAAA9pD,gBAAArgD,YAEAsvF,YAAAuM,yBAEA/oB,4BAAA,EAEAnmC,KAAA,SAAA1jC,QAMA,MAJAo3C,iBAAArgD,UAAA2sC,KAAAviC,KAAA5G,KAAAyF,QAEAzF,KAAA0+D,iBAAAj5D,OAAAi5D,iBAEA1+D,QAiEA6J,OAAAm3F,OAAA1I,UAAA97F,WAEA6/H,cAAA,EAEAxrH,IAAA,SAAAwwC,OAAA90B,WAIAvsB,KAAAu4F,IAAA1nF,IAAAwwC,OAAA90B,YAIAwiI,cAAA,SAAAC,OAAApnH,QAEAA,QAAAA,OAAAomF,qBAEAhuH,KAAAu4F,IAAAl3C,OAAAlK,sBAAAvP,OAAAmB,aACA/oC,KAAAu4F,IAAAhsE,UAAA1b,IAAAm+I,OAAAx3I,EAAAw3I,OAAA/0I,EAAA,IAAAymF,UAAA94D,QAAAqgB,IAAAjoD,KAAAu4F,IAAAl3C,QAAAoI,aAEA7hB,QAAAA,OAAAylF,sBAEArtH,KAAAu4F,IAAAl3C,OAAAxwC,IAAAm+I,OAAAx3I,EAAAw3I,OAAA/0I,GAAA2tB,OAAA4E,KAAA5E,OAAA6E,MAAA7E,OAAA4E,KAAA5E,OAAA6E,MAAAi0D,UAAA94D,QACA5nC,KAAAu4F,IAAAhsE,UAAA1b,IAAA,EAAA,GAAA,GAAAq3C,mBAAAtgB,OAAAmB,cAIAh5B,QAAAiuB,MAAA,8CAMA26D,gBAAA,SAAA3mD,OAAA8mD,WAEA,GAAAD,cAMA,OAJAF,iBAAA3mD,OAAAhyC,KAAA64F,WAAAC,WAEAD,WAAAllF,KAAA+kF,SAEAG,YAIAo2D,iBAAA,SAAAxhF,QAAAqrB,WAEA,GAAAD,cAEA,KAAA,IAAAt8F,MAAAoN,QAAA8jE,SAGA,MADA19D,SAAAH,KAAA,8DACAipF,UAIA,KAAA,GAAA/0F,GAAA,EAAA4f,EAAA+pD,QAAA7tE,OAAAkE,EAAA4f,EAAA5f,IAEA60F,gBAAAlrB,QAAA3pE,GAAA9D,KAAA64F,WAAAC,UAMA,OAFAD,YAAAllF,KAAA+kF,SAEAG,cAsBAhvF,OAAAm3F,OAAAhI,MAAAx8F,WAEA2hD,MAAA,WAEAn+C,KAAAsyF,WAAA,mBAAA48D,aAAAtzJ,KAAAszJ,aAAAtuJ,MAEAZ,KAAAk5F,QAAAl5F,KAAAsyF,UACAtyF,KAAAm5F,YAAA,EACAn5F,KAAAR,SAAA,GAIAuiJ,KAAA,WAEA/hJ,KAAAmvJ,iBACAnvJ,KAAAR,SAAA,EACAQ,KAAAi5F,WAAA,GAIAk2D,eAAA,WAGA,MADAnvJ,MAAAovJ,WACApvJ,KAAAm5F,aAIAi2D,SAAA,WAEA,GAAA58I,MAAA,CAEA,IAAAxS,KAAAi5F,YAAAj5F,KAAAR,QAGA,MADAQ,MAAAm+C,QACA,CAIA,IAAAn+C,KAAAR,QAAA,CAEA,GAAA6vJ,UAAA,mBAAAH,aAAAtzJ,KAAAszJ,aAAAtuJ,KAEA4R,OAAA68I,QAAArvJ,KAAAk5F,SAAA,IACAl5F,KAAAk5F,QAAAm2D,QAEArvJ,KAAAm5F,aAAA3mF,KAIA,MAAAA,SA0BA3I,OAAAm3F,OAAA5H,UAAA58F,WAEAqU,IAAA,SAAAqgC,OAAAo1C,IAAAoC,OAMA,MAJA1oF,MAAAkxC,OAAAA,OACAlxC,KAAAsmF,IAAAA,IACAtmF,KAAA0oF,MAAAA,MAEA1oF,MAIA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAA7d,OAMA,MAJAtrB,MAAAkxC,OAAA5lB,MAAA4lB,OACAlxC,KAAAsmF,IAAAh7D,MAAAg7D,IACAtmF,KAAA0oF,MAAAp9D,MAAAo9D,MAEA1oF,MAKAsvJ,SAAA,WAKA,MAFAtvJ,MAAAsmF,IAAA13E,KAAAsF,IADA,KACAtF,KAAAY,IAAAZ,KAAAiyE,GADA,KACA7gF,KAAAsmF,MAEAtmF,MAIA6qH,eAAA,SAAA0kC,MAgBA,MAdAvvJ,MAAAkxC,OAAAq+G,KAAA3vJ,SAEA,IAAAI,KAAAkxC,QAEAlxC,KAAA0oF,MAAA,EACA1oF,KAAAsmF,IAAA,IAIAtmF,KAAA0oF,MAAA95E,KAAAkyE,MAAAyuE,KAAA/3I,EAAA+3I,KAAA3yH,GACA58B,KAAAsmF,IAAA13E,KAAA42F,KAAA9pE,MAAA0qD,MAAAmpE,KAAAt1I,EAAAja,KAAAkxC,QAAA,EAAA,KAIAlxC,QAuBA6J,OAAAm3F,OAAA3H,YAAA78F,WAEAqU,IAAA,SAAAqgC,OAAAw3C,MAAAzuE,GAMA,MAJAja,MAAAkxC,OAAAA,OACAlxC,KAAA0oF,MAAAA,MACA1oF,KAAAia,EAAAA,EAEAja,MAIA+pB,MAAA,WAEA,OAAA,GAAA/pB,MAAA8rF,aAAA3iD,KAAAnpC,OAIAmpC,KAAA,SAAA7d,OAMA,MAJAtrB,MAAAkxC,OAAA5lB,MAAA4lB,OACAlxC,KAAA0oF,MAAAp9D,MAAAo9D,MACA1oF,KAAAia,EAAAqR,MAAArR,EAEAja,MAIA6qH,eAAA,SAAA0kC,MAMA,MAJAvvJ,MAAAkxC,OAAAtiC,KAAA8kE,KAAA67E,KAAA/3I,EAAA+3I,KAAA/3I,EAAA+3I,KAAA3yH,EAAA2yH,KAAA3yH,GACA58B,KAAA0oF,MAAA95E,KAAAkyE,MAAAyuE,KAAA/3I,EAAA+3I,KAAA3yH,GACA58B,KAAAia,EAAAs1I,KAAAt1I,EAEAja,QAmBAs5F,sBAAA98F,UAAAqN,OAAA88F,OAAA5sD,SAAAv9C,WACA88F,sBAAA98F,UAAAsvF,YAAAwN,sBAEAA,sBAAA98F,UAAAi0E,yBAAA,EAmDA+oB,oBAAAh9F,UAAAqN,OAAA88F,OAAAlpB,aAAAjhF,WACAg9F,oBAAAh9F,UAAAsvF,YAAA0N,oBAEAA,oBAAAh9F,UAAAm4C,OAAA,WAEA,GAAA85C,IAAA,GAAA3wD,SACAyxD,GAAA,GAAAzxD,SACA4c,aAAA,GAAAvJ,QAEA,OAAA,YAEA,GAAAnwB,OAAA,IAAA,IAAA,IAEAhhB,MAAAgyC,OAAAsF,mBAAA,GAEAoD,aAAAqtB,gBAAA/nE,KAAAgyC,OAAAjJ,YAEA,IAAAA,aAAA/oC,KAAAgyC,OAAAjJ,YAEAgC,SAAA/qC,KAAAqyC,SAAA1qC,WAAAojC,SAIA4uD,YAAA35F,KAAAgyC,OAAAK,QAEA,IAAAsnD,aAAAA,YAAA5mD,WAQA,IAAA,GANAxO,UAAAo1D,YAAAp1D,SAEAC,MAAAm1D,YAAAn1D,MAEA6sF,IAAA,EAEAvtH,EAAA,EAAA4f,EAAA8gB,MAAA5kC,OAAAkE,EAAA4f,EAAA5f,IAIA,IAAA,GAFA4zC,MAAAlT,MAAA1gC,GAEA8b,EAAA,EAAAsqB,GAAAwN,KAAAiE,cAAA/7C,OAAAggB,EAAAsqB,GAAAtqB,IAAA,CAEA,GAAA0mB,QAAA/B,SAAAmT,KAAA12B,KAAApB,KAEAyxB,OAAAqG,KAAAiE,cAAA/7B,EAEA6uE,IAAAtlD,KAAA7C,QAAA0C,aAAAD,aAEAwmD,GAAApmD,KAAAkI,QAAA24D,aAAAtvD,cAAA+O,YAAA1B,eAAA/nD,KAAA+hC,MAAAxkC,IAAAkxF,IAEA1jD,SAAA4lE,OAAA0gB,IAAA5iC,GAAAj3E,EAAAi3E,GAAAx0E,EAAAw0E,GAAA7xD,GAEAy0F,KAAA,EAEAtmF,SAAA4lE,OAAA0gB,IAAA9hC,GAAA/3E,EAAA+3E,GAAAt1E,EAAAs1E,GAAA3yD,GAEAy0F,KAAA,MAMA,IAAA13B,aAAAA,YAAA9mD,iBAUA,IAAA,GARA28G,QAAA71D,YAAAhyF,WAAAojC,SAEA0kH,QAAA91D,YAAAhyF,WAAA0pC,OAEAggF,IAAA,EAIAzxG,EAAA,EAAAsqB,GAAAslH,OAAAr2G,MAAAv5B,EAAAsqB,GAAAtqB,IAEA6uE,GAAA59E,IAAA2+I,OAAA9wE,KAAA9+D,GAAA4vI,OAAA9qD,KAAA9kF,GAAA4vI,OAAA/oD,KAAA7mF,IAAAopB,aAAAD,aAEAwmD,GAAA1+E,IAAA4+I,QAAA/wE,KAAA9+D,GAAA6vI,QAAA/qD,KAAA9kF,GAAA6vI,QAAAhpD,KAAA7mF,IAEA2vE,GAAAya,aAAAtvD,cAAA+O,YAAA1B,eAAA/nD,KAAA+hC,MAAAxkC,IAAAkxF,IAEA1jD,SAAA4lE,OAAA0gB,IAAA5iC,GAAAj3E,EAAAi3E,GAAAx0E,EAAAw0E,GAAA7xD,GAEAy0F,KAAA,EAEAtmF,SAAA4lE,OAAA0gB,IAAA9hC,GAAA/3E,EAAA+3E,GAAAt1E,EAAAs1E,GAAA3yD,GAEAy0F,KAAA,CAMAtmF,UAAAF,aAAA,MAyDAgvD,gBAAAr9F,UAAAqN,OAAA88F,OAAA5sD,SAAAv9C,WACAq9F,gBAAAr9F,UAAAsvF,YAAA+N,gBAEAA,gBAAAr9F,UAAA2nD,QAAA,WAEAnkD,KAAA85F,KAAAznD,SAAA8R,UACAnkD,KAAA85F,KAAAjtD,SAAAsX,WAIA01C,gBAAAr9F,UAAAm4C,OAAA,WAEA,GAAAgL,QAAA,GAAA7hB,SACA+oG,QAAA,GAAA/oG,QAEA,OAAA,YAEA99B,KAAAw2C,MAAAc,mBAEA,IAAAo4G,YAAA1vJ,KAAAw2C,MAAAkQ,SAAA1mD,KAAAw2C,MAAAkQ,SAAA,IACAipG,UAAAD,WAAA9gJ,KAAAqsG,IAAAj7G,KAAAw2C,MAAAiS,MAEAzoD,MAAA85F,KAAAhzD,MAAAj2B,IAAA8+I,UAAAA,UAAAD,YAEA/vG,OAAAxI,sBAAAn3C,KAAAw2C,MAAAzN,aACA89F,QAAA1vF,sBAAAn3C,KAAAw2C,MAAAxzC,OAAA+lC,aAEA/oC,KAAA85F,KAAAziD,OAAAwvF,QAAA5+E,IAAAtI,aAEAxyC,KAAAnN,KAAA6mC,MAEA7mC,KAAA85F,KAAAjtD,SAAAhG,MAAAh2B,IAAA7Q,KAAA6mC,OAIA7mC,KAAA85F,KAAAjtD,SAAAhG,MAAAsC,KAAAnpC,KAAAw2C,MAAA3P,WAgFAqzD,eAAA19F,UAAAqN,OAAA88F,OAAAlpB,aAAAjhF,WACA09F,eAAA19F,UAAAsvF,YAAAoO,eAEAA,eAAA19F,UAAAswC,eAAA,WAEA,GAAA6S,QAAA,GAAA7hB,SAEA8xH,WAAA,GAAA7xH,SACA8xH,eAAA,GAAA9xH,QAEA,OAAA,YAEA,GAAA4zB,OAAA3xD,KAAA2xD,MAEAtf,SAAAryC,KAAAqyC,SACAtH,SAAAsH,SAAAwoD,aAAA,WAEAg1D,gBAAAzpF,WAAApmE,KAAA23F,KAAA5uD,YAEA,KAAA,GAAAjlC,GAAA,EAAA8b,EAAA,EAAA9b,EAAA6tD,MAAA/xD,OAAAkE,IAAA,CAEA,GAAAu2F,MAAA1oC,MAAA7tD,EAEAu2F,MAAAp7F,QAAAo7F,KAAAp7F,OAAAg7F,SAEA21D,WAAAhjH,iBAAAijH,eAAAx1D,KAAAtxD,aACA4W,OAAAxI,sBAAAy4G,YACA7kH,SAAA4lE,OAAA/wF,EAAA+/B,OAAAnoC,EAAAmoC,OAAA1lC,EAAA0lC,OAAA/iB,GAEAgzH,WAAAhjH,iBAAAijH,eAAAx1D,KAAAp7F,OAAA8pC,aACA4W,OAAAxI,sBAAAy4G,YACA7kH,SAAA4lE,OAAA/wF,EAAA,EAAA+/B,OAAAnoC,EAAAmoC,OAAA1lC,EAAA0lC,OAAA/iB,GAEAhd,GAAA,GAMAyyB,SAAAwoD,aAAA,YAAAhwD,aAAA,MAqDA0vD,iBAAA/9F,UAAAqN,OAAA88F,OAAAllD,KAAAjlD,WACA+9F,iBAAA/9F,UAAAsvF,YAAAyO,iBAEAA,iBAAA/9F,UAAA2nD,QAAA,WAEAnkD,KAAAqyC,SAAA8R,UACAnkD,KAAA6sC,SAAAsX,WAIAo2C,iBAAA/9F,UAAAm4C,OAAA,eAEAxnC,KAAAnN,KAAA6mC,MAEA7mC,KAAA6sC,SAAAhG,MAAAh2B,IAAA7Q,KAAA6mC,OAIA7mC,KAAA6sC,SAAAhG,MAAAsC,KAAAnpC,KAAAw2C,MAAA3P,QAqDA4zD,oBAAAj+F,UAAAqN,OAAA88F,OAAA5sD,SAAAv9C,WACAi+F,oBAAAj+F,UAAAsvF,YAAA2O,oBAEAA,oBAAAj+F,UAAA2nD,QAAA,WAEAnkD,KAAAo1C,SAAA,GAAA/C,SAAA8R,UACAnkD,KAAAo1C,SAAA,GAAAvI,SAAAsX,WAIAs2C,oBAAAj+F,UAAAm4C,OAAA,WAIA,GAAAm7G,IAAA,GAAA9vJ,KAAAw2C,MAAAt3C,MACA6wJ,GAAA,GAAA/vJ,KAAAw2C,MAAA1Z,OAEAiO,SAAA/qC,KAAA06F,KAAAroD,SAAA1qC,WAAAojC,SACAl2B,MAAAk2B,SAAAl2B,KAIAA,OAAA,GAAAi7I,GAAAj7I,MAAA,IAAAk7I,GAAAl7I,MAAA,GAAA,EACAA,MAAA,GAAAi7I,GAAAj7I,MAAA,GAAAk7I,GAAAl7I,MAAA,GAAA,EACAA,MAAA,IAAAi7I,GAAAj7I,MAAA,GAAAk7I,GAAAl7I,MAAA,GAAA,EACAA,MAAA,IAAAi7I,GAAAj7I,MAAA,KAAAk7I,GAAAl7I,MAAA,IAAA,EACAA,MAAA,IAAAi7I,GAAAj7I,MAAA,KAAAk7I,GAAAl7I,MAAA,IAAA,EAEAk2B,SAAAF,aAAA,MAEA19B,KAAAnN,KAAA6mC,MAEA7mC,KAAA06F,KAAA7tD,SAAAhG,MAAAh2B,IAAA7Q,KAAA6mC,OAIA7mC,KAAA06F,KAAA7tD,SAAAhG,MAAAsC,KAAAnpC,KAAAw2C,MAAA3P,QAyCA8zD,sBAAAn+F,UAAAqN,OAAA88F,OAAA5sD,SAAAv9C,WACAm+F,sBAAAn+F,UAAAsvF,YAAA6O,sBAEAA,sBAAAn+F,UAAA2nD,QAAA,WAEAnkD,KAAAo1C,SAAA,GAAA/C,SAAA8R,UACAnkD,KAAAo1C,SAAA,GAAAvI,SAAAsX,WAIAw2C,sBAAAn+F,UAAAm4C,OAAA,WAEA,GAAAgL,QAAA,GAAA7hB,SAEAq8D,OAAA,GAAAp2D,OACAq2D,OAAA,GAAAr2D,MAEA,OAAA,YAEA,GAAAitF,MAAAhxH,KAAAo1C,SAAA,EAEA,QAAAjoC,KAAAnN,KAAA6mC,MAEA7mC,KAAA6sC,SAAAhG,MAAAh2B,IAAA7Q,KAAA6mC,WAEA,CAEA,GAAAkV,QAAAi1E,KAAA3+E,SAAAwoD,aAAA,QAEAV,QAAAhxD,KAAAnpC,KAAAw2C,MAAA3P,OACAuzD,OAAAjxD,KAAAnpC,KAAAw2C,MAAAuQ,YAEA,KAAA,GAAAjjD,GAAA,EAAA4f,EAAAq4B,OAAA5C,MAAAr1C,EAAA4f,EAAA5f,IAAA,CAEA,GAAA+iC,OAAA/iC,EAAA4f,EAAA,EAAAy2E,OAAAC,MAEAr+C,QAAA40D,OAAA7sG,EAAA+iC,MAAAjI,EAAAiI,MAAA7G,EAAA6G,MAAAh8B,GAIAkxC,OAAAlR,aAAA,EAIAmmF,KAAA35E,OAAAsI,OAAAxI,sBAAAn3C,KAAAw2C,MAAAzN,aAAAk7D,cA+CAnJ,WAAAt+F,UAAAqN,OAAA88F,OAAAlpB,aAAAjhF,WACAs+F,WAAAt+F,UAAAsvF,YAAAgP,WAsFAI,gBAAA1+F,UAAAqN,OAAA88F,OAAAlpB,aAAAjhF,WACA0+F,gBAAA1+F,UAAAsvF,YAAAoP,gBAoDAG,kBAAA7+F,UAAAqN,OAAA88F,OAAAlpB,aAAAjhF,WACA6+F,kBAAA7+F,UAAAsvF,YAAAuP,kBAEAA,kBAAA7+F,UAAAm4C,OAAA,WAEA,GAAA85C,IAAA,GAAA3wD,SACAyxD,GAAA,GAAAzxD,SACA4c,aAAA,GAAAvJ,QAEA,OAAA,YAEAnxC,KAAAgyC,OAAAsF,mBAAA,GAEAoD,aAAAqtB,gBAAA/nE,KAAAgyC,OAAAjJ,YAgBA,KAAA,GAdAA,aAAA/oC,KAAAgyC,OAAAjJ,YAEAgC,SAAA/qC,KAAAqyC,SAAA1qC,WAAAojC,SAIA4uD,YAAA35F,KAAAgyC,OAAAK,SAEA9N,SAAAo1D,YAAAp1D,SAEAC,MAAAm1D,YAAAn1D,MAEA6sF,IAAA,EAEAvtH,EAAA,EAAA4f,EAAA8gB,MAAA5kC,OAAAkE,EAAA4f,EAAA5f,IAAA,CAEA,GAAA4zC,MAAAlT,MAAA1gC,GAEAutC,OAAAqG,KAAArG,MAEAo9C,IAAAtlD,KAAA5E,SAAAmT,KAAA9sC,IACArN,IAAAgnC,SAAAmT,KAAA7sC,IACAtN,IAAAgnC,SAAAmT,KAAA31B,IACA0+D,aAAA,GACAz3C,aAAAD,aAEAwmD,GAAApmD,KAAAkI,QAAA24D,aAAAtvD,cAAA+O,YAAA1B,eAAA/nD,KAAA+hC,MAAAxkC,IAAAkxF,IAEA1jD,SAAA4lE,OAAA0gB,IAAA5iC,GAAAj3E,EAAAi3E,GAAAx0E,EAAAw0E,GAAA7xD,GAEAy0F,KAAA,EAEAtmF,SAAA4lE,OAAA0gB,IAAA9hC,GAAA/3E,EAAA+3E,GAAAt1E,EAAAs1E,GAAA3yD,GAEAy0F,KAAA,EAIAtmF,SAAAF,aAAA,MAkDAywD,uBAAA9+F,UAAAqN,OAAA88F,OAAA5sD,SAAAv9C,WACA8+F,uBAAA9+F,UAAAsvF,YAAAwP,uBAEAA,uBAAA9+F,UAAA2nD,QAAA,WAEAnkD,KAAAu7F,WAAAlpD,SAAA8R,UACAnkD,KAAAu7F,WAAA1uD,SAAAsX,UACAnkD,KAAAw7F,WAAAnpD,SAAA8R,UACAnkD,KAAAw7F,WAAA3uD,SAAAsX,WAIAm3C,uBAAA9+F,UAAAm4C,OAAA,WAEA,GAAA85C,IAAA,GAAA3wD,SACAyxD,GAAA,GAAAzxD,SACAwyD,GAAA,GAAAxyD,QAEA,OAAA,YAEA2wD,GAAAt3C,sBAAAn3C,KAAAw2C,MAAAzN,aACAwmD,GAAAp4C,sBAAAn3C,KAAAw2C,MAAAxzC,OAAA+lC,aACAunD,GAAAnR,WAAAoQ,GAAAd,IAEAzuF,KAAAu7F,WAAAlkD,OAAAi5C,QAEAnjF,KAAAnN,KAAA6mC,OAEA7mC,KAAAu7F,WAAA1uD,SAAAhG,MAAAh2B,IAAA7Q,KAAA6mC,OACA7mC,KAAAw7F,WAAA3uD,SAAAhG,MAAAh2B,IAAA7Q,KAAA6mC,SAIA7mC,KAAAu7F,WAAA1uD,SAAAhG,MAAAsC,KAAAnpC,KAAAw2C,MAAA3P,OACA7mC,KAAAw7F,WAAA3uD,SAAAhG,MAAAsC,KAAAnpC,KAAAw2C,MAAA3P,QAIA7mC,KAAAw7F,WAAAnkD,OAAAi5C,IACAtwF,KAAAw7F,WAAA10D,MAAAlK,EAAA0zD,GAAA1wF,aAwHA67F,aAAAj/F,UAAAqN,OAAA88F,OAAAlpB,aAAAjhF,WACAi/F,aAAAj/F,UAAAsvF,YAAA2P,aAEAA,aAAAj/F,UAAAm4C,OAAA,WAOA,QAAAq7G,UAAAzmG,MAAA/xC,EAAAyC,EAAA2iB,GAEA+iB,OAAA9uC,IAAA2G,EAAAyC,EAAA2iB,GAAA8jE,UAAA94D,OAEA,IAAAud,QAAAy2C,SAAAryC,MAEA,QAAAp8C,KAAAg4C,OAIA,IAAA,GAFApa,UAAAsH,SAAAwoD,aAAA,YAEA/2F,EAAA,EAAA4f,EAAAyhC,OAAAvlD,OAAAkE,EAAA4f,EAAA5f,IAEAinC,SAAA4lE,OAAAxrD,OAAArhD,GAAA67C,OAAAnoC,EAAAmoC,OAAA1lC,EAAA0lC,OAAA/iB,GAjBA,GAAAyV,UAAAupD,SAEAj8C,OAAA,GAAA7hB,SACA8J,OAAA,GAAAmT,OAsBA,OAAA,YAEA1I,SAAAryC,KAAAqyC,SACAupD,SAAA57F,KAAA47F,QAOAh0D,QAAAsB,iBAAAC,KAAAnpC,KAAA4nC,OAAAsB,kBAIA8mH,SAAA,IAAA,EAAA,GAAA,GACAA,SAAA,IAAA,EAAA,EAAA,GAIAA,SAAA,MAdA,GAAA,GAcA,GACAA,SAAA,KAfA,GAAA,GAeA,GACAA,SAAA,MAhBA,EAAA,GAgBA,GACAA,SAAA,KAjBA,EAAA,GAiBA,GAIAA,SAAA,MArBA,GAAA,EAqBA,GACAA,SAAA,KAtBA,GAAA,EAsBA,GACAA,SAAA,MAvBA,EAAA,EAuBA,GACAA,SAAA,KAxBA,EAAA,EAwBA,GAIAA,SAAA,KAAAjtI,GAAA5I,KAAA,GACA61I,SAAA,MAAA,GAAA71I,KAAA,GACA61I,SAAA,KAAA,EAAA71I,GAAA,GAIA61I,SAAA,OAlCA,EAkCA,EAAA,GACAA,SAAA,MAnCA,EAmCA,EAAA,GACAA,SAAA,MAAA,GApCA,EAoCA,GACAA,SAAA,MAAA,EArCA,EAqCA,GAEAA,SAAA,OAvCA,EAuCA,GAAA,GACAA,SAAA,MAxCA,EAwCA,GAAA,GACAA,SAAA,MAAA,GAzCA,GAyCA,GACAA,SAAA,MAAA,EA1CA,GA0CA,GAEA39G,SAAAwoD,aAAA,YAAAhwD,aAAA,MAgCAsxD,UAAA3/F,UAAAqN,OAAA88F,OAAAlpB,aAAAjhF,WACA2/F,UAAA3/F,UAAAsvF,YAAAqQ,UAEAA,UAAA3/F,UAAAm4C,OAAA,WAEA,GAAA0nD,KAAA,GAAAtrD,KAEA,OAAA,UAAAiB,QAcA,OAZA7kC,KAAA6kC,QAEAjiC,QAAAH,KAAA,2DAIAzC,KAAAnN,KAAAgyC,QAEAqqD,IAAAn2C,cAAAlmD,KAAAgyC,SAIAqqD,IAAAypB,UAAA,CAEA,GAAAt2G,KAAA6sF,IAAA7sF,IACA0E,IAAAmoF,IAAAnoF,IAkBA62B,SAAA/qC,KAAAqyC,SAAA1qC,WAAAojC,SACAl2B,MAAAk2B,SAAAl2B,KAEAA,OAAA,GAAAX,IAAAsD,EAAA3C,MAAA,GAAAX,IAAA+F,EAAApF,MAAA,GAAAX,IAAA0oB,EACA/nB,MAAA,GAAArF,IAAAgI,EAAA3C,MAAA,GAAAX,IAAA+F,EAAApF,MAAA,GAAAX,IAAA0oB,EACA/nB,MAAA,GAAArF,IAAAgI,EAAA3C,MAAA,GAAArF,IAAAyK,EAAApF,MAAA,GAAAX,IAAA0oB,EACA/nB,MAAA,GAAAX,IAAAsD,EAAA3C,MAAA,IAAArF,IAAAyK,EAAApF,MAAA,IAAAX,IAAA0oB,EACA/nB,MAAA,IAAAX,IAAAsD,EAAA3C,MAAA,IAAAX,IAAA+F,EAAApF,MAAA,IAAArF,IAAAotB,EACA/nB,MAAA,IAAArF,IAAAgI,EAAA3C,MAAA,IAAAX,IAAA+F,EAAApF,MAAA,IAAArF,IAAAotB,EACA/nB,MAAA,IAAArF,IAAAgI,EAAA3C,MAAA,IAAArF,IAAAyK,EAAApF,MAAA,IAAArF,IAAAotB,EACA/nB,MAAA,IAAAX,IAAAsD,EAAA3C,MAAA,IAAArF,IAAAyK,EAAApF,MAAA,IAAArF,IAAAotB,EAEAmO,SAAAF,aAAA,EAEA7qC,KAAAqyC,SAAAiqD,6BAMAH,UAAA3/F,UAAA0pD,cAAA,SAAAlU,QAKA,MAHAhyC,MAAAgyC,OAAAA,OACAhyC,KAAA20C,SAEA30C,MAkCAo8F,WAAA5/F,UAAAqN,OAAA88F,OAAAlpB,aAAAjhF,WACA4/F,WAAA5/F,UAAAsvF,YAAAsQ,WAEAA,WAAA5/F,UAAAswC,eAAA,WAEA,GAAAuvD,KAAAr8F,KAAAq8F,GAEAA,KAAAypB,YAEAzpB,IAAA0pB,UAAA/lH,KAAA+qC,UAEAsxD,IAAAv3B,QAAA9kE,KAAA8mC,OAEA9mC,KAAA8mC,MAAAihB,eAAA,MA0CAw0C,YAAA//F,UAAAqN,OAAA88F,OAAAnpB,KAAAhhF,WACA+/F,YAAA//F,UAAAsvF,YAAAyQ,YAEAA,YAAA//F,UAAAswC,eAAA,WAEA,GAAAhG,QAAA9mC,KAAAioE,MAAA32B,QAEA1iC,MAAAc,IAAAo3B,OAAA,OAAAA,MAAA,MAEA9mC,KAAA8mC,MAAAj2B,IAAA,GAAA7Q,KAAA+hC,KAAA,GAAA/hC,KAAA+hC,KAAA+E,OAEA9mC,KAAAq3C,OAAAr3C,KAAAioE,MAAA52B,QAEArxC,KAAAs3C,oBAoBA,IAAAulD,cACAC,YAsCAL,aAAAjgG,UAAAqN,OAAA88F,OAAA5sD,SAAAv9C,WACAigG,YAAAjgG,UAAAsvF,YAAA2Q,YAEAA,YAAAjgG,UAAAwgG,aAAA,WAEA,GACAgG,SADAqF,KAAA,GAAAvqE,QAGA,OAAA,UAAA4+D,KAIAA,IAAAziF,EAAA,OAEAja,KAAAi6C,WAAAppC,IAAA,EAAA,EAAA,EAAA,GAEA6rF,IAAAziF,GAAA,OAEAja,KAAAi6C,WAAAppC,IAAA,EAAA,EAAA,EAAA,IAIAw3F,KAAAx3F,IAAA6rF,IAAA9/D,EAAA,GAAA8/D,IAAAllF,GAAAiyC,YAEAu5C,QAAAp0F,KAAA42F,KAAA9I,IAAAziF,GAEAja,KAAAi6C,WAAAmuD,iBAAAC,KAAArF,cAQAvG,YAAAjgG,UAAAygG,UAAA,SAAAr9F,OAAA+8F,WAAAC,eAEAzvF,KAAAwvF,aAAAA,WAAA,GAAA/8F,YACAuN,KAAAyvF,YAAAA,UAAA,GAAAD,YAEA38F,KAAA06F,KAAA5zD,MAAAj2B,IAAA,EAAAjC,KAAAsF,IAAA,EAAAtU,OAAA+8F,YAAA,GACA38F,KAAA06F,KAAA5P,eAEA9qF,KAAA85F,KAAAhzD,MAAAj2B,IAAA+rF,UAAAD,WAAAC,WACA58F,KAAA85F,KAAA/uD,SAAA9wB,EAAAra,OACAI,KAAA85F,KAAAhP,gBAIA2R,YAAAjgG,UAAAyzJ,SAAA,SAAAppH,OAEA7mC,KAAA06F,KAAA7tD,SAAAhG,MAAAsC,KAAAtC,OACA7mC,KAAA85F,KAAAjtD,SAAAhG,MAAAsC,KAAAtC,QAmCAq2D,WAAA1gG,UAAAqN,OAAA88F,OAAAlpB,aAAAjhF,WACA0gG,WAAA1gG,UAAAsvF,YAAAoR,UAiFA,IAAAxwE,KAAA,GAAAoR,SACAw/F,GAAA,GAAAngC,WACAogC,GAAA,GAAApgC,WACA+yD,GAAA,GAAA/yD,UAaAe,kBAAA1hG,UAAAqN,OAAA88F,OAAAvX,MAAA5yF,WACA0hG,iBAAA1hG,UAAAsvF,YAAAoS,iBAEAA,iBAAA1hG,UAAA67I,SAAA,SAAAnkH,GAEA,GAAAixB,QAAAnlD,KAAAmlD,OACAzhC,EAAAyhC,OAAAvlD,OAEA2pD,OAAA7lC,GAAA1jB,KAAA6hF,OAAA,EAAA,IAAA3tD,EACA2mH,SAAAjsI,KAAAE,MAAAy6C,OACA4tC,OAAA5tC,MAAAsxF,QAEA76I,MAAA6hF,OAEAg5D,UAAAA,SAAA,EAAA,GAAAjsI,KAAAE,MAAAF,KAAAc,IAAAmrI,UAAA11F,OAAAvlD,QAAA,GAAAulD,OAAAvlD,OAEA,IAAAu3F,QAAA0jD,WAAAn3H,EAAA,IAEAm3H,SAAAn3H,EAAA,EACAyzE,OAAA,EAIA,IAAA3lD,IAAAz7B,GAAAC,GAAAC,EA6BA,IA3BAjW,KAAA6hF,QAAAg5D,SAAA,EAEArpG,GAAA2T,QAAA01F,SAAA,GAAAn3H,IAKAgJ,IAAAyyD,WAAAh6B,OAAA,GAAAA,OAAA,IAAA5nD,IAAA4nD,OAAA,IACA3T,GAAA9kB,KAIA3W,GAAAovC,OAAA01F,SAAAn3H,GACA1N,GAAAmvC,QAAA01F,SAAA,GAAAn3H,GAEA1jB,KAAA6hF,QAAAg5D,SAAA,EAAAn3H,EAEAzN,GAAAkvC,QAAA01F,SAAA,GAAAn3H,IAKAgJ,IAAAyyD,WAAAh6B,OAAAzhC,EAAA,GAAAyhC,OAAAzhC,EAAA,IAAAnmB,IAAA4nD,OAAAzhC,EAAA,IACAzN,GAAAyW,SAIAvf,KAAAnN,KAAAo7B,MAAA,gBAAAp7B,KAAAo7B,MAAA,YAAAp7B,KAAAo7B,KAAA,CAGA,GAAAnnB,KAAA,YAAAjU,KAAAo7B,KAAA,GAAA,IACA0iE,IAAAlvF,KAAAqF,IAAAu9B,GAAA6yD,kBAAAtuF,IAAA9B,KACA8pF,IAAAnvF,KAAAqF,IAAA8B,GAAAsuF,kBAAAruF,IAAA/B,KACA+pF,IAAApvF,KAAAqF,IAAA+B,GAAAquF,kBAAApuF,IAAAhC,IAGA8pF,KAAA,OAAAA,IAAA,GACAD,IAAA,OAAAA,IAAAC,KACAC,IAAA,OAAAA,IAAAD,KAEAu/B,GAAAz/B,yBAAArsD,GAAAh6B,EAAAzB,GAAAyB,EAAAxB,GAAAwB,EAAAvB,GAAAuB,EAAAsmF,IAAAC,IAAAC,KACAu/B,GAAA1/B,yBAAArsD,GAAAv3B,EAAAlE,GAAAkE,EAAAjE,GAAAiE,EAAAhE,GAAAgE,EAAA6jF,IAAAC,IAAAC,KACAkyD,GAAAryD,yBAAArsD,GAAA5U,EAAA7mB,GAAA6mB,EAAA5mB,GAAA4mB,EAAA3mB,GAAA2mB,EAAAkhE,IAAAC,IAAAC,SAEA,IAAA,eAAAh+F,KAAAo7B,KAAA,CAEA,GAAAwiE,aAAAzwF,KAAAnN,KAAA49F,QAAA59F,KAAA49F,QAAA,EACA0/B,IAAA5/B,eAAAlsD,GAAAh6B,EAAAzB,GAAAyB,EAAAxB,GAAAwB,EAAAvB,GAAAuB,EAAAomF,SACA2/B,GAAA7/B,eAAAlsD,GAAAv3B,EAAAlE,GAAAkE,EAAAjE,GAAAiE,EAAAhE,GAAAgE,EAAA2jF,SACAsyD,GAAAxyD,eAAAlsD,GAAA5U,EAAA7mB,GAAA6mB,EAAA5mB,GAAA4mB,EAAA3mB,GAAA2mB,EAAAghE,SAIA,MAAA,IAAA9/D,SAAAw/F,GAAAr/B,KAAA9G,QAAAomC,GAAAt/B,KAAA9G,QAAA+4D,GAAAjyD,KAAA9G,UAeAgH,kBAAA3hG,UAAAqN,OAAA88F,OAAAvX,MAAA5yF,WACA2hG,kBAAA3hG,UAAAsvF,YAAAqS,kBAEAA,kBAAA3hG,UAAA67I,SAAA,SAAAnkH,GAEA,GAAAs6D,IAAAxuF,KAAAwuF,GAAAC,GAAAzuF,KAAAyuF,GAAAc,GAAAvvF,KAAAuvF,GAAAe,GAAAtwF,KAAAswF,EAEA,OAAA,IAAAxyD,SACAqxD,YAAAj7D,EAAAs6D,GAAAh3E,EAAAi3E,GAAAj3E,EAAA+3E,GAAA/3E,EAAA84E,GAAA94E,GACA23E,YAAAj7D,EAAAs6D,GAAAv0E,EAAAw0E,GAAAx0E,EAAAs1E,GAAAt1E,EAAAq2E,GAAAr2E,GACAk1E,YAAAj7D,EAAAs6D,GAAA5xD,EAAA6xD,GAAA7xD,EAAA2yD,GAAA3yD,EAAA0zD,GAAA1zD,KAeAwhE,sBAAA5hG,UAAAqN,OAAA88F,OAAAvX,MAAA5yF,WACA4hG,sBAAA5hG,UAAAsvF,YAAAsS,sBAEAA,sBAAA5hG,UAAA67I,SAAA,SAAAnkH,GAEA,GAAAs6D,IAAAxuF,KAAAwuF,GAAAC,GAAAzuF,KAAAyuF,GAAAc,GAAAvvF,KAAAuvF,EAEA,OAAA,IAAAzxD,SACAgxD,gBAAA56D,EAAAs6D,GAAAh3E,EAAAi3E,GAAAj3E,EAAA+3E,GAAA/3E,GACAs3E,gBAAA56D,EAAAs6D,GAAAv0E,EAAAw0E,GAAAx0E,EAAAs1E,GAAAt1E,GACA60E,gBAAA56D,EAAAs6D,GAAA5xD,EAAA6xD,GAAA7xD,EAAA2yD,GAAA3yD,KAcAyhE,WAAA7hG,UAAAqN,OAAA88F,OAAAvX,MAAA5yF,WACA6hG,WAAA7hG,UAAAsvF,YAAAuS,WAEAA,WAAA7hG,UAAA67I,SAAA,SAAAnkH,GAEA,GAAA,IAAAA,EAEA,MAAAl0B,MAAAuvF,GAAAxlE,OAIA,IAAA41B,QAAA,GAAA7hB,QAMA,OAJA6hB,QAAAw/B,WAAAn/E,KAAAuvF,GAAAvvF,KAAAyuF,IACA9uC,OAAAoI,eAAA7zB,GACAyrB,OAAApiD,IAAAyC,KAAAyuF,IAEA9uC,QAUA2+C,SAAA9hG,UAAAqN,OAAA88F,OAAAhX,aAAAnzF,WACA8hG,SAAA9hG,UAAAsvF,YAAAwS,QAMA,IAAA6xD,aAEAC,0BAAA,SAAA/9G,SAAAqsD,WAIA,IAAA,GAFA5pD,OAAA,GAAA8oC,OAEA95E,EAAA,EAAA4f,EAAAg7E,UAAA9+F,OAAAkE,EAAA4f,EAAA5f,IAEAgxC,MAAAv3C,IAAA,GAAAkkD,MAAApP,SAAAqsD,UAAA56F,IAIA,OAAAgxC,QAIAu7G,OAAA,SAAA9jC,MAAAttH,OAAA0oC,OAEA4kF,MAAAlB,YAAApsH,OAAA8pC,aACA9pC,OAAAs6C,OAAAgzE,OACA5kF,MAAApqC,IAAAgvH,QAIA+jC,OAAA,SAAA/jC,MAAA5kF,MAAA1oC,QAEAstH,MAAAlB,aAAA,GAAAttF,UAAAqoC,WAAAnnE,OAAA8pC,cAEApB,MAAA4R,OAAAgzE,OACAttH,OAAA1B,IAAAgvH,QAuKAn9B,OAAAuX,OAAA,SAAA4pD,UAAAlY,UAQA,MANAtoI,SAAAghD,IAAA,4CAEAw/F,UAAA/zJ,UAAAqN,OAAA88F,OAAAvX,MAAA5yF,WACA+zJ,UAAA/zJ,UAAAsvF,YAAAykE,UACAA,UAAA/zJ,UAAA67I,SAAAA,SAEAkY,WAgBAzwD,mBAAAtjG,UAAAqN,OAAA88F,OAAAzI,iBAAA1hG,WAaAujG,aAAAvjG,UAAAqN,OAAA88F,OAAAzI,iBAAA1hG,WAaAwjG,OAAAxjG,UAAAqN,OAAA88F,OAAAzI,iBAAA1hG,WAEAqN,OAAAm3F,OAAAhB,OAAAxjG,WAEAg0J,cAAA,SAAA5lJ,GAEAmF,QAAAiuB,MAAA,qDAGAyyH,sBAAA,SAAAh0C,gBAEA1sG,QAAAiuB,MAAA,6DAGA0yH,yBAAA,SAAAC,cAEA5gJ,QAAAiuB,MAAA,kEAqBA88D,WAAAt+F,UAAAo0J,UAAA,WAEA7gJ,QAAAiuB,MAAA,6FAIAk8D,eAAA19F,UAAAm4C,OAAA,WAEA5kC,QAAAiuB,MAAA,iEA6BAn0B,OAAAm3F,OAAA/8D,KAAAznC,WAEAy0C,OAAA,SAAAwrE,gBAGA,MADA1sG,SAAAH,KAAA;+EACA5P,KAAA+lH,UAAAtJ,iBAGAlxG,MAAA,WAGA,MADAwE,SAAAH,KAAA,wDACA5P,KAAA8lH,WAGA+qC,kBAAA,SAAAx0D,KAGA,MADAtsF,SAAAH,KAAA,0EACA5P,KAAAmmH,cAAA9pB,MAGAt6D,KAAA,SAAA06E,gBAGA,MADA1sG,SAAAH,KAAA,uDACA5P,KAAA8kE,QAAA23C,mBAKA5yG,OAAAm3F,OAAAjwD,KAAAv0C,WAEAy0C,OAAA,SAAAwrE,gBAGA,MADA1sG,SAAAH,KAAA,2DACA5P,KAAA+lH,UAAAtJ,iBAGAlxG,MAAA,WAGA,MADAwE,SAAAH,KAAA,wDACA5P,KAAA8lH,WAGA+qC,kBAAA,SAAAx0D,KAGA,MADAtsF,SAAAH,KAAA,0EACA5P,KAAAmmH,cAAA9pB,MAGAy0D,qBAAA,SAAAhpC,QAGA,MADA/3G,SAAAH,KAAA,gFACA5P,KAAA4nH,iBAAAE,SAGA/lF,KAAA,SAAA06E,gBAGA,MADA1sG,SAAAH,KAAA,uDACA5P,KAAA8kE,QAAA23C,mBAKAn7D,MAAA9kD,UAAAy0C,OAAA,SAAAwrE,gBAGA,MADA1sG,SAAAH,KAAA,4DACA5P,KAAA+lH,UAAAtJ,iBAIA/gF,MAAAq1H,SAAA,WAGA,MADAhhJ,SAAAH,KAAA,yEACAhB,KAAA8yC,UAIA73C,OAAAm3F,OAAA7vD,QAAA30C,WAEAw0J,qBAAA,SAAAn8I,MAAAsU,QAGA,MADApZ,SAAAH,KAAA,uFACA5P,KAAAurB,QAAA1W,MAAAsU,SAGA8nI,gBAAA,SAAAtxG,QAGA,MADA5vC,SAAAH,KAAA,kGACA+vC,OAAAqqD,aAAAhqG,OAGAkxJ,qBAAA,SAAAtmJ,GAEAmF,QAAAiuB,MAAA,6DAGAmzH,cAAA,SAAA/4G,OAAAjvB,OAAAvpB,QAGA,MADAmQ,SAAAH,KAAA,6GACA5P,KAAA0wG,uBAAAt4D,SAGAg5G,oBAAA,SAAAv8I,MAAAsU,OAAAvpB,QAEAmQ,QAAAiuB,MAAA,8DAMAn0B,OAAAm3F,OAAAjjE,QAAAvhC,WAEA60J,gBAAA,SAAA/kJ,GAGA,MADAyD,SAAAH,KAAA,0EACA5P,KAAA+iD,aAAAz2C,IAGA0kJ,qBAAA,SAAAn8I,MAAAsU,QAGA,MADApZ,SAAAH,KAAA,uFACA5P,KAAAurB,QAAA1W,MAAAsU,SAGAmoI,YAAA,WAEA,GAAA7iE,GAEA,OAAA,YAIA,WAFAthF,KAAAshF,KAAAA,GAAA,GAAA3wD,UACA/tB,QAAAH,KAAA,wGACA6+E,GAAAgd,oBAAAzrG,KAAA,OAKAyrH,0BAAA,SAAA1oC,GAGA,MADAhzE,SAAAH,KAAA,kGACA5P,KAAAmuG,2BAAAprB,IAGAwuE,gBAAA,WAEAxhJ,QAAAH,KAAA,wDAGAqhJ,gBAAA,SAAAtxG,QAGA,MADA5vC,SAAAH,KAAA,kGACA+vC,OAAA3W,aAAAhpC,OAGAwxJ,gBAAA,SAAA7xG,QAGA,MADA5vC,SAAAH,KAAA,kGACA+vC,OAAA3W,aAAAhpC,OAGAkxJ,qBAAA,SAAAtmJ,GAEAmF,QAAAiuB,MAAA,6DAGAyzH,WAAA,SAAAnyH,GAEAvvB,QAAAH,KAAA,oGACA0vB,EAAA4oB,mBAAAloD,OAGA0xJ,YAAA,SAAA/xG,QAGA,MADA5vC,SAAAH,KAAA,8FACA+vC,OAAA3W,aAAAhpC,OAGA+8F,UAAA,WAEAhtF,QAAAiuB,MAAA,kDAGA4tF,QAAA,WAEA77G,QAAAiuB,MAAA,gDAGA48D,QAAA,WAEA7qF,QAAAiuB,MAAA,gDAGA6tF,QAAA,WAEA97G,QAAAiuB,MAAA,gDAGA2zH,aAAA,WAEA5hJ,QAAAiuB,MAAA,qDAGAmzH,cAAA,SAAA/4G,OAAAjvB,OAAAvpB,QAGA,MADAmQ,SAAAH,KAAA,6GACA5P,KAAA0wG,uBAAAt4D,SAGAg5G,oBAAA,SAAAv8I,MAAAsU,OAAAvpB,QAEAmQ,QAAAiuB,MAAA,4DAGA4zH,YAAA,SAAApuJ,KAAAC,MAAAE,OAAAD,IAAA8oC,KAAAC,KAGA,MADA18B,SAAAH,KAAA,wHACA5P,KAAAqyG,gBAAA7uG,KAAAC,MAAAC,IAAAC,OAAA6oC,KAAAC,QAMA2E,MAAA50C,UAAAq1J,mBAAA,SAAAn3D,MAGA,MADA3qF,SAAAH,KAAA,6EACA5P,KAAAgpH,eAAAtuB,OAIAh9D,WAAAlhC,UAAAy0J,gBAAA,SAAAtxG,QAGA,MADA5vC,SAAAH,KAAA,mHACA+vC,OAAAmqD,gBAAA9pG,OAIA6J,OAAAm3F,OAAA5/C,IAAA5kD,WAEAq0J,kBAAA,SAAAx0D,KAGA,MADAtsF,SAAAH,KAAA,yEACA5P,KAAAmmH,cAAA9pB,MAGAy1D,oBAAA,SAAA7pF,OAGA,MADAl4D,SAAAH,KAAA,6EACA5P,KAAA+nH,gBAAA9/C,QAGA6oF,qBAAA,SAAAhpC,QAGA,MADA/3G,SAAAH,KAAA,+EACA5P,KAAA4nH,iBAAAE,WAMAj+G,OAAAm3F,OAAArQ,MAAAn0F,WAEAu1J,QAAA,SAAAh1H,SAGA,MADAhtB,SAAAH,KAAA,4EACA,GAAAo0E,iBAAAhkF,KAAA+8B,UAGAi1H,aAAA,SAAAj1H,SAGA,MADAhtB,SAAAH,KAAA,+EACA,GAAA62E,eAAAzmF,KAAA+8B,YAMAlzB,OAAAm3F,OAAApmE,QAAAp+B,WAEAy1J,cAAA,SAAAl6G,UAAAhnB,MAAA5H,QAGA,MADApZ,SAAAiuB,MAAA,+EACAh+B,KAAA2+E,oBAAA5mC,UAAAhnB,MAAA5H,WAMAtf,OAAAm3F,OAAAljE,QAAAthC,WAEA01J,2BAAA,WAEAniJ,QAAAiuB,MAAA,8GAGAm0H,uBAAA,WAEApiJ,QAAAiuB,MAAA,sGAGAo0H,sBAAA,SAAA9lJ,GAGA,MADAyD,SAAAH,KAAA,yFACA5P,KAAAm3C,sBAAA7qC,IAGA+lJ,mBAAA,SAAA/lJ,GAGA,MADAyD,SAAAH,KAAA,mFACA5P,KAAAurG,mBAAAj/F,IAGAgmJ,oBAAA,SAAAvhI,MAAAmmB,QAGA,MADAnnC,SAAAH,KAAA,qFACA5P,KAAAyrG,oBAAAv0D,OAAAnmB,QAGAwhI,gBAAA,SAAAjmJ,GAGA,MADAyD,SAAAH,KAAA,uFACA5P,KAAAgpC,aAAA18B,IAGA2lJ,cAAA,SAAAl6G,UAAAhnB,MAAA5H,QAGA,MADApZ,SAAAiuB,MAAA,+EACAh+B,KAAA2+E,oBAAA5mC,UAAAhnB,MAAA5H,WAMAtf,OAAAm3F,OAAArkE,QAAAngC,WAEAy1J,cAAA,SAAAl6G,UAAAhnB,MAAA5H,QAGA,MADApZ,SAAAiuB,MAAA,+EACAh+B,KAAA2+E,oBAAA5mC,UAAAhnB,MAAA5H,WAQA2yB,SAAAt/C,UAAAg2J,gBAAA,WAEAziJ,QAAAH,KAAA,yDAIA/F,OAAAm3F,OAAAjnD,SAAAv9C,WAEAi2J,eAAA,SAAA70J,MAGA,MADAmS,SAAAH,KAAA,6EACA5P,KAAAssH,gBAAA1uH,OAGA80J,YAAA,WAEA3iJ,QAAAH,KAAA,8EAGAmtF,UAAA,SAAAr2C,SAAA2hD,MAGA,MADAt4F,SAAAH,KAAA,kGACA5P,KAAA8rH,gBAAAzjB,KAAA3hD,aAMA78C,OAAA2wC,iBAAAT,SAAAv9C,WAEAm2J,YACA37I,IAAA,WAGA,MADAjH,SAAAH,KAAA,uDACA5P,KAAA+mC,SAAA2S,OAGA7oC,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,uDACA5P,KAAA+mC,SAAA2S,MAAAxqC,QAIA0jJ,eACA57I,IAAA,WAEAjH,QAAAH,KAAA,kGAGAiB,IAAA,WAEAd,QAAAH,KAAA,qGAOA/F,OAAA2wC,iBAAAiiC,IAAAjgF,WAEAixE,SACAz2D,IAAA,WAGA,MADAjH,SAAAH,KAAA,oDACA5P,KAAA08E,WAOA7yE,OAAA0xB,eAAAohD,SAAAngF,UAAA,oBAEAwa,IAAA,WAEAjH,QAAAH,KAAA,uDAGAiB,IAAA,WAEAd,QAAAH,KAAA,yDAMA/F,OAAA0xB,eAAA6zD,MAAA5yF,UAAA,wBAEAwa,IAAA,WAGA,MADAjH,SAAAH,KAAA,kEACA5P,KAAAqvF,oBAGAx+E,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,kEACA5P,KAAAqvF,mBAAAngF,SAQAisC,kBAAA3+C,UAAAq2J,QAAA,SAAA3kC,YAAA3yE,WAEAxrC,QAAAH,KAAA,mHAGAzC,KAAAouC,YAAAv7C,KAAAu7C,UAAAA,WACAv7C,KAAAiuH,eAAAC,cAMArkH,OAAA2wC,iBAAAowC,MAAApuF,WACAs2J,YACAjiJ,IAAA,WAEAd,QAAAH,KAAA,gDAIAmjJ,iBACAliJ,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,4DACA5P,KAAAy2C,OAAA7O,OAAAwT,IAAAlsC,QAIA8jJ,kBACAniJ,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,8DACA5P,KAAAy2C,OAAA7O,OAAApkC,KAAA0L,QAIA+jJ,mBACApiJ,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,gEACA5P,KAAAy2C,OAAA7O,OAAAnkC,MAAAyL,QAIAgkJ,iBACAriJ,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,4DACA5P,KAAAy2C,OAAA7O,OAAAlkC,IAAAwL,QAIAikJ,oBACAtiJ,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,kEACA5P,KAAAy2C,OAAA7O,OAAAjkC,OAAAuL,QAIAijC,kBACAthC,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,8DACA5P,KAAAy2C,OAAA7O,OAAA4E,KAAAt9B,QAIAkjC,iBACAvhC,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,4DACA5P,KAAAy2C,OAAA7O,OAAA6E,IAAAv9B,QAIAkkJ,qBACAviJ,IAAA,WAEAd,QAAAH,KAAA,oHAIA22C,YACA11C,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,iDACA5P,KAAAy2C,OAAA0R,KAAAj5C,QAIAmkJ,gBACAxiJ,IAAA,WAEAd,QAAAH,KAAA,oDAIA0jJ,gBACAziJ,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,8DACA5P,KAAAy2C,OAAAC,QAAAx3C,MAAAgQ,QAIAqkJ,iBACA1iJ,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,gEACA5P,KAAAy2C,OAAAC,QAAA5Z,OAAA5tB,UAQArF,OAAA2wC,iBAAAqC,gBAAArgD,WAEAoD,QACAoX,IAAA,WAGA,MADAjH,SAAAH,KAAA,2EACA5P,KAAA6U,MAAAjV,WAOAiK,OAAAm3F,OAAA/iD,eAAAzhD,WAEAg3J,SAAA,SAAAziI,OAEAhhB,QAAAH,KAAA,sEACA5P,KAAA+/C,SAAAhvB,QAGA0iI,YAAA,SAAAt1G,MAAAhF,MAAA2tC,iBAEA35E,KAAA25E,aAEA/2E,QAAAH,KAAA,wEAGAG,QAAAH,KAAA,4DACA5P,KAAA6/C,SAAA1B,MAAAhF,QAGAu6G,eAAA,WAEA3jJ,QAAAH,KAAA,kEACA5P,KAAAq0H,eAGAm+B,gBAAA,WAEAziJ,QAAAH,KAAA,+DAGA+jJ,eAAA,WAEA5jJ,QAAAH,KAAA,gEAMA/F,OAAA2wC,iBAAAyD,eAAAzhD,WAEAk2I,WACA17H,IAAA,WAGA,MADAjH,SAAAiuB,MAAA,iEACAh+B,KAAA40C,SAIA+9F,SACA37H,IAAA,WAGA,MADAjH,SAAAH,KAAA,+DACA5P,KAAA40C,WASA/qC,OAAA2wC,iBAAAu9C,QAAAv7F,WAEA07C,SACArnC,IAAA,WAEAd,QAAAH,KAAA,oFAIA8sB,UACAxtB,MAAA,WAGA,MADAa,SAAAH,KAAA,qFACA5P,SASA6J,OAAA2wC,iBAAAhN,SAAAhxC,WAEAo3J,YACA58I,IAAA,WAEAjH,QAAAH,KAAA,kDAGAiB,IAAA,WAEAd,QAAAH,KAAA,mDAIAikJ,SACA78I,IAAA,WAGA,MADAjH,SAAAH,KAAA,8CACA,GAAAm0B,SAKAwuG,SACAv7H,IAAA,WAEAjH,QAAAiuB,MAAA,SAAAh+B,KAAAo7B,KAAA,uEAGAvqB,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,SAAA5P,KAAAo7B,KAAA,sEACAp7B,KAAA8tC,YAro0CA,IAqo0CA5+B,UAOArF,OAAA2wC,iBAAA+X,kBAAA/1D,WAEAs3J,OACA98I,IAAA,WAGA,MADAjH,SAAAH,KAAA,8FACA,GAGAiB,IAAA,WAEAd,QAAAH,KAAA,gGAOA/F,OAAA2wC,iBAAAvL,eAAAzyC,WAEAozC,aACA54B,IAAA,WAGA,MADAjH,SAAAH,KAAA,iFACA5P,KAAA2vC,WAAAC,aAGA/+B,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,kFACA5P,KAAA2vC,WAAAC,YAAA1gC,UASArF,OAAAm3F,OAAAl0B,cAAAtwE,WAEAu3J,uBAAA,WAGA,MADAhkJ,SAAAH,KAAA,6EACA5P,KAAAszD,mBAIA8E,iBAAA,WAGA,MADAroD,SAAAH,KAAA,qFACA5P,KAAAskC,aAAA8zB,oBAIA47F,aAAA,WAGA,MADAjkJ,SAAAH,KAAA,wEACA5P,KAAAskC,aAAA8C,WAIA6sH,sBAAA,WAGA,MADAlkJ,SAAAH,KAAA,gGACA5P,KAAA2vC,WAAA34B,IAAA,sBAGAk9I,0BAAA,WAGA,MADAnkJ,SAAAH,KAAA,yGACA5P,KAAA2vC,WAAA34B,IAAA,2BAGAm9I,4BAAA,WAGA,MADApkJ,SAAAH,KAAA,6GACA5P,KAAA2vC,WAAA34B,IAAA,6BAGAo9I,8BAAA,WAGA,MADArkJ,SAAAH,KAAA,oHACA5P,KAAA2vC,WAAA34B,IAAA,kCAGAq9I,+BAAA,WAGA,MADAtkJ,SAAAH,KAAA,sHACA5P,KAAA2vC,WAAA34B,IAAA,mCAGAs9I,oBAAA,WAGA,MADAvkJ,SAAAH,KAAA,6FACA5P,KAAA2vC,WAAA34B,IAAA,qBAGA03C,uBAAA,WAGA,MADA3+C,SAAAH,KAAA,uFACA5P,KAAAskC,aAAAivB,gBAGAghG,wBAAA,WAGA,MADAxkJ,SAAAH,KAAA,uGACA5P,KAAA2vC,WAAA34B,IAAA,2BAGAw9I,kBAAA,SAAA37E,SAEA9oE,QAAAH,KAAA,uEACA5P,KAAAq2C,eAAAwiC,UAGAxH,aAAA,WAEAthE,QAAAH,KAAA,2DAGA6kJ,aAAA,WAEA1kJ,QAAAH,KAAA,2DAGA8kJ,cAAA,WAEA3kJ,QAAAH,KAAA,4DAGA+kJ,gBAAA,WAEA5kJ,QAAAH,KAAA,gEAMA/F,OAAA2wC,iBAAAsyB,cAAAtwE,WAEA6yD,kBACAr4C,IAAA,WAEA,MAAAhX,MAAAg3C,UAAAjB,SAGAllC,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,qEACA5P,KAAAg3C,UAAAjB,QAAA7mC,QAIAo+C,eACAt2C,IAAA,WAEA,MAAAhX,MAAAg3C,UAAA5b,MAGAvqB,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,+DACA5P,KAAAg3C,UAAA5b,KAAAlsB,QAIA0lJ,mBACA59I,IAAA,WAEA,MAAAhX,MAAAg3C,UAAAgqB,UAGAnwD,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,uEACA5P,KAAAg3C,UAAAgqB,SAAA9xD,UAMArF,OAAA2wC,iBAAA7I,eAAAn1C,WAEAwkE,UACAhqD,IAAA,WAEA,MAAAhX,MAAA8zC,mBAAAutB,cAAAF,cAGAtwD,IAAA,SAAAmwD,UAEA,GAAA9xD,OAAA8xD,WAAAG,YACApxD,SAAAH,KAAA,0FAAAV,MAAA,KACAlP,KAAA8zC,mBAAA5kC,UASArF,OAAA2wC,iBAAA3d,kBAAArgC,WAEAw+B,OACAhkB,IAAA,WAGA,MADAjH,SAAAH,KAAA,0DACA5P,KAAAm9B,QAAAnC,OAGAnqB,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,0DACA5P,KAAAm9B,QAAAnC,MAAA9rB,QAIA+rB,OACAjkB,IAAA,WAGA,MADAjH,SAAAH,KAAA,0DACA5P,KAAAm9B,QAAAlC,OAGApqB,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,0DACA5P,KAAAm9B,QAAAlC,MAAA/rB,QAIAgsB,WACAlkB,IAAA,WAGA,MADAjH,SAAAH,KAAA,kEACA5P,KAAAm9B,QAAAjC,WAGArqB,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,kEACA5P,KAAAm9B,QAAAjC,UAAAhsB,QAIAisB,WACAnkB,IAAA,WAGA,MADAjH,SAAAH,KAAA,kEACA5P,KAAAm9B,QAAAhC,WAGAtqB,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,kEACA5P,KAAAm9B,QAAAhC,UAAAjsB,QAIAmsB,YACArkB,IAAA,WAGA,MADAjH,SAAAH,KAAA,oEACA5P,KAAAm9B,QAAA9B,YAGAxqB,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,oEACA5P,KAAAm9B,QAAA9B,WAAAnsB,QAIAia,QACAnS,IAAA,WAGA,MADAjH,SAAAH,KAAA,4DACA5P,KAAAm9B,QAAAhU,QAGAtY,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,4DACA5P,KAAAm9B,QAAAhU,OAAAja,QAIAktB,QACAplB,IAAA,WAGA,MADAjH,SAAAH,KAAA,4DACA5P,KAAAm9B,QAAAf,QAGAvrB,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,4DACA5P,KAAAm9B,QAAAf,OAAAltB,QAIAjE,QACA+L,IAAA,WAGA,MADAjH,SAAAH,KAAA,4DACA5P,KAAAm9B,QAAAlyB,QAGA4F,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,4DACA5P,KAAAm9B,QAAAlyB,OAAAiE,QAIAksB,MACApkB,IAAA,WAGA,MADAjH,SAAAH,KAAA,wDACA5P,KAAAm9B,QAAA/B,MAGAvqB,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,wDACA5P,KAAAm9B,QAAA/B,KAAAlsB,QAIAmtB,iBACArlB,IAAA,WAGA,MADAjH,SAAAH,KAAA,8EACA5P,KAAAm9B,QAAAd,iBAGAxrB,IAAA,SAAA3B,OAEAa,QAAAH,KAAA,8EACA5P,KAAAm9B,QAAAd,gBAAAntB,UASAgjF,MAAA11F,UAAA+sI,KAAA,SAAAD,MAEAv5H,QAAAH,KAAA,yEACA,IAAA+jC,OAAA3zC,IAOA,QANA,GAAAixF,cACAs4C,KAAAD,KAAA,SAAAlxF,QAEAzE,MAAA8tG,UAAArpG,UAGAp4C,MAIA+yF,cAAAv2F,UAAAq4J,QAAA,WAGA,MADA9kJ,SAAAH,KAAA,+DACA5P,KAAAojJ,oBAMAhyD,WAAA50F,UAAAs4J,cAAA,SAAA91H,SAAA2I,OAGA,MADA53B,SAAAH,KAAA,wDACA5P,KAAA20C,OAAA3V,SAAA2I,OAMA,IAAAotH,gBAEAj3C,MAAA,SAAAk3C,UAAAttE,UAAAuoC,qBAEAlgH,QAAAH,KAAA,kIACA,IAAAsnC,OAEAwwC,WAAAtzC,SAEAszC,UAAA/sC,kBAAA+sC,UAAAoD,eAEA5zC,OAAAwwC,UAAAxwC,OACAwwC,UAAAA,UAAAr1C,UAIA2iH,UAAAl3C,MAAAp2B,UAAAxwC,OAAA+4E,sBAIAh/E,OAAA,SAAAoB,UAGA,MADAtiC,SAAAH,KAAA,6FACAyiC,SAAApB,WAMAgkH,YAEAxpB,gBAAAt+H,GAEAimI,YAAA,SAAAppD,IAAAjvD,QAAA0uD,OAAAE,SAEA55E,QAAAH,KAAA,uFAEA,IAAAtO,QAAA,GAAAqpF,cACArpF,QAAAoqI,eAAA1rI,KAAAyrI,YAEA,IAAAtuG,SAAA77B,OAAAioI,KAAAv/C,IAAAP,WAAAt8E,GAAAw8E,QAIA,OAFA5uD,WAAAoC,QAAApC,QAAAA,SAEAoC,SAIA+3H,gBAAA,SAAAvpB,KAAA5wG,QAAA0uD,OAAAE,SAEA55E,QAAAH,KAAA,+FAEA,IAAAtO,QAAA,GAAAopF,kBACAppF,QAAAoqI,eAAA1rI,KAAAyrI,YAEA,IAAAtuG,SAAA77B,OAAAioI,KAAAoC,KAAAliD,WAAAt8E,GAAAw8E,QAIA,OAFA5uD,WAAAoC,QAAApC,QAAAA,SAEAoC,SAIAg4H,sBAAA,WAEAplJ,QAAAiuB,MAAA,0FAIAo3H,0BAAA,WAEArlJ,QAAAiuB,MAAA,8FAgDA50B,SAAAm0B,sBAAAA,sBACAn0B,QAAAyzB,kBAAAA,kBACAzzB,QAAA0jE,cAAAA,cACA1jE,QAAAu5C,UAAAA,UACAv5C,QAAAmsE,YAAAA,YACAnsE,QAAAqoE,cAAAA,cACAroE,QAAA0jD,YAAAA,YACA1jD,QAAA+yE,QAAAA,QACA/yE,QAAAgzE,IAAAA,IACAhzE,QAAAizE,MAAAA,MACAjzE,QAAAkzE,UAAAA,UACAlzE,QAAAozE,OAAAA,OACApzE,QAAAqzE,IAAAA,IACArzE,QAAA2zE,YAAAA,YACA3zE,QAAAuzE,SAAAA,SACAvzE,QAAA0zE,KAAAA,KACA1zE,QAAAq4C,KAAAA,KACAr4C,QAAAq0E,aAAAA,aACAr0E,QAAAs0E,SAAAA,SACAt0E,QAAAo0E,KAAAA,KACAp0E,QAAAu0E,OAAAA,OACAv0E,QAAAw0E,MAAAA,MACAx0E,QAAAy0E,aAAAA,aACAz0E,QAAA60B,YAAAA,YACA70B,QAAA40E,kBAAAA,kBACA50E,QAAA+0B,YAAAA,YACA/0B,QAAAuhC,cAAAA,cACAvhC,QAAA60E,aAAAA,aACA70E,QAAAyxB,QAAAA,QACAzxB,QAAAkhF,wBAAAA,wBACAlhF,QAAAohF,kBAAAA,kBACAphF,QAAAshF,kBAAAA,kBACAthF,QAAAuhF,cAAAA,cACAvhF,QAAAilF,aAAAA,aACAjlF,QAAAykF,eAAAA,eACAzkF,QAAA0kF,qBAAAA,qBACA1kF,QAAAihF,sBAAAA,sBACAjhF,QAAAogF,eAAAA,eACApgF,QAAA+kF,WAAAA,WACA/kF,QAAAqhF,YAAAA,YACArhF,QAAA4nF,WAAAA,WACA5nF,QAAA+gF,WAAAA,WACA/gF,QAAA2kF,OAAAA,OACA3kF,QAAAggI,MAAAA,MACAhgI,QAAA6nF,YAAAA,YACA7nF,QAAA4hF,gBAAAA,gBACA5hF,QAAA6hF,UAAAA,UACA7hF,QAAA+hF,WAAAA,WACA/hF,QAAAmiF,cAAAA,cACAniF,QAAAyhF,gBAAAA,gBACAzhF,QAAAgiF,uBAAAA,uBACAhiF,QAAAiiF,iBAAAA,iBACAjiF,QAAAkiF,aAAAA,aACAliF,QAAA2hF,YAAAA,YACA3hF,QAAAwhF,MAAAA,MACAxhF,QAAA8nF,aAAAA,aACA9nF,QAAA+xC,kBAAAA,kBACA/xC,QAAA4xC,mBAAAA,mBACA5xC,QAAAgoF,WAAAA,WACAhoF,QAAA66D,YAAAA,YACA76D,QAAA2xC,OAAAA,OACA3xC,QAAAwoF,cAAAA,cACAxoF,QAAAwpF,gBAAAA,gBACAxpF,QAAAyoF,aAAAA,aACAzoF,QAAA2pF,cAAAA,cACA3pF,QAAA8oF,MAAAA,MACA9oF,QAAA8jF,oBAAAA,oBACA9jF,QAAAkkF,oBAAAA,oBACAlkF,QAAAgkF,wBAAAA,wBACAhkF,QAAAikF,oBAAAA,oBACAjkF,QAAAokF,mBAAAA,mBACApkF,QAAAmkF,qBAAAA,qBACAnkF,QAAAkqF,cAAAA,cACAlqF,QAAAirF,gBAAAA,gBACAjrF,QAAAqkF,cAAAA,cACArkF,QAAAsjF,eAAAA,eACAtjF,QAAAyrF,qBAAAA,qBACAzrF,QAAAsuF,eAAAA,eACAtuF,QAAAskF,cAAAA,cACAtkF,QAAA2uF,QAAAA,QACA3uF,QAAA4uF,wBAAAA,wBACA5uF,QAAA60C,eAAAA,eACA70C,QAAAyyC,gBAAAA,gBACAzyC,QAAA0yC,SAAAA,SACA1yC,QAAA6uF,2BAAAA,2BACA7uF,QAAAgvF,2BAAAA,2BACAhvF,QAAA+uF,kBAAAA,kBACA/uF,QAAAivF,yBAAAA,yBACAjvF,QAAAqyC,MAAAA,MACAryC,QAAA2wC,SAAAA,SACA3wC,QAAAkvF,UAAAA,UACAlvF,QAAAywC,OAAAA,OACAzwC,QAAAuxB,gBAAAA,gBACAvxB,QAAA4vF,MAAAA,MACA5vF,QAAA+jF,4BAAAA,4BACA/jF,QAAAijF,kBAAAA,kBACAjjF,QAAAkjF,oBAAAA,oBACAljF,QAAA4iF,iBAAAA,iBACA5iF,QAAAoiF,YAAAA,YACApiF,QAAAo4C,SAAAA,SACAp4C,QAAAwF,KAAA8sB,MACAtyB,QAAAgwF,UAAAA,UACAhwF,QAAAiwF,YAAAA,YACAjwF,QAAAgoC,MAAAA,MACAhoC,QAAAmoC,QAAAA,QACAnoC,QAAA4nC,OAAAA,OACA5nC,QAAAg4C,IAAAA,IACAh4C,QAAA20B,QAAAA,QACA30B,QAAA+nC,QAAAA,QACA/nC,QAAA2nC,KAAAA,KACA3nC,QAAA66B,KAAAA,KACA76B,QAAAk4C,MAAAA,MACAl4C,QAAAqwC,MAAAA,MACArwC,QAAAuzB,QAAAA,QACAvzB,QAAA00B,QAAAA,QACA10B,QAAAwxB,QAAAA,QACAxxB,QAAAs0B,WAAAA,WACAt0B,QAAA26B,MAAAA,MACA36B,QAAAkwF,sBAAAA,sBACAlwF,QAAAowF,oBAAAA,oBACApwF,QAAAywF,gBAAAA,gBACAzwF,QAAA8wF,eAAAA,eACA9wF,QAAAmxF,iBAAAA,iBACAnxF,QAAAqxF,oBAAAA,oBACArxF,QAAAuxF,sBAAAA,sBACAvxF,QAAA0xF,WAAAA,WACA1xF,QAAA8xF,gBAAAA,gBACA9xF,QAAAiyF,kBAAAA,kBACAjyF,QAAAkyF,uBAAAA,uBACAlyF,QAAAqyF,aAAAA,aACAryF,QAAA+yF,UAAAA,UACA/yF,QAAAgzF,WAAAA,WACAhzF,QAAAmzF,YAAAA,YACAnzF,QAAAqzF,YAAAA,YACArzF,QAAA8zF,WAAAA,WACA9zF,QAAA80F,iBAAAA,iBACA90F,QAAA+0F,kBAAAA,kBACA/0F,QAAAg1F,sBAAAA,sBACAh1F,QAAAi1F,WAAAA,WACAj1F,QAAAk1F,SAAAA,SACAl1F,QAAAumF,aAAAA,aACAvmF,QAAAgnF,YAAAA,YACAhnF,QAAAinF,iBAAAA,iBACAjnF,QAAAmnF,qBAAAA,qBACAnnF,QAAAkmF,UAAAA,UACAlmF,QAAAunF,MAAAA,MACAvnF,QAAAonF,KAAAA,KACApnF,QAAAwnF,UAAAA,UACAxnF,QAAA2nF,KAAAA,KACA3nF,QAAAomF,UAAAA,UACApmF,QAAAgmF,MAAAA,MACAhmF,QAAA+9E,WAAAA,WACA/9E,QAAA+mJ,WAAAA,WACA/mJ,QAAAu/D,WAAAA,WACAv/D,QAAA80E,kBAAAA,kBACA90E,QAAAw1E,mBAAAA,mBACAx1E,QAAA21E,yBAAAA,yBACA31E,QAAA83E,oBAAAA,oBACA93E,QAAA+3E,0BAAAA,0BACA/3E,QAAAg4E,mBAAAA,mBACAh4E,QAAAi4E,yBAAAA,yBACAj4E,QAAAk4E,oBAAAA,oBACAl4E,QAAAm4E,0BAAAA,0BACAn4E,QAAAo4E,qBAAAA,qBACAp4E,QAAAq4E,2BAAAA,2BACAr4E,QAAAi2E,mBAAAA,mBACAj2E,QAAAk2E,yBAAAA,yBACAl2E,QAAAs4E,aAAAA,aACAt4E,QAAA44E,mBAAAA,mBACA54E,QAAAy5E,kBAAAA,kBACAz5E,QAAA65E,wBAAAA,wBACA75E,QAAAy6E,cAAAA,cACAz6E,QAAA26E,oBAAAA,oBACA36E,QAAAg7E,aAAAA,aACAh7E,QAAAk7E,mBAAAA,mBACAl7E,QAAA27E,eAAAA,eACA37E,QAAAg8E,qBAAAA,qBACAh8E,QAAAo8E,aAAAA,aACAp8E,QAAAy8E,mBAAAA,mBACAz8E,QAAA62C,cAAAA,cACA72C,QAAA82C,oBAAAA,oBACA92C,QAAA68E,cAAAA,cACA78E,QAAA+8E,oBAAAA,oBACA/8E,QAAAq9E,cAAAA,cACAr9E,QAAAs9E,oBAAAA,oBACAt9E,QAAA46E,gBAAAA,gBACA56E,QAAA86E,sBAAAA,sBACA96E,QAAAo+E,cAAAA,cACAp+E,QAAA4/E,aAAAA,aACA5/E,QAAA6/E,mBAAAA,mBACA7/E,QAAA8+E,iBAAAA,iBACA9+E,QAAAk/E,uBAAAA,uBACAl/E,QAAA8/E,eAAAA,eACA9/E,QAAA+/E,qBAAAA,qBACA//E,QAAAg1C,YAAAA,YACAh1C,QAAAq1C,kBAAAA,kBACAr1C,QAAA0pD,eAAAA,eACA1pD,QAAAmzE,eAAAA,eACAnzE,QAAAggF,kBAAAA,kBACAhgF,QAAA6lC,eAAAA,cACA7lC,SAAAypD,eAAAA,eACAzpD,QAAAspD,qBAAAA,qBACAtpD,QAAAqpD,qBAAAA,qBACArpD,QAAAmpD,kBAAAA,kBACAnpD,QAAAopD,iBAAAA,iBACAppD,QAAAipD,mBAAAA,mBACAjpD,QAAAkpD,oBAAAA,oBACAlpD,QAAAgnC,kBAAAA,kBACAhnC,QAAAunC,qBAAAA,qBACAvnC,QAAAm3C,kBAAAA,kBACAn3C,QAAAwpD,mBAAAA,mBACAxpD,QAAAupD,kBAAAA,kBACAvpD,QAAAokC,SAAAA,SACApkC,QAAAs0C,uBAAAA,uBACAt0C,QAAAq0C,uBAAAA,uBACAr0C,QAAAo0C,sBAAAA,sBACAp0C,QAAAm0C,qBAAAA,qBACAn0C,QAAAk0C,sBAAAA,sBACAl0C,QAAAi0C,qBAAAA,qBACAj0C,QAAA+zC,4BAAAA,4BACA/zC,QAAA8zC,qBAAAA,qBACA9zC,QAAA6zC,oBAAAA,oBACA7zC,QAAAyzC,gBAAAA,gBACAzzC,QAAA2tE,SAAAA,SACA3tE,QAAAm4F,MAAAA,MACAn4F,QAAA63D,aAAAA,aACA73D,QAAA+3D,aAAAA,aACA/3D,QAAAi4D,cAAAA,cACAj4D,QAAAisJ,kBA921CA,EA+21CAjsJ,QAAAoyE,qBAAAA,qBACApyE,QAAAksJ,sBA921CA,EA+21CAlsJ,QAAAmsJ,eA921CA,EA+21CAnsJ,QAAA6sC,aAAAA,aACA7sC,QAAAmkD,iBAAAA,iBACAnkD,QAAAykC,UAAAA,UACAzkC,QAAA2qC,SAAAA,SACA3qC,QAAAyqC,WAAAA,WACAzqC,QAAAosJ,YA921CA;sBA+21CApsJ,QAAAqsJ,cA921CA,EA+21CArsJ,QAAA4kC,SAAAA,SACA5kC,QAAAyyF,WAAAA,WACAzyF,QAAAkxF,aAAAA,aACAlxF,QAAA41D,WAAAA,WACA51D,QAAAukC,eAAAA,eACAvkC,QAAAg2D,iBAAAA,iBACAh2D,QAAAu2D,oBAAAA,oBACAv2D,QAAA22D,iBAAAA,iBACA32D,QAAA61D,eAAAA,eACA71D,QAAAglC,YAAAA,YACAhlC,QAAAihE,iBAAAA,iBACAjhE,QAAAmhE,wBAAAA,wBACAnhE,QAAAqjE,YAAAA,YACArjE,QAAAsjE,YAAAA,YACAtjE,QAAAqhE,WAAAA,WACArhE,QAAAshE,UAAAA,UACAthE,QAAAuhE,eAAAA,eACAvhE,QAAAwhE,uBAAAA,uBACAxhE,QAAA8kC,eAAAA,eACA9kC,QAAA+kC,uBAAAA,uBACA/kC,QAAAyhE,eAAAA,eACAzhE,QAAA2hE,uBAAAA,uBACA3hE,QAAA6hE,eAAAA,eACA7hE,QAAA+hE,uBAAAA,uBACA/hE,QAAAiiE,uBAAAA,uBACAjiE,QAAA2yD,WAAAA,WACA3yD,QAAA6yD,YAAAA,YACA7yD,QAAA+yD,UAAAA,UACA/yD,QAAAklC,eAAAA,eACAllC,QAAAkzD,WAAAA,WACAlzD,QAAAozD,kBAAAA,kBACApzD,QAAAszD,aAAAA,aACAtzD,QAAAwzD,cAAAA,cACAxzD,QAAA23C,kBAAAA,kBACA33C,QAAA6kD,aAAAA,aACA7kD,QAAA8kD,aAAAA,aACA9kD,QAAAsmD,cAAAA,cACAtmD,QAAAgiD,kBAAAA,kBACAhiD,QAAAiiD,oBAAAA,oBACAjiD,QAAAkiD,sBAAAA,sBACAliD,QAAAmiD,kBAAAA,kBACAniD,QAAAgvI,UA921CA,IA+21CAhvI,QAAAi1B,sBAAAA,sBACAj1B,QAAAukD,sBAAAA,sBACAvkD,QAAA0kD,iCAAAA,iCACA1kD,QAAA2kD,iCAAAA,iCACA3kD,QAAA4kD,2BAAAA,2BACA5kD,QAAAwkD,wBAAAA,wBACAxkD,QAAAykD,wBAAAA,wBACAzkD,QAAAw/D,eAAAA,eACAx/D,QAAA2yB,oBAAAA,oBACA3yB,QAAA0/D,uBAAAA,uBACA1/D,QAAA80B,cAAAA,cACA90B,QAAAgsD,2BAAAA,2BACAhsD,QAAAisD,0BAAAA,0BACAjsD,QAAA4yB,aAAAA,aACA5yB,QAAA8/D,0BAAAA,0BACA9/D,QAAA6yB,yBAAAA,yBACA7yB,QAAA+yB,iBAAAA,iBACA/yB,QAAAugE,SAAAA,SACAvgE,QAAAwgE,UAAAA,UACAxgE,QAAA0vD,kBAAAA,kBACA1vD,QAAAygE,QAAAA,QACAzgE,QAAA2vD,gBAAAA,gBACA3vD,QAAA2uD,UAAAA,UACA3uD,QAAA4uD,cAAAA,cACA5uD,QAAAigE,sBAAAA,sBACAjgE,QAAAmgE,sBAAAA,sBACAngE,QAAAqgE,qBAAAA,qBACArgE,QAAA8vD,mBAAAA,mBACA9vD,QAAA2gE,YAAAA,YACA3gE,QAAAouD,UAAAA,UACApuD,QAAA8yB,WAAAA,WACA9yB,QAAA6gE,gBAAAA,gBACA7gE,QAAA+gE,qBAAAA,qBACA/gE,QAAAu4F,WAAAA,WACAv4F,QAAAyvD,YAAAA,YACAzvD,QAAA4vD,mBAAAA,mBACA5vD,QAAAmiE,qBAAAA,qBACAniE,QAAAoiE,sBAAAA,sBACApiE,QAAAqiE,sBAAAA,sBACAriE,QAAAsiE,sBAAAA,sBACAtiE,QAAA2iE,wBAAAA,wBACA3iE,QAAA4iE,wBAAAA,wBACA5iE,QAAA6iE,yBAAAA,yBACA7iE,QAAA8iE,yBAAAA,yBACA9iE,QAAAmjE,gBAAAA,gBACAnjE,QAAAssJ,SA921CA,KA+21CAtsJ,QAAA0tF,WAAAA,WACA1tF,QAAAusJ,aA921CA,KA+21CAvsJ,QAAAwsJ,oBA921CA,KA+21CAxsJ,QAAAysJ,kBA921CA,KA+21CAzsJ,QAAA0sJ,kBA921CA,KA+21CA1sJ,QAAA8sF,oBAAAA,oBACA9sF,QAAA2sJ,gBA921CA,KA+21CA3sJ,QAAA4sJ,iBA921CA,KA+21CA5sJ,QAAAw4C,kBAAAA,kBACAx4C,QAAAoxE,sBAAAA,sBACApxE,QAAAsxE,oBAAAA,oBACAtxE,QAAAqzB,eAAAA,eACArzB,QAAAmhD,aAAAA,aACAnhD,QAAAwhD,cAAAA,cACAxhD,QAAAohD,aAAAA,aACAphD,QAAA6sJ,eA921CA,KA+21CA7sJ,QAAAqhD,cAAAA,cACArhD,QAAAshD,eAAAA,eACAthD,QAAAuhD,aAAAA,aACAvhD,QAAAknC,kBAAAA,kBACAlnC,QAAAysC,iBAAAA,iBACAzsC,QAAA8sJ,aAAA93G,YACAh1C,QAAAo1F,MAAAA,MACAp1F,QAAA+sJ,UApyDA,EAqyDA/sJ,QAAAgtJ,WAnyDA,EAoyDAhtJ,QAAAq1F,iBAAAA,iBACAr1F,QAAAu1F,cAAAA,cACAv1F,QAAAqvF,WAAAA,WACArvF,QAAAy1F,SAAAA,SACAz1F,QAAA01F,eAAAA,eACA11F,QAAA21F,mBAAAA,mBACA31F,QAAA41F,sBAAAA,sBACA51F,QAAA61F,uBAAAA,uBACA71F,QAAA81F,OAAAA,OACA91F,QAAA+1F,uBAAAA,uBACA/1F,QAAAi2F,cAAAA,cACAj2F,QAAAk2F,eAAAA,eACAl2F,QAAAm2F,sBAAAA,sBACAn2F,QAAAo2F,eAAAA,eACAp2F,QAAAq2F,gBAAAA,gBACAr2F,QAAAs2F,eAAAA,eACAt2F,QAAAu2F,gBAAAA,gBACAv2F,QAAAw2F,iBAAAA,iBACAx2F,QAAAy2F,iBAAAA,iBACAz2F,QAAA02F,mBAAAA,mBACA12F,QAAA22F,aAAAA,aACA32F,QAAA42F,OAAAA,OACA52F,QAAA62F,kBAAAA,kBACA72F,QAAA82F,YAAAA,YACA92F,QAAA+2F,gBAAAA,gBACA/2F,QAAAg3F,UAAAA,UACAh3F,QAAAi3F,oBAAAA,oBACAj3F,QAAA2rJ,cAAAA,cACA3rJ,QAAA6rJ,WAAAA,WACA7rJ,QAAAk3F,UAAAA,UACAl3F,QAAAw3F,eAAAA,eAEA/2F,OAAA0xB,eAAAnyB,QAAA,cAAA8F,OAAA,MCxs2CAwrB,MAAA27H,qBAAA,SAAAnnH,YAEAxU,MAAA8S,SAAA5mC,KAAA5G,MAEAA,KAAAo7B,KAAA,uBAEAp7B,KAAA6mC,MAAA,GAAAnM,OAAAqJ,MAAA,UACA/jC,KAAAyjC,QAAA,aAEAzjC,KAAAmwC,UAAAjB,aAIAxU,MAAA27H,qBAAA75J,UAAAqN,OAAA88F,OAAAjsE,MAAA8S,SAAAhxC,WACAk+B,MAAA27H,qBAAA75J,UAAAsvF,YAAApxD,MAAA27H,qBACA37H,MAAA27H,qBAAA75J,UAAA85J,wBAAA,EAEA57H,MAAA27H,qBAAA75J,UAAAutB,MAAA,WAEA,GAAA8iB,UAAA,GAAAnS,OAAA27H,oBAMA,OAJAxpH,UAAA1D,KAAAnpC,MACA6sC,SAAAhG,MAAAsC,KAAAnpC,KAAA6mC,OACAgG,SAAApJ,QAAAzjC,KAAAyjC,QAEAoJ,UAMAnS,MAAAkmE,eAAA,SAAA1xD,YAoZA,QAAAqnH,mBAEAC,cAAAxyH,OAAA,EAAA,EAAA,GACAyyH,mBAAAzyH,OAAA,EAAA,EAAA,GACA0yH,aAAA1yH,OAAA,EAAA,EAAA,EAEA,KAAA,GAAAtgB,GAAA,EAAAizI,GAAAC,QAAAh3J,OAAA8jB,EAAAizI,GAAAjzI,IAAA,CAEA,GAAA8yB,OAAAogH,QAAAlzI,GACAmzI,WAAArgH,MAAA3P,KAEA2P,OAAAoR,eAEA4uG,cAAAj5J,IAAAs5J,YAEArgH,MAAAqR,mBAIA4uG,mBAAAl5J,IAAAs5J,YAEArgH,MAAAvE,cAIAykH,aAAAn5J,IAAAs5J,aAQA,QAAAC,gBAAA/rH,SAAAsG,OAAAxK,OAEA,IAAA,GAAAnjB,GAAA,EAAAizI,GAAAC,QAAAh3J,OAAA8jB,EAAAizI,GAAAjzI,IAAA,CAEA,GAAA8yB,OAAAogH,QAAAlzI,EAIA,IAFAqzI,YAAA5tH,KAAAqN,MAAA3P,OAEA2P,MAAAqR,mBAAA,CAEA,GAAAmvG,eAAAtmF,SAAAv5B,sBAAAX,MAAAzN,aAAA0gB,YAEAk7B,OAAAtzC,OAAA42C,IAAA+uE,cAEA,IAAAryE,QAAA,EAAA,QAEAA,SAAAnuC,MAAAmR,UAEA9gB,MAAAtpC,IAAAw5J,YAAAhvG,eAAA48B,aAEA,IAAAnuC,MAAAvE,aAAA,CAEA,GAAA+kH,eAAAtmF,SAAAv5B,sBAAAX,MAAAzN,aAEA47C,OAAAtzC,OAAA42C,IAAAvX,SAAAyO,WAAA63E,cAAAjsH,UAAA0e,YAEA,IAAAk7B,QAAA,EAAA,QAIA,IAAA,IAFAA,QAAA,GAAAnuC,MAAAkQ,SAAA,EAAA,EAAA93C,KAAAY,IAAAu7B,SAAAq5D,WAAA4yD,eAAAxgH,MAAAkQ,SAAA,IAEA,QAEAi+B,SAAAnuC,MAAAmR,UAEA9gB,MAAAtpC,IAAAw5J,YAAAhvG,eAAA48B,WAQA,QAAAsyE,cAAAxoE,GAAAy+B,QAAArgF,UAEAqqH,WAAArqH,SAAAjG,SACAyD,YAAAwC,SAAAvC,SAEA,IAAA6iE,QAAA+f,QAAApmF,MAAAtvB,EAAA2/I,iBACA/pD,OAAA8f,QAAApmF,MAAA7sB,EAAAm9I,kBAEAC,KAAAzoJ,KAAA8kE,KAAAy5B,OAAAA,OAAAC,OAAAA,OAIA,IAHAkqD,SAAA9nJ,IAAAqB,IAAA49E,GAAAj3E,EAAA6/I,KAAA5oE,GAAAx0E,EAAAo9I,MACAC,SAAApjJ,IAAArD,IAAA49E,GAAAj3E,EAAA6/I,KAAA5oE,GAAAx0E,EAAAo9I,MAEAxqH,SAAAuuF,iBAAA,CAEA,GAAAj+F,SAAA0P,SAAAriC,GAEA,IAAA,OAAA2yB,QAAA,CAEA,GAAA4vB,SAAAwqG,UAAAp6H,QAAAsF,GASA,QAPAt1B,KAAA4/C,SAAAA,QAAA9yB,UAAAkD,QAAAlD,UAEA8yB,QAAAyqG,iBAAAr6H,SACAo6H,UAAAp6H,QAAAsF,IAAAsqB,aAIA5/C,KAAA4/C,QAAAniB,OAAA,CAEA6sH,aAAA1qG,QAAAniB,OAEA,IAAA8sH,QAAAv6H,QAAArC,MAEA68H,GAAAD,OAAAx4J,MAAAi+B,QAAAhU,OAAA3R,EACAogJ,GAAAF,OAAA56H,OAAAK,QAAAhU,OAAAlP,EAEAuxF,GAAAksD,OAAAx4J,MAAAi+B,QAAAf,OAAA5kB,EACAk0F,GAAAgsD,OAAA56H,OAAAK,QAAAf,OAAAniB,EAEA0pE,GAAAwpB,OAAA3B,GACA5nB,GAAAwpB,OAAA1B,EAEAz0B,UAAA4gF,OACA5gF,SAAA8lB,UAAAtO,GAAAj3E,EAAAi3E,GAAAx0E,GACA,IAAA4yB,SAAA9F,UAAAkwC,SAAA6gF,OAAAjrH,SAAA9F,UACAkwC,SAAA8lB,WAAAoQ,OAAA,GAAAC,OAAA,GACAn2B,SAAAnwC,MAAA68C,GAAAC,IACA3M,SAAA8lB,WAAA46D,IAAAC,IACA3gF,SAAAprC,SAAA8rH,GAAAC,GAAApsD,GAAAE,IACAz0B,SAAA2E,eAQA67E,cAAA5qH,SAAAhG,MAAAk2E,YAEA9lC,SAAA4gF,OACA5gF,SAAA8lB,UAAAtO,GAAAj3E,EAAAi3E,GAAAx0E,GACA,IAAA4yB,SAAA9F,UAAAkwC,SAAA6gF,OAAAjrH,SAAA9F,UACAkwC,SAAAnwC,MAAAqmE,QAAAC,QACAn2B,SAAAprC,UAAA,IAAA,GAAA,EAAA,GACAorC,SAAA2E,cAIA/uC,UAAAypH,wBAEAyB,eAAAlrH,SAAAhG,MAAAk2E,YACA06C,aAAA5qH,SAAAhG,MAAAk2E,YAEA9lC,SAAA4gF,OACA5gF,SAAA8lB,UAAAtO,GAAAj3E,EAAAi3E,GAAAx0E,GACA,IAAA4yB,SAAA9F,UAAAkwC,SAAA6gF,OAAAjrH,SAAA9F,UACAkwC,SAAAnwC,MAAAqmE,OAAAC,QAEAvgE,SAAApJ,QAAAwzC,UAEAA,SAAA2E,WAEA/uC,SAAAsoC,mBAEAsiF,aAAA5qH,SAAAhG,MAAAk2E,YAEA9lC,SAAA4gF,OACA5gF,SAAA8lB,UAAAtO,GAAAj3E,EAAAi3E,GAAAx0E,GACA,IAAA4yB,SAAA9F,UAAAkwC,SAAA6gF,OAAAjrH,SAAA9F,UACAkwC,SAAAnwC,MAAAqmE,OAAAtgE,SAAA9K,MAAAqrE,OAAAvgE,SAAA9K,MACAk1C,SAAAprC,UAAA,IAAA,GAAA,EAAA,GACAorC,SAAA2E,WAgBA,QAAAo8E,YAAAvpE,GAAAc,GAAA29B,QAAArgF,UASA,GAPAqqH,WAAArqH,SAAAjG,SACAyD,YAAAwC,SAAAvC,UAEA2sC,SAAAghF,YACAhhF,SAAAkkE,OAAA1sD,GAAA1kD,eAAAvyB,EAAAi3E,GAAA1kD,eAAA9vB,GACAg9D,SAAAmkE,OAAA7rD,GAAAxlD,eAAAvyB,EAAA+3E,GAAAxlD,eAAA9vB,GAEA4yB,SAAAkoC,oBAAA,CAMA,GAJAvT,aAAA30B,SAAAuC,WACA8oH,WAAArrH,SAAAywC,SACA66E,YAAAtrH,SAAA0wC,UAEA1wC,SAAAkB,eAAArT,MAAA4/D,aAEAy9D,eAAAlrH,SAAAhG,MAAAk2E,gBAEA,CAEA,GAAAq7C,aAAAlrC,QAAAn/E,aAAA,GAAAgvE,WACAs7C,YAAAnrC,QAAAn/E,aAAA,GAAAgvE,UAEA,IAAAq7C,cAAAC,YAEAN,eAAAK,iBAEA,CAEA,IAEA,GAAAE,MAAArhF,SAAAshF,qBACA9pE,GAAA1kD,eAAAvyB,EACAi3E,GAAA1kD,eAAA9vB,EACAs1E,GAAAxlD,eAAAvyB,EACA+3E,GAAAxlD,eAAA9vB,EAEAq+I,MAAAE,aAAA,EAAAJ,aACAE,KAAAE,aAAA,EAAAH,aAEA,MAAAI,WAEAH,KAAAF,YAIAL,eAAAO,OAMAzrH,SAAAooC,sBAEAyjF,aAAA7rH,SAAAqpC,SAAArpC,SAAAupC,UAIAa,SAAA0hF,SACArB,SAAArxC,eAAA,EAAAp5E,SAAAuC,WAEAvC,SAAAooC,sBAEAyjF,iBAQA,QAAAE,aAAAnqE,GAAAc,GAAAe,GAAAupC,IAAA5pF,IAAA6pF,IAAA5M,QAAArgF,UAcA,GAZAghC,MAAAjqC,KAAA6D,OAAAlD,UAAA,EACAspC,MAAAjqC,KAAA6D,OAAAjD,QAEA0yH,WAAArqH,SAAAjG,SACAyD,YAAAwC,SAAAvC,UAEAuuH,KAAApqE,GAAA1kD,eAAAvyB,EAAAshJ,KAAArqE,GAAA1kD,eAAA9vB,EACA8+I,KAAAxpE,GAAAxlD,eAAAvyB,EAAAwhJ,KAAAzpE,GAAAxlD,eAAA9vB,EACAg/I,KAAA3oE,GAAAvmD,eAAAvyB,EAAA0hJ,KAAA5oE,GAAAvmD,eAAA9vB,EAEAk/I,aAAAN,KAAAC,KAAAC,KAAAC,KAAAC,KAAAC,OAEArsH,SAAAymC,uBAAAzmC,SAAAqmC,qBAAArmC,SAAAsmC,yBAAA,OAAAtmC,SAAAriC,IAEA4uJ,cAAAjwH,KAAA0D,SAAAhG,OACAwyH,eAAAlwH,KAAA0D,SAAAgpC,UAEAhpC,SAAAkB,eAAArT,MAAAmhE,YAEAu9D,cAAA7hH,SAAA21E,QAAArmF,OAIAyyH,OAAAnwH,KAAAqtH,eAEA+C,UAAApwH,KAAAslD,GAAA+qE,eAAAj8J,IAAAgyF,GAAAiqE,eAAAj8J,IAAA+yF,GAAAkpE,eAAA/4E,aAAA,GAEAq2E,eAAAyC,UAAArsC,QAAAusC,YAAAH,QAEAA,OAAA/hH,SAAA6hH,eAAA77J,IAAA87J,iBAEA,IAAAxsH,SAAAwC,UACAqqH,WAAAJ,OAAAzsH,SAAAyC,mBAAAzC,SAAAqU,iBAAArU,SAAAsU,mBACAw4G,SAAAL,YAEA,IAAAzsH,SAAA0mC,qBAAA1mC,SAAAymC,uBAAAzmC,SAAAqmC,qBAAArmC,SAAAsmC,uBAEA,GAAA,OAAAtmC,SAAAriC,IAAA,CAEA,GAAAuwB,SAAA8R,SAAAriC,IAAAuwB,OAEAA,WAAAL,MAAA09G,YAEAwhB,KAAA1sC,QAAApvE,IACA+7G,YAAAhB,KAAAC,KAAAC,KAAAC,KAAAC,KAAAC,KAAAU,KAAA//B,KAAAriH,EAAAoiJ,KAAA//B,KAAA5/G,EAAA2/I,KAAA3pH,KAAAz4B,EAAAoiJ,KAAA3pH,KAAAh2B,EAAA2/I,KAAA9/B,KAAAtiH,EAAAoiJ,KAAA9/B,KAAA7/G,EAAA4yB,SAAAriC,UAIA,QAAAqiC,SAAAgU,OAEAhU,SAAAgU,OAAA9lB,UAAAL,MAAAszB,6BAEA8rG,QAAA3wH,KAAA+jF,QAAA6sC,mBAAAlgC,MAAA7vB,aAAAgwD,mBACAC,MAAA,GAAAH,QAAAtiJ,EAAA,GACA0iJ,MAAA,GAAAJ,QAAA7/I,EAAA,GAEA6/I,QAAA3wH,KAAA+jF,QAAA6sC,mBAAA9pH,MAAA+5D,aAAAgwD,mBACAG,MAAA,GAAAL,QAAAtiJ,EAAA,GACA4iJ,MAAA,GAAAN,QAAA7/I,EAAA,GAEA6/I,QAAA3wH,KAAA+jF,QAAA6sC,mBAAAjgC,MAAA9vB,aAAAgwD,mBACAK,MAAA,GAAAP,QAAAtiJ,EAAA,GACA8iJ,MAAA,GAAAR,QAAA7/I,EAAA,GAEA4/I,YAAAhB,KAAAC,KAAAC,KAAAC,KAAAC,KAAAC,KAAAe,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAAAztH,SAAAgU,UAMAy4G,OAAAnwH,KAAA0D,SAAAhG,OAEAgG,SAAAkB,eAAArT,MAAAmhE,YAEAy9D,OAAA/hH,SAAA21E,QAAArmF,QAIA,IAAAgG,SAAAwC,UACAqqH,WAAAJ,OAAAzsH,SAAAyC,mBAAAzC,SAAAqU,iBAAArU,SAAAsU,mBACAw4G,SAAAL,aAIAzsH,UAAAgoC,sBAEAilF,QAAA3wH,KAAA+jF,QAAAusC,aAAAzvD,aAAAgwD,mBAEAV,OAAAt1H,OAAA81H,QAAAtiJ,EAAAsiJ,QAAA7/I,EAAA6/I,QAAAl9H,GAAAmrB,eAAA,IAAAy7C,UAAA,KAEA,IAAA32D,SAAAwC,UACAqqH,WAAAJ,OAAAzsH,SAAAyC,mBAAAzC,SAAAqU,iBAAArU,SAAAsU,mBACAw4G,SAAAL,UAIAA,OAAAt1H,OAAA,EAAA,EAAA,IAEA,IAAA6I,SAAAwC,UACAqqH,WAAAJ,OAAAzsH,SAAAyC,mBAAAzC,SAAAqU,iBAAArU,SAAAsU,mBACAw4G,SAAAL,SAQA,QAAAH,cAAAn5E,GAAAsnB,GAAArnB,GAAAwnB,GAAAvnB,GAAAkuB,IAEAn3B,SAAAghF,YACAhhF,SAAAkkE,OAAAn7D,GAAAsnB,IACArwB,SAAAmkE,OAAAn7D,GAAAwnB,IACAxwB,SAAAmkE,OAAAl7D,GAAAkuB,IACAn3B,SAAA0iE,YAIA,QAAA+f,YAAA7yH,MAAAuI,UAAAkuC,QAAAC,UAEA/b,aAAApyB,WACA8oH,WAAA56E,SACA66E,YAAA56E,UACAw6E,eAAAlxH,MAAAk2E,YAEA9lC,SAAA0hF,SAEArB,SAAArxC,eAAA,EAAA72E,WAIA,QAAAuqH,UAAA9yH,OAEA4wH,aAAA5wH,MAAAk2E,YACA9lC,SAAAsjF,OAIA,QAAA/C,kBAAAr6H,SAEA,GAAA,IAAAA,QAAAlD,SACAkD,kBAAAzC,OAAAsjD,mBACA7gD,kBAAAzC,OAAAuD,YAEA,OACA2M,WAAAz9B,GACA8sB,QAAAkD,QAAAlD,QAKA,IAAAa,OAAAqC,QAAArC,KAEA,KAAA,IAAAA,MAAA/zB,SAEA,OACA6jC,WAAAz9B,GACA8sB,QAAA,EAKA,IAAAugI,SAAAr9H,QAAAnC,QAAAN,MAAAkuC,gBAAAzrC,QAAAnC,QAAAN,MAAAouC,uBACA2xF,QAAAt9H,QAAAlC,QAAAP,MAAAkuC,gBAAAzrC,QAAAlC,QAAAP,MAAAouC,uBAEA4xF,QAAAv9H,QAAAnC,QAAAN,MAAAouC,uBACA6xF,QAAAx9H,QAAAlC,QAAAP,MAAAouC,uBAIAl+B,OAAArvC,SAAAq/J,cAAA,SACAhwH,QAAA1rC,MAAA47B,MAAA57B,OAAAw7J,QAAA,EAAA,GACA9vH,OAAA9N,OAAAhC,MAAAgC,QAAA69H,QAAA,EAAA,EAEA,IAAAjvH,SAAAd,OAAAe,WAAA,KACAD,SAAAmvH,aAAA,EAAA,EAAA,GAAA,EAAA,EAAA//H,MAAAgC,QACA4O,QAAAgpB,UAAA55B,MAAA,EAAA,IAEA,IAAA4/H,UAEAhvH,QAAAmvH,cAAA,EAAA,EAAA,GAAA,EAAA//H,MAAA57B,MAAA47B,MAAAgC,QACA4O,QAAAgpB,UAAA55B,OAAAA,MAAA57B,MAAA,KAIA,IAAAy7J,UAEAjvH,QAAAmvH,aAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACAnvH,QAAAgpB,UAAA55B,MAAA,EAAAA,MAAAgC,UAIA,IAAA49H,UAAA,IAAAC,UAEAjvH,QAAAmvH,cAAA,EAAA,EAAA,EAAA,EAAA//H,MAAA57B,MAAA,GACAwsC,QAAAgpB,UAAA55B,OAAAA,MAAA57B,MAAA47B,MAAAgC,QAIA,IAAAV,QAAA,aAEA,IAAAo+H,UAAA,IAAAC,QAEAr+H,OAAA,UAEA,IAAAo+H,QAEAp+H,OAAA,YAEA,IAAAq+H,UAEAr+H,OAAA,WAIA,IAAA2wB,SAAAkqB,SAAA6jF,cAAAlwH,OAAAxO,OAIA,OAFAe,SAAAT,UAAAS,QAAAT,SAAAS,UAGAyN,OAAAmiB,QACA9yB,QAAAkD,QAAAlD,SAKA,QAAA4/H,aAAA75E,GAAAsnB,GAAArnB,GAAAwnB,GAAAvnB,GAAAkuB,GAAA2sD,GAAAvsE,GAAAwsE,GAAAvsE,GAAAwsE,GAAA1rE,GAAApyD,SAEA,GAAA4vB,SAAAwqG,UAAAp6H,QAAAsF,GASA,QAPAt1B,KAAA4/C,SAAAA,QAAA9yB,UAAAkD,QAAAlD,UAEA8yB,QAAAyqG,iBAAAr6H,SACAo6H,UAAAp6H,QAAAsF,IAAAsqB,aAIA5/C,KAAA4/C,QAAAniB,OAQA,MAFA6sH,cAAA,yBACAxgF,UAAAsjF,MALA9C,cAAA1qG,QAAAniB,OAYA,IAAAhgC,GAAAC,EAAAkX,EAAA7H,EAAAnX,EAAAoyD,EAAAi8C,IAAA8pD,KACAztC,QAAAtwF,QAAAhU,OAAA3R,EAAA2lB,QAAAf,OAAA5kB,EACAk2G,QAAAvwF,QAAAhU,OAAAlP,EAAAkjB,QAAAf,OAAAniB,EACA/a,MAAAi+B,QAAArC,MAAA57B,MAAAi+B,QAAAf,OAAA5kB,EACAslB,OAAAK,QAAArC,MAAAgC,OAAAK,QAAAf,OAAAniB,CAEA8gJ,KAAAA,GAAAttC,SAAAvuH,MACAsvF,IAAAA,GAAAk/B,SAAA5wF,OAEAk+H,IAAAA,GAAAvtC,SAAAvuH,MACAuvF,IAAAA,GAAAi/B,SAAA5wF,OAEAm+H,IAAAA,GAAAxtC,SAAAvuH,MACAqwF,IAAAA,GAAAm+B,SAAA5wF,OAEAmjD,IAAAD,GAAAynB,IAAAH,GACApnB,IAAAF,GAAAouB,IAAA9G,GAEA0zD,IAAAD,GAAAtsE,IAAAD,GACAysE,IAAAF,GAAAxrE,IAAAf,GAIA,KAFA4iB,IAAA4pD,GAAAzrE,GAAA0rE,GAAAxsE,MAIAysE,KAAA,EAAA9pD,IAEAxmG,GAAA2kF,GAAAtP,GAAAwO,GAAAvO,IAAAg7E,KACArwJ,GAAA0kF,GAAAkY,GAAAhZ,GAAA2f,IAAA8sD,KACAn5I,GAAAi5I,GAAA96E,GAAA+6E,GAAAh7E,IAAAi7E,KACAhhJ,GAAA8gJ,GAAA5sD,GAAA6sD,GAAAxzD,IAAAyzD,KAEAn4J,EAAAi9E,GAAAp1E,EAAAmwJ,GAAAh5I,EAAAysE,GACAr5B,EAAAmyC,GAAAz8F,EAAAkwJ,GAAA7gJ,EAAAs0E,GAEAvX,SAAA4gF,OACA5gF,SAAAkkF,UAAAvwJ,EAAAC,EAAAkX,EAAA7H,EAAAnX,EAAAoyD,GACA8hB,SAAAsjF,OACAtjF,SAAA2E,WA8CA,QAAAv3E,QAAAoqF,GAAAc,GAAA6rE,QAEA,GACAF,MADA1jJ,EAAA+3E,GAAA/3E,EAAAi3E,GAAAj3E,EAAAyC,EAAAs1E,GAAAt1E,EAAAw0E,GAAAx0E,EACAm3F,IAAA55F,EAAAA,EAAAyC,EAAAA,CAEA,KAAAm3F,MAEA8pD,KAAAE,OAAAxsJ,KAAA8kE,KAAA09B,KAEA55F,GAAA0jJ,KAAAjhJ,GAAAihJ,KAEA3rE,GAAA/3E,GAAAA,EAAA+3E,GAAAt1E,GAAAA,EACAw0E,GAAAj3E,GAAAA,EAAAi3E,GAAAx0E,GAAAA,GAMA,QAAAi9I,YAAAhoJ,OAEAmsJ,sBAAAnsJ,QAEA+nE,SAAAqkF,YAAApsJ,MACAmsJ,oBAAAnsJ,OAMA,QAAAm7B,aAAAn7B,OAEAqsJ,mCAAArsJ,QAEAA,QAAAwrB,MAAAiT,eAEAspC,SAAAukF,yBAAA,cAEAtsJ,QAAAwrB,MAAA0kC,iBAEA6X,SAAAukF,yBAAA,UAEAtsJ,QAAAwrB,MAAAilC,oBAEAsX,SAAAukF,yBAAA,SAEAtsJ,QAAAwrB,MAAAqlC,mBAEAkX,SAAAukF,yBAAA,YAIAD,iCAAArsJ,OAMA,QAAAsyD,cAAAtyD,OAEAusJ,oBAAAvsJ,QAEA+nE,SAAAtV,UAAAzyD,MACAusJ,kBAAAvsJ,OAMA,QAAAgpJ,YAAAhpJ,OAIAwsJ,kBAAAxsJ,QAEA+nE,SAAA0kF,QAAAzsJ,MACAwsJ,gBAAAxsJ,OAMA,QAAAipJ,aAAAjpJ,OAIA0sJ,mBAAA1sJ,QAEA+nE,SAAA4kF,SAAA3sJ,MACA0sJ,iBAAA1sJ,OAMA,QAAA6oJ,gBAAA7oJ,OAEA4sJ,sBAAA5sJ,QAEA+nE,SAAA8kF,YAAA7sJ,MACA4sJ,oBAAA5sJ,OAMA,QAAAuoJ,cAAAvoJ,OAEA8sJ,oBAAA9sJ,QAEA+nE,SAAArrC,UAAA18B,MACA8sJ,kBAAA9sJ,OAMA,QAAAwpJ,aAAAxpJ,OAEA+sJ,iBAAAr8J,SAAAsP,MAAAtP,SAEAq3E,SAAAyhF,YAAAxpJ,OACA+sJ,iBAAA/sJ,OA1lCAa,QAAAghD,IAAA,uBAAAr2B,MAAAq8C,UAEA7nC,WAAAA,cAEA,IACAgtH,aAAAC,UAAAvF,QAmCAwF,IAAAC,IAAAC,IAEAzD,KAAAC,KAAAC,KAAAC,KAAAC,KAAAC,KAWAU,KACAK,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAlDAzsF,MAAA7tE,KAEAu8J,WAAA,GAAA7hI,OAAA4lE,UAEAtpB,YAAA7pE,KAAA+hC,WAAAtE,OACAsE,WAAAtE,OACArvC,SAAAq/J,cAAA,UAEA4B,aAAAxlF,QAAA93E,MACAu9J,cAAAzlF,QAAAl6C,OACAq6H,iBAAAvoJ,KAAAE,MAAA0tJ,aAAA,GACApF,kBAAAxoJ,KAAAE,MAAA2tJ,cAAA,GAEAC,WAAA,EACAC,WAAA,EACAC,eAAAJ,aACAK,gBAAAJ,cAEAxvF,YAAA,EAEAgK,SAAAD,QAAArrC,WAAA,MACAyX,OAAA,IAAAlU,WAAAkU,QAGA05G,YAAA,GAAApiI,OAAAqJ,MAAA,GACAg5H,aAAA,IAAA7tH,WAAAkU,MAAA,EAAA,EAEAi4G,oBAAA,EACAE,iCAAA,EACAO,oBAAA,KACAE,kBAAA,KACAP,kBAAA,KACAC,gBAAA,KACAE,iBAAA,KACAK,oBAMA3C,OAAA,GAAA5+H,OAAAqJ,MAEAq1H,cAAA,GAAA1+H,OAAAqJ,MACAs1H,eAAA,GAAA3+H,OAAAqJ,MAEAgzH,YAAA,GAAAr8H,OAAAqJ,MAEAwzH,aAKAyF,SAAA,GAAAtiI,OAAAuJ,KACAg5H,UAAA,GAAAviI,OAAAuJ,KACAqzH,SAAA,GAAA58H,OAAAuJ,KAEAuyH,cAAA,GAAA97H,OAAAqJ,MACA0yH,mBAAA,GAAA/7H,OAAAqJ,MACA2yH,aAAA,GAAAh8H,OAAAqJ,MAEA2sC,SAAA,GAAAh2C,OAAAoD,QACAy7H,UAAA,GAAA7+H,OAAAoD,QACAg8H,QAAA,GAAAp/H,OAAAoD,QACAk8H,kBAAA,GAAAt/H,OAAAyW,YAWAhkC,KAAA8pE,SAAAyhF,cAEAzhF,SAAAyhF,YAAA,cAIA14J,KAAAy3E,WAAAT,QAEAh3E,KAAAqiD,WAAA,EACAriD,KAAAgwE,aAAA,EACAhwE,KAAAk9J,cAAA,EAEAl9J,KAAA4jC,MAEA6D,QAEAlD,SAAA,EACAC,MAAA,IAQAxkC,KAAA0uD,uBAAA,aACA1uD,KAAAs7E,eAAA,aAIAt7E,KAAA2rC,WAAA,WAEA,MAAAsrC,WAIAj3E,KAAAi4E,qBAAA,WAEA,MAAAhB,UAAAgB,wBAIAj4E,KAAA4kE,cAAA,WAEA,MAAAqI,cAIAjtE,KAAAs4E,cAAA,SAAAppE,WAEA/B,KAAA+B,QAAA+9D,YAAA/9D,QAIAlP,KAAAu4E,QAAA,SAAAr5E,MAAA49B,OAAA07C,aAEAgkF,aAAAt9J,MAAA+tE,YACAwvF,cAAA3/H,OAAAmwC,YAEA+J,QAAA93E,MAAAs9J,aACAxlF,QAAAl6C,OAAA2/H,cAEAtF,iBAAAvoJ,KAAAE,MAAA0tJ,aAAA,GACApF,kBAAAxoJ,KAAAE,MAAA2tJ,cAAA,IAEA,IAAAjkF,cAEAxB,QAAAl4E,MAAAI,MAAAA,MAAA,KACA83E,QAAAl4E,MAAAg+B,OAAAA,OAAA,MAIAkgI,SAAAxtJ,IAAAqB,KAAAsmJ,kBAAAC,mBACA4F,SAAA9oJ,IAAArD,IAAAsmJ,iBAAAC,mBAEA6F,UAAAztJ,IAAAqB,KAAAsmJ,kBAAAC,mBACA6F,UAAA/oJ,IAAArD,IAAAsmJ,iBAAAC,mBAEAiE,oBAAA,EACAE,iCAAA,EACAO,oBAAA,KACAE,kBAAA,KACAP,kBAAA,KACAC,gBAAA,KACAE,iBAAA,KAEA57J,KAAAy4E,YAAA,EAAA,EAAAv5E,MAAA49B,SAIA98B,KAAAy4E,YAAA,SAAAjhE,EAAAyC,EAAA/a,MAAA49B,QAEA4/H,WAAAllJ,EAAAy1D,YACA0vF,WAAA1iJ,EAAAgzD,YAEA2vF,eAAA19J,MAAA+tE,YACA4vF,gBAAA//H,OAAAmwC,aAIAjtE,KAAA44E,WAAA,aACA54E,KAAAq2C,eAAA,aAEAr2C,KAAAsjD,cAAA,SAAAzc,MAAAuc,OAEA05G,YAAAjsJ,IAAAg2B,OACAk2H,gBAAA5vJ,KAAAi2C,MAAAA,MAAA,EAEA65G,UAAAztJ,IAAAqB,KAAAsmJ,kBAAAC,mBACA6F,UAAA/oJ,IAAArD,IAAAsmJ,iBAAAC,oBAIAp3J,KAAAm9J,iBAAA,SAAA1jE,IAAAr2C,OAEArzC,QAAAH,KAAA,6FACA5P,KAAAsjD,cAAAm2C,IAAAr2C,QAIApjD,KAAAqjD,cAAA,WAEA,MAAAy5G,cAIA98J,KAAAujD,cAAA,WAEA,MAAAw5G,cAIA/8J,KAAAo4D,iBAAA,WAEA,MAAA,IAIAp4D,KAAAy3C,MAAA,YAEA,IAAAwlH,UAAAn3C,YAEAm3C,UAAA32C,UAAA02C,UACAC,UAAAh3C,eAAA,GAEAg3C,UAAAztJ,IAAAgI,EAAAylJ,UAAAztJ,IAAAgI,EAAA2/I,iBACA8F,UAAAztJ,IAAAyK,GAAAgjJ,UAAAztJ,IAAAyK,EAAAm9I,kBACA6F,UAAA/oJ,IAAAsD,EAAAylJ,UAAA/oJ,IAAAsD,EAAA2/I,iBACA8F,UAAA/oJ,IAAA+F,GAAAgjJ,UAAA/oJ,IAAA+F,EAAAm9I,kBAEA2F,YAAA,GAEA9lF,SAAAmmF,UACA,EAAAH,UAAAztJ,IAAAgI,EACA,EAAAylJ,UAAA/oJ,IAAA+F,EACAgjJ,UAAA/oJ,IAAAsD,EAAAylJ,UAAAztJ,IAAAgI,EAAA,EACAylJ,UAAAztJ,IAAAyK,EAAAgjJ,UAAA/oJ,IAAA+F,EAAA,GAKA8iJ,YAAA,IAEA7F,WAAA,GACA7sH,YAAA3P,MAAAiT,gBAEA8pH,aAAA,QAAA7oJ,KAAAE,MAAA,IAAAguJ,YAAAl+H,GAAA,IAAAhwB,KAAAE,MAAA,IAAAguJ,YAAA98H,GAAA,IAAApxB,KAAAE,MAAA,IAAAguJ,YAAAjyJ,GAAA,IAAAkyJ,YAAA,KAEA9lF,SAAAprC,SACA,EAAAoxH,UAAAztJ,IAAAgI,EACA,EAAAylJ,UAAA/oJ,IAAA+F,EACAgjJ,UAAA/oJ,IAAAsD,EAAAylJ,UAAAztJ,IAAAgI,EAAA,EACAylJ,UAAAztJ,IAAAyK,EAAAgjJ,UAAA/oJ,IAAA+F,EAAA,IAKAgjJ,UAAAt3C,cAQA3lH,KAAAmiD,WAAA,aACAniD,KAAA88D,WAAA,aACA98D,KAAAm+D,aAAA,aAEAn+D,KAAAynC,OAAA,SAAAE,MAAAC,QAEA,OAAAz6B,KAAAy6B,OAAAuzC,SAGA,WADAprE,SAAAiuB,MAAA,0EAKA,IAAAkkB,YAAAva,MAAAua,UAEAA,aAAAA,WAAAtG,SAEAs7G,WAAA,GACA7sH,YAAA3P,MAAAiT,gBAEA8pH,aAAAv1G,WAAA66D,YACA9lC,SAAAprC,SAAA,EAAA,EAAA2wH,aAAAC,iBAEA,IAAAz8J,KAAAqiD,WAEAriD,KAAAy3C,QAIAo2B,MAAAjqC,KAAA6D,OAAAlD,SAAA,EACAspC,MAAAjqC,KAAA6D,OAAAjD,MAAA,EAEAyyC,SAAA4jF,aAAA+B,eAAAJ,aAAA,EAAA,GAAAK,gBAAAJ,cAAAC,WAAAD,cAAAE,YACA1lF,SAAA8lB,UAAAo6D,iBAAAC,mBAEA8E,YAAAK,WAAAc,aAAA11H,MAAAC,OAAA5nC,KAAAgwE,YAAAhwE,KAAAk9J,cACAf,UAAAD,YAAAv9J,SACAi4J,QAAAsF,YAAAxuH,OAEAssH,kBAAAjyF,gBAAAngC,OAAAqB,oBAOAstH,iBAEA,KAAA,GAAAxzJ,GAAA,EAAA1E,GAAA89J,UAAAv8J,OAAAmD,EAAA1E,GAAA0E,IAAA,CAEA,GAAAmqH,SAAAivC,UAAAp5J,GAEA8pC,SAAAqgF,QAAArgF,QAEA,QAAA1/B,KAAA0/B,UAAA,IAAAA,SAAAjG,QAAA,CAIA,GAFA0wH,SAAA3xC,YAEAuH,kBAAAxyF,OAAA4iI,iBAEAlB,IAAAlvC,QACAkvC,IAAA5kJ,GAAA2/I,iBAAAiF,IAAAniJ,GAAAm9I,kBAEAH,aAAAmF,IAAAlvC,QAAArgF,cAEA,IAAAqgF,kBAAAxyF,OAAA6iI,eAEAnB,IAAAlvC,QAAAz+B,GAAA4tE,IAAAnvC,QAAA39B,GAEA6sE,IAAAryH,eAAAvyB,GAAA2/I,iBAAAiF,IAAAryH,eAAA9vB,GAAAm9I,kBACAiF,IAAAtyH,eAAAvyB,GAAA2/I,iBAAAkF,IAAAtyH,eAAA9vB,GAAAm9I,kBAEAE,SAAA5xC,eACA02C,IAAAryH,eACAsyH,IAAAtyH,kBAGA,IAAAizH,SAAA72C,cAAAmxC,WAEAU,WAAAoE,IAAAC,IAAAnvC,QAAArgF,cAIA,IAAAqgF,kBAAAxyF,OAAA8iI,eAAA,CAIA,GAFApB,IAAAlvC,QAAAz+B,GAAA4tE,IAAAnvC,QAAA39B,GAAA+sE,IAAApvC,QAAA58B,GAEA8rE,IAAAryH,eAAAnN,GAAA,GAAAw/H,IAAAryH,eAAAnN,EAAA,EAAA,QACA,IAAAy/H,IAAAtyH,eAAAnN,GAAA,GAAAy/H,IAAAtyH,eAAAnN,EAAA,EAAA,QACA,IAAA0/H,IAAAvyH,eAAAnN,GAAA,GAAA0/H,IAAAvyH,eAAAnN,EAAA,EAAA,QAEAw/H,KAAAryH,eAAAvyB,GAAA2/I,iBAAAiF,IAAAryH,eAAA9vB,GAAAm9I,kBACAiF,IAAAtyH,eAAAvyB,GAAA2/I,iBAAAkF,IAAAtyH,eAAA9vB,GAAAm9I,kBACAkF,IAAAvyH,eAAAvyB,GAAA2/I,iBAAAmF,IAAAvyH,eAAA9vB,GAAAm9I,kBAEAvqH,SAAAkC,SAAA,IAEA1qC,OAAA+3J,IAAAryH,eAAAsyH,IAAAtyH,eAAA8C,SAAAkC,UACA1qC,OAAAg4J,IAAAtyH,eAAAuyH,IAAAvyH,eAAA8C,SAAAkC,UACA1qC,OAAAi4J,IAAAvyH,eAAAqyH,IAAAryH,eAAA8C,SAAAkC,WAIAuoH,SAAA5xC,eACA02C,IAAAryH,eACAsyH,IAAAtyH,eACAuyH,IAAAvyH,kBAGA,IAAAizH,SAAA72C,cAAAmxC,WAEAsB,YAAAwD,IAAAC,IAAAC,IAAA,EAAA,EAAA,EAAApvC,QAAArgF,UAYAowH,UAAA12C,MAAA+wC,WAUArgF,SAAA4jF,aAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KC3aAngI,MAAA+iI,iBAAA,WAEAz9J,KAAAyiC,GAAA,EAEAziC,KAAAgyC,OAAA,KACAhyC,KAAA48B,EAAA,EACA58B,KAAA+rC,YAAA,GAMArR,MAAA8iI,eAAA,WAEAx9J,KAAAyiC,GAAA,EAEAziC,KAAAyuF,GAAA,GAAA/zD,OAAAgjI,iBACA19J,KAAAuvF,GAAA,GAAA70D,OAAAgjI,iBACA19J,KAAAswF,GAAA,GAAA51D,OAAAgjI,iBAEA19J,KAAAy5J,YAAA,GAAA/+H,OAAAoD,QAEA99B,KAAA+5J,oBAAA,GAAAr/H,OAAAoD,QAAA,GAAApD,OAAAoD,QAAA,GAAApD,OAAAoD,SACA99B,KAAA29J,oBAAA,EAEA39J,KAAA6mC,MAAA,GAAAnM,OAAAqJ,MACA/jC,KAAA6sC,SAAA,KACA7sC,KAAA89C,KAAA,GAAApjB,OAAAE,QAAA,GAAAF,OAAAE,QAAA,GAAAF,OAAAE,SAEA56B,KAAA48B,EAAA,EACA58B,KAAA+rC,YAAA,GAMArR,MAAAgjI,iBAAA,WAEA19J,KAAA+qC,SAAA,GAAArQ,OAAAoD,QACA99B,KAAAw5J,cAAA,GAAA9+H,OAAAoD,QACA99B,KAAA+pC,eAAA,GAAArP,OAAAiC,QAEA38B,KAAAoD,SAAA,GAIAs3B,MAAAgjI,iBAAAlhK,UAAA2sC,KAAA,SAAA7C,QAEAtmC,KAAAw5J,cAAArwH,KAAA7C,OAAAkzH,eACAx5J,KAAA+pC,eAAAZ,KAAA7C,OAAAyD,iBAMArP,MAAA6iI,eAAA,WAEAv9J,KAAAyiC,GAAA,EAEAziC,KAAAyuF,GAAA,GAAA/zD,OAAAgjI,iBACA19J,KAAAuvF,GAAA,GAAA70D,OAAAgjI,iBAEA19J,KAAA+tC,cAAA,GAAArT,OAAAqJ,MAAA,GAAArJ,OAAAqJ,OACA/jC,KAAA6sC,SAAA,KAEA7sC,KAAA48B,EAAA,EACA58B,KAAA+rC,YAAA,GAMArR,MAAA4iI,iBAAA,WAEAt9J,KAAAyiC,GAAA,EAEAziC,KAAAgyC,OAAA,KAEAhyC,KAAAwX,EAAA,EACAxX,KAAAia,EAAA,EACAja,KAAA48B,EAAA,EAEA58B,KAAA+mC,SAAA,EACA/mC,KAAA8mC,MAAA,GAAApM,OAAAE,QAEA56B,KAAA6sC,SAAA,KACA7sC,KAAA+rC,YAAA,GAMArR,MAAA4lE,UAAA,WAuPA,QAAAvwB,eAAA/9B,QAEA,IAAA,IAAAA,OAAA5uC,QAAA,CAEA,GAAA4uC,iBAAAtX,OAAAkwD,MAEAsxE,YAAAxuH,OAAAxtC,KAAA8xC,YAEA,IAAAA,iBAAAtX,OAAA+mB,MAAAzP,iBAAAtX,OAAA8iD,MAAAxrC,iBAAAtX,OAAAijD,OAAA,CAEA,IAAA,IAAA3rC,OAAAnF,SAAAzpC,QAAA,MACA,KAAA,IAAA4uC,OAAAwC,gBAAA,IAAAC,SAAAC,iBAAA1C,QAAA,MAEA4rH,WAAA5rH,YAEA,IAAAA,iBAAAtX,OAAA8hD,OAAA,CAEA,IAAA,IAAAxqC,OAAAnF,SAAAzpC,QAAA,MACA,KAAA,IAAA4uC,OAAAwC,gBAAA,IAAAC,SAAA47B,iBAAAr+B,QAAA,MAEA4rH,WAAA5rH,QAMA,IAAA,GAFAoD,UAAApD,OAAAoD,SAEAtxC,EAAA,EAAA4f,EAAA0xB,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAEAisE,cAAA36B,SAAAtxC,KAMA,QAAA85J,WAAA5rH,QAEA6rH,QAAAC,sBACAD,QAAAp7H,GAAAuP,OAAAvP,GACAo7H,QAAA7rH,OAAAA,OAEA0+B,SAAAv5B,sBAAAnF,OAAAjJ,aACA2nC,SAAA1nC,aAAA+0H,uBACAF,QAAAjhI,EAAA8zC,SAAA9zC,EACAihI,QAAA9xH,YAAAiG,OAAAjG,YAEAmwH,YAAAzuF,QAAAvtE,KAAA29J,SA8aA,QAAAG,WAAAC,SAAAjsH,OAAApK,QAEA,GAAAs2H,MAAA,EAAAD,SAAAl7I,CAEAk7I,UAAArhI,GAAAshI,KAEAD,SAAArhI,IAAA,GAAAqhI,SAAArhI,GAAA,IAEAuhI,QAAAC,sBACAD,QAAA17H,GAAAuP,OAAAvP,GACA07H,QAAA3mJ,EAAAymJ,SAAAzmJ,EAAA0mJ,KACAC,QAAAlkJ,EAAAgkJ,SAAAhkJ,EAAAikJ,KACAC,QAAAvhI,EAAAqhI,SAAArhI,EACAuhI,QAAApyH,YAAAiG,OAAAjG,YACAoyH,QAAAnsH,OAAAA,OAEAmsH,QAAAp3H,SAAAiL,OAAAjL,SAEAo3H,QAAAr3H,MAAAtvB,EAAAw6B,OAAAlL,MAAAtvB,EAAA5I,KAAAc,IAAAyuJ,QAAA3mJ,GAAAymJ,SAAAzmJ,EAAAowB,OAAAsB,iBAAAvqC,SAAA,KAAAs/J,SAAAl7I,EAAA6kB,OAAAsB,iBAAAvqC,SAAA,MACAw/J,QAAAr3H,MAAA7sB,EAAA+3B,OAAAlL,MAAA7sB,EAAArL,KAAAc,IAAAyuJ,QAAAlkJ,GAAAgkJ,SAAAhkJ,EAAA2tB,OAAAsB,iBAAAvqC,SAAA,KAAAs/J,SAAAl7I,EAAA6kB,OAAAsB,iBAAAvqC,SAAA,MAEAw/J,QAAAtxH,SAAAmF,OAAAnF,SAEAqvH,YAAAv9J,SAAAuB,KAAAi+J,UAQA,QAAAL,uBAEA,GAAAO,eAAAC,kBAAA,CAEA,GAAAtsH,QAAA,GAAAtX,OAAA+iI,gBAIA,OAHAc,aAAAr+J,KAAA8xC,QACAssH,oBACAD,eACArsH,OAIA,MAAAusH,aAAAF,gBAIA,QAAAG,uBAEA,GAAAC,eAAAC,kBAAA,CAEA,GAAAp4H,QAAA,GAAA5L,OAAAgjI,gBAIA,OAHAiB,aAAAz+J,KAAAomC,QACAo4H,oBACAD,eACAn4H,OAIA,MAAAq4H,aAAAF,gBAIA,QAAAG,qBAEA,GAAAC,aAAAC,gBAAA,CAEA,GAAApnH,MAAA,GAAAhd,OAAA8iI,cAIA,OAHAuB,WAAA7+J,KAAAw3C,MACAonH,kBACAD,aACAnnH,KAIA,MAAAqnH,WAAAF,cAKA,QAAAG,qBAEA,GAAAC,aAAAC,gBAAA,CAEA,GAAAxkE,MAAA,GAAAhgE,OAAA6iI,cAIA,OAHA4B,WAAAj/J,KAAAw6F,MACAwkE,kBACAD,aACAvkE,KAIA,MAAAykE,WAAAF,cAIA,QAAAb,uBAEA,GAAAgB,eAAAC,kBAAA,CAEA,GAAAj1H,QAAA,GAAA1P,OAAA4iI,gBAIA,OAHAgC,aAAAp/J,KAAAkqC,QACAi1H,oBACAD,eACAh1H,OAIA,MAAAk1H,aAAAF,gBAMA,QAAAG,aAAA30J,EAAAC,GAEA,MAAAD,GAAAmhC,cAAAlhC,EAAAkhC,YAEAnhC,EAAAmhC,YAAAlhC,EAAAkhC,YAEAnhC,EAAAgyB,IAAA/xB,EAAA+xB,EAEA/xB,EAAA+xB,EAAAhyB,EAAAgyB,EAEAhyB,EAAA63B,KAAA53B,EAAA43B,GAEA73B,EAAA63B,GAAA53B,EAAA43B,GAIA,EAMA,QAAA+8H,UAAAv3D,GAAAC,IAEA,GAAAu3D,QAAA,EAAAC,OAAA,EAKAC,QAAA13D,GAAArrE,EAAAqrE,GAAAllF,EACA68I,QAAA13D,GAAAtrE,EAAAsrE,GAAAnlF,EACA88I,QAAA53D,GAAArrE,EAAAqrE,GAAAllF,EACA+8I,QAAA53D,GAAAtrE,EAAAsrE,GAAAnlF,CAEA,OAAA48I,UAAA,GAAAC,SAAA,GAAAC,QAAA,GAAAC,QAAA,KAKAH,QAAA,GAAAC,QAAA,GAAAC,OAAA,GAAAC,OAAA,KASAH,QAAA,EAGAF,OAAA7wJ,KAAAsF,IAAAurJ,OAAAE,SAAAA,QAAAC,UAEAA,QAAA,IAGAF,OAAA9wJ,KAAAY,IAAAkwJ,OAAAC,SAAAA,QAAAC,WAIAC,OAAA,EAGAJ,OAAA7wJ,KAAAsF,IAAAurJ,OAAAI,QAAAA,OAAAC,SAEAA,OAAA,IAGAJ,OAAA9wJ,KAAAY,IAAAkwJ,OAAAG,QAAAA,OAAAC,YAIAJ,OAAAD,UAUAx3D,GAAAvoB,KAAAwoB,GAAAu3D,QACAv3D,GAAAxoB,KAAAuoB,GAAA,EAAAy3D,SAEA,IAv5BA,GAAA7B,SAAAQ,aACA0B,QAAAtB,aACAuB,MAAAnB,WACAoB,MAAAhB,WACAd,QAAAiB,aAcAc,aAlBA3B,eAAAD,kBAAA,EACAK,eAAAD,kBAAA,EACAK,aAAAD,gBAAA,EACAK,aAAAD,gBAAA,EACAI,eAAAD,kBAAA,EAEAnD,aAAAzuF,WAAA//B,UAAA/uC,aAEA+xE,SAAA,GAAAh2C,OAAAoD,QACAmgI,SAAA,GAAAvjI,OAAAiC,QAEAqgI,SAAA,GAAAtiI,OAAAqW,KAAA,GAAArW,OAAAoD,SAAA,GAAA,GAAA,GAAA,GAAApD,OAAAoD,QAAA,EAAA,EAAA,IACAqiI,aAAA,GAAAzlI,OAAAqW,KACAqvH,SAAA,GAAA7jK,OAAA,GAEA8jK,YAAA,GAAA3lI,OAAAqD,QACAggI,sBAAA,GAAArjI,OAAAqD,QAGAuiI,2BAAA,GAAA5lI,OAAAqD,QAEAwiI,cAAA,GAAA7lI,OAAAyW,QAEAsD,SAAA,GAAA/Z,OAAA6W,QAEAivH,8BAAA,GAAA9lI,OAAAiC,QACA8jI,8BAAA,GAAA/lI,OAAAiC,OAIA38B,MAAAugG,cAAA,SAAA5gD,OAAA/X,QAEA73B,QAAAH,KAAA,8DACA+vC,OAAA6gD,QAAA54D,SAIA5nC,KAAAygG,gBAAA,SAAA9gD,OAAA/X,QAEA73B,QAAAH,KAAA,kEACA+vC,OAAA+gD,UAAA94D,SAIA5nC,KAAA2gG,WAAA,WAEA5wF,QAAAiuB,MAAA,oEAMA,IAAA0iI,YAAA,WAWA,QAAAC,WAAAzxJ,OAEA8iC,OAAA9iC,MACA29B,SAAAmF,OAAAnF,SAEA6N,aAAAqtB,gBAAA/1B,OAAAjJ,aAEA8U,QAAAj+C,OAAA,EACAm8C,OAAAn8C,OAAA,EACAk+C,IAAAl+C,OAAA,EAIA,QAAAghK,eAAAt6H,QAEA,GAAAyE,UAAAzE,OAAAyE,SACAyuH,cAAAlzH,OAAAkzH,cACAzvH,eAAAzD,OAAAyD,cAEAyvH,eAAArwH,KAAA4B,UAAA/B,aAAAk3H,cACAn2H,eAAAZ,KAAAqwH,eAAAxwH,aAAA+0H,sBAEA,IAAAG,MAAA,EAAAn0H,eAAAhnB,CAEAgnB,gBAAAvyB,GAAA0mJ,KACAn0H,eAAA9vB,GAAAikJ,KACAn0H,eAAAnN,GAAAshI,KAEA53H,OAAAljC,QAAA2mC,eAAAvyB,IAAA,GAAAuyB,eAAAvyB,GAAA,GACAuyB,eAAA9vB,IAAA,GAAA8vB,eAAA9vB,GAAA,GACA8vB,eAAAnN,IAAA,GAAAmN,eAAAnN,GAAA,EAIA,QAAAijD,YAAAroE,EAAAyC,EAAA2iB,GAEAmjI,QAAAvB,sBACAuB,QAAAh1H,SAAAl6B,IAAA2G,EAAAyC,EAAA2iB,GAEAgkI,cAAAb,SAIA,QAAAc,YAAArpJ,EAAAyC,EAAA2iB,GAEAihB,QAAA39C,KAAAsX,EAAAyC,EAAA2iB,GAIA,QAAAkkI,WAAAliI,EAAAoB,EAAAn1B,GAEAkxC,OAAA77C,KAAA0+B,EAAAoB,EAAAn1B,GAIA,QAAAk2J,QAAAvpJ,EAAAyC,GAEA6jC,IAAA59C,KAAAsX,EAAAyC,GAIA,QAAA+mJ,yBAAAvyE,GAAAc,GAAAe,IAEA,OAAA,IAAA7B,GAAArrF,UAAA,IAAAmsF,GAAAnsF,UAAA,IAAAktF,GAAAltF,UAEAg9J,SAAA,GAAA3xE,GAAA1kD,eACAq2H,SAAA,GAAA7wE,GAAAxlD,eACAq2H,SAAA,GAAA9vE,GAAAvmD,eAEAizH,SAAA72C,cAAAg6C,aAAAz6C,cAAA06C,YAIA,QAAAa,sBAAAxyE,GAAAc,GAAAe,IAEA,OAAAA,GAAAvmD,eAAAvyB,EAAAi3E,GAAA1kD,eAAAvyB,IACA+3E,GAAAxlD,eAAA9vB,EAAAw0E,GAAA1kD,eAAA9vB,IACAq2E,GAAAvmD,eAAA9vB,EAAAw0E,GAAA1kD,eAAA9vB,IACAs1E,GAAAxlD,eAAAvyB,EAAAi3E,GAAA1kD,eAAAvyB,GAAA,EAIA,QAAA0pJ,UAAAt2J,EAAAC,GAEA,GAAA4jF,IAAAkwE,YAAA/zJ,GACA2kF,GAAAovE,YAAA9zJ,EAIA4jF,IAAA1kD,eAAAZ,KAAAslD,GAAA1jD,UAAA/B,aAAAs3H,4BACA/wE,GAAAxlD,eAAAZ,KAAAomD,GAAAxkD,UAAA/B,aAAAs3H,6BAEA,IAAAd,SAAA/wE,GAAA1kD,eAAAwlD,GAAAxlD,kBAGA0kD,GAAA1kD,eAAAge,eAAA,EAAA0mC,GAAA1kD,eAAAhnB,GACAwsE,GAAAxlD,eAAAge,eAAA,EAAAwnC,GAAAxlD,eAAAhnB,GAEAk9I,MAAAjB,oBACAiB,MAAAx9H,GAAAuP,OAAAvP,GACAw9H,MAAAxxE,GAAAtlD,KAAAslD,IACAwxE,MAAA1wE,GAAApmD,KAAAomD,IACA0wE,MAAArjI,EAAAhuB,KAAAsF,IAAAu6E,GAAA1kD,eAAAnN,EAAA2yD,GAAAxlD,eAAAnN,GACAqjI,MAAAl0H,YAAAiG,OAAAjG,YAEAk0H,MAAApzH,SAAAmF,OAAAnF,SAEAmF,OAAAnF,SAAAkB,eAAArT,MAAA4/D,eAEA2lE,MAAAlyH,aAAA,GAAAi4B,UAAAjqB,OAAA,EAAAnxC,GACAq1J,MAAAlyH,aAAA,GAAAi4B,UAAAjqB,OAAA,EAAAlxC,IAIAqxJ,YAAAv9J,SAAAuB,KAAA+/J,QAMA,QAAAkB,cAAAv2J,EAAAC,EAAAkX,GAEA,GAAA0sE,IAAAkwE,YAAA/zJ,GACA2kF,GAAAovE,YAAA9zJ,GACAylF,GAAAquE,YAAA58I,EAEA,KAAA,IAAAi/I,wBAAAvyE,GAAAc,GAAAe,MAEAzjD,SAAAe,OAAAlT,MAAAmZ,aAAA,IAAAotH,qBAAAxyE,GAAAc,GAAAe,KAAA;qHAEA0vE,MAAApB,oBAEAoB,MAAAv9H,GAAAuP,OAAAvP,GACAu9H,MAAAvxE,GAAAtlD,KAAAslD,IACAuxE,MAAAzwE,GAAApmD,KAAAomD,IACAywE,MAAA1vE,GAAAnnD,KAAAmnD,IACA0vE,MAAApjI,GAAA6xD,GAAA1kD,eAAAnN,EAAA2yD,GAAAxlD,eAAAnN,EAAA0zD,GAAAvmD,eAAAnN,GAAA,EACAojI,MAAAj0H,YAAAiG,OAAAjG,YAIAi0H,MAAAvG,YAAAzzF,UAAAnoB,QAAA,EAAAjzC,GACAo1J,MAAAvG,YAAAzvD,aAAAtvD,cAAA+O,WAEA,KAAA,GAAA3lD,GAAA,EAAAA,EAAA,EAAAA,IAAA,CAEA,GAAAutC,QAAA2uH,MAAAjG,mBAAAj2J,EACAutC,QAAA20B,UAAAnoB,QAAA,EAAA59C,UAAA6D,IACAutC,OAAA24D,aAAAtvD,cAAA+O,WAEAu2G,OAAAliH,IAAAh6C,GACAkiE,UAAAloB,IAAA,EAAA79C,UAAA6D,IAIAk8J,MAAArC,oBAAA,EAEAqC,MAAAnzH,SAAAmF,OAAAnF,SAEAqvH,YAAAv9J,SAAAuB,KAAA8/J,QAxKA,GAAAniH,YACA9B,UACA+B,OAEA9L,OAAA,KACAnF,SAAA,KAEA6N,aAAA,GAAAhgB,OAAAyW,OAuKA,QACAwvH,UAAAA,UACAC,cAAAA,cACAI,wBAAAA,wBACAC,qBAAAA,qBACAphF,WAAAA,WACAghF,WAAAA,WACAC,UAAAA,UACAC,OAAAA,OACAG,SAAAA,SACAC,aAAAA,eAKAn/G,WAAA,GAAA0+G,WAmDA1gK,MAAAq9J,aAAA,SAAA11H,MAAAC,OAAAooC,YAAAktF,cAEA2B,WAAA,EACAI,WAAA,EACAG,aAAA,EAEAlD,YAAAv9J,SAAAiB,OAAA,GAEA,IAAA+nC,MAAAqO,YAAArO,MAAA2P,oBACA,OAAA1P,OAAA3oC,QAAA2oC,OAAA0P,oBAEA+oH,YAAAl3H,KAAAvB,OAAAqB,oBACA80H,sBAAAnxH,iBAAAhF,OAAAsB,iBAAAm3H,aAEA5rH,SAAAoD,cAAAkmH,uBAIAM,aAAA,EAEAnC,YAAAzuF,QAAA7tE,OAAA,EACAs8J,YAAAxuH,OAAA9tC,OAAA,EAEAmwE,cAAApoC,QAEA,IAAAqoC,aAEAksF,YAAAzuF,QAAA95D,KAAA4rJ,YAQA,KAAA,GAFA9xF,SAAAyuF,YAAAzuF,QAEA92C,EAAA,EAAAwnD,GAAA1Q,QAAA7tE,OAAA+2B,EAAAwnD,GAAAxnD,IAAA,CAEA,GAAAqb,QAAAy7B,QAAA92C,GAAAqb,OACAK,SAAAL,OAAAK,QAQA,IANA2P,WAAA2+G,UAAA3uH,QAEAkuH,aAAAluH,OAAAjJ,YAEA01H,aAAA,EAEAzsH,iBAAAtX,OAAA+mB,MAEA,GAAApP,mBAAA3X,OAAAujB,eAAA,CAEA,GAAAt2C,YAAA0qC,SAAA1qC,WACAitC,OAAAvC,SAAAuC,MAEA,QAAAznC,KAAAxF,WAAAojC,SAAA,QAIA,KAAA,GAFA6uD,WAAAjyF,WAAAojC,SAAAl2B,MAEA/Q,EAAA,EAAA4f,EAAAk2E,UAAAh6F,OAAAkE,EAAA4f,EAAA5f,GAAA,EAEAk+C,WAAA69B,WAAA+Z,UAAA91F,GAAA81F,UAAA91F,EAAA,GAAA81F,UAAA91F,EAAA,GAIA,QAAAqJ,KAAAxF,WAAA0pC,OAIA,IAAA,GAFAwM,SAAAl2C,WAAA0pC,OAAAx8B,MAEA/Q,EAAA,EAAA4f,EAAAm6B,QAAAj+C,OAAAkE,EAAA4f,EAAA5f,GAAA,EAEAk+C,WAAA6+G,WAAAhjH,QAAA/5C,GAAA+5C,QAAA/5C,EAAA,GAAA+5C,QAAA/5C,EAAA,GAMA,QAAAqJ,KAAAxF,WAAA6+B,GAIA,IAAA,GAFAsX,KAAAn2C,WAAA6+B,GAAA3xB,MAEA/Q,EAAA,EAAA4f,EAAAo6B,IAAAl+C,OAAAkE,EAAA4f,EAAA5f,GAAA,EAEAk+C,WAAA++G,OAAAjjH,IAAAh6C,GAAAg6C,IAAAh6C,EAAA,GAMA,IAAA,OAAAuuC,SAAAthB,MAAA,CAEA,GAAA6sB,SAAAvL,SAAAthB,MAAAlc,KAEA,IAAA+/B,OAAAh1C,OAAA,EAEA,IAAA,GAAAogC,GAAA,EAAAA,EAAA4U,OAAAh1C,OAAAogC,IAIA,IAAA,GAFA8U,OAAAF,OAAA5U,GAEAl8B,EAAAgxC,MAAAqJ,MAAAz6B,EAAAoxB,MAAAqJ,MAAArJ,MAAAqE,MAAAr1C,EAAA4f,EAAA5f,GAAA,EAEAk+C,WAAAm/G,aAAAvjH,QAAA95C,GAAA85C,QAAA95C,EAAA,GAAA85C,QAAA95C,EAAA,QAQA,KAAA,GAAAA,GAAA,EAAA4f,EAAAk6B,QAAAh+C,OAAAkE,EAAA4f,EAAA5f,GAAA,EAEAk+C,WAAAm/G,aAAAvjH,QAAA95C,GAAA85C,QAAA95C,EAAA,GAAA85C,QAAA95C,EAAA,QAQA,KAAA,GAAAA,GAAA,EAAA4f,EAAAk2E,UAAAh6F,OAAA,EAAAkE,EAAA4f,EAAA5f,GAAA,EAEAk+C,WAAAm/G,aAAAr9J,EAAAA,EAAA,EAAAA,EAAA,OAMA,IAAAuuC,mBAAA3X,OAAAohB,SAAA,CAEA,GAAAvX,UAAA8N,SAAA9N,SACAC,MAAA6N,SAAA7N,MACAwX,cAAA3J,SAAA2J,cAAA,EAEAukH,eAAAx4F,gBAAAm4F,aAMA,KAAA,GAJArzH,UAAAmF,OAAAnF,SAEA+xD,gBAAAriG,MAAAoN,QAAAkjC,UAEAvN,EAAA,EAAAgwF,GAAA/qF,SAAA3kC,OAAA0/B,EAAAgwF,GAAAhwF,IAAA,CAEA,GAAAgH,QAAA/B,SAAAjF,EAIA,IAFAoxC,SAAAvnC,KAAA7C,SAEA,IAAAuG,SAAA4C,aAKA,IAAA,GAHAA,cAAA4C,SAAA5C,aACAkV,gBAAA3S,OAAAuS,sBAEArwB,EAAA,EAAA4mG,GAAArrF,aAAA7vC,OAAAs0B,EAAA4mG,GAAA5mG,IAAA,CAEA,GAAAwwB,WAAAC,gBAAAzwB,EAEA,IAAA,IAAAwwB,UAAA,CAEA,GAAA1hD,QAAAysC,aAAAvb,GACAktI,aAAAp+J,OAAAuhC,SAAAjF,EAEAoxC,UAAAl5D,IAAA4pJ,aAAA5pJ,EAAA8uB,OAAA9uB,GAAAktC,UACAgsB,SAAAz2D,IAAAmnJ,aAAAnnJ,EAAAqsB,OAAArsB,GAAAyqC,UACAgsB,SAAA9zC,IAAAwkI,aAAAxkI,EAAA0J,OAAA1J,GAAA8nB,WAMA1C,WAAA69B,WAAAnP,SAAAl5D,EAAAk5D,SAAAz2D,EAAAy2D,SAAA9zC,GAIA,IAAA,GAAAu4B,GAAA,EAAA85D,GAAAzqF,MAAA5kC,OAAAu1D,EAAA85D,GAAA95D,IAAA,CAEA,GAAAzd,MAAAlT,MAAA2wB,EAMA,QAAAhoD,MAJA0/B,UAAA,IAAA+xD,gBACA5sD,OAAAnF,SAAA6K,KAAA1C,eACAhD,OAAAnF,UAEA,CAEA,GAAAe,MAAAf,SAAAe,KAEA6gD,GAAAkwE,YAAAjnH,KAAA9sC,GACA2kF,GAAAovE,YAAAjnH,KAAA7sC,GACAylF,GAAAquE,YAAAjnH,KAAA31B,EAEA,KAAA,IAAAigC,WAAAg/G,wBAAAvyE,GAAAc,GAAAe,IAAA,CAEA,GAAAltF,SAAA4+C,WAAAi/G,qBAAAxyE,GAAAc,GAAAe,GAEA,IAAA1iD,OAAAlT,MAAAmZ,WAAA,CAEA,GAAAjG,OAAAlT,MAAAmT,YAAA,IAAAzqC,QAAA,QACA,IAAAwqC,OAAAlT,MAAAqZ,WAAA,IAAA3wC,QAAA,SAIA48J,MAAApB,oBAEAoB,MAAAv9H,GAAAuP,OAAAvP,GACAu9H,MAAAvxE,GAAAtlD,KAAAslD,IACAuxE,MAAAzwE,GAAApmD,KAAAomD,IACAywE,MAAA1vE,GAAAnnD,KAAAmnD,IAEA0vE,MAAAvG,YAAAtwH,KAAAuO,KAAArG,SAEA,IAAAjuC,SAAAwqC,OAAAlT,MAAAqZ,UAAAnG,OAAAlT,MAAAmZ,YAEAmsH,MAAAvG,YAAAx1D,SAIA+7D,MAAAvG,YAAAzvD,aAAAu2D,eAAA92G,WAIA,KAAA,GAFAmnE,mBAAAl5E,KAAAiE,cAEApkC,EAAA,EAAA8pJ,GAAAzyJ,KAAAY,IAAAohH,kBAAAhxH,OAAA,GAAA2X,EAAA8pJ,GAAA9pJ,IAAA,CAEA,GAAAkiJ,aAAAuG,MAAAjG,mBAAAxiJ,EACAkiJ,aAAAtwH,KAAAynF,kBAAAr5G,KAEA,IAAAnU,SAAAwqC,OAAAlT,MAAAqZ,UAAAnG,OAAAlT,MAAAmZ,YAEA4lH,YAAAx1D,SAIAw1D,YAAAzvD,aAAAu2D,eAAA92G,YAIAu2G,MAAArC,oBAAA/sC,kBAAAhxH,MAEA,IAAAu0H,WAAAn4E,cAAAmZ,EAEA,QAAAhoD,KAAAgnH,UAEA,IAAA,GAAAzgH,GAAA,EAAAA,EAAA,EAAAA,IAEAssJ,MAAAliH,IAAApqC,GAAAy1B,KAAAgrF,UAAAzgH,GAMAssJ,OAAAn5H,MAAA6Q,KAAA7Q,MACAm5H,MAAAnzH,SAAAA,SAEAmzH,MAAApjI,GAAA6xD,GAAA1kD,eAAAnN,EAAA2yD,GAAAxlD,eAAAnN,EAAA0zD,GAAAvmD,eAAAnN,GAAA,EACAojI,MAAAj0H,YAAAiG,OAAAjG,YAEAmwH,YAAAv9J,SAAAuB,KAAA8/J,eAMA,IAAAhuH,iBAAAtX,OAAA8iD,MAIA,GAFA8iF,2BAAA1zH,iBAAAmxH,sBAAAmC,cAEA7tH,mBAAA3X,OAAAujB,eAAA,CAEA,GAAAt2C,YAAA0qC,SAAA1qC,UAEA,QAAAwF,KAAAxF,WAAAojC,SAAA,CAIA,IAAA,GAFA6uD,WAAAjyF,WAAAojC,SAAAl2B,MAEA/Q,EAAA,EAAA4f,EAAAk2E,UAAAh6F,OAAAkE,EAAA4f,EAAA5f,GAAA,EAEAk+C,WAAA69B,WAAA+Z,UAAA91F,GAAA81F,UAAA91F,EAAA,GAAA81F,UAAA91F,EAAA,GAIA,QAAAqJ,KAAAxF,WAAAk/B,MAIA,IAAA,GAFAkV,QAAAp0C,WAAAk/B,MAAAhyB,MAEA/Q,EAAA,EAAA4f,EAAAq4B,OAAAn8C,OAAAkE,EAAA4f,EAAA5f,GAAA,EAEAk+C,WAAA8+G,UAAA/kH,OAAAj4C,GAAAi4C,OAAAj4C,EAAA,GAAAi4C,OAAAj4C,EAAA,GAMA,IAAA,OAAAuuC,SAAAthB,MAIA,IAAA,GAFA6sB,SAAAvL,SAAAthB,MAAAlc,MAEA/Q,EAAA,EAAA4f,EAAAk6B,QAAAh+C,OAAAkE,EAAA4f,EAAA5f,GAAA,EAEAk+C,WAAAk/G,SAAAtjH,QAAA95C,GAAA85C,QAAA95C,EAAA,QAQA,KAAA,GAFAk3F,MAAAhpD,iBAAAtX,OAAA+iD,aAAA,EAAA,EAEA35E,EAAA,EAAA4f,EAAAk2E,UAAAh6F,OAAA,EAAA,EAAAkE,EAAA4f,EAAA5f,GAAAk3F,KAEAh5C,WAAAk/G,SAAAp9J,EAAAA,EAAA,QAQA,IAAAuuC,mBAAA3X,OAAAohB,SAAA,CAEA,GAAAvX,UAAAyN,OAAAK,SAAA9N,QAEA,IAAA,IAAAA,SAAA3kC,OAAA,QAEA6uF,IAAA+vE,sBACA/vE,GAAA1kD,eAAAZ,KAAA5E,SAAA,IAAAyE,aAAAs3H,2BAIA,KAAA,GAFAtlE,MAAAhpD,iBAAAtX,OAAA+iD,aAAA,EAAA,EAEAn+C,EAAA,EAAAgwF,GAAA/qF,SAAA3kC,OAAA0/B,EAAAgwF,GAAAhwF,IAEAmvD,GAAA+vE,sBACA/vE,GAAA1kD,eAAAZ,KAAA5E,SAAAjF,IAAA0J,aAAAs3H,6BAEAhhI,EAAA,GAAA07D,KAAA,IAEAzL,GAAAovE,YAAAF,aAAA,GAEA+B,8BAAAr3H,KAAAslD,GAAA1kD,gBACA02H,8BAAAt3H,KAAAomD,GAAAxlD,iBAEA,IAAAy1H,SAAAgB,8BAAAC,iCAGAD,8BAAAz4G,eAAA,EAAAy4G,8BAAAz9I,GACA09I,8BAAA14G,eAAA,EAAA04G,8BAAA19I,GAEAk9I,MAAAjB,oBAEAiB,MAAAx9H,GAAAuP,OAAAvP,GACAw9H,MAAAxxE,GAAA1kD,eAAAZ,KAAAq3H,+BACAP,MAAA1wE,GAAAxlD,eAAAZ,KAAAs3H,+BAEAR,MAAArjI,EAAAhuB,KAAAsF,IAAAssJ,8BAAA5jI,EAAA6jI,8BAAA7jI,GACAqjI,MAAAl0H,YAAAiG,OAAAjG,YAEAk0H,MAAApzH,SAAAmF,OAAAnF,SAEAmF,OAAAnF,SAAAkB,eAAArT,MAAA4/D,eAEA2lE,MAAAlyH,aAAA,GAAA5E,KAAA6I,OAAAK,SAAA0J,OAAAzc,IACA2gI,MAAAlyH,aAAA,GAAA5E,KAAA6I,OAAAK,SAAA0J,OAAAzc,EAAA,KAIA48H,YAAAv9J,SAAAuB,KAAA+/J,cAQA,IAAAjuH,iBAAAtX,OAAAijD,QAIA,GAFA2iF,2BAAA1zH,iBAAAmxH,sBAAAmC,cAEA7tH,mBAAA3X,OAAAohB,SAIA,IAAA,GAFAvX,UAAAyN,OAAAK,SAAA9N,SAEAjF,EAAA,EAAAgwF,GAAA/qF,SAAA3kC,OAAA0/B,EAAAgwF,GAAAhwF,IAAA,CAEA,GAAAgH,QAAA/B,SAAAjF,EAEA2+H,UAAAptJ,IAAAy1B,OAAA9uB,EAAA8uB,OAAArsB,EAAAqsB,OAAA1J,EAAA,GACAqhI,SAAAj1H,aAAAs3H,4BAEAtC,UAAAC,SAAAjsH,OAAApK,YAIA,IAAAyK,mBAAA3X,OAAAujB,eAAA,CAEA,GAAAt2C,YAAA0qC,SAAA1qC,UAEA,QAAAwF,KAAAxF,WAAAojC,SAIA,IAAA,GAFA6uD,WAAAjyF,WAAAojC,SAAAl2B,MAEA/Q,EAAA,EAAA4f,EAAAk2E,UAAAh6F,OAAAkE,EAAA4f,EAAA5f,GAAA,EAEAm6J,SAAAptJ,IAAA+oF,UAAA91F,GAAA81F,UAAA91F,EAAA,GAAA81F,UAAA91F,EAAA,GAAA,GACAm6J,SAAAj1H,aAAAs3H,4BAEAtC,UAAAC,SAAAjsH,OAAApK,aAQAoK,kBAAAtX,OAAA8hD,SAEAyhF,SAAAptJ,IAAAqvJ,aAAAvhK,SAAA,IAAAuhK,aAAAvhK,SAAA,IAAAuhK,aAAAvhK,SAAA,IAAA,GACAs/J,SAAAj1H,aAAA+0H,uBAEAC,UAAAC,SAAAjsH,OAAApK,SAYA,OANA,IAAAs1H,cAEAhB,YAAAv9J,SAAAgV,KAAA4rJ,aAIArD,cC3yBA,SAAA5yJ,OAAA6D,WACA7D,OAAA,WACA,YA0SA,SAAAg4J,SAAA12J,EAAAC,GACA,MAAA,OAAAD,GAAA,MAAAC,GAAAD,EAAAiI,gBAAAhI,EAAAgI,cAGA,QAAA0uJ,YAAA1sJ,MAAA3F,OACA,GAAAsyJ,SAAA19J,EAAAqE,IAAA0M,MAAAjV,MACA,KAAAuI,MAAA+G,MACA,OAAA,CAGA,KADAsyJ,QAAAtyJ,MAAA2D,cACA/O,EAAA,EAAAA,EAAAqE,MAAArE,EACA,GAAA09J,UAAA3sJ,MAAA/Q,GAAA+O,cACA,OAAA,CAGA,QAAA,EAGA,QAAA4uJ,sBAAAzvH,QACA,IAAA,GAAA5hC,OAAA4hC,QACArnC,WAAA/D,KAAAorC,OAAA5hC,OACA4hC,OAAA5hC,KAAA,GAAAxT,QAAAo1C,OAAA5hC,KAAA,MA8VA,QAAAsxJ,cAAAh/J,UAAAi/J,eACA3hK,KAAA4hK,GAAAl/J,WAAA,GACA1C,KAAA6hK,UAEA7hK,KAAA2hK,cAAAA,eAAA,IA/pBA,GAAAG,QAEAA,MAAAC,mBACAC,QACAC,OAAA,0BACAC,WAAA,kCACAC,IAAA,sQACAC,MAAA,iFACAC,KAAA,yIACAC,SAAA,2pBACAC,QAAA,+uKACAC,GAAA,+gBACAC,KAAA,6HACAC,KAAA,+BACAC,WAAA,mBACAC,SAAA,gHACAC,KAAA,kBACAC,MAAA,4GACAC,QAAA,yaACAC,IAAA,oHACAC,KAAA,6OACAC,QAAA,sCACAC,UAAA,sHACAC,SAAA,kEACAC,QAAA,UACAC,SAAA,eACAC,KAAA,OACAC,IAAA,MACAC,aAAA,0LAEAC,SACAC,KAAA,oBACAC,YAAA,+BACAC,cAAA,stDACAC,OAAA,wNACAC,cAAA,4CACAC,SAAA,6FACAC,WAAA,iaACAC,iBAAA,sBACAC,UAAA,mFACAC,eAAA,mGACAC,WAAA,uGACAC,WAAA,mOACAC,cAAA,0GACAC,SAAA,+EACAC,cAAA,qDACAC,gBAAA,gaACAC,aAAA,6NACAC,WAAA,wDACAC,aAAA,ifACAC,aAAA,6DACAC,aAAA,4GACAC,cAAA,mDACAC,UAAA,UACAC,cAAA,8CACAC,YAAA,kDACAC,cAAA,2EACAC,aAAA,kLACAC,YAAA,qEACAC,iBAAA,aACAC,WAAA,6RACAC,cAAA,uFACAC,WAAA,iFACAC,WAAA,0KACAC,UAAA,0QACAC,UAAA,8IACAC,WAAA,yEACAC,eAAA,yDACAC,UAAA,mBACAC,SAAA,kKACAC,aAAA,uGACAC,UAAA,oBACAC,cAAA,iBACAC,cAAA,iCACAC,aAAA,mCACAC,WAAA,iDACAC,eAAA,kCACAC,WAAA,mBACAC,WAAA,wDACAC,YAAA,0EACAC,YAAA,0mBACAC,kBAAA,+BACAC,eAAA,2GACAC,gBAAA,6GACAC,YAAA,iIACAC,eAAA,qIACAC,cAAA,oBACAC,eAAA,yEACAC,cAAA,kEACAC,cAAA,mFACAC,cAAA,4XACAC,YAAA,yGACAC,eAAA,2UACAC,SAAA,+BACAC,kBAAA,2UACAC,cAAA,+HACAC,UAAA,4HACAC,UAAA,yBACAC,cAAA,8DACAC,aAAA,gHACAC,eAAA,oCACAC,eAAA,sCACAC,eAAA,wcACAC,cAAA,kRACAC,aAAA,gRACAC,UAAA,+BACAC,aAAA,kDACAC,eAAA,yDACAC,iBAAA,2CACAC,eAAA,2EACAC,cAAA,kBACAC,aAAA,kCACAC,iBAAA,gCACAC,WAAA,iBACAC,UAAA,qCACAC,YAAA,WACAC,UAAA,wOACAC,WAAA,wfACAC,UAAA,qBACAC,WAAA,0VACAC,gBAAA,2GACAC,WAAA,uHACAC,cAAA,cACAC,cAAA,iKACAC,cAAA;w5BACAC,WAAA,wTACAC,cAAA,YACAC,gBAAA,iCACAC,YAAA,oGACAC,aAAA,sFACAC,WAAA,iDACAC,UAAA,kEACAC,YAAA,6QACAC,aAAA,uFACAC,aAAA,0RACAC,SAAA,gCACAC,aAAA,+BACAC,WAAA,iGACAC,aAAA,+IACAC,eAAA,mBACAC,iBAAA,aACAC,aAAA,kBACAC,cAAA,sBACAC,KAAA,oBACAC,cAAA,SACAC,cAAA,2QAEAC,KACAC,UAAA,UACAC,aAAA,sCACAC,OAAA,yDACAC,UAAA,wDACAC,gBAAA,iGACAC,eAAA,iHACAC,IAAA,oCACAC,QAAA,QACAC,QAAA,QACAC,OAAA,8BACAC,MAAA,cACAC,OAAA,aACAC,OAAA,QAEAC,KACAC,OAAA,qDACAC,OAAA,eACAC,MAAA,2EACAC,QAAA,UACAC,KAAA,6BACAC,GAAA,sBACAC,QAAA,uEACAC,KAAA,OACAC,SAAA,WACAC,OAAA,SACAC,OAAA,sDACAC,UAAA,oBACAC,YAAA,cACAC,aAAA,eACAC,aAAA,eACAC,OAAA,SACAC,QAAA,gBACAC,aAAA,QACAC,SAAA,aACAC,eAAA,sIACAC,SAAA,sCAEAC,OACAC,OAAA,eACAC,MAAA,cACAC,QAAA,gBACAC,SAAA,iBACA3J,KAAA,wBACA1B,OAAA,0BACAsL,KAAA,wBACAzJ,OAAA,eACA+H,QACA,eACA,cACA,cAEA2B,OACA,eAEA1B,OAAA,eACAK,SACA,gBACA,eAEAsB,OAAA,eACAxB,KAAA,aACAC,IACA,kBACA,iBACA,cACA,8BAEAa,SAAA,iBACAW,aAAA,qBACA3B,OACA,aACA,mBACA,iBAEA4B,aAAA,mBACAC,aAAA,gBACAC,aAAA,kBACAC,WAAA,mBACAC,eAAA,uBACAtB,YAAA,oBACAC,aAAA,qBACAsB,eAAA,uBACAC,KAAA,aACA1B,QACA,gBACA,gBAEAP,QAAA,gBACAkC,MAAA,cACAC,OAAA,kBACAlB,SAAA,iBACAmB,MAAA,cACAC,QAAA,gBACAC,OAAA,eACAC,OAAA,eACAlD,IAAA,2BACAmD,QAAA,gBACAtM,YACA,yBACA,4BACA,iBAEAuM,KAAA,aACAC,KAAA,aACAC,oBACA,yBACA,uBAEAC,gBAAA,sBACAC,aAAA,mBACAC,aAAA,mBACAC,SACA,kBACA,iBAEAtD,OACA,cACA,iBAGAl3G,OACAy6G,IAAA,kRACAC,UAAA,8DACAC,YAAA,YACAC,GAAA,gBACAC,OAAA,wBACAC,QAAA,+DACAC,MAAA,YAKAxN,KAAAyN,sBACAC,YAAA,2TACAC,aAAA,0kDACAC,cAAA,8BAGA,IACA/lK,SADAgB,WAAAd,OAAArN,UAAA4N,cA0qBA,OAvqBA03J,MAAA6N,eAAA,eACA7N,KAAA8N,gBAAA,gBACA9N,KAAA+N,gBAAA,gBAEAlmK,QAAA,WAAApN,OACAA,MAAAoN,QAAA,SAAAuF,OAAA,MAAA,mBAAArF,OAAArN,UAAAsN,SAAAlD,KAAAsI,QA4BA,WACA,GAAAkB,KAAAkQ,OAAApR,MAAApL,EAAAqE,IAAA2nK,OAAA/N,kBAAAD,KAAAC,iBACA,KAAA3xJ,MAAA2xJ,mBAAAmL,MACA,GAAAviK,WAAA/D,KAAAm7J,kBAAAmL,MAAA98J,KAAA,CAMA,IALAkQ,OAAAyhJ,kBAAAmL,MAAA98J,KACAzG,QAAA2W,UACAA,QAAAA,SAEAnY,IAAAmY,OAAA1gB,OACAkE,EAAA,EAAAA,EAAAqE,MAAArE,EACAoL,MAAAoR,OAAAxc,GACAgsK,OAAA5gK,MAAAwJ,QAAA,SACAo3J,QAAA,IACA5gK,MAAAA,MAAAmoI,UAAA,EAAAy4B,QAAA,gBAAA5gK,MAAAmoI,UAAAy4B,OAAA,IAEAxvJ,OAAAxc,GAAA,GAAAlH,QAAAsS,MAAA,IAEA6yJ,mBAAAmL,MAAA98J,KAAAkQ,OAGAmhJ,qBAAAM,kBAAA+I,KACArJ,qBAAAM,kBAAAC,QACAP,qBAAAM,kBAAA2B,SACAjC,qBAAAM,kBAAA6J,KACAnK,qBAAAM,kBAAAxtG,OAGAwtG,kBAAAgO,MACA3E,eAAArJ,kBAAA+I,IAAAM,eACAD,gBAAApJ,kBAAA+I,IAAAK,oBAWArJ,KAAAkO,UAAA,SAAAC,MAAAvtK,WACA,IAAA,GAAA0N,OAAA6/J,OACA,GAAAtlK,WAAA/D,KAAAqpK,MAAA7/J,MACA6/J,MAAA7/J,KAAAvT,KAAA6F,WACA,MAAA0N,IAIA,OAAA,OAUA0xJ,KAAAoO,YAAA,SAAAD,MAAAvtK,WACA,GAAAmiB,UACA,KAAA,GAAAzU,OAAA6/J,OACAtlK,WAAA/D,KAAAqpK,MAAA7/J,MACA6/J,MAAA7/J,KAAAvT,KAAA6F,YACAmiB,OAAA3kB,KAAAkQ,IAIA,OAAAyU,SAWAi9I,KAAAqO,cAAA,SAAAv+B,aAAAlvI,WACA,GAAA0tK,UAAAtsK,EAAAqE,IAAAwM,MAAAu4J,MAAApL,KAAAC,kBAAAmL,KACA,IAAAviK,WAAA/D,KAAAsmK,MAAAt7B,cAGA,IAFAw+B,SAAAlD,MAAAt7B,cACAzpI,IAAAioK,SAAAxwK,OACAkE,EAAA,EAAAA,EAAAqE,MAAArE,EAEA,GAAA,QADA6Q,MAAAy7J,SAAAtsK,GAAAkgB,KAAAthB,YAEA,MAAAiS,OAAA,EAIA,OAAA,OAYAmtJ,KAAAuO,WAAA,SAAAz+B,aAAAlvI,WACA,GAAAu3B,SAAA6nI,KAAAqO,cAAAv+B,aAAAlvI,UACA,OAAAu3B,SAAA6nI,KAAAwO,iBAAAr2I,SAAA1sB,KAUAu0J,KAAAwO,iBAAA,SAAAr2I,SACA,GAAAs2I,QAWA,OATAA,SAAAt2I,QAAAna,MAAA,iBACA,IAAAywJ,QAAA3wK,SACAq6B,QAAAs2I,QAAA,IAEAA,QAAA3wK,OAAA,IACAq6B,QAAAs2I,QAAA,GAAA,IACAA,QAAA1wK,QACAo6B,SAAAs2I,QAAAjgK,KAAA,KAEAuwF,OAAA5mE,UAGA6nI,KAAA0O,iBAAA,SAAA9tK,WACA,MAAAo/J,MAAAyN,qBAAAC,YAAA3yK,KAAA6F,YACAo/J,KAAAyN,qBAAAE,aAAA5yK,KAAA6F,UAAAyR,OAAA,EAAA,KAGA2tJ,KAAA2O,iBAAA,SAAA/tK,WACA,MAAAo/J,MAAAyN,qBAAAG,cAAA7yK,KAAA6F,YAGAo/J,KAAA4O,sBAAA,SAAA5oH,MAAAplD,UAAAi/J,eACA,OAjdA,KAidA75G,MAAA6oH,OAAA,CAGA,GAAAC,OAAAC,OAAAC,UAIA,IADAD,OAAA/O,KAAAkO,UAAAlO,KAAAC,kBAAA2B,QAAAhhK,WAIA,MAFAolD,OAAA6oH,OAAA7oH,MAAA+oH,OAAAA,YACA/oH,MAAA8oH,MAAA,KAKA,IADAA,MAAA9O,KAAAkO,UAAAlO,KAAAC,kBAAAC,OAAAt/J,WAIA,MAFAolD,OAAA6oH,OAAA7oH,MAAA8oH,MAAAA,WACA9oH,MAAA+oH,OAAA,KAKA/O,MAAA0O,iBAAA9tK,YACAouK,WAAApP,aAAAqP,aAAApP,mBAveA,KAweAmP,YACAhpH,MAAA6oH,OAAA7O,KAAA+N,gBACA/nH,MAAA+oH,OAAA/oH,MAAA8oH,MAAA,MACAE,YACAhpH,MAAA6oH,OAAA7oH,MAAA8oH,MAAA9O,KAAA6N,eACA7nH,MAAA+oH,OAAA,OAEA/oH,MAAA6oH,OAAA7oH,MAAA+oH,OAAA/O,KAAA8N,gBACA9nH,MAAA8oH,MAAA,OAEA9O,KAAA2O,iBAAA/tK,YACAolD,MAAA6oH,OAAA7oH,MAAA+oH,OAAA/O,KAAA8N,gBACA9nH,MAAA8oH,MAAA,MAGA9oH,MAAA6oH,OAAA7oH,MAAA+oH,OAAA/oH,MAAA8oH,MAAA,OAKA9O,KAAAkP,YAAA,SAAA98I,GASA,GAAA+8I,WAAA,OAAA/8I,EAAAy8I,QAEA,OAEAz8I,GAAAg9I,GAAA,QAAAh9I,EAAA+F,QAAA,SAAA,KACA/F,EAAAg9I,GAAA,QAAAh9I,EAAA+F,QAAA,WAAA,KACA/F,EAAAg9I,GAAA,QAAAh9I,EAAA+F,QAAA,SAAA,KAMA/F,EAAA+F,QAAA,WAAA,KAAA/F,EAAAi9I,GAAA,WAGAj9I,EAAA+F,QAAA,qBAAA,GAIA/F,EAAAi9I,GAAA,eAAAj9I,EAAA+F,QAAA,eAAA,GAEA/F,EAAAvf,MAAA,qBAGAuf,EAAA+F,QAAA,UAAA,KAAA/F,EAAAvf,MAAA,kBAEAuf,EAAAvf,MAAA,iBAGAuf,EAAAi9I,GAAA,YAAAj9I,EAAA+F,QAAA,YAAA,IAGA/F,EAAAi9I,GAAA,WAAAj9I,EAAAi9I,GAAA,cAAAj9I,EAAA+F,QAAA,YAAA,GAGA/F,EAAAi9I,GAAA,YAAAj9I,EAAA+F,QAAA,YAAA,KAAA/F,EAAAi9I,GAAA,cAAAj9I,EAAA+F,QAAA,YAAA,KAGA/F,EAAAi9I,GAAA,UAAAj9I,EAAA+F,QAAA,cAAA,IAAA/F,EAAAi9I,GAAA,cAGAj9I,EAAAi9I,GAAA,YAGAj9I,EAAAi9I,GAAA,UAIAj9I,EAAAi9I,GAAA,WAAAj9I,EAAA+F,QAAA,SAAA,IAGA/F,EAAAi9I,GAAA,eAAAj9I,EAAAi9I,GAAA,YAAAj9I,EAAA+F,QAAA,YAAA,KAGA/F,EAAAvf,MAAA,gBACAuf,EAAAi9I,GAAA,WAAAj9I,EAAA+F,QAAA,WAAA,GAGA/F,EAAAi9I,GAAA,cAAAj9I,EAAAi9I,GAAA,eAGAj9I,EAAA+F,QAAA,WAAA,KAAAg3I,WAGA/8I,EAAA+F,QAAA,WAAA,IAAAg3I,WAGA/8I,EAAA+F,QAAA,YAAA,IAAAg3I,WAGA/8I,EAAA+F,QAAA,SAAA,IAAAg3I,WAIA/8I,EAAA+F,QAAA,UAAA,KAAAg3I,UAGA,IAIA/8I,EAAAg9I,GAAA,QAAAh9I,EAAA+F,QAAA,QAAA,KACA/F,EAAAg9I,GAAA,QAAAh9I,EAAA+F,QAAA,UAAA,KACA/F,EAAAg9I,GAAA,QAAAh9I,EAAA+F,QAAA,QAAA,KAGA/F,EAAAi9I,GAAA,eAAAj9I,EAAA+F,QAAA,eAAA,GAAA/F,EAAA+F,QAAA,cAAA,GAGA/F,EAAA+F,QAAA,eAAA,GAAA/F,EAAA+F,QAAA,eAAA,MACA/F,EAAA+F,QAAA,YAAA,KAAA/F,EAAAi9I,GAAA,SAGAj9I,EAAAvf,MAAA,4CAGAuf,EAAA+F,QAAA,eAAA,IAAA/F,EAAAi9I,GAAA,aAEA,KAKAj9I,EAAA+F,QAAA,cAAA,GAEA/F,EAAAvf,MAAA,kCAAAuf,EAAA+F,QAAA,kBAGA,MAQA6nI,KAAAsP,SAAA,SAAAxP,IACA,MAAAE,MAAAkO,UAAAlO,KAAAC,kBAAAgO,KAAAnO,KACAE,KAAAkO,UAAAlO,KAAAC,kBAAA+I,IAAAlJ,KAGAE,KAAAuP,qBAAA,WACA,MAAAj2K,QAAAk2K,OAAApyK,MAAA9D,OAAAk2K,OAAAx0I,OACA1hC,OAAAk2K,OAAApyK,MACA9D,OAAAk2K,OAAAx0I,QAqCA4kI,aAAAllK,WACAsvF,YAAA41E,aAwBAiP,OAAA,WAEA,MADA7O,MAAA4O,sBAAA1wK,KAAA6hK,OAAA7hK,KAAA4hK,GAAA5hK,KAAA2hK,eACA3hK,KAAA6hK,OAAA8O,QA4BAC,MAAA,WAEA,MADA9O,MAAA4O,sBAAA1wK,KAAA6hK,OAAA7hK,KAAA4hK,GAAA5hK,KAAA2hK,eACA3hK,KAAA6hK,OAAA+O,OA+CAC,OAAA,WAEA,MADA/O,MAAA4O,sBAAA1wK,KAAA6hK,OAAA7hK,KAAA4hK,GAAA5hK,KAAA2hK,eACA3hK,KAAA6hK,OAAAgP,QAmBAnuK,UAAA,WAIA,WAvyBA,KAoyBA1C,KAAA6hK,OAAAn/J,YACA1C,KAAA6hK,OAAAn/J,UAAAo/J,KAAAkO,UAAAlO,KAAAC,kBAAA6J,IAAA5rK,KAAA4hK,KAEA5hK,KAAA6hK,OAAAn/J,WAmBA6uK,WAAA,WAIA,WA9zBA,KA2zBAvxK,KAAA6hK,OAAA0P,aACAvxK,KAAA6hK,OAAA0P,WAAAzP,KAAAoO,YAAApO,KAAAC,kBAAA6J,IAAA5rK,KAAA4hK,KAEA5hK,KAAA6hK,OAAA0P,YAaAL,GAAA,WAIA,WA/0BA,KA40BAlxK,KAAA6hK,OAAAqP,KACAlxK,KAAA6hK,OAAAqP,GAAApP,KAAAsP,SAAApxK,KAAA4hK,KAEA5hK,KAAA6hK,OAAAqP,IAqBAj3I,QAAA,SAAA7pB,KACA,MAAA0xJ,MAAAuO,WAAAjgK,IAAApQ,KAAA4hK,KAoBA4P,WAAA,SAAAphK,KACA,MAAA0xJ,MAAAqO,cAAA//J,IAAApQ,KAAA4hK,KAiBAuP,GAAA,SAAA/gK,KACA,MAAAmxJ,YAAAvhK,KAAAuxK,aAAAnhK,MACAkxJ,QAAAlxJ,IAAApQ,KAAAkxK,OACA5P,QAAAlxJ,IAAApQ,KAAA4wK,UACAtP,QAAAlxJ,IAAApQ,KAAA6wK,WACAtP,WAAAO,KAAAoO,YAAApO,KAAAC,kBAAAxtG,MAAAv0D,KAAA4hK,IAAAxxJ,MAWAuE,MAAA,SAAAo4C,SAIA,MAHAA,mBAAAnwD,UACAmwD,QAAA,GAAAnwD,QAAAmwD,QAAA,MAEAA,QAAAlwD,KAAAmD,KAAA4hK,KAaAmP,aAAA,SAAApP,eACA,MAAAD,cAAAqP,aAAApP,eAAA3hK,KAAA2hK,gBASAqP,YAAA,WAIA,WA17BA,KAu7BAhxK,KAAA6hK,OAAA4P,QACAzxK,KAAA6hK,OAAA4P,MAAA3P,KAAAkP,YAAAhxK,OAEAA,KAAA6hK,OAAA4P,QAKA,mBAAAr2K,SAAAA,OAAAk2K,OACA5P,aAAAqP,aAAA,SAAApP,eACA,MAAAA,eAAA,MAj8BA,GAi8BAG,KAAAuP,wBAAA1P,eAGAD,aAAAqP,aAAA,aAIArP,aAAAgQ,MAAA5P,KAEAJ,aAAAznI,QAAA,mBAEAynI,gBAEA,SAAAv0J,WACA,GAAA,mBAAAhE,SAAAA,OAAAC,QACA,MAAA,UAAA/N,SAAA8N,OAAAC,QAAA/N,UACA,IAAA,kBAAAiO,SAAAA,OAAAC,IACA,MAAAD,OACA,IAAA,mBAAAlO,QACA,MAAA,UAAAC,SAAAD,OAAAsmK,aAAArmK,UAGA,MAAA,IAAAkV,OAAA,2BCv9BA,SAAAlH,OAAAhO,SACA,gBAAA+N,UAAA,mBAAAD,QAAAA,OAAAC,QAAA/N,UACA,kBAAAiO,SAAAA,OAAAC,IAAAD,OAAAjO,SACAgO,OAAAsoK,IAAAt2K,WACA2E,KAAA,WAAA,YAMA,SAAA4xK,SAAAtyI,GACA,WAAAnyB,KAAAmyB,GAAA,OAAAA,EAGA,QAAAuyI,OAAAvyI,GACA,WAAAnyB,KAAAmyB,GAAA,OAAAA,EAGA,QAAAwyI,QAAAxyI,GACA,OAAA,IAAAA,EAGA,QAAAyyI,SAAAzyI,GACA,OAAA,IAAAA,EAMA,QAAA0yI,aAAA9iK,OACA,MACA,gBAAAA,QACA,gBAAAA,QACA,iBAAAA,OASA,QAAAnF,UAAAE,KACA,MAAA,QAAAA,KAAA,gBAAAA,KAQA,QAAAgoK,WAAA/iK,OACA,MAAAgjK,WAAAtrK,KAAAsI,OAAAmB,MAAA,GAAA,GAOA,QAAA8hK,eAAAloK,KACA,MAAA,oBAAAioK,UAAAtrK,KAAAqD,KAGA,QAAAmoK,UAAA9yI,GACA,MAAA,oBAAA4yI,UAAAtrK,KAAA04B,GAMA,QAAA+yI,mBAAA1kK,KACA,GAAA4J,GAAAwQ,WAAA4xG,OAAAhsH,KACA,OAAA4J,IAAA,GAAA3I,KAAAE,MAAAyI,KAAAA,GAAApI,SAAAxB,KAMA,QAAA7D,UAAA6D,KACA,MAAA,OAAAA,IACA,GACA,gBAAAA,KACAk5G,KAAAC,UAAAn5G,IAAA,KAAA,GACAgsH,OAAAhsH,KAOA,QAAA2kK,UAAA3kK,KACA,GAAA4J,GAAAwQ,WAAApa,IACA,OAAAb,OAAAyK,GAAA5J,IAAA4J,EAOA,QAAAg7J,SACAC,IACAC,kBAIA,IAAA,GAFAjoK,KAAAX,OAAA88F,OAAA,MACA1iD,KAAAuuH,IAAA1yJ,MAAA,KACAhc,EAAA,EAAAA,EAAAmgD,KAAArkD,OAAAkE,IACA0G,IAAAy5C,KAAAngD,KAAA,CAEA,OAAA2uK,kBACA,SAAA9kK,KAAA,MAAAnD,KAAAmD,IAAAkF,gBACA,SAAAlF,KAAA,MAAAnD,KAAAmD,MAgBA,QAAA4rC,QAAA9uC,IAAAioK,MACA,GAAAjoK,IAAA7K,OAAA,CACA,GAAAmxB,OAAAtmB,IAAAiO,QAAAg6J,KACA,IAAA3hJ,OAAA,EACA,MAAAtmB,KAAA62F,OAAAvwE,MAAA,IASA,QAAA4hJ,QAAA1oK,IAAAmG,KACA,MAAAhG,gBAAAxD,KAAAqD,IAAAmG,KAMA,QAAAo5H,QAAAlsI,IACA,GAAAwqD,OAAAj+C,OAAA88F,OAAA,KACA,OAAA,UAAA6rE,KAEA,MADA1qH,OAAA0qH,OACA1qH,MAAA0qH,KAAAl1K,GAAAk1K,OA8BA,QAAAp1F,MAAA9/E,GAAAs1K,KACA,QAAAC,SAAAjoK,GACA,GAAA8Y,GAAAzjB,UAAAL,MACA,OAAA8jB,GACAA,EAAA,EACApmB,GAAAwC,MAAA8yK,IAAA3yK,WACA3C,GAAAsJ,KAAAgsK,IAAAhoK,GACAtN,GAAAsJ,KAAAgsK,KAIA,MADAC,SAAAC,QAAAx1K,GAAAsC,OACAizK,QAMA,QAAAtnJ,SAAA04B,KAAA9F,OACAA,MAAAA,OAAA,CAGA,KAFA,GAAAr6C,GAAAmgD,KAAArkD,OAAAu+C,MACAxyB,IAAA,GAAApvB,OAAAuH,GACAA,KACA6nB,IAAA7nB,GAAAmgD,KAAAngD,EAAAq6C,MAEA,OAAAxyB,KAMA,QAAA7gB,QAAA2C,GAAAslK,OACA,IAAA,GAAA3iK,OAAA2iK,OACAtlK,GAAA2C,KAAA2iK,MAAA3iK,IAEA,OAAA3C,IAMA,QAAA0hB,UAAA1kB,KAEA,IAAA,GADAC,QACA5G,EAAA,EAAAA,EAAA2G,IAAA7K,OAAAkE,IACA2G,IAAA3G,IACAgH,OAAAJ,IAAAD,IAAA3G,GAGA,OAAA4G,KAQA,QAAAsoK,MAAApoK,EAAAC,EAAAkX,IAyBA,QAAAkxJ,YAAAroK,EAAAC,GACA,GAAAD,IAAAC,EAAA,OAAA,CACA,IAAAqoK,WAAAnpK,SAAAa,GACAuoK,UAAAppK,SAAAc,EACA,KAAAqoK,YAAAC,UAsBA,OAAAD,YAAAC,WACAx5C,OAAA/uH,KAAA+uH,OAAA9uH,EAtBA,KACA,GAAAuoK,UAAA72K,MAAAoN,QAAAiB,GACAyoK,SAAA92K,MAAAoN,QAAAkB,EACA,IAAAuoK,UAAAC,SACA,MAAAzoK,GAAAhL,SAAAiL,EAAAjL,QAAAgL,EAAA0oK,MAAA,SAAAvwK,EAAAe,GACA,MAAAmvK,YAAAlwK,EAAA8H,EAAA/G,KAEA,IAAAsvK,UAAAC,SAQA,OAAA,CAPA,IAAAE,OAAA1pK,OAAAmX,KAAApW,GACA4oK,MAAA3pK,OAAAmX,KAAAnW,EACA,OAAA0oK,OAAA3zK,SAAA4zK,MAAA5zK,QAAA2zK,MAAAD,MAAA,SAAAljK,KACA,MAAA6iK,YAAAroK,EAAAwF,KAAAvF,EAAAuF,QAMA,MAAArN,GAEA,OAAA,GASA,QAAA0wK,cAAAhpK,IAAAkD,KACA,IAAA,GAAA7J,GAAA,EAAAA,EAAA2G,IAAA7K,OAAAkE,IACA,GAAAmvK,WAAAxoK,IAAA3G,GAAA6J,KAAA,MAAA7J,EAEA,QAAA,EAMA,QAAA4vK,MAAAp2K,IACA,GAAAq2K,SAAA,CACA,OAAA,YACAA,SACAA,QAAA,EACAr2K,GAAAwC,MAAAE,KAAAC,aA0HA,QAAA2zK,YAAApB,KACA,GAAAzwJ,IAAAywJ,IAAA,IAAAtoC,WAAA,EACA,OAAA,MAAAnoH,GAAA,KAAAA,EAMA,QAAA8xJ,KAAA5pK,IAAAmG,IAAAzC,IAAA8sC,YACA5wC,OAAA0xB,eAAAtxB,IAAAmG,KACAlB,MAAAvB,IACA8sC,aAAAA,WACAq5H,UAAA,EACAC,cAAA,IAQA,QAAAC,WAAA9wI,MACA,IAAA+wI,OAAAp3K,KAAAqmC,MAAA,CAGA,GAAAgjD,UAAAhjD,KAAApjB,MAAA,IACA,OAAA,UAAA7V,KACA,IAAA,GAAAnG,GAAA,EAAAA,EAAAoiF,SAAAtmF,OAAAkE,IAAA,CACA,IAAAmG,IAAA,MACAA,KAAAA,IAAAi8E,SAAApiF,IAEA,MAAAmG,OAyDA,QAAAiqK,UAAAC,MACA,MAAA,kBAAAA,OAAA,cAAAt3K,KAAAs3K,KAAArqK,YAwKA,QAAAsqK,YAAAC,SACAC,IAAAtxK,QAAAuxK,YAAAr0K,KAAAo0K,IAAAtxK,QACAsxK,IAAAtxK,OAAAqxK,QAGA,QAAAG,aACAF,IAAAtxK,OAAAuxK,YAAAngH,MA2DA,QAAAqgH,iBAAA9mK,KACA,MAAA,IAAA+mK,WAAAvnK,OAAAA,OAAAA,GAAAwsH,OAAAhsH,MAOA,QAAAgnK,YAAAC,MAAAC,MACA,GAAAC,QAAA,GAAAJ,OACAE,MAAAG,IACAH,MAAAr0J,KACAq0J,MAAAx/H,SACAw/H,MAAAvwF,KACAuwF,MAAAI,IACAJ,MAAAlpI,QACAkpI,MAAAK,iBACAL,MAAAM,aAUA,OARAJ,QAAAK,GAAAP,MAAAO,GACAL,OAAAM,SAAAR,MAAAQ,SACAN,OAAA1kK,IAAAwkK,MAAAxkK,IACA0kK,OAAAO,UAAAT,MAAAS,UACAP,OAAAQ,UAAA,EACAT,MAAAD,MAAAx/H,WACA0/H,OAAA1/H,SAAAmgI,YAAAX,MAAAx/H,WAEA0/H,OAGA,QAAAS,aAAAC,OAAAX,MAGA,IAAA,GAFA1sK,KAAAqtK,OAAA51K,OACA8K,IAAA,GAAAnO,OAAA4L,KACArE,EAAA,EAAAA,EAAAqE,IAAArE,IACA4G,IAAA5G,GAAA6wK,WAAAa,OAAA1xK,GAAA+wK,KAEA,OAAAnqK,KA2GA,QAAA+qK,cAAAzyK,OAAApE,IAAAoiB,MAEAhe,OAAA0yK,UAAA92K,IASA,QAAA+2K,aAAA3yK,OAAApE,IAAAoiB,MACA,IAAA,GAAAld,GAAA,EAAA4f,EAAA1C,KAAAphB,OAAAkE,EAAA4f,EAAA5f,IAAA,CACA,GAAAsM,KAAA4Q,KAAAld,EACA+vK,KAAA7wK,OAAAoN,IAAAxR,IAAAwR,OASA,QAAA5I,SAAA0H,MAAA0mK,YACA,GAAA7rK,SAAAmF,UAAAA,gBAAAwlK,QAAA,CAGA,GAAAmB,GAeA,OAdAlD,QAAAzjK,MAAA,WAAAA,MAAA4mK,iBAAAC,UACAF,GAAA3mK,MAAA4mK,OAEAE,cAAAC,gBACAC,sBACA35K,MAAAoN,QAAAuF,QAAAijK,cAAAjjK,SACArF,OAAAssK,aAAAjnK,SACAA,MAAAknK,SAEAP,GAAA,GAAAE,UAAA7mK,QAEA0mK,YAAAC,IACAA,GAAAQ,UAEAR,IAMA,QAAAS,gBACArsK,IACAmG,IACAzC,IACA4oK,aACAC,SAEA,GAAAC,KAAA,GAAAnC,KAEAoC,SAAA7sK,OAAA8sK,yBAAA1sK,IAAAmG,IACA,KAAAsmK,WAAA,IAAAA,SAAA3C,aAAA,CAKA,GAAArkJ,QAAAgnJ,UAAAA,SAAA1/J,IACAia,OAAAylJ,UAAAA,SAAA7lK,IAEA+lK,SAAAJ,SAAAhvK,QAAAmG,IACA9D,QAAA0xB,eAAAtxB,IAAAmG,KACAqqC,YAAA,EACAs5H,cAAA,EACA/8J,IAAA,WACA,GAAA9H,OAAAwgB,OAAAA,OAAA9oB,KAAAqD,KAAA0D,GAUA,OATA2mK,KAAAtxK,SACAyzK,IAAAI,SACAD,UACAA,QAAAH,IAAAI,SACAt6K,MAAAoN,QAAAuF,QACA4nK,YAAA5nK,SAIAA,OAEA2B,IAAA,SAAAkmK,QACA,GAAA7nK,OAAAwgB,OAAAA,OAAA9oB,KAAAqD,KAAA0D,GAEAopK,UAAA7nK,OAAA6nK,SAAAA,QAAA7nK,QAAAA,QAIAqnK,cACAA,eAEAtlJ,OACAA,OAAArqB,KAAAqD,IAAA8sK,QAEAppK,IAAAopK,OAEAH,SAAAJ,SAAAhvK,QAAAuvK,QACAN,IAAAO,cAUA,QAAAnmK,KAAA7N,OAAAoN,IAAAzC,KACA,GAAApR,MAAAoN,QAAA3G,SAAAqvK,kBAAAjiK,KAGA,MAFApN,QAAApD,OAAAgP,KAAAsF,IAAAlR,OAAApD,OAAAwQ,KACApN,OAAAs+F,OAAAlxF,IAAA,EAAAzC,KACAA,GAEA,IAAAglK,OAAA3vK,OAAAoN,KAEA,MADApN,QAAAoN,KAAAzC,IACAA,GAEA,IAAAkoK,IAAA,OAAAC,MACA,OAAA9yK,QAAAozK,QAAAP,IAAAA,GAAAQ,SACAzmK,KACA,4HAGAjC,KAEAkoK,IAIAS,eAAAT,GAAA3mK,MAAAkB,IAAAzC,KACAkoK,GAAAY,IAAAO,SACArpK,MALA3K,OAAAoN,KAAAzC,IACAA,KAUA,QAAAspK,KAAAj0K,OAAAoN,KACA,GAAA7T,MAAAoN,QAAA3G,SAAAqvK,kBAAAjiK,KAEA,WADApN,QAAAs+F,OAAAlxF,IAAA,EAGA,IAAAylK,IAAA,OAAAC,MACA,IAAA9yK,OAAAozK,QAAAP,IAAAA,GAAAQ,QAKA,WAJAzmK,MACA,uFAKA+iK,QAAA3vK,OAAAoN,aAGApN,QAAAoN,KACAylK,IAGAA,GAAAY,IAAAO,UAOA,QAAAF,aAAA5nK,OACA,IAAA,GAAAnM,OAAA,GAAAe,EAAA,EAAA4f,EAAAxU,MAAAtP,OAAAkE,EAAA4f,EAAA5f,IACAf,EAAAmM,MAAApL,GACAf,GAAAA,EAAA+yK,QAAA/yK,EAAA+yK,OAAAW,IAAAI,SACAt6K,MAAAoN,QAAA5G,IACA+zK,YAAA/zK,GAgCA,QAAAm0K,WAAAzpK,GAAAC,MACA,IAAAA,KAAA,MAAAD,GAGA,KAAA,GAFA2C,KAAA+mK,MAAAC,QACAp2J,KAAAnX,OAAAmX,KAAAtT,MACA5J,EAAA,EAAAA,EAAAkd,KAAAphB,OAAAkE,IACAsM,IAAA4Q,KAAAld,GACAqzK,MAAA1pK,GAAA2C,KACAgnK,QAAA1pK,KAAA0C,KACAuiK,OAAAllK,GAAA2C,KAEA+hK,cAAAgF,QAAAhF,cAAAiF,UACAF,UAAAC,MAAAC,SAFAvmK,IAAApD,GAAA2C,IAAAgnK,QAKA,OAAA3pK,IAMA,QAAA4pK,eACAC,UACAC,SACAC,IAEA,MAAAA,IAmBAF,WAAAC,SACA,WAEA,GAAAE,cAAA,kBAAAF,UACAA,SAAA3wK,KAAA4wK,IACAD,SACAG,YAAA,kBAAAJ,WACAA,UAAA1wK,KAAA4wK,IACAF,SACA,OAAAG,cACAP,UAAAO,aAAAC,aAEAA,iBAZA,GAjBAH,SAGAD,UAQA,WACA,MAAAJ,WACA,kBAAAK,UAAAA,SAAA3wK,KAAA5G,MAAAu3K,SACA,kBAAAD,WAAAA,UAAA1wK,KAAA5G,MAAAs3K,YAVAC,SAHAD,UA2DA,QAAAK,WACAL,UACAC,UAEA,MAAAA,UACAD,UACAA,UAAA/vF,OAAAgwF,UACAh7K,MAAAoN,QAAA4tK,UACAA,UACAA,UACAD,UAcA,QAAAM,aACAN,UACAC,SACAC,GACApnK,KAEA,GAAA1F,KAAAb,OAAA88F,OAAA2wE,WAAA,KACA,OAAAC,WACAM,iBAAAznK,IAAAmnK,SAAAC,IACA1sK,OAAAJ,IAAA6sK,WAEA7sK,IA+EA,QAAAotK,iBAAA/6I,SACA,IAAA,GAAA3sB,OAAA2sB,SAAAguB,WAAA,CACA,GAAAgtH,OAAA3nK,IAAAyC,eACAmlK,aAAAD,QAAAzpK,OAAA2pK,cAAAF,SACAnoK,KACA,kEACAQ,MAUA,QAAA8nK,gBAAAn7I,QAAAy6I,IACA,GAAAtK,OAAAnwI,QAAAmwI,KACA,IAAAA,MAAA,CACA,GACAppK,GAAA6J,IAAA/P,KADA8M,MAEA,IAAAnO,MAAAoN,QAAAujK,OAEA,IADAppK,EAAAopK,MAAAttK,OACAkE,KACA6J,IAAAu/J,MAAAppK,GACA,gBAAA6J,MACA/P,KAAAu6K,SAAAxqK,KACAjD,IAAA9M,OAAAw9B,KAAA,OAEAxrB,KAAA,sDAGA,IAAAuiK,cAAAjF,OACA,IAAA,GAAA98J,OAAA88J,OACAv/J,IAAAu/J,MAAA98J,KACAxS,KAAAu6K,SAAA/nK,KACA1F,IAAA9M,MAAAu0K,cAAAxkK,KACAA,KACAytB,KAAAztB,SAGAiC,MACA,6EACAqiK,UAAA/E,OAAA,IACAsK,GAGAz6I,SAAAmwI,MAAAxiK,KAMA,QAAA0tK,iBAAAr7I,QAAAy6I,IACA,GAAAa,QAAAt7I,QAAAs7I,OACAt7H,WAAAhgB,QAAAs7I,SACA,IAAA97K,MAAAoN,QAAA0uK,QACA,IAAA,GAAAv0K,GAAA,EAAAA,EAAAu0K,OAAAz4K,OAAAkE,IACAi5C,WAAAs7H,OAAAv0K,KAAA4J,KAAA2qK,OAAAv0K,QAEA,IAAAquK,cAAAkG,QACA,IAAA,GAAAjoK,OAAAioK,QAAA,CACA,GAAA1qK,KAAA0qK,OAAAjoK,IACA2sC,YAAA3sC,KAAA+hK,cAAAxkK,KACA7C,QAAA4C,KAAA0C,KAAAzC,MACAD,KAAAC,SAEA0qK,SACAzoK,KACA,8EACAqiK,UAAAoG,QAAA,IACAb,IAQA,QAAAc,qBAAAv7I,SACA,GAAAw7I,MAAAx7I,QAAAy7I,UACA,IAAAD,KACA,IAAA,GAAAnoK,OAAAmoK,MAAA,CACA,GAAA1E,KAAA0E,KAAAnoK,IACA,mBAAAyjK,OACA0E,KAAAnoK,MAAAgtE,KAAAy2F,IAAAl/H,OAAAk/H,OAMA,QAAAgE,kBAAAj6K,KAAAsR,MAAAsoK,IACArF,cAAAjjK,QACAU,KACA,6BAAAhS,KAAA,kCACAq0K,UAAA/iK,OAAA,IACAsoK,IASA,QAAAiB,cACAx5K,OACAstH,MACAirD,IAgCA,QAAAkB,YAAAtoK,KACA,GAAAuoK,OAAAC,OAAAxoK,MAAAyoK,YACA97I,SAAA3sB,KAAAuoK,MAAA15K,OAAAmR,KAAAm8G,MAAAn8G,KAAAonK,GAAApnK,KA/BA0nK,gBAAAvrD,OAGA,kBAAAA,SACAA,MAAAA,MAAAxvF,SAGAm7I,eAAA3rD,MAAAirD,IACAY,gBAAA7rD,MAAAirD,IACAc,oBAAA/rD,MACA,IAAAusD,aAAAvsD,MAAAwsD,OAIA,IAHAD,cACA75K,OAAAw5K,aAAAx5K,OAAA65K,YAAAtB,KAEAjrD,MAAAysD,OACA,IAAA,GAAAl1K,GAAA,EAAA4f,EAAA6oG,MAAAysD,OAAAp5K,OAAAkE,EAAA4f,EAAA5f,IACA7E,OAAAw5K,aAAAx5K,OAAAstH,MAAAysD,OAAAl1K,GAAA0zK,GAGA,IACApnK,KADA2sB,UAEA,KAAA3sB,MAAAnR,QACAy5K,WAAAtoK,IAEA,KAAAA,MAAAm8G,OACAomD,OAAA1zK,OAAAmR,MACAsoK,WAAAtoK,IAOA,OAAA2sB,SAQA,QAAAk8I,cACAl8I,QACA3B,KACAqH,GACAy2I,aAGA,GAAA,gBAAAz2I,IAAA,CAGA,GAAA02I,QAAAp8I,QAAA3B,KAEA,IAAAu3I,OAAAwG,OAAA12I,IAAA,MAAA02I,QAAA12I,GACA,IAAA22I,aAAAjB,SAAA11I,GACA,IAAAkwI,OAAAwG,OAAAC,aAAA,MAAAD,QAAAC,YACA,IAAAC,cAAAC,WAAAF,YACA,IAAAzG,OAAAwG,OAAAE,cAAA,MAAAF,QAAAE,aAEA,IAAA3uK,KAAAyuK,OAAA12I,KAAA02I,OAAAC,cAAAD,OAAAE,aAOA,OANAH,eAAAxuK,KACAkF,KACA,qBAAAwrB,KAAA/qB,MAAA,GAAA,GAAA,KAAAoyB,GACA1F,SAGAryB,KAKA,QAAA6uK,cACAnpK,IACAopK,YACAC,UACAjC,IAEA,GAAA/uK,MAAA+wK,YAAAppK,KACAspK,QAAA/G,OAAA8G,UAAArpK,KACAlB,MAAAuqK,UAAArpK,IAUA,IARAupK,OAAAC,QAAAnxK,KAAA2yB,QACAs+I,SAAA/G,OAAAlqK,KAAA,WACAyG,OAAA,EACAyqK,OAAAhgD,OAAAlxH,KAAA2yB,OAAA,KAAAlsB,OAAAA,QAAA2qK,UAAAzpK,OACAlB,OAAA,QAIA/B,KAAA+B,MAAA,CACAA,MAAA4qK,oBAAAtC,GAAA/uK,KAAA2H,IAGA,IAAA2pK,mBAAA/D,cAAAC,aACAD,eAAAC,eAAA,EACAzuK,QAAA0H,OACA8mK,cAAAC,cAAA8D,kBAKA,MAFAC,YAAAvxK,KAAA2H,IAAAlB,MAAAsoK,GAAAkC,QAEAxqK,MAMA,QAAA4qK,qBAAAtC,GAAA/uK,KAAA2H,KAEA,GAAAuiK,OAAAlqK,KAAA,WAAA,CAGA,GAAAorK,KAAAprK,KAAAwxK,OAYA,OAVAlwK,UAAA8pK,MACAjkK,KACA,mCAAAQ,IAAA,2FAGAonK,IAKAA,IAAAA,GAAA0C,SAAAT,eACAtsK,KAAAqqK,GAAA0C,SAAAT,UAAArpK,UACAjD,KAAAqqK,GAAA2C,OAAA/pK,KAEAonK,GAAA2C,OAAA/pK,KAIA,kBAAAyjK,MAAA,aAAAuG,QAAA3xK,KAAA2yB,MACAy4I,IAAAjtK,KAAA4wK,IACA3D,KAMA,QAAAmG,YACAvxK,KACA7K,KACAsR,MACAsoK,GACAkC,QAEA,GAAAjxK,KAAA4xK,UAAAX,OAKA,WAJA9pK,MACA,2BAAAhS,KAAA,IACA45K,GAIA,IAAA,MAAAtoK,OAAAzG,KAAA4xK,SAAA,CAGA,GAAAj/I,MAAA3yB,KAAA2yB,KACAq0G,OAAAr0G,OAAA,IAAAA,KACAk/I,gBACA,IAAAl/I,KAAA,CACA7+B,MAAAoN,QAAAyxB,QACAA,MAAAA,MAEA,KAAA,GAAAt3B,GAAA,EAAAA,EAAAs3B,KAAAx7B,SAAA6vI,MAAA3rI,IAAA,CACA,GAAAy2K,cAAAC,WAAAtrK,MAAAksB,KAAAt3B,GACAw2K,eAAAp6K,KAAAq6K,aAAAE,cAAA,IACAhrC,MAAA8qC,aAAA9qC,OAGA,IAAAA,MAOA,WANA7/H,MACA,6CAAAhS,KAAA,eACA08K,cAAA9vK,IAAA8uK,YAAAhpK,KAAA,MACA,SAAA2hK,UAAA/iK,OAAA,IACAsoK,GAIA,IAAAkD,WAAAjyK,KAAAiyK,SACAA,aACAA,UAAAxrK,QACAU,KACA,yDAAAhS,KAAA,KACA45K,MAQA,QAAAgD,YAAAtrK,MAAAksB,MACA,GAAAq0G,OACAgrC,aAAAL,QAAAh/I,KACA,IAAAu/I,cAAA99K,KAAA49K,cAAA,CACA,GAAAvmJ,SAAAhlB,MACAugI,OAAAv7G,IAAAumJ,aAAA5nK,cAEA48H,OAAA,WAAAv7G,IACAu7G,MAAAvgI,gBAAAksB,WAGAq0G,OADA,WAAAgrC,aACAtI,cAAAjjK,OACA,UAAAurK,aACAl+K,MAAAoN,QAAAuF,OAEAA,gBAAAksB,KAEA,QACAq0G,MAAAA,MACAgrC,aAAAA,cASA,QAAAL,SAAA98K,IACA,GAAAqX,OAAArX,IAAAA,GAAAwM,WAAA6K,MAAA,qBACA,OAAAA,OAAAA,MAAA,GAAA,GAGA,QAAAglK,QAAAv+I,KAAA99B,IACA,IAAAf,MAAAoN,QAAArM,IACA,MAAA88K,SAAA98K,MAAA88K,QAAAh/I,KAEA,KAAA,GAAAt3B,GAAA,EAAAqE,IAAA7K,GAAAsC,OAAAkE,EAAAqE,IAAArE,IACA,GAAAs2K,QAAA98K,GAAAwG,MAAAs2K,QAAAh/I,MACA,OAAA,CAIA,QAAA,EAKA,QAAAw/I,aAAAC,IAAArD,GAAA5zI,MACA,GAAA4zI,GAEA,IADA,GAAAsD,KAAAtD,GACAsD,IAAAA,IAAAC,SAAA,CACA,GAAAtxK,OAAAqxK,IAAAZ,SAAAc,aACA,IAAAvxK,MACA,IAAA,GAAA3F,GAAA,EAAAA,EAAA2F,MAAA7J,OAAAkE,IACA,IACA,GAAAm3K,UAAA,IAAAxxK,MAAA3F,GAAA8C,KAAAk0K,IAAAD,IAAArD,GAAA5zI,KACA,IAAAq3I,QAAA,OACA,MAAAl4K,GACAm4K,kBAAAn4K,EAAA+3K,IAAA,uBAMAI,kBAAAL,IAAArD,GAAA5zI,MAGA,QAAAs3I,mBAAAL,IAAArD,GAAA5zI,MACA,GAAAt1B,OAAA6sK,aACA,IACA,MAAA7sK,QAAA6sK,aAAAv0K,KAAA,KAAAi0K,IAAArD,GAAA5zI,MACA,MAAA7gC,GACAq4K,SAAAr4K,EAAA,KAAA,uBAGAq4K,SAAAP,IAAArD,GAAA5zI,MAGA,QAAAw3I,UAAAP,IAAArD,GAAA5zI,MAKA,GAHAh0B,KAAA,YAAAg0B,KAAA,MAAAi3I,IAAA/wK,WAAA,IAAA0tK,KAGA6D,WAAA,mBAAAtrK,SAGA,KAAA8qK,IAFA9qK,SAAAiuB,MAAA68I,KAYA,QAAAS,kBACAvwB,SAAA,CACA,IAAAwwB,QAAAC,UAAAnrK,MAAA,EACAmrK,WAAA57K,OAAA,CACA,KAAA,GAAAkE,GAAA,EAAAA,EAAAy3K,OAAA37K,OAAAkE,IACAy3K,OAAAz3K,KAiEA,QAAA23K,eAAAn+K,IACA,MAAAA,IAAAo+K,YAAAp+K,GAAAo+K,UAAA,WACAC,cAAA,CACA,IAAAjxK,KAAApN,GAAAwC,MAAA,KAAAG,UAEA,OADA07K,eAAA,EACAjxK,MAIA,QAAAkxK,UAAA7sD,GAAA6jD,KACA,GAAAiJ,SAqBA,IApBAL,UAAAt7K,KAAA,WACA,GAAA6uH,GACA,IACAA,GAAAnoH,KAAAgsK,KACA,MAAA7vK,GACA63K,YAAA73K,EAAA6vK,IAAA,gBAEAiJ,WACAA,SAAAjJ,OAGA7nB,UACAA,SAAA,EACA4wB,aACAG,iBAEAC,mBAIAhtD,IAAA,mBAAAitD,SACA,MAAA,IAAAA,SAAA,SAAAC,SACAJ,SAAAI,UA2HA,QAAAC,iBAAAx8K,KACA,QAAAy8K,WACA,GAAAC,aAAAn8K,UAEAP,IAAAy8K,QAAAz8K,GACA,KAAAnD,MAAAoN,QAAAjK,KAOA,MAAAA,KAAAI,MAAA,KAAAG,UALA,KAAA,GADA60K,QAAAp1K,IAAA2Q,QACAvM,EAAA,EAAAA,EAAAgxK,OAAAl1K,OAAAkE,IACAgxK,OAAAhxK,GAAAhE,MAAA,KAAAs8K,aAQA,MADAD,SAAAz8K,IAAAA,IACAy8K,QAGA,QAAAE,iBACAC,GACAC,MACAh/K,IACAi/K,UACAhF,IAEA,GAAA55K,MAAAk9K,IAAA2B,IAAAz+K,KACA,KAAAJ,OAAA0+K,IACAxB,IAAAwB,GAAA1+K,MACA6+K,IAAAF,MAAA3+K,MACAI,MAAA0+K,eAAA9+K,MACAg0K,QAAAkJ,KACAlrK,KACA,8BAAA5R,MAAA,KAAA,UAAA27H,OAAAmhD,KACAtD,IAEA5F,QAAA6K,MACA7K,QAAAkJ,IAAAp7K,OACAo7K,IAAAwB,GAAA1+K,MAAAs+K,gBAAApB,MAEAv9K,IAAAS,MAAAJ,KAAAk9K,IAAA98K,MAAA01K,KAAA11K,MAAAi9K,QAAAj9K,MAAA2+K,UACA7B,MAAA2B,MACAA,IAAA/8K,IAAAo7K,IACAwB,GAAA1+K,MAAA6+K,IAGA,KAAA7+K,OAAA2+K,OACA3K,QAAA0K,GAAA1+K,SACAI,MAAA0+K,eAAA9+K,MACA4+K,UAAAx+K,MAAAJ,KAAA2+K,MAAA3+K,MAAAI,MAAAi9K,UAOA,QAAA2B,gBAAA/I,IAAAgJ,QAAAC,MAIA,QAAAC,eACAD,KAAAh9K,MAAAE,KAAAC,WAGAs5C,OAAA4iI,QAAAz8K,IAAAq9K,aAPA,GAAAZ,SACAa,QAAAnJ,IAAAgJ,QASAjL,SAAAoL,SAEAb,QAAAD,iBAAAa,cAGAlL,MAAAmL,QAAAt9K,MAAAoyK,OAAAkL,QAAAj/D,SAEAo+D,QAAAa,QACAb,QAAAz8K,IAAAQ,KAAA68K,cAGAZ,QAAAD,iBAAAc,QAAAD,cAIAZ,QAAAp+D,QAAA,EACA81D,IAAAgJ,SAAAV,QAKA,QAAAc,2BACA18J,KACA4zJ,KACAY,KAKA,GAAAyE,aAAArF,KAAAp3I,QAAAmwI,KACA,KAAA0E,QAAA4H,aAAA,CAGA,GAAA9uK,QACAwyK,MAAA38J,KAAA28J,MACAhQ,MAAA3sJ,KAAA2sJ,KACA,IAAA2E,MAAAqL,QAAArL,MAAA3E,OACA,IAAA,GAAA98J,OAAAopK,aAAA,CACA,GAAA2D,QAAAtD,UAAAzpK,KAEAgtK,eAAAhtK,IAAAyC,aAEAzC,OAAAgtK,gBACAF,OAAAvK,OAAAuK,MAAAE,iBAEAC,IACA,SAAAD,eAAA,4BACAE,oBAAAvI,KAAAZ,MAAA,oCACA/jK,IAAA,yKAGA+sK,OAAA,iBAAA/sK,IAAA,MAIAmtK,UAAA7yK,IAAAwiK,MAAA98J,IAAA+sK,QAAA,IACAI,UAAA7yK,IAAAwyK,MAAA9sK,IAAA+sK,QAAA,GAGA,MAAAzyK,MAGA,QAAA6yK,WACA7yK,IACAs5C,KACA5zC,IACA+sK,OACAK,UAEA,GAAA3L,MAAA7tH,MAAA,CACA,GAAA2uH,OAAA3uH,KAAA5zC,KAKA,MAJA1F,KAAA0F,KAAA4zC,KAAA5zC,KACAotK,gBACAx5H,MAAA5zC,MAEA,CACA,IAAAuiK,OAAA3uH,KAAAm5H,QAKA,MAJAzyK,KAAA0F,KAAA4zC,KAAAm5H,QACAK,gBACAx5H,MAAAm5H,SAEA,EAGA,OAAA,EAiBA,QAAAM,yBAAAroI,UACA,IAAA,GAAAtxC,GAAA,EAAAA,EAAAsxC,SAAAx1C,OAAAkE,IACA,GAAAvH,MAAAoN,QAAAyrC,SAAAtxC,IACA,MAAAvH,OAAAC,UAAA+qF,OAAAznF,SAAAs1C,SAGA,OAAAA,UAOA,QAAAsoI,mBAAAtoI,UACA,MAAA48H,aAAA58H,WACAq/H,gBAAAr/H,WACA74C,MAAAoN,QAAAyrC,UACAuoI,uBAAAvoI,cACAjoC,GAGA,QAAAywK,YAAAjpF,MACA,MAAAk9E,OAAAl9E,OAAAk9E,MAAAl9E,KAAAtQ,OAAA0tF,QAAAp9E,KAAA0gF,WAGA,QAAAsI,wBAAAvoI,SAAAyoI,aACA,GACA/5K,GAAAie,EAAA3M,UAAA/T,KADAqJ,MAEA,KAAA5G,EAAA,EAAAA,EAAAsxC,SAAAx1C,OAAAkE,IACAie,EAAAqzB,SAAAtxC,GACA8tK,QAAA7vJ,IAAA,iBAAAA,KACA3M,UAAA1K,IAAA9K,OAAA,EACAyB,KAAAqJ,IAAA0K;oBAEA7Y,MAAAoN,QAAAoY,GACAA,EAAAniB,OAAA,IACAmiB,EAAA47J,uBAAA57J,GAAA87J,aAAA,IAAA,IAAA/5K,GAEA85K,WAAA77J,EAAA,KAAA67J,WAAAv8K,QACAqJ,IAAA0K,WAAAq/J,gBAAApzK,KAAAgjF,KAAAtiE,EAAA,GAAAsiE,MACAtiE,EAAAliB,SAEA6K,IAAAxK,KAAAJ,MAAA4K,IAAAqX,IAEAiwJ,YAAAjwJ,GACA67J,WAAAv8K,MAIAqJ,IAAA0K,WAAAq/J,gBAAApzK,KAAAgjF,KAAAtiE,GACA,KAAAA,GAEArX,IAAAxK,KAAAu0K,gBAAA1yJ,IAGA67J,WAAA77J,IAAA67J,WAAAv8K,MAEAqJ,IAAA0K,WAAAq/J,gBAAApzK,KAAAgjF,KAAAtiE,EAAAsiE,OAGAytF,OAAA18H,SAAA0oI,WACAjM,MAAA9vJ,EAAAgzJ,MACAnD,QAAA7vJ,EAAA3R,MACAyhK,MAAAgM,eACA97J,EAAA3R,IAAA,UAAAytK,YAAA,IAAA/5K,EAAA,MAEA4G,IAAAxK,KAAA6hB,IAIA,OAAArX,KAKA,QAAAqzK,YAAAC,KAAA7xJ,MAOA,OALA6xJ,KAAAC,YACAC,WAAA,WAAAF,KAAAG,OAAAC,gBAEAJ,KAAAA,KAAA/D,SAEAlwK,SAAAi0K,MACA7xJ,KAAArhB,OAAAkzK,MACAA,KAGA,QAAAK,wBACAhjL,QACAklB,KACAmrB,QACA0J,SACA2/H,KAEA,GAAApgF,MAAA2pF,kBAGA,OAFA3pF,MAAAugF,aAAA75K,QACAs5F,KAAA4pF,WAAAh+J,KAAAA,KAAAmrB,QAAAA,QAAA0J,SAAAA,SAAA2/H,IAAAA,KACApgF,KAGA,QAAA6pF,uBACAnjL,QACAojL,SACA/yI,SAEA,GAAAomI,OAAAz2K,QAAA2iC,QAAA6zI,MAAAx2K,QAAAqjL,WACA,MAAArjL,SAAAqjL,SAGA,IAAA7M,MAAAx2K,QAAAsjL,UACA,MAAAtjL,SAAAsjL,QAGA,IAAA7M,OAAAz2K,QAAAujL,UAAA/M,MAAAx2K,QAAAwjL,aACA,MAAAxjL,SAAAwjL,WAGA,KAAAhN,MAAAx2K,QAAAyjL,UAGA,CACA,GAAAA,UAAAzjL,QAAAyjL,UAAApzI,SACAqzI,MAAA,EAEAC,YAAA,WACA,IAAA,GAAAl7K,GAAA,EAAA4f,EAAAo7J,SAAAl/K,OAAAkE,EAAA4f,EAAA5f,IACAg7K,SAAAh7K,GAAAm7K,gBAIAhD,QAAAvI,KAAA,SAAAhpK,KAEArP,QAAAsjL,SAAAZ,WAAArzK,IAAA+zK,UAGAM,MACAC,gBAIAE,OAAAxL,KAAA,SAAAyL,QACAvvK,KACA,sCAAA+pH,OAAAt+H,UACA8jL,OAAA,aAAAA,OAAA,KAEAtN,MAAAx2K,QAAAqjL,aACArjL,QAAA2iC,OAAA,EACAghJ,iBAIAt0K,IAAArP,QAAA4gL,QAAAiD,OA2CA,OAzCAn1K,UAAAW,OACA,kBAAAA,KAAA00K,KAEAxN,QAAAv2K,QAAAsjL,WACAj0K,IAAA00K,KAAAnD,QAAAiD,QAEArN,MAAAnnK,IAAA20K,YAAA,kBAAA30K,KAAA20K,UAAAD,OACA10K,IAAA20K,UAAAD,KAAAnD,QAAAiD,QAEArN,MAAAnnK,IAAAszB,SACA3iC,QAAAqjL,UAAAX,WAAArzK,IAAAszB,MAAAygJ,WAGA5M,MAAAnnK,IAAAk0K,WACAvjL,QAAAwjL,YAAAd,WAAArzK,IAAAk0K,QAAAH,UACA,IAAA/zK,IAAA1J,MACA3F,QAAAujL,SAAA,EAEA5iL,WAAA,WACA41K,QAAAv2K,QAAAsjL,WAAA/M,QAAAv2K,QAAA2iC,SACA3iC,QAAAujL,SAAA,EACAI,gBAEAt0K,IAAA1J,OAAA,MAIA6wK,MAAAnnK,IAAA5J,UACA9E,WAAA,WACA41K,QAAAv2K,QAAAsjL,WACAO,OACA,YAAAx0K,IAAA,QAAA,QAGAA,IAAA5J,WAKAi+K,MAAA,EAEA1jL,QAAAujL,QACAvjL,QAAAwjL,YACAxjL,QAAAsjL,SA7EAtjL,QAAAyjL,SAAA5+K,KAAAwrC,SAmFA,QAAA4zI,oBAAA3qF,MACA,MAAAA,MAAA0gF,WAAA1gF,KAAAugF,aAKA,QAAAqK,wBAAAnqI,UACA,GAAA74C,MAAAoN,QAAAyrC,UACA,IAAA,GAAAtxC,GAAA,EAAAA,EAAAsxC,SAAAx1C,OAAAkE,IAAA,CACA,GAAAie,GAAAqzB,SAAAtxC,EACA,IAAA+tK,MAAA9vJ,KAAA8vJ,MAAA9vJ,EAAAkzJ,mBAAAqK,mBAAAv9J,IACA,MAAAA,IAUA,QAAAy9J,YAAAhI,IACAA,GAAAiI,QAAA51K,OAAA88F,OAAA,MACA6wE,GAAAkI,eAAA,CAEA,IAAAv+E,WAAAq2E,GAAA0C,SAAAyF,gBACAx+E,YACAy+E,yBAAApI,GAAAr2E,WAMA,QAAA5jG,KAAAS,MAAAV,GAAAo2K,MACAA,KACA1wK,OAAA68K,MAAA7hL,MAAAV,IAEA0F,OAAA88K,IAAA9hL,MAAAV,IAIA,QAAAyiL,UAAA/hL,MAAAV,IACA0F,OAAAg9K,KAAAhiL,MAAAV,IAGA,QAAAsiL,0BACApI,GACAr2E,UACA8+E,cAEAj9K,OAAAw0K,GACA6E,gBAAAl7E,UAAA8+E,iBAAA1iL,IAAAwiL,SAAAvI,IA8GA,QAAA0I,cACA9qI,SACA1J,SAEA,GAAAy0I,SACA,KAAA/qI,SACA,MAAA+qI,MAGA,KAAA,GADAC,gBACAt8K,EAAA,EAAA4f,EAAA0xB,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAAA,CACA,GAAAyoH,OAAAn3E,SAAAtxC,GACAyc,KAAAgsG,MAAAhsG,IAOA,IALAA,MAAAA,KAAA28J,OAAA38J,KAAA28J,MAAA3mH,YACAh2C,MAAA28J,MAAA3mH,KAIAg2D,MAAA7gF,UAAAA,SAAA6gF,MAAA8zD,oBAAA30I,UACAnrB,MAAA,MAAAA,KAAAg2C,KAUA6pH,YAAAlgL,KAAAqsH,WATA,CACA,GAAA3uH,MAAA2uH,MAAAhsG,KAAAg2C,KACAA,KAAA4pH,MAAAviL,QAAAuiL,MAAAviL,SACA,cAAA2uH,MAAAwoD,IACAx+G,KAAAr2D,KAAAJ,MAAAy2D,KAAAg2D,MAAAn3E,UAEAmhB,KAAAr2D,KAAAqsH,QAUA,MAHA6zD,aAAA9M,MAAAgN,gBACAH,MAAAlG,QAAAmG,aAEAD,MAGA,QAAAG,cAAA3rF,MACA,MAAAA,MAAA0gF,WAAA,MAAA1gF,KAAAtQ,KAGA,QAAAk8F,oBACA7gL,IACAgL,KAEAA,IAAAA,OACA,KAAA,GAAA5G,GAAA,EAAAA,EAAApE,IAAAE,OAAAkE,IACAvH,MAAAoN,QAAAjK,IAAAoE,IACAy8K,mBAAA7gL,IAAAoE,GAAA4G,KAEAA,IAAAhL,IAAAoE,GAAAsM,KAAA1Q,IAAAoE,GAAAxG,EAGA,OAAAoN,KAQA,QAAA81K,eAAAhJ,IACA,GAAAz6I,SAAAy6I,GAAA0C,SAGAj7K,OAAA89B,QAAA99B,MACA,IAAAA,SAAA89B,QAAA0jJ,SAAA,CACA,KAAAxhL,OAAAi7K,SAAAuG,UAAAxhL,OAAA87K,SACA97K,OAAAA,OAAA87K,OAEA97K,QAAAyhL,UAAAxgL,KAAAs3K,IAGAA,GAAAuD,QAAA97K,OACAu4K,GAAAmJ,MAAA1hL,OAAAA,OAAA0hL,MAAAnJ,GAEAA,GAAAkJ,aACAlJ,GAAAoJ,SAEApJ,GAAAqJ,SAAA,KACArJ,GAAAsJ,UAAA,KACAtJ,GAAAuJ,iBAAA,EACAvJ,GAAAwJ,YAAA,EACAxJ,GAAAyJ,cAAA,EACAzJ,GAAA0J,mBAAA,EAiGA,QAAAC,gBACA3J,GACAn5K,GACA+iL,WAEA5J,GAAA6J,IAAAhjL,GACAm5K,GAAA0C,SAAAzyI,SACA+vI,GAAA0C,SAAAzyI,OAAA62I,iBAGA9G,GAAA0C,SAAAoH,UAAA,MAAA9J,GAAA0C,SAAAoH,SAAAhiK,OAAA,IACAk4J,GAAA0C,SAAA77K,IAAAA,GACAuR,KACA,wLAGA4nK,IAGA5nK,KACA,sEACA4nK,KAKA+J,SAAA/J,GAAA,cAEA,IAAAgK,gBAkCA,OA/BAA,iBADAlzK,OAAA4gJ,aAAAuyB,KACA,WACA,GAAA7jL,MAAA45K,GAAAkK,MACAj/I,GAAA+0I,GAAAmK,KACAC,SAAA,kBAAAn/I,GACAo/I,OAAA,gBAAAp/I,EAEAg/I,MAAAG,SACA,IAAAhN,OAAA4C,GAAAsK,SACAL,MAAAI,QACAE,QAAA,OAAAnkL,KAAA,UAAAgkL,SAAAC,QAEAJ,KAAAG,UACApK,GAAAxtB,QAAA4qB,MAAAwM,WACAK,KAAAI,QACAE,QAAA,OAAAnkL,KAAA,SAAAgkL,SAAAC,SAGA,WACArK,GAAAxtB,QAAAwtB,GAAAsK,UAAAV,YAIA5J,GAAAqJ,SAAA,GAAAmB,SAAAxK,GAAAgK,gBAAAxO,MACAoO,WAAA,EAIA,MAAA5J,GAAAyK,SACAzK,GAAAwJ,YAAA,EACAO,SAAA/J,GAAA,YAEAA,GAGA,QAAA0K,sBACA1K,GACAiC,UACAt4E,UACAghF,YACAC,gBAGAC,0BAAA,CAKA,IAAAC,gBACAF,gBACA5K,GAAA0C,SAAAqI,iBACAJ,YAAA5hK,KAAAiiK,aACAhL,GAAAiL,eAAAC,YAkBA,IAfAlL,GAAA0C,SAAAyI,aAAAR,YACA3K,GAAAyK,OAAAE,YAEA3K,GAAAoL,SACApL,GAAAoL,OAAA3jL,OAAAkjL,aAEA3K,GAAA0C,SAAAqI,gBAAAH,eAKA5K,GAAAqL,OAAAV,YAAA5hK,MAAA4hK,YAAA5hK,KAAA28J,OAAAwF,YACAlL,GAAAsL,WAAA3hF,WAAAuhF,YAGAjJ,WAAAjC,GAAA0C,SAAAhN,MAAA,CACA8I,cAAAC,eAAA,CAGA,KAAA,GAFA/I,OAAAsK,GAAA2C,OACA4I,SAAAvL,GAAA0C,SAAA8I,cACAl/K,EAAA,EAAAA,EAAAi/K,SAAAnjL,OAAAkE,IAAA,CACA,GAAAsM,KAAA2yK,SAAAj/K,EACAopK,OAAA98J,KAAAmpK,aAAAnpK,IAAAonK,GAAA0C,SAAAhN,MAAAuM,UAAAjC,IAEAxB,cAAAC,eAAA,EAEAuB,GAAA0C,SAAAT,UAAAA,UAIA,GAAAt4E,UAAA,CACA,GAAA8+E,cAAAzI,GAAA0C,SAAAyF,gBACAnI,IAAA0C,SAAAyF,iBAAAx+E,UACAy+E,yBAAApI,GAAAr2E,UAAA8+E,cAGAqC,cACA9K,GAAAyL,OAAA/C,aAAAkC,eAAAD,YAAAz2I,SACA8rI,GAAAyH,gBAIAoD,0BAAA,EAIA,QAAAa,kBAAA1L,IACA,KAAAA,KAAAA,GAAAA,GAAAuD,UACA,GAAAvD,GAAAsJ,UAAA,OAAA,CAEA,QAAA,EAGA,QAAAqC,wBAAA3L,GAAAjjD,QACA,GAAAA,QAEA,GADAijD,GAAAuJ,iBAAA,EACAmC,iBAAA1L,IACA,WAEA,IAAAA,GAAAuJ,gBACA,MAEA,IAAAvJ,GAAAsJ,WAAA,OAAAtJ,GAAAsJ,UAAA,CACAtJ,GAAAsJ,WAAA,CACA,KAAA,GAAAh9K,GAAA,EAAAA,EAAA0zK,GAAAkJ,UAAA9gL,OAAAkE,IACAq/K,uBAAA3L,GAAAkJ,UAAA58K,GAEAy9K,UAAA/J,GAAA,cAIA,QAAA4L,0BAAA5L,GAAAjjD,QACA,KAAAA,SACAijD,GAAAuJ,iBAAA,EACAmC,iBAAA1L,MAIAA,GAAAsJ,WAAA,CACAtJ,GAAAsJ,WAAA,CACA,KAAA,GAAAh9K,GAAA,EAAAA,EAAA0zK,GAAAkJ,UAAA9gL,OAAAkE,IACAs/K,yBAAA5L,GAAAkJ,UAAA58K,GAEAy9K,UAAA/J,GAAA,gBAIA,QAAA+J,UAAA/J,GAAAsF,MACA,GAAAjqC,UAAA2kC,GAAA0C,SAAA4C,KACA,IAAAjqC,SACA,IAAA,GAAA/uI,GAAA,EAAA8b,EAAAizH,SAAAjzI,OAAAkE,EAAA8b,EAAA9b,IACA,IACA+uI,SAAA/uI,GAAA8C,KAAA4wK,IACA,MAAAz0K,GACA63K,YAAA73K,EAAAy0K,GAAAsF,KAAA,SAIAtF,GAAAkI,eACAlI,GAAA6L,MAAA,QAAAvG,MAoBA,QAAAwG,uBACAvyJ,MAAAwyJ,MAAA3jL,OAAA4jL,kBAAA5jL,OAAA,EACA6jL,OAEAC,YAEAjkL,QAAAkkL,UAAA,EAMA,QAAAC,uBACAD,UAAA,CACA,IAAAE,SAAAphJ,EAcA,KAJA8gJ,MAAA5vK,KAAA,SAAA/I,EAAAC,GAAA,MAAAD,GAAA63B,GAAA53B,EAAA43B,KAIA1R,MAAA,EAAAA,MAAAwyJ,MAAA3jL,OAAAmxB,QAMA,GALA8yJ,QAAAN,MAAAxyJ,OACA0R,GAAAohJ,QAAAphJ,GACAghJ,IAAAhhJ,IAAA,KACAohJ,QAAAlkL,MAEA,MAAA8jL,IAAAhhJ,MACAihJ,SAAAjhJ,KAAAihJ,SAAAjhJ,KAAA,GAAA,EACAihJ,SAAAjhJ,IAAAqhJ,kBAAA,CACAl0K,KACA,yCACAi0K,QAAAE,KACA,+BAAAF,QAAA,WAAA,IACA,mCAEAA,QAAArM,GAEA,OAMA,GAAAwM,gBAAAR,kBAAAnzK,QACA4zK,aAAAV,MAAAlzK,OAEAizK,uBAGAY,mBAAAF,gBACAG,iBAAAF,cAIAG,UAAA91K,OAAA81K,UACAA,SAAAC,KAAA,SAIA,QAAAF,kBAAAZ,OAEA,IADA,GAAAz/K,GAAAy/K,MAAA3jL,OACAkE,KAAA,CACA,GAAA+/K,SAAAN,MAAAz/K,GACA0zK,GAAAqM,QAAArM,EACAA,IAAAqJ,WAAAgD,SAAArM,GAAAwJ,YACAO,SAAA/J,GAAA,YASA,QAAA8M,yBAAA9M,IAGAA,GAAAsJ,WAAA,EACA0C,kBAAAtjL,KAAAs3K,IAGA,QAAA0M,oBAAAX,OACA,IAAA,GAAAz/K,GAAA,EAAAA,EAAAy/K,MAAA3jL,OAAAkE,IACAy/K,MAAAz/K,GAAAg9K,WAAA,EACAqC,uBAAAI,MAAAz/K,IAAA,GASA,QAAAygL,cAAAV,SACA,GAAAphJ,IAAAohJ,QAAAphJ,EACA,IAAA,MAAAghJ,IAAAhhJ,IAAA,CAEA,GADAghJ,IAAAhhJ,KAAA,EACAkhJ,SAEA,CAIA,IADA,GAAA7/K,GAAAy/K,MAAA3jL,OAAA,EACAkE,EAAAitB,OAAAwyJ,MAAAz/K,GAAA2+B,GAAAohJ,QAAAphJ,IACA3+B,GAEAy/K,OAAAjiF,OAAAx9F,EAAA,EAAA,EAAA+/K,aARAN,OAAArjL,KAAA2jL,QAWApkL,WACAA,SAAA,EACAm8K,SAAAgI,uBA0NA,QAAA3oG,UAAAttE,KACA62K,YAAA/sI,QACAgtI,UAAA92K,IAAA62K,aAGA,QAAAC,WAAA92K,IAAA+2K,MACA,GAAA5gL,GAAAkd,KACA2jK,IAAApoL,MAAAoN,QAAAgE,IACA,KAAAg3K,KAAA56K,SAAA4D,OAAA9D,OAAAssK,aAAAxoK,KAAA,CAGA,GAAAA,IAAAmoK,OAAA,CACA,GAAA8O,OAAAj3K,IAAAmoK,OAAAW,IAAAh0I,EACA,IAAAiiJ,KAAAjB,IAAAmB,OACA,MAEAF,MAAAnnL,IAAAqnL,OAEA,GAAAD,IAEA,IADA7gL,EAAA6J,IAAA/N,OACAkE,KAAA2gL,UAAA92K,IAAA7J,GAAA4gL,UAIA,KAFA1jK,KAAAnX,OAAAmX,KAAArT,KACA7J,EAAAkd,KAAAphB,OACAkE,KAAA2gL,UAAA92K,IAAAqT,KAAAld,IAAA4gL,OAaA,QAAAG,OAAA7hL,OAAA8hL,UAAA10K,KACA20K,yBAAA/tK,IAAA,WACA,MAAAhX,MAAA8kL,WAAA10K,MAEA20K,yBAAAl0K,IAAA,SAAAlD,KACA3N,KAAA8kL,WAAA10K,KAAAzC,KAEA9D,OAAA0xB,eAAAv4B,OAAAoN,IAAA20K,0BAGA,QAAAC,WAAAxN,IACAA,GAAAyN,YACA,IAAAC,MAAA1N,GAAA0C,QACAgL,MAAAhY,OAAAiY,UAAA3N,GAAA0N,KAAAhY,OACAgY,KAAAE,SAAAC,YAAA7N,GAAA0N,KAAAE,SACAF,KAAA3kK,KACA+kK,SAAA9N,IAEAhwK,QAAAgwK,GAAA1uJ,UAAA,GAEAo8J,KAAAK,UAAAC,aAAAhO,GAAA0N,KAAAK,UACAL,KAAAO,OAAAP,KAAAO,QAAAC,aACAC,UAAAnO,GAAA0N,KAAAO,OAIA,QAAAN,WAAA3N,GAAAoO,cACA,GAAAnM,WAAAjC,GAAA0C,SAAAT,cACAvM,MAAAsK,GAAA2C,UAGAn5J,KAAAw2J,GAAA0C,SAAA8I,aACAp8D,QAAA4wD,GAAAuD,OAEA/E,eAAAC,cAAArvD,MAkCA,KAAA,GAAAx2G,OAAAw1K,eAjCA,SAAAx1K,KACA4Q,KAAA9gB,KAAAkQ,IACA,IAAAlB,OAAAqqK,aAAAnpK,IAAAw1K,aAAAnM,UAAAjC,IAGAqO,cAAAhM,UAAAzpK,MACA01K,oBAAAD,gBACAv3K,OAAAy3K,eAAAF,iBACAj2K,KACA,IAAAi2K,cAAA,kEACArO,IAGAlB,eAAApJ,MAAA98J,IAAAlB,MAAA,WACAsoK,GAAAuD,UAAAsH,0BACAzyK,KACA,0MAGAQ,IAAA,IACAonK,MAQApnK,MAAAonK,KACAqN,MAAArN,GAAA,SAAApnK,MAIAA,IACA4lK,eAAAC,eAAA,EAGA,QAAAqP,UAAA9N,IACA,GAAAj3J,MAAAi3J,GAAA0C,SAAA35J,IACAA,MAAAi3J,GAAA1uJ,MAAA,kBAAAvI,MACAs0I,QAAAt0I,KAAAi3J,IACAj3J,SACA4xJ,cAAA5xJ,QACAA,QACA3Q,KACA,8GAEA4nK,IAQA,KAJA,GAAAx2J,MAAAnX,OAAAmX,KAAAT,MACA2sJ,MAAAsK,GAAA0C,SAAAhN,MACAkY,QAAA5N,GAAA0C,SAAAkL,QACAthL,EAAAkd,KAAAphB,OACAkE,KAAA,CACA,GAAAsM,KAAA4Q,KAAAld,EAEAshL,UAAAzS,OAAAyS,QAAAh1K,MACAR,KACA,WAAAQ,IAAA,iDACAonK,IAIAtK,OAAAyF,OAAAzF,MAAA98J,KACAR,KACA,sBAAAQ,IAAA,mEAEAonK,IAEA5D,WAAAxjK,MACAy0K,MAAArN,GAAA,QAAApnK,KAIA5I,QAAA+Y,MAAA,GAGA,QAAAs0I,SAAAt0I,KAAAi3J,IACA,IACA,MAAAj3J,MAAA3Z,KAAA4wK,GAAAA,IACA,MAAAz0K,GAEA,MADA63K,aAAA73K,EAAAy0K,GAAA,cAOA,QAAAgO,cAAAhO,GAAA+N,UACA,GAAAS,UAAAxO,GAAAyO,kBAAAp8K,OAAA88F,OAAA,MAEAu/E,MAAAhQ,mBAEA,KAAA,GAAA9lK,OAAAm1K,UAAA,CACA,GAAAY,SAAAZ,SAAAn1K,KACAsf,OAAA,kBAAAy2J,SAAAA,QAAAA,QAAAnvK,GACA,OAAA0Y,QACA9f,KACA,4CAAAQ,IAAA,KACAonK,IAIA0O,QAEAF,SAAA51K,KAAA,GAAA4xK,SACAxK,GACA9nJ,QAAAsjJ,KACAA,KACAoT,yBAOAh2K,MAAAonK,IAGApnK,MAAAonK,IAAA6O,MACAz2K,KAAA,0BAAAQ,IAAA,gCAAAonK,IACAA,GAAA0C,SAAAhN,OAAA98J,MAAAonK,IAAA0C,SAAAhN,OACAt9J,KAAA,0BAAAQ,IAAA,kCAAAonK,IALA8O,eAAA9O,GAAApnK,IAAA+1K,UAWA,QAAAG,gBACAtjL,OACAoN,IACA+1K,SAEA,GAAAI,cAAArQ,mBACA,mBAAAiQ,UACApB,yBAAA/tK,IAAAuvK,YACAC,qBAAAp2K,KACA+1K,QACApB,yBAAAl0K,IAAAmiK,OAEA+R,yBAAA/tK,IAAAmvK,QAAAnvK,IACAuvK,cAAA,IAAAJ,QAAAr+H,MACA0+H,qBAAAp2K,KACA+1K,QAAAnvK,IACAg8J,KACA+R,yBAAAl0K,IAAAs1K,QAAAt1K,IACAs1K,QAAAt1K,IACAmiK,MAGA+R,yBAAAl0K,MAAAmiK,OACA+R,yBAAAl0K,IAAA,WACAjB,KACA,sBAAAQ,IAAA,0CACApQ,QAIA6J,OAAA0xB,eAAAv4B,OAAAoN,IAAA20K,0BAGA,QAAAyB,sBAAAp2K,KACA,MAAA,YACA,GAAAyzK,SAAA7jL,KAAAimL,mBAAAjmL,KAAAimL,kBAAA71K,IACA,IAAAyzK,QAOA,MANAA,SAAA4C,OACA5C,QAAAl3C,WAEA2nC,IAAAtxK,QACA6gL,QAAAhN,SAEAgN,QAAA30K,OAKA,QAAAm2K,aAAA7N,GAAA4N,SACA,GAAAlY,OAAAsK,GAAA0C,SAAAhN,KACA,KAAA,GAAA98J,OAAAg1K,SAEA,MAAAA,QAAAh1K,MACAR,KACA,WAAAQ,IAAA,kGAEAonK,IAGAtK,OAAAyF,OAAAzF,MAAA98J,MACAR,KACA,WAAAQ,IAAA,wCACAonK,IAGApnK,MAAAonK,KAAA5D,WAAAxjK,MACAR,KACA,WAAAQ,IAAA,8GAKAonK,GAAApnK,KAAA,MAAAg1K,QAAAh1K,KAAA4iK,KAAA51F,KAAAgoG,QAAAh1K,KAAAonK,IAIA,QAAAmO,WAAAnO,GAAAiO,OACA,IAAA,GAAAr1K,OAAAq1K,OAAA,CACA,GAAAiB,SAAAjB,MAAAr1K,IACA,IAAA7T,MAAAoN,QAAA+8K,SACA,IAAA,GAAA5iL,GAAA,EAAAA,EAAA4iL,QAAA9mL,OAAAkE,IACA6iL,cAAAnP,GAAApnK,IAAAs2K,QAAA5iL,QAGA6iL,eAAAnP,GAAApnK,IAAAs2K,UAKA,QAAAC,eACAnP,GACAoP,QACAF,QACA3pJ,SASA,MAPAo1I,eAAAuU,WACA3pJ,QAAA2pJ,QACAA,QAAAA,QAAAA,SAEA,gBAAAA,WACAA,QAAAlP,GAAAkP,UAEAlP,GAAAqP,OAAAD,QAAAF,QAAA3pJ,SAoDA,QAAA+pJ,aAAAtP,IACA,GAAAuP,SAAAvP,GAAA0C,SAAA6M,OACAA,WACAvP,GAAAwP,UAAA,kBAAAD,SACAA,QAAAngL,KAAA4wK,IACAuP,SAIA,QAAAE,gBAAAzP,IACA,GAAA3yJ,QAAAqiK,cAAA1P,GAAA0C,SAAA7B,OAAAb,GACA3yJ,UACAmxJ,cAAAC,eAAA,EACApsK,OAAAmX,KAAA6D,QAAAvoB,QAAA,SAAA8T,KAGAkmK,eAAAkB,GAAApnK,IAAAyU,OAAAzU,KAAA,WACAR,KACA,yJAEAQ,IAAA,IACAonK,QAKAxB,cAAAC,eAAA,GAIA,QAAAiR,eAAA7O,OAAAb,IACA,GAAAa,OAAA,CAUA,IAAA,GARAxzJ,QAAAhb,OAAA88F,OAAA,MACA3lF,KAAAk9J,UACAiJ,QAAAC,QAAA/O,QAAAvsH,OAAA,SAAA17C,KAEA,MAAAvG,QAAA8sK,yBAAA0B,OAAAjoK,KAAAqqC,aAEA5wC,OAAAmX,KAAAq3J,QAEAv0K,EAAA,EAAAA,EAAAkd,KAAAphB,OAAAkE,IAAA,CAIA,IAHA,GAAAsM,KAAA4Q,KAAAld,GACAujL,WAAAhP,OAAAjoK,KAAA1C,KACAjI,OAAA+xK,GACA/xK,QAAA,CACA,GAAAA,OAAAuhL,WAAAK,aAAA5hL,QAAAuhL,UAAA,CACAniK,OAAAzU,KAAA3K,OAAAuhL,UAAAK,WACA,OAEA5hL,OAAAA,OAAAs1K,QAEA,IAAAt1K,OACA,GAAA,WAAA4yK,QAAAjoK,KAAA,CACA,GAAAk3K,gBAAAjP,OAAAjoK,KAAA6pK,OACAp1J,QAAAzU,KAAA,kBAAAk3K,gBACAA,eAAA1gL,KAAA4wK,IACA8P,mBAEA13K,MAAA,cAAAQ,IAAA,cAAAonK,IAIA,MAAA3yJ,SASA,QAAAm9B,YACAr0C,IACA85B,QAEA,GAAA9b,KAAA7nB,EAAA4f,EAAA1C,KAAA5Q,GACA,IAAA7T,MAAAoN,QAAAgE,MAAA,gBAAAA,KAEA,IADAge,IAAA,GAAApvB,OAAAoR,IAAA/N,QACAkE,EAAA,EAAA4f,EAAA/V,IAAA/N,OAAAkE,EAAA4f,EAAA5f,IACA6nB,IAAA7nB,GAAA2jC,OAAA95B,IAAA7J,GAAAA,OAEA,IAAA,gBAAA6J,KAEA,IADAge,IAAA,GAAApvB,OAAAoR,KACA7J,EAAA,EAAAA,EAAA6J,IAAA7J,IACA6nB,IAAA7nB,GAAA2jC,OAAA3jC,EAAA,EAAAA,OAEA,IAAAiG,SAAA4D,KAGA,IAFAqT,KAAAnX,OAAAmX,KAAArT,KACAge,IAAA,GAAApvB,OAAAykB,KAAAphB,QACAkE,EAAA,EAAA4f,EAAA1C,KAAAphB,OAAAkE,EAAA4f,EAAA5f,IACAsM,IAAA4Q,KAAAld,GACA6nB,IAAA7nB,GAAA2jC,OAAA95B,IAAAyC,KAAAA,IAAAtM,EAMA,OAHA+tK,OAAAlmJ,OACA,IAAAmyJ,UAAA,GAEAnyJ,IAQA,QAAA47J,YACA3pL,KACA4pL,SACAta,MACAua,YAEA,GAAAC,cAAA1nL,KAAAyiL,aAAA7kL,KACA,IAAA8pL,aAWA,MAVAxa,OAAAA,UACAua,aACA19K,SAAA09K,aACA73K,KACA,iDACA5P,MAGAktK,MAAApiK,OAAAA,UAAA28K,YAAAva,QAEAwa,aAAAxa,QAAAsa,QAEA,IAAAG,WAAA3nL,KAAAijL,OAAArlL,KAUA,OARA+pL,aACAA,UAAAC,WAAAh4K,KACA,+BAAAhS,KAAA,0EAEAoC,MAEA2nL,UAAAC,WAAA,GAEAD,WAAAH,SASA,QAAAK,eAAAplJ,IACA,MAAAw2I,cAAAj5K,KAAAk6K,SAAA,UAAAz3I,IAAA,IAAAumB,SAUA,QAAA8+H,eACAC,aACA33K,IACA43K,aACAC,cAEA,GAAAC,UAAA55K,OAAA45K,SAAA93K,MAAA43K,YACA,OAAAE,UACA3rL,MAAAoN,QAAAu+K,WACA,IAAAA,SAAAxvK,QAAAqvK,cAEAG,WAAAH,aAEAE,aACApO,UAAAoO,gBAAA73K,QADA,GAUA,QAAA+3K,iBACA5nK,KACAw0J,IACA7lK,MACAk5K,OACAC,QAEA,GAAAn5K,MACA,GAAAnF,SAAAmF,OAKA,CACA3S,MAAAoN,QAAAuF,SACAA,MAAAigB,SAAAjgB,OAEA,IAAA80C,KA0BA,KAAA,GAAA5zC,OAAAlB,QAzBA,SAAAkB,KACA,GACA,UAAAA,KACA,UAAAA,KACA01K,oBAAA11K,KAEA4zC,KAAAzjC,SACA,CACA,GAAA6a,MAAA7a,KAAA28J,OAAA38J,KAAA28J,MAAA9hJ,IACA4oB,MAAAokI,QAAA95K,OAAAg6K,YAAAvT,IAAA35I,KAAAhrB,KACAmQ,KAAAgoK,WAAAhoK,KAAAgoK,aACAhoK,KAAA28J,QAAA38J,KAAA28J,UAEA,KAAA9sK,MAAA4zC,SACAA,KAAA5zC,KAAAlB,MAAAkB,KAEAi4K,QAAA,EACA9nK,KAAA+7J,KAAA/7J,KAAA+7J,QACA,UAAAlsK,KAAA,SAAAo4K,QACAt5K,MAAAkB,KAAAo4K,UAMAp4K,SAlCAR,MACA,2DACA5P,KAmCA,OAAAugB,MAQA,QAAAkoK,cACA13J,MACA23J,SAIA,GAAAC,WAAA3oL,KAAAk6K,SAAA0O,gBACAp/C,OAAAm/C,UAAAn/C,SAAAm/C,UAAAn/C,WACAq/C,KAAAr/C,OAAAz4G,MAGA,OAAA83J,QAAAH,QACAnsL,MAAAoN,QAAAk/K,MACAtT,YAAAsT,MACAlU,WAAAkU,OAGAA,KAAAr/C,OAAAz4G,OAAA43J,UAAA53J,OAAAnqB,KAAA5G,KAAA8oL,aAAA,KAAA9oL,MACA+oL,WAAAF,KAAA,aAAA93J,OAAA,GACA83J,MAOA,QAAAG,UACAH,KACA93J,MACA3gB,KAGA,MADA24K,YAAAF,KAAA,WAAA93J,OAAA3gB,IAAA,IAAAA,IAAA,KAAA,GACAy4K,KAGA,QAAAE,YACAF,KACAz4K,IACA64K,QAEA,GAAA1sL,MAAAoN,QAAAk/K,MACA,IAAA,GAAA/kL,GAAA,EAAAA,EAAA+kL,KAAAjpL,OAAAkE,IACA+kL,KAAA/kL,IAAA,gBAAA+kL,MAAA/kL,IACAolL,eAAAL,KAAA/kL,GAAAsM,IAAA,IAAAtM,EAAAmlL,YAIAC,gBAAAL,KAAAz4K,IAAA64K,QAIA,QAAAC,gBAAAv0F,KAAAvkF,IAAA64K,QACAt0F,KAAAygF,UAAA,EACAzgF,KAAAvkF,IAAAA,IACAukF,KAAAs0F,OAAAA,OAKA,QAAAE,qBAAA5oK,KAAArR,OACA,GAAAA,MACA,GAAAijK,cAAAjjK,OAKA,CACA,GAAAotK,IAAA/7J,KAAA+7J,GAAA/7J,KAAA+7J,GAAAxxK,UAAAyV,KAAA+7J,MACA,KAAA,GAAAlsK,OAAAlB,OAAA,CACA,GAAAk6K,UAAA9M,GAAAlsK,KACAi5K,KAAAn6K,MAAAkB,IACAksK,IAAAlsK,KAAAg5K,YAAA7hG,OAAA6hG,SAAAC,MAAAA,UATAz5K,MACA,gDACA5P,KAWA,OAAAugB,MAKA,QAAA+oK,sBAAAtmL,QACAA,OAAAumL,GAAAP,SACAhmL,OAAAwmL,GAAAlX,SACAtvK,OAAAymL,GAAA3/K,SACA9G,OAAA+K,GAAAi0C,WACAh/C,OAAA0mL,GAAAnC,WACAvkL,OAAA2mL,GAAA1W,WACAjwK,OAAA6K,GAAA4lK,aACAzwK,OAAA4mL,GAAAnB,aACAzlL,OAAA8K,GAAA+5K,cACA7kL,OAAA6mL,GAAA/B,cACA9kL,OAAA8mL,GAAA3B,gBACAnlL,OAAA+mL,GAAAtV,gBACAzxK,OAAAgnL,GAAA1L,iBACAt7K,OAAAinL,GAAA1J,mBACAv9K,OAAAknL,GAAAf,oBAKA,QAAAgB,yBACA5pK,KACA2sJ,MACA93H,SACAn2C,OACAk1K,MAEA,GAAAp3I,SAAAo3I,KAAAp3I,OACA/8B,MAAAugB,KAAAA,KACAvgB,KAAAktK,MAAAA,MACAltK,KAAAo1C,SAAAA,SACAp1C,KAAAf,OAAAA,OACAe,KAAAmhG,UAAA5gF,KAAA+7J,IAAAoG,YACA1iL,KAAAoqL,WAAAlD,cAAAnqJ,QAAAs7I,OAAAp5K,QACAe,KAAAmgL,MAAA,WAAA,MAAAD,cAAA9qI,SAAAn2C,QAIA,IAAAorL,WAAAxgL,OAAA88F,OAAA1nG,QACAqrL,WAAAxY,OAAA/0I,QAAAwtJ,WACAC,mBAAAF,UAGAA,cAEAtqL,KAAAk6K,SAAAn9I,QAEA/8B,KAAAijL,OAAAjjL,KAAAmgL,QACAngL,KAAAyiL,aAAAliK,KAAAiiK,aAAAE,aAGA3lJ,QAAA0tJ,SACAzqL,KAAA0qL,GAAA,SAAA9/K,EAAAC,EAAAkX,EAAA7H,GACA,GAAA06J,OAAAha,cAAAyvB,UAAAz/K,EAAAC,EAAAkX,EAAA7H,EAAAswK,kBAKA,OAJA5V,SACAA,MAAA+V,kBAAA5tJ,QAAA0tJ,SACA7V,MAAAyL,kBAAAphL,QAEA21K,OAGA50K,KAAA0qL,GAAA,SAAA9/K,EAAAC,EAAAkX,EAAA7H,GAAA,MAAA0gJ,eAAAyvB,UAAAz/K,EAAAC,EAAAkX,EAAA7H,EAAAswK,oBAMA,QAAAI,2BACAzW,KACAsF,UACAl5J,KACA8pK,UACAj1I,UAEA,GAAArY,SAAAo3I,KAAAp3I,QACAmwI,SACAsM,YAAAz8I,QAAAmwI,KACA,IAAA2E,MAAA2H,aACA,IAAA,GAAAppK,OAAAopK,aACAtM,MAAA98J,KAAAmpK,aAAAnpK,IAAAopK,YAAAC,WAAAiJ,iBAGA7Q,OAAAtxJ,KAAA28J,QAAA2N,WAAA3d,MAAA3sJ,KAAA28J,OACArL,MAAAtxJ,KAAA2sJ,QAAA2d,WAAA3d,MAAA3sJ,KAAA2sJ,MAGA,IAAA4d,eAAA,GAAAX,yBACA5pK,KACA2sJ,MACA93H,SACAi1I,UACAlW,MAGAS,MAAA73I,QAAA0K,OAAA7gC,KAAA,KAAAkkL,cAAAJ,GAAAI,cAUA,OARAlW,iBAAAF,SACAE,MAAAyL,kBAAAgK,UACAzV,MAAAmW,kBAAAhuJ,QACAxc,KAAAg2C,QACAq+G,MAAAr0J,OAAAq0J,MAAAr0J,UAAAg2C,KAAAh2C,KAAAg2C,OAIAq+G,MAGA,QAAAiW,YAAAp9K,GAAAC,MACA,IAAA,GAAA0C,OAAA1C,MACAD,GAAA0qK,SAAA/nK,MAAA1C,KAAA0C,KA4EA,QAAA46K,iBACA7W,KACA5zJ,KACAmrB,QACA0J,SACA2/H,KAEA,IAAAnD,QAAAuC,MAAA,CAIA,GAAAsK,UAAA/yI,QAAAwuI,SAAA+Q,KASA,IANAlhL,SAAAoqK,QACAA,KAAAsK,SAAA3zK,OAAAqpK,OAKA,kBAAAA,MAIA,WAFAvkK,MAAA,iCAAA+pH,OAAAw6C,MAAAzoI,QAMA,IAAAwpI,aACA,IAAAtD,QAAAuC,KAAA+W,OACAhW,aAAAf,SAEAhnK,MADAgnK,KAAAqK,sBAAAtJ,aAAAuJ,SAAA/yI,WAKA,MAAA2yI,wBACAnJ,aACA30J,KACAmrB,QACA0J,SACA2/H,IAKAx0J,MAAAA,SAIA4qK,0BAAAhX,MAGAtC,MAAAtxJ,KAAAuJ,QACAshK,eAAAjX,KAAAp3I,QAAAxc,KAIA,IAAAk5J,WAAAwD,0BAAA18J,KAAA4zJ,KAAAY,IAGA,IAAAjD,OAAAqC,KAAAp3I,QAAAsuJ,YACA,MAAAT,2BAAAzW,KAAAsF,UAAAl5J,KAAAmrB,QAAA0J,SAKA,IAAA+rD,WAAA5gF,KAAA+7J,EAKA,IAFA/7J,KAAA+7J,GAAA/7J,KAAA+qK,SAEAxZ,OAAAqC,KAAAp3I,QAAA0jJ,UAAA,CAKA,GAAAlqH,MAAAh2C,KAAAg2C,IACAh2C,SACAg2C,OACAh2C,KAAAg2C,KAAAA,MAKAg1H,WAAAhrK,KAGA,IAAA3iB,MAAAu2K,KAAAp3I,QAAAn/B,MAAAm3K,GAOA,OANA,IAAAL,OACA,iBAAAP,KAAA,KAAAv2K,KAAA,IAAAA,KAAA,IACA2iB,SAAApT,OAAAA,OAAAA,GAAAu+B,SACAyoI,KAAAA,KAAAsF,UAAAA,UAAAt4E,UAAAA,UAAA4zE,IAAAA,IAAA3/H,SAAAA,UACA8/H,eAKA,QAAAsW,iCACA5W,MACA31K,OACAwsL,UACAC,QAEA,GAAAC,uBAAA/W,MAAAK,iBACAl4I,SACA6uJ,cAAA,EACA3sL,OAAAA,OACAw6K,UAAAkS,sBAAAlS,UACAoS,cAAAF,sBAAA5W,IACA4N,aAAA/N,MACA+K,iBAAAgM,sBAAAxqF,UACAohF,gBAAAoJ,sBAAAv2I,SACA02I,WAAAL,WAAA,KACAM,QAAAL,QAAA,MAGAM,eAAApX,MAAAr0J,KAAAyrK,cAKA,OAJAna,OAAAma,kBACAjvJ,QAAA0K,OAAAukJ,eAAAvkJ,OACA1K,QAAA6rJ,gBAAAoD,eAAApD,iBAEA,GAAA+C,uBAAAxX,KAAAp3I,SAGA,QAAAwuJ,YAAAhrK,MACAA,KAAAu8J,OACAv8J,KAAAu8J,QAEA,KAAA,GAAAh5K,GAAA,EAAAA,EAAAmoL,aAAArsL,OAAAkE,IAAA,CACA,GAAAsM,KAAA67K,aAAAnoL,GACAooL,WAAA3rK,KAAAu8J,KAAA1sK,KACAi5K,KAAA8C,oBAAA/7K,IACAmQ,MAAAu8J,KAAA1sK,KAAA87K,WAAAE,YAAA/C,KAAA6C,YAAA7C,MAIA,QAAA+C,aAAAC,IAAAC,KACA,MAAA,UAAA1hL,EAAAC,EAAAkX,EAAA7H,GACAmyK,IAAAzhL,EAAAC,EAAAkX,EAAA7H,GACAoyK,IAAA1hL,EAAAC,EAAAkX,EAAA7H,IAMA,QAAAkxK,gBAAAruJ,QAAAxc,MACA,GAAA9X,MAAAs0B,QAAAjT,OAAAiT,QAAAjT,MAAArhB,MAAA,QACAzK,MAAA++B,QAAAjT,OAAAiT,QAAAjT,MAAA9rB,OAAA,SAAAuiB,KAAA2sJ,QAAA3sJ,KAAA2sJ,WAAAzkK,MAAA8X,KAAAuJ,MAAA5a,KACA,IAAAotK,IAAA/7J,KAAA+7J,KAAA/7J,KAAA+7J,MACAzK,OAAAyK,GAAAt+K,QACAs+K,GAAAt+K,QAAAuiB,KAAAuJ,MAAAvV,UAAAgzE,OAAA+0F,GAAAt+K,QAEAs+K,GAAAt+K,OAAAuiB,KAAAuJ,MAAAvV,SAWA,QAAAqmJ,eACAlvH,QACAqpI,IACAx0J,KACA60B,SACAm3I,kBACAC,iBAUA,OARAjwL,MAAAoN,QAAA4W,OAAAyxJ,YAAAzxJ,SACAgsK,kBAAAn3I,SACAA,SAAA70B,KACAA,SAAApT,IAEA2kK,OAAA0a,mBACAD,kBAAAE,kBAEAC,eAAAhhJ,QAAAqpI,IAAAx0J,KAAA60B,SAAAm3I,mBAGA,QAAAG,gBACAhhJ,QACAqpI,IACAx0J,KACA60B,SACAm3I,mBAEA,GAAA1a,MAAAtxJ,OAAAsxJ,MAAA,KAAAiE,QAMA,MALAlmK,MACA,mDAAAi3G,KAAAC,UAAAvmG,MAAA,2DAEAmrB,SAEA4yI,kBAMA,IAHAzM,MAAAtxJ,OAAAsxJ,MAAAtxJ,KAAA4wJ,MACA4D,IAAAx0J,KAAA4wJ,KAEA4D,IAEA,MAAAuJ,mBAIAzM,OAAAtxJ,OAAAsxJ,MAAAtxJ,KAAAnQ,OAAA4hK,YAAAzxJ,KAAAnQ,MAEAR,KACA,2EAEA87B,SAIAnvC,MAAAoN,QAAAyrC,WACA,kBAAAA,UAAA,KAEA70B,KAAAA,SACAA,KAAAiiK,aAAAvI,QAAA7kI,SAAA,IACAA,SAAAx1C,OAAA,GAEA2sL,oBAAAE,iBACAr3I,SAAAsoI,kBAAAtoI,UACAm3I,oBAAAI,mBACAv3I,SAAAqoI,wBAAAroI,UAEA,IAAAw/H,OAAAO,EACA,IAAA,gBAAAJ,KAAA,CACA,GAAAZ,KACAgB,IAAAzpI,QAAAu2I,QAAAv2I,QAAAu2I,OAAA9M,IAAA7mK,OAAAs+K,gBAAA7X,KAGAH,MAFAtmK,OAAA2pK,cAAAlD,KAEA,GAAAL,OACApmK,OAAAu+K,qBAAA9X,KAAAx0J,KAAA60B,aACAjoC,OAAAA,GAAAu+B,SAEAmmI,MAAAsC,KAAA8E,aAAAvtI,QAAAwuI,SAAA,aAAAnF,MAEAiW,gBAAA7W,KAAA5zJ,KAAAmrB,QAAA0J,SAAA2/H,KAKA,GAAAL,OACAK,IAAAx0J,KAAA60B,aACAjoC,OAAAA,GAAAu+B,aAKAkpI,OAAAoW,gBAAAjW,IAAAx0J,KAAAmrB,QAAA0J,SAEA,OAAAy8H,OAAA+C,QACAO,IAAA2X,QAAAlY,MAAAO,IACAP,OAEA0J,mBAIA,QAAAwO,SAAAlY,MAAAO,GAAApoD,OAOA,GANA6nD,MAAAO,GAAAA,GACA,kBAAAP,MAAAG,MAEAI,OAAAhoK,GACA4/G,OAAA,GAEA8kD,MAAA+C,MAAAx/H,UACA,IAAA,GAAAtxC,GAAA,EAAA4f,EAAAkxJ,MAAAx/H,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAAA,CACA,GAAAyoH,OAAAqoD,MAAAx/H,SAAAtxC,EACA+tK,OAAAtlD,MAAAwoD,OAAAnD,QAAArlD,MAAA4oD,KAAArD,OAAA/kD,SACA+/D,QAAAvgE,MAAA4oD,GAAApoD,QAQA,QAAAggE,YAAAvV,IACAA,GAAAoL,OAAA,IACA,IAAA7lJ,SAAAy6I,GAAA0C,SACAiI,YAAA3K,GAAAyK,OAAAllJ,QAAA4lJ,aACAmI,cAAA3I,aAAAA,YAAAz2I,OACA8rI,IAAAyL,OAAA/C,aAAAnjJ,QAAAwlJ,gBAAAuI,eACAtT,GAAAiL,aAAAC,YAKAlL,GAAAkT,GAAA,SAAA9/K,EAAAC,EAAAkX,EAAA7H,GAAA,MAAA0gJ,eAAA4c,GAAA5sK,EAAAC,EAAAkX,EAAA7H,GAAA,IAGAs9J,GAAAwV,eAAA,SAAApiL,EAAAC,EAAAkX,EAAA7H,GAAA,MAAA0gJ,eAAA4c,GAAA5sK,EAAAC,EAAAkX,EAAA7H,GAAA,GAIA,IAAA+yK,YAAA9K,aAAAA,YAAA5hK,IAIA+1J,gBAAAkB,GAAA,SAAAyV,YAAAA,WAAA/P,OAAAwF,YAAA,YACAL,0BAAAzyK,KAAA,sBAAA4nK,MACA,GACAlB,eAAAkB,GAAA,aAAAz6I,QAAA4iJ,kBAAA+C,YAAA,YACAL,0BAAAzyK,KAAA,0BAAA4nK,MACA,GAsIA,QAAA0V,uBAAA1V,GAAAz6I,SACA,GAAAmoJ,MAAA1N,GAAA0C,SAAArwK,OAAA88F,OAAA6wE,GAAA1rF,YAAA/uD,QAEAmoJ,MAAAjmL,OAAA89B,QAAA99B,OACAimL,KAAAzL,UAAA18I,QAAA08I,UACAyL,KAAAvC,aAAA5lJ,QAAA4lJ,aACAuC,KAAAvF,iBAAA5iJ,QAAA4iJ,iBACAuF,KAAA3C,gBAAAxlJ,QAAAwlJ,gBACA2C,KAAA2G,cAAA9uJ,QAAA8uJ,cACA3G,KAAA4G,WAAA/uJ,QAAA+uJ,WACA5G,KAAA6G,QAAAhvJ,QAAAgvJ,QACAhvJ,QAAA0K,SACAy9I,KAAAz9I,OAAA1K,QAAA0K,OACAy9I,KAAA0D,gBAAA7rJ,QAAA6rJ,iBAIA,QAAAuC,2BAAAhX,MACA,GAAAp3I,SAAAo3I,KAAAp3I,OACA,IAAAo3I,KAAAgZ,MAAA,CACA,GAAAC,cAAAjC,0BAAAhX,KAAAgZ,MAEA,IAAAC,eADAjZ,KAAAiZ,aACA,CAGAjZ,KAAAiZ,aAAAA,YAEA,IAAAC,iBAAAC,uBAAAnZ,KAEAkZ,kBACAviL,OAAAqpK,KAAAoZ,cAAAF,iBAEAtwJ,QAAAo3I,KAAAp3I,QAAA07I,aAAA2U,aAAAjZ,KAAAoZ,eACAxwJ,QAAAn/B,OACAm/B,QAAAguB,WAAAhuB,QAAAn/B,MAAAu2K,OAIA,MAAAp3I,SAGA,QAAAuwJ,wBAAAnZ,MACA,GAAAqZ,UACAC,OAAAtZ,KAAAp3I,QACA2wJ,SAAAvZ,KAAAoZ,cACAI,OAAAxZ,KAAAyZ,aACA,KAAA,GAAAx9K,OAAAq9K,QACAA,OAAAr9K,OAAAu9K,OAAAv9K,OACAo9K,WAAAA,aACAA,SAAAp9K,KAAAy9K,OAAAJ,OAAAr9K,KAAAs9K,SAAAt9K,KAAAu9K,OAAAv9K,MAGA,OAAAo9K,UAGA,QAAAK,QAAAJ,OAAAC,SAAAC,QAGA,GAAApxL,MAAAoN,QAAA8jL,QAAA,CACA,GAAA/iL,OACAijL,QAAApxL,MAAAoN,QAAAgkL,QAAAA,QAAAA,QACAD,SAAAnxL,MAAAoN,QAAA+jL,UAAAA,UAAAA,SACA,KAAA,GAAA5pL,GAAA,EAAAA,EAAA2pL,OAAA7tL,OAAAkE,KAEA4pL,SAAAh1K,QAAA+0K,OAAA3pL,KAAA,GAAA6pL,OAAAj1K,QAAA+0K,OAAA3pL,IAAA,IACA4G,IAAAxK,KAAAutL,OAAA3pL,GAGA,OAAA4G,KAEA,MAAA+iL,QAIA,QAAAK,OAAA/wJ,SAEA/8B,eAAA8tL,QAEAl+K,KAAA,oEAEA5P,KAAA+tL,MAAAhxJ,SAWA,QAAAixJ,SAAArc,KACAA,IAAAsc,IAAA,SAAAC,QACA,GAAAC,kBAAAnuL,KAAAouL,oBAAApuL,KAAAouL,qBACA,IAAAD,iBAAAz1K,QAAAw1K,SAAA,EACA,MAAAluL,KAIA,IAAAQ,MAAA+qB,QAAAtrB,UAAA,EAQA,OAPAO,MAAA6tL,QAAAruL,MACA,kBAAAkuL,QAAAI,QACAJ,OAAAI,QAAAxuL,MAAAouL,OAAA1tL,MACA,kBAAA0tL,SACAA,OAAApuL,MAAA,KAAAU,MAEA2tL,iBAAAjuL,KAAAguL,QACAluL,MAMA,QAAAuuL,aAAA5c,KACAA,IAAA6c,MAAA,SAAAA,OAEA,MADAxuL,MAAA+8B,QAAA07I,aAAAz4K,KAAA+8B,QAAAyxJ,OACAxuL,MAMA,QAAAyuL,YAAA9c,KAMAA,IAAAuZ,IAAA,CACA,IAAAA,KAAA,CAKAvZ,KAAA7mK,OAAA,SAAAyiL,eACAA,cAAAA,iBACA,IAAAmB,OAAA1uL,KACA2uL,QAAAD,MAAAxD,IACA0D,YAAArB,cAAAsB,QAAAtB,cAAAsB,SACA,IAAAD,YAAAD,SACA,MAAAC,aAAAD,QAGA,IAAA/wL,MAAA2vL,cAAA3vL,MAAA8wL,MAAA3xJ,QAAAn/B,IAEA,oBAAAf,KAAAe,OACAgS,KACA,4BAAAhS,KAAA,4GAOA,IAAAkxL,KAAA,SAAA/xJ,SACA/8B,KAAA+tL,MAAAhxJ,SA6CA,OA3CA+xJ,KAAAtyL,UAAAqN,OAAA88F,OAAA+nF,MAAAlyL,WACAsyL,IAAAtyL,UAAAsvF,YAAAgjG,IACAA,IAAA5D,IAAAA,MACA4D,IAAA/xJ,QAAA07I,aACAiW,MAAA3xJ,QACAwwJ,eAEAuB,IAAA,MAAAJ,MAKAI,IAAA/xJ,QAAAmwI,OACA6hB,YAAAD,KAEAA,IAAA/xJ,QAAAwoJ,UACAyJ,eAAAF,KAIAA,IAAAhkL,OAAA4jL,MAAA5jL,OACAgkL,IAAAN,MAAAE,MAAAF,MACAM,IAAAb,IAAAS,MAAAT,IAIAgB,YAAA3yL,QAAA,SAAA8+B,MACA0zJ,IAAA1zJ,MAAAszJ,MAAAtzJ,QAGAx9B,OACAkxL,IAAA/xJ,QAAAguB,WAAAntD,MAAAkxL,KAMAA,IAAA1B,aAAAsB,MAAA3xJ,QACA+xJ,IAAAvB,cAAAA,cACAuB,IAAAlB,cAAA9iL,UAAAgkL,IAAA/xJ,SAGA6xJ,YAAAD,SAAAG,IACAA,KAIA,QAAAC,aAAAG,MACA,GAAAhiB,OAAAgiB,KAAAnyJ,QAAAmwI,KACA,KAAA,GAAA98J,OAAA88J,OACA2X,MAAAqK,KAAA1yL,UAAA,SAAA4T,KAIA,QAAA4+K,gBAAAE,MACA,GAAA3J,UAAA2J,KAAAnyJ,QAAAwoJ,QACA,KAAA,GAAAn1K,OAAAm1K,UACAe,eAAA4I,KAAA1yL,UAAA4T,IAAAm1K,SAAAn1K,MAMA,QAAA++K,oBAAAxd,KAIAsd,YAAA3yL,QAAA,SAAA8+B,MACAu2I,IAAAv2I,MAAA,SACAqH,GACA2sJ,YAEA,MAAAA,aAKA,cAAAh0J,MAAA9sB,OAAA2pK,cAAAx1I,KACA7yB,KACA,kEACA6yB,IAIA,cAAArH,MAAA+2I,cAAAid,cACAA,WAAAxxL,KAAAwxL,WAAAxxL,MAAA6kC,GACA2sJ,WAAApvL,KAAA+8B,QAAAkuJ,MAAAngL,OAAAskL,aAEA,cAAAh0J,MAAA,kBAAAg0J,cACAA,YAAAhyG,KAAAgyG,WAAAz6I,OAAAy6I,aAEApvL,KAAA+8B,QAAA3B,KAAA,KAAAqH,IAAA2sJ,WACAA,YAnBApvL,KAAA+8B,QAAA3B,KAAA,KAAAqH,OA2BA,QAAA4sJ,kBAAAnK,MACA,MAAAA,QAAAA,KAAA/Q,KAAAp3I,QAAAn/B,MAAAsnL,KAAAnQ,KAGA,QAAAtrJ,SAAAsjC,QAAAnvD,MACA,MAAArB,OAAAoN,QAAAojD,SACAA,QAAAr0C,QAAA9a,OAAA,EACA,gBAAAmvD,SACAA,QAAAjtC,MAAA,KAAApH,QAAA9a,OAAA,IACAw0K,SAAArlH,UACAA,QAAAlwD,KAAAe,MAMA,QAAA0xL,YAAAC,kBAAAzjI,QACA,GAAAhE,OAAAynI,kBAAAznI,MACA9mC,KAAAuuK,kBAAAvuK,KACA4hK,OAAA2M,kBAAA3M,MACA,KAAA,GAAAxyK,OAAA03C,OAAA,CACA,GAAA0nI,YAAA1nI,MAAA13C,IACA,IAAAo/K,WAAA,CACA,GAAA5xL,MAAAyxL,iBAAAG,WAAAva,iBACAr3K,QAAAkuD,OAAAluD,OACA6xL,gBAAA3nI,MAAA13C,IAAA4Q,KAAA4hK,UAMA,QAAA6M,iBACA3nI,MACA13C,IACA4Q,KACA43H,SAEA,GAAA82C,WAAA5nI,MAAA13C,IACAs/K,YAAAA,YAAA92C,SACA82C,UAAAC,kBAAAC,WAEA9nI,MAAA13C,KAAA,KACAmpC,OAAAv4B,KAAA5Q,KA2LA,QAAAy/K,kBAAAjb,OAIA,IAHA,GAAAr0J,MAAAq0J,MAAAr0J,KACAjhB,WAAAs1K,MACA5vB,UAAA4vB,MACA/C,MAAA7sB,UAAA2qC,oBACA3qC,UAAAA,UAAA2qC,kBAAA/M,OACA59B,UAAAzkI,OACAA,KAAAuvK,eAAA9qC,UAAAzkI,KAAAA,MAGA,MAAAsxJ,MAAAvyK,WAAAA,WAAAL,SACAK,WAAAihB,OACAA,KAAAuvK,eAAAvvK,KAAAjhB,WAAAihB,MAGA,OAAAwvK,aAAAxvK,KAAAyvK,YAAAzvK,KAAA0vK,OAGA,QAAAH,gBAAAvjE,MAAAttH,QACA,OACA+wL,YAAAzoG,OAAAglC,MAAAyjE,YAAA/wL,OAAA+wL,aACAC,MAAApe,MAAAtlD,MAAA0jE,QACA1jE,MAAA0jE,MAAAhxL,OAAAgxL,OACAhxL,OAAAgxL,OAIA,QAAAF,aACAC,YACAE,cAEA,MAAAre,OAAAme,cAAAne,MAAAqe,cACA3oG,OAAAyoG,YAAAG,eAAAD,eAGA,GAGA,QAAA3oG,QAAA38E,EAAAC,GACA,MAAAD,GAAAC,EAAAD,EAAA,IAAAC,EAAAD,EAAAC,GAAA,GAGA,QAAAslL,gBAAAjhL,OACA,MAAA3S,OAAAoN,QAAAuF,OACAkhL,eAAAlhL,OAEAnF,SAAAmF,OACAmhL,gBAAAnhL,OAEA,gBAAAA,OACAA,MAGA,GAGA,QAAAkhL,gBAAAlhL,OAGA,IAAA,GADAohL,aADA5lL,IAAA,GAEA5G,EAAA,EAAA4f,EAAAxU,MAAAtP,OAAAkE,EAAA4f,EAAA5f,IACA+tK,MAAAye,YAAAH,eAAAjhL,MAAApL,MAAA,KAAAwsL,cACA5lL,MAAAA,KAAA,KACAA,KAAA4lL,YAGA,OAAA5lL,KAGA,QAAA2lL,iBAAAnhL,OACA,GAAAxE,KAAA,EACA,KAAA,GAAA0F,OAAAlB,OACAA,MAAAkB,OACA1F,MAAAA,KAAA,KACAA,KAAA0F,IAGA,OAAA1F,KAuCA,QAAAkiL,iBAAA7X,KACA,MAAAwb,OAAAxb,KACA,MAIA,SAAAA,IACA,WADA,GAMA,QAAAyb,kBAAAzb,KAEA,IAAAsG,UACA,OAAA,CAEA,IAAApD,cAAAlD,KACA,OAAA,CAIA,IAFAA,IAAAA,IAAAliK,cAEA,MAAA49K,oBAAA1b,KACA,MAAA0b,qBAAA1b,IAEA,IAAA12K,IAAA9C,SAAAq/J,cAAAma,IACA,OAAAA,KAAAr8J,QAAA,MAAA,EAEA+3K,oBAAA1b,KACA12K,GAAAytF,cAAA1wF,OAAAs1L,oBACAryL,GAAAytF,cAAA1wF,OAAAu1L,YAGAF,oBAAA1b,KAAA,qBAAAl4K,KAAAwB,GAAAyL,YAWA,QAAA8mL,OAAAvyL,IACA,GAAA,gBAAAA,IAAA,CACA,GAAAwyL,UAAAt1L,SAAAu1L,cAAAzyL,GACA,OAAAwyL,YACAjhL,KACA,wBAAAvR,IAEA9C,SAAAq/J,cAAA,QAIA,MAAAv8J,IAMA,QAAA0yL,iBAAAC,QAAApc,OACA,GAAAI,KAAAz5K,SAAAq/J,cAAAo2B,QACA,OAAA,WAAAA,QACAhc,KAGAJ,MAAAr0J,MAAAq0J,MAAAr0J,KAAA28J,WAAA/vK,KAAAynK,MAAAr0J,KAAA28J,MAAA+T,UACAjc,IAAAj4K,aAAA,WAAA,YAEAi4K,KAGA,QAAAvpI,iBAAAylJ,UAAAF,SACA,MAAAz1L,UAAAkwC,gBAAA0lJ,aAAAD,WAAAF,SAGA,QAAAI,gBAAA/sG,MACA,MAAA9oF,UAAA61L,eAAA/sG,MAGA,QAAAgtG,eAAAhtG,MACA,MAAA9oF,UAAA81L,cAAAhtG,MAGA,QAAAx+E,cAAAvG,WAAAgyL,QAAAC,eACAjyL,WAAAuG,aAAAyrL,QAAAC,eAGA,QAAAxrL,aAAA4uF,KAAA43B,OACA53B,KAAA5uF,YAAAwmH,OAGA,QAAAilE,aAAA78F,KAAA43B,OACA53B,KAAA68F,YAAAjlE,OAGA,QAAAjtH,YAAAq1F,MACA,MAAAA,MAAAr1F,WAGA,QAAAmyL,aAAA98F,MACA,MAAAA,MAAA88F,YAGA,QAAAT,SAAAr8F;uBACA,MAAAA,MAAAq8F,QAGA,QAAAU,gBAAA/8F,KAAAtQ,MACAsQ,KAAAg9F,YAAAttG,KAGA,QAAAtnF,cAAA43F,KAAAvkF,IAAAzC,KACAgnF,KAAA53F,aAAAqT,IAAAzC,KAoCA,QAAAikL,aAAAhd,MAAAid,WACA,GAAAzhL,KAAAwkK,MAAAr0J,KAAAuxK,GACA,IAAA1hL,IAAA,CAEA,GAAAonK,IAAA5C,MAAAlpI,QACAomJ,IAAAld,MAAA+a,mBAAA/a,MAAAI,IACA+c,KAAAva,GAAAoJ,KACAiR,WACAt1L,MAAAoN,QAAAooL,KAAA3hL,MACAmpC,OAAAw4I,KAAA3hL,KAAA0hL,KACAC,KAAA3hL,OAAA0hL,MACAC,KAAA3hL,SAAAjD,IAGAynK,MAAAr0J,KAAAyxK,SACAz1L,MAAAoN,QAAAooL,KAAA3hL,MAEA2hL,KAAA3hL,KAAAsI,QAAAo5K,KAAA,GAEAC,KAAA3hL,KAAAlQ,KAAA4xL,KAHAC,KAAA3hL,MAAA0hL,KAMAC,KAAA3hL,KAAA0hL,KAqBA,QAAAG,WAAArnL,EAAAC,GACA,MACAD,GAAAwF,MAAAvF,EAAAuF,MAEAxF,EAAAmqK,MAAAlqK,EAAAkqK,KACAnqK,EAAAyqK,YAAAxqK,EAAAwqK,WACAxD,MAAAjnK,EAAA2V,QAAAsxJ,MAAAhnK,EAAA0V,OACA2xK,cAAAtnL,EAAAC,IAEAinK,OAAAlnK,EAAA00K,qBACA10K,EAAAsqK,eAAArqK,EAAAqqK,cACAtD,QAAA/mK,EAAAqqK,aAAAl3I,QAMA,QAAAk0J,eAAAtnL,EAAAC,GACA,GAAA,UAAAD,EAAAmqK,IAAA,OAAA,CACA,IAAAjxK,GACAquL,MAAAtgB,MAAA/tK,EAAA8G,EAAA2V,OAAAsxJ,MAAA/tK,EAAAA,EAAAo5K,QAAAp5K,EAAAs3B,KACAg3J,MAAAvgB,MAAA/tK,EAAA+G,EAAA0V,OAAAsxJ,MAAA/tK,EAAAA,EAAAo5K,QAAAp5K,EAAAs3B,IACA,OAAA+2J,SAAAC,OAAAC,gBAAAF,QAAAE,gBAAAD,OAGA,QAAAE,mBAAAl9I,SAAAm9I,SAAAC,QACA,GAAA1uL,GAAAsM,IACA5F,MACA,KAAA1G,EAAAyuL,SAAAzuL,GAAA0uL,SAAA1uL,EACAsM,IAAAglC,SAAAtxC,GAAAsM,IACAyhK,MAAAzhK,OAAA5F,IAAA4F,KAAAtM,EAEA,OAAA0G,KAspBA,QAAAioL,kBAAAC,SAAA9d,QACA8d,SAAAnyK,KAAAi4J,YAAA5D,MAAAr0J,KAAAi4J,aACAxuB,QAAA0oC,SAAA9d,OAIA,QAAA5qB,SAAA0oC,SAAA9d,OACA,GAQAxkK,KAAAuiL,OAAAj2F,IARAk2F,SAAAF,WAAAG,UACAC,UAAAle,QAAAie,UACAE,QAAAC,sBAAAN,SAAAnyK,KAAAi4J,WAAAka,SAAAhnJ,SACAunJ,QAAAD,sBAAApe,MAAAr0J,KAAAi4J,WAAA5D,MAAAlpI,SAEAwnJ,kBACAC,oBAGA,KAAA/iL,MAAA6iL,SACAN,OAAAI,QAAA3iL,KACAssF,IAAAu2F,QAAA7iL,KACAuiL,QAQAj2F,IAAA02F,SAAAT,OAAAzjL,MACAmkL,WAAA32F,IAAA,SAAAk4E,MAAA8d,UACAh2F,IAAAm3E,KAAAn3E,IAAAm3E,IAAAyf,kBACAH,kBAAAjzL,KAAAw8F,OATA22F,WAAA32F,IAAA,OAAAk4E,MAAA8d,UACAh2F,IAAAm3E,KAAAn3E,IAAAm3E,IAAA0f,UACAL,eAAAhzL,KAAAw8F,KAYA,IAAAw2F,eAAAtzL,OAAA,CACA,GAAA4zL,YAAA,WACA,IAAA,GAAA1vL,GAAA,EAAAA,EAAAovL,eAAAtzL,OAAAkE,IACAuvL,WAAAH,eAAApvL,GAAA,WAAA8wK,MAAA8d,UAGAE,UACAhW,eAAAhI,MAAAr0J,KAAAu8J,OAAAlI,MAAAr0J,KAAAu8J,SAAA,SAAA0W,YAEAA,aAYA,GARAL,kBAAAvzL,QACAg9K,eAAAhI,MAAAr0J,KAAAu8J,OAAAlI,MAAAr0J,KAAAu8J,SAAA,YAAA,WACA,IAAA,GAAAh5K,GAAA,EAAAA,EAAAqvL,kBAAAvzL,OAAAkE,IACAuvL,WAAAF,kBAAArvL,GAAA,mBAAA8wK,MAAA8d,aAKAE,SACA,IAAAxiL,MAAA2iL,SACAE,QAAA7iL,MAEAijL,WAAAN,QAAA3iL,KAAA,SAAAsiL,SAAAA,SAAAI,WAQA,QAAAE,uBACAza,KACAf,IAEA,GAAA9sK,KAAAb,OAAA88F,OAAA,KACA,KAAA4xE,KACA,MAAA7tK,IAEA,IAAA5G,GAAA44F,GACA,KAAA54F,EAAA,EAAAA,EAAAy0K,KAAA34K,OAAAkE,IACA44F,IAAA67E,KAAAz0K,GACA44F,IAAA+2F,YACA/2F,IAAA+2F,UAAAC,gBAEAhpL,IAAAipL,cAAAj3F,MAAAA,IACAA,IAAAm3E,IAAAoF,aAAAzB,GAAA0C,SAAA,aAAAx9E,IAAA9+F,MAAA,EAEA,OAAA8M,KAGA,QAAAipL,eAAAj3F,KACA,MAAAA,KAAAk3F,SAAAl3F,IAAA,KAAA,IAAA7yF,OAAAmX,KAAA07E,IAAA+2F,eAAAnjL,KAAA,KAGA,QAAA+iL,YAAA32F,IAAAogF,KAAAlI,MAAA8d,SAAAI,WACA,GAAAx1L,IAAAo/F,IAAAm3E,KAAAn3E,IAAAm3E,IAAAiJ,KACA,IAAAx/K,GACA,IACAA,GAAAs3K,MAAAI,IAAAt4E,IAAAk4E,MAAA8d,SAAAI,WACA,MAAA/vL,GACA63K,YAAA73K,EAAA6xK,MAAAlpI,QAAA,aAAAgxD,IAAA,KAAA,IAAAogF,KAAA,UAYA,QAAA+W,aAAAnB,SAAA9d,OACA,GAAAsQ,MAAAtQ,MAAAK,gBACA,MAAApD,MAAAqT,QAAA,IAAAA,KAAA/Q,KAAAp3I,QAAA+2J,cAGAliB,QAAA8gB,SAAAnyK,KAAA28J,QAAAtL,QAAAgD,MAAAr0J,KAAA28J,QAAA,CAGA,GAAA9sK,KAAA0qK,IACA9F,IAAAJ,MAAAI,IACA+e,SAAArB,SAAAnyK,KAAA28J,UACAA,MAAAtI,MAAAr0J,KAAA28J,SAEArL,OAAAqL,MAAApH,UACAoH,MAAAtI,MAAAr0J,KAAA28J,MAAApyK,UAAAoyK,OAGA,KAAA9sK,MAAA8sK,OACApC,IAAAoC,MAAA9sK,KACA2jL,SAAA3jL,OACA0qK,KACAkZ,QAAAhf,IAAA5kK,IAAA0qK,MAMAmZ,OAAAC,SAAAhX,MAAAhuK,QAAA6kL,SAAA7kL,OACA8kL,QAAAhf,IAAA,QAAAkI,MAAAhuK,MAEA,KAAAkB,MAAA2jL,UACAniB,QAAAsL,MAAA9sK,QACA+jL,QAAA/jL,KACA4kK,IAAAof,kBAAAC,QAAAC,aAAAlkL,MACAmkL,iBAAAnkL,MACA4kK,IAAAnyH,gBAAAzyC,OAMA,QAAA4jL,SAAA31L,GAAA+R,IAAAlB,OACAslL,cAAApkL,KAGAqkL,iBAAAvlL,OACA7Q,GAAAwkD,gBAAAzyC,MAIAlB,MAAA,oBAAAkB,KAAA,UAAA/R,GAAA2yL,QACA,OACA5gL,IACA/R,GAAAtB,aAAAqT,IAAAlB,QAEAqlL,iBAAAnkL,KACA/R,GAAAtB,aAAAqT,IAAAqkL,iBAAAvlL,QAAA,UAAAA,MAAA,QAAA,QACAilL,QAAA/jL,KACAqkL,iBAAAvlL,OACA7Q,GAAA+1L,kBAAAC,QAAAC,aAAAlkL,MAEA/R,GAAAq2L,eAAAL,QAAAjkL,IAAAlB,OAGAulL,iBAAAvlL,OACA7Q,GAAAwkD,gBAAAzyC,KAEA/R,GAAAtB,aAAAqT,IAAAlB,OAYA,QAAAylL,aAAAjC,SAAA9d,OACA,GAAAv2K,IAAAu2K,MAAAI,IACAz0J,KAAAq0J,MAAAr0J,KACAq0K,QAAAlC,SAAAnyK,IACA,MACAqxJ,QAAArxJ,KAAAyvK,cACApe,QAAArxJ,KAAA0vK,SACAre,QAAAgjB,UACAhjB,QAAAgjB,QAAA5E,cACApe,QAAAgjB,QAAA3E,SALA,CAYA,GAAAtzL,KAAAkzL,iBAAAjb,OAGAigB,gBAAAx2L,GAAAy2L,kBACAjjB,OAAAgjB,mBACAl4L,IAAA4qF,OAAA5qF,IAAAwzL,eAAA0E,mBAIAl4L,MAAA0B,GAAA02L,aACA12L,GAAAtB,aAAA,QAAAJ,KACA0B,GAAA02L,WAAAp4L,MAaA,QAAAq4L,cAAAC,KAoEA,QAAAC,eACAviG,UAAAA,aAAAzyF,KAAA+0L,IAAA5kL,MAAA8kL,gBAAArxL,GAAA9G,QACAm4L,gBAAArxL,EAAA,EArEA,GAQAie,GAAAqzK,KAAAtxL,EAAAuxL,WAAA1iG,QARA2iG,UAAA,EACAC,UAAA,EACAC,kBAAA,EACAC,SAAA,EACAC,MAAA,EACAC,OAAA,EACAC,MAAA,EACAT,gBAAA,CAGA,KAAArxL,EAAA,EAAAA,EAAAmxL,IAAAr1L,OAAAkE,IAGA,GAFAsxL,KAAArzK,EACAA,EAAAkzK,IAAA/qD,WAAApmI,GACAwxL,SACA,KAAAvzK,GAAA,KAAAqzK,OAAAE,UAAA,OACA,IAAAC,SACA,KAAAxzK,GAAA,KAAAqzK,OAAAG,UAAA,OACA,IAAAC,iBACA,KAAAzzK,GAAA,KAAAqzK,OAAAI,kBAAA,OACA,IAAAC,QACA,KAAA1zK,GAAA,KAAAqzK,OAAAK,SAAA,OACA,IACA,MAAA1zK,GACA,MAAAkzK,IAAA/qD,WAAApmI,EAAA,IACA,MAAAmxL,IAAA/qD,WAAApmI,EAAA,IACA4xL,OAAAC,QAAAC,MASA,CACA,OAAA7zK,GACA,IAAA,IAAAwzK,UAAA,CAAA,MACA,KAAA,IAAAD,UAAA,CAAA,MACA,KAAA,IAAAE,kBAAA,CAAA,MACA,KAAA,IAAAI,OAAA,MACA,KAAA,IAAAA,OAAA,MACA,KAAA,IAAAD,QAAA,MACA,KAAA,IAAAA,QAAA,MACA,KAAA,KAAAD,OAAA,MACA,KAAA,KAAAA,QAEA,GAAA,KAAA3zK,EAAA,CAIA,IAHA,GAAAnC,GAAA9b,EAAA,EACAkwD,MAAA,GAEAp0C,GAAA,GAEA,OADAo0C,EAAAihI,IAAA31K,OAAAM,IADAA,KAIAo0C,GAAA6hI,oBAAAh5L,KAAAm3D,KACAyhI,SAAA,aA5BAtoL,KAAAkoL,YAEAF,gBAAArxL,EAAA,EACAuxL,WAAAJ,IAAA5kL,MAAA,EAAAvM,GAAA9G,QAEAk4L,YAwCA,QAXA/nL,KAAAkoL,WACAA,WAAAJ,IAAA5kL,MAAA,EAAAvM,GAAA9G,OACA,IAAAm4L,iBACAD,aAQAviG,QACA,IAAA7uF,EAAA,EAAAA,EAAA6uF,QAAA/yF,OAAAkE,IACAuxL,WAAAS,WAAAT,WAAA1iG,QAAA7uF,GAIA,OAAAuxL,YAGA,QAAAS,YAAAb,IAAAnpI,QACA,GAAAhoD,GAAAgoD,OAAApzC,QAAA,IACA,OAAA5U,GAAA,EAEA,OAAAgoD,OAAA,MAAAmpI,IAAA,IAIA,OAFAnpI,OAAAz7C,MAAA,EAAAvM,GAEA,MAAAmxL,IAAA,IADAnpI,OAAAz7C,MAAAvM,EAAA,GAOA,QAAAiyL,UAAAlmL,KACAE,QAAAiuB,MAAA,mBAAAnuB,KAGA,QAAAmmL,qBACAC,QACA7lL,KAEA,MAAA6lL,SACAA,QAAAzrL,IAAA,SAAA8B,GAAA,MAAAA,GAAA8D,OAAA07C,OAAA,SAAAzkD,GAAA,MAAAA,QAIA,QAAA6uL,SAAA73L,GAAAT,KAAAsR,QACA7Q,GAAA6uK,QAAA7uK,GAAA6uK,WAAAhtK,MAAAtC,KAAAA,KAAAsR,MAAAA,QAGA,QAAAinL,SAAA93L,GAAAT,KAAAsR,QACA7Q,GAAA6+K,QAAA7+K,GAAA6+K,WAAAh9K,MAAAtC,KAAAA,KAAAsR,MAAAA,QAGA,QAAAknL,cACA/3L,GACAT,KACAg2L,QACA1kL,MACAiB,IACAsjL,YAEAp1L,GAAAm6K,aAAAn6K,GAAAm6K,gBAAAt4K,MAAAtC,KAAAA,KAAAg2L,QAAAA,QAAA1kL,MAAAA,MAAAiB,IAAAA,IAAAsjL,UAAAA,YAGA,QAAA4C,YACAh4L,GACAT,KACAsR,MACAukL,UACA6C,UACA1mL,MAKAA,MACA6jL,WAAAA,UAAA8C,SAAA9C,UAAA9W,SAEA/sK,KACA,4FAKA6jL,WAAAA,UAAAxY,gBACAwY,WAAAxY,QACAr9K,KAAA,IAAAA,MAEA61L,WAAAA,UAAA/f,aACA+f,WAAA/f,KACA91K,KAAA,IAAAA,MAGA61L,WAAAA,UAAA9W,gBACA8W,WAAA9W,QACA/+K,KAAA,IAAAA,KAEA,IAAA44L,OACA/C,YAAAA,UAAAgD,cACAhD,WAAAgD,OACAD,OAAAn4L,GAAAq4L,eAAAr4L,GAAAq4L,kBAEAF,OAAAn4L,GAAAm4L,SAAAn4L,GAAAm4L,UAEA,IAAAG,aAAAznL,MAAAA,MAAAukL,UAAAA,WACA5gD,SAAA2jD,OAAA54L,KAEArB,OAAAoN,QAAAkpI,UACAyjD,UAAAzjD,SAAAw7C,QAAAsI,YAAA9jD,SAAA3yI,KAAAy2L,YAEAH,OAAA54L,MADAi1I,SACAyjD,WAAAK,WAAA9jD,WAAAA,SAAA8jD,YAEAA,WAIA,QAAAC,gBACAv4L,GACAT,KACAi5L,WAEA,GAAAC,cACAC,iBAAA14L,GAAA,IAAAT,OACAm5L,iBAAA14L,GAAA,UAAAT,KACA,IAAA,MAAAk5L,aACA,MAAA9B,cAAA8B,aACA,KAAA,IAAAD,UAAA,CACA,GAAAG,aAAAD,iBAAA14L,GAAAT,KACA,IAAA,MAAAo5L,YACA,MAAAnwE,MAAAC,UAAAkwE,cASA,QAAAD,kBACA14L,GACAT,KACAq5L,eAEA,GAAAtpL,IACA,IAAA,OAAAA,IAAAtP,GAAA64L,SAAAt5L,OAEA,IAAA,GADAqmD,MAAA5lD,GAAA84L,UACArzL,EAAA,EAAA4f,EAAAugC,KAAArkD,OAAAkE,EAAA4f,EAAA5f,IACA,GAAAmgD,KAAAngD,GAAAlG,OAAAA,KAAA,CACAqmD,KAAAq9C,OAAAx9F,EAAA,EACA,OAOA,MAHAmzL,sBACA54L,IAAA64L,SAAAt5L,MAEA+P,IAQA,QAAAypL,mBACA/4L,GACA6Q,MACAukL,WAEA,GAAA3B,KAAA2B,cACA9kL,OAAAmjL,IAAAnjL,OACA3R,KAAA80L,IAAA90L,KAGAq6L,gBADA,KAEAr6L,QACAq6L,gBACA,8CAIA1oL,SACA0oL,gBAAA,MAAAA,gBAAA,IAEA,IAAAC,YAAAC,kBAAAroL,MAAAmoL,gBAEAh5L,IAAAyrB,OACA5a,MAAA,IAAAA,MAAA,IACAmmL,WAAA,IAAAnmL,MAAA,IACAqF,SAAA,mBAAA+iL,WAAA,KAOA,QAAAC,mBACAroL,MACAooL,YAEA,GAAA5sL,KAAAqrI,WAAA7mI,MACA,OAAA,QAAAxE,IAAA0F,IACAlB,MAAA,IAAAooL,WAEA,QAAA5sL,IAAA,IAAA,KAAAA,IAAA,IAAA,KAAA4sL,WAAA,IA4BA,QAAAvhD,YAAApoI,KAGA,GAFAxF,IAAAwF,IAAA/N,OAEA+N,IAAA+K,QAAA,KAAA,GAAA/K,IAAA2pI,YAAA,KAAAnvI,IAAA,EAEA,MADAqvL,SAAA7pL,IAAA2pI,YAAA,KACAkgD,SAAA,GAEAvC,IAAAtnL,IAAA0C,MAAA,EAAAmnL,SACApnL,IAAA,IAAAzC,IAAA0C,MAAAmnL,QAAA,GAAA,MAIAvC,IAAAtnL,IACAyC,IAAA,KAQA,KAHAoiK,IAAA7kK,IACA6pL,QAAAC,cAAAC,iBAAA,GAEAC,OACAC,IAAA/3K,OAEAg4K,cAAAD,KACAE,YAAAF,KACA,KAAAA,KACAG,aAAAH,IAIA,QACA3C,IAAAtnL,IAAA0C,MAAA,EAAAonL,eACArnL,IAAAzC,IAAA0C,MAAAonL,cAAA,EAAAC,mBAIA,QAAA73K,QACA,MAAA2yJ,KAAAtoC,aAAAstD,SAGA,QAAAG,OACA,MAAAH,UAAArvL,IAGA,QAAA0vL,eAAAD,KACA,MAAA,MAAAA,KAAA,KAAAA,IAGA,QAAAG,cAAAH,KACA,GAAAI,WAAA,CAEA,KADAP,cAAAD,SACAG,OAEA,GADAC,IAAA/3K,OACAg4K,cAAAD,KACAE,YAAAF,SAKA,IAFA,KAAAA,KAAAI,YACA,KAAAJ,KAAAI,YACA,IAAAA,UAAA,CACAN,iBAAAF,OACA,QAKA,QAAAM,aAAAF,KAEA,IADA,GAAAK,aAAAL,KACAD,QACAC,IAAA/3K,UACAo4K,eAeA,QAAAnuK,OACAzrB,GACAq+F,IACAw7F,OAEAC,OAAAD,KACA,IAAAhpL,OAAAwtF,IAAAxtF,MACAukL,UAAA/2F,IAAA+2F,UACA1e,IAAA12K,GAAA02K,IACA35I,KAAA/8B,GAAA64L,SAAA97J,IAaA,IARA,UAAA25I,KAAA,SAAA35I,MACA+8J,OACA,IAAA95L,GAAA,IAAA,aAAA6Q,MAAA,mFAMA7Q,GAAAghL,UAGA,MAFA+X,mBAAA/4L,GAAA6Q,MAAAukL,YAEA,CACA,IAAA,WAAA1e,IACAqjB,UAAA/5L,GAAA6Q,MAAAukL,eACA,IAAA,UAAA1e,KAAA,aAAA35I,KACAi9J,iBAAAh6L,GAAA6Q,MAAAukL,eACA,IAAA,UAAA1e,KAAA,UAAA35I,KACAk9J,cAAAj6L,GAAA6Q,MAAAukL,eACA,IAAA,UAAA1e,KAAA,aAAAA,IACAwjB,gBAAAl6L,GAAA6Q,MAAAukL,eACA,CAAA,IAAAnlL,OAAA2pK,cAAAlD,KAGA,MAFAqiB,mBAAA/4L,GAAA6Q,MAAAukL,YAEA,CAEA0E,QACA,IAAA95L,GAAA,IAAA,aAAA6Q,MAAA,yLAQA,OAAA,EAGA,QAAAmpL,kBACAh6L,GACA6Q,MACAukL,WAEA,GAAA9kL,QAAA8kL,WAAAA,UAAA9kL,OACA6pL,aAAA5B,eAAAv4L,GAAA,UAAA,OACAo6L,iBAAA7B,eAAAv4L,GAAA,eAAA,OACAq6L,kBAAA9B,eAAAv4L,GAAA,gBAAA,OACA63L,SAAA73L,GAAA,UACA,iBAAA6Q,MAAA,QACAA,MAAA,IAAAspL,aAAA,QACA,SAAAC,iBACA,KAAAvpL,MAAA,IACA,OAAAA,MAAA,IAAAupL,iBAAA,MAGApC,WAAAh4L,GAAA,SACA,WAAA6Q,MAAA,yCAEAupL,iBAAA,MAAAC,kBAAA,qCAEA/pL,OAAA,MAAA6pL,aAAA,IAAAA,cAAA,6CAEAtpL,MAAA,qCACAA,MAAA,qDACAqoL,kBAAAroL,MAAA,OAAA,IACA,MAAA,GAIA,QAAAopL,eACAj6L,GACA6Q,MACAukL,WAEA,GAAA9kL,QAAA8kL,WAAAA,UAAA9kL,OACA6pL,aAAA5B,eAAAv4L,GAAA,UAAA,MACAm6L,cAAA7pL,OAAA,MAAA6pL,aAAA,IAAAA,aACAtC,QAAA73L,GAAA,UAAA,MAAA6Q,MAAA,IAAAspL,aAAA,KACAnC,WAAAh4L,GAAA,SAAAk5L,kBAAAroL,MAAAspL,cAAA,MAAA,GAGA,QAAAJ,WACA/5L,GACA6Q,MACAukL,WAEA,GAAA9kL,QAAA8kL,WAAAA,UAAA9kL,OACAgqL,YAAA,0JAGAhqL,OAAA,UAAA,OAAA,KAGAy+C,KAAA,uBAAAurI,YAAA,GACAvrI,MAAAA,KAAA,IAAAmqI,kBAAAroL,MAFA,6DAGAmnL,WAAAh4L,GAAA,SAAA+uD,KAAA,MAAA,GAGA,QAAAmrI,iBACAl6L,GACA6Q,MACAukL,WAEA,GAAAr4J,MAAA/8B,GAAA64L,SAAA97J,KACA02J,IAAA2B,cACAmF,KAAA9G,IAAA8G,KACAjqL,OAAAmjL,IAAAnjL,OACA3R,KAAA80L,IAAA90L,KACA67L,sBAAAD,MAAA,UAAAx9J,KACAp9B,MAAA46L,KACA,SACA,UAAAx9J,KACA09J,YACA,QAEAzB,gBAAA,qBACAr6L,QACAq6L,gBAAA,8BAEA1oL,SACA0oL,gBAAA,MAAAA,gBAAA,IAGA,IAAAjqI,MAAAmqI,kBAAAroL,MAAAmoL,gBACAwB,wBACAzrI,KAAA,qCAAAA,MAGA8oI,QAAA73L,GAAA,QAAA,IAAA6Q,MAAA,KACAmnL,WAAAh4L,GAAAL,MAAAovD,KAAA,MAAA,IACApwD,MAAA2R,SACA0nL,WAAAh4L,GAAA,OAAA,kBAUA,QAAA06L,iBAAAzc,IAEA,GAAAzK,MAAAyK,GAAAwc,cAAA,CAEA,GAAA96L,OAAAg7L,KAAA,SAAA,OACA1c,IAAAt+K,UAAAupF,OAAA+0F,GAAAwc,aAAAxc,GAAAt+K,kBACAs+K,IAAAwc,aAKAjnB,MAAAyK,GAAA2c,yBACA3c,GAAA4c,UAAA3xG,OAAA+0F,GAAA2c,sBAAA3c,GAAA4c,kBACA5c,IAAA2c,uBAMA,QAAAE,mBAAAzS,QAAA1oL,MAAAi9K,SACA,GAAA5G,SAAA+kB,QACA,OAAA,SAAAC,eAEA,OADA3S,QAAA5mL,MAAA,KAAAG,YAEAq5L,SAAAt7L,MAAAq7L,YAAApe,QAAA5G,UAKA,QAAAxiJ,OACA7zB,MACA0oL,QACA6S,QACAte,QACA0B,SAEA+J,QAAAjL,cAAAiL,SACA6S,UAAA7S,QAAAyS,kBAAAzS,QAAA1oL,MAAAi9K,UACAme,SAAAr9L,iBACAiC,MACA0oL,QACA8S,iBACAve,QAAAA,QAAA0B,QAAAA,SACA1B,SAIA,QAAAqe,UACAt7L,MACA0oL,QACAzL,QACA5G,UAEAA,SAAA+kB,UAAArzI,oBACA/nD,MACA0oL,QAAAhL,WAAAgL,QACAzL,SAIA,QAAAwe,oBAAA/G,SAAA9d,OACA,IAAAhD,QAAA8gB,SAAAnyK,KAAA+7J,MAAA1K,QAAAgD,MAAAr0J,KAAA+7J,IAAA,CAGA,GAAAA,IAAA1H,MAAAr0J,KAAA+7J,OACAC,MAAAmW,SAAAnyK,KAAA+7J,MACA8c,UAAAxkB,MAAAI,IACA+jB,gBAAAzc,IACAD,gBAAAC,GAAAC,MAAA1qJ,MAAAynK,SAAA1kB,MAAAlpI,UAUA,QAAAguJ,gBAAAhH,SAAA9d,OACA,IAAAhD,QAAA8gB,SAAAnyK,KAAAgoK,YAAA3W,QAAAgD,MAAAr0J,KAAAgoK,UAAA,CAGA,GAAAn4K,KAAA0qK,IACA9F,IAAAJ,MAAAI,IACA2kB,SAAAjH,SAAAnyK,KAAAgoK,aACArb,MAAA0H,MAAAr0J,KAAAgoK,YAEA1W,OAAA3E,MAAA4I,UACA5I,MAAA0H,MAAAr0J,KAAAgoK,SAAAz9K,UAAAoiK,OAGA,KAAA98J,MAAAupL,UACA/nB,QAAA1E,MAAA98J,QACA4kK,IAAA5kK,KAAA,GAGA,KAAAA,MAAA88J,OAAA,CAKA,GAJA4N,IAAA5N,MAAA98J,KAIA,gBAAAA,KAAA,cAAAA,IAAA,CAEA,GADAwkK,MAAAx/H,WAAAw/H,MAAAx/H,SAAAx1C,OAAA,GACAk7K,MAAA6e,SAAAvpL,KAAA,QAGA,KAAA4kK,IAAA4kB,WAAAh6L,QACAo1K,IAAAjvK,YAAAivK,IAAA4kB,WAAA,IAIA,GAAA,UAAAxpL,IAAA,CAGA4kK,IAAA6kB,OAAA/e,GAEA,IAAAgf,QAAAloB,QAAAkJ,KAAA,GAAAnhD,OAAAmhD,IACAif,mBAAA/kB,IAAA8kB,UACA9kB,IAAA9lK,MAAA4qL,YAGA9kB,KAAA5kK,KAAA0qK,MAQA,QAAAif,mBAAA/kB,IAAAglB,UACA,OAAAhlB,IAAAilB,YACA,WAAAjlB,IAAAgc,SACAkJ,QAAAllB,IAAAglB,WACAG,eAAAnlB,IAAAglB,WAIA,QAAAE,SAAAllB,IAAAglB,UAGA,GAAAI,aAAA,CAGA,KAAAA,WAAA7+L,SAAA8+L,gBAAArlB,IAAA,MAAAjyK,IACA,MAAAq3L,aAAAplB,IAAA9lK,QAAA8qL,SAGA,QAAAG,gBAAAnlB,IAAA+B,QACA,GAAA7nK,OAAA8lK,IAAA9lK,MACAukL,UAAAze,IAAAslB,WACA,OAAAzoB,OAAA4hB,YAAAA,UAAA9kL,OACA2jK,SAAApjK,SAAAojK,SAAAyE,QAEAlF,MAAA4hB,YAAAA,UAAAz2L,KACAkS,MAAAlS,SAAA+5K,OAAA/5K,OAEAkS,QAAA6nK,OAwBA,QAAAwjB,oBAAAh6K,MACA,GAAAzhB,OAAA07L,sBAAAj6K,KAAAzhB,MAGA,OAAAyhB,MAAAk6K,YACA3vL,OAAAyV,KAAAk6K,YAAA37L,OACAA,MAIA,QAAA07L,uBAAAE,cACA,MAAAn+L,OAAAoN,QAAA+wL,cACAvrK,SAAAurK,cAEA,gBAAAA,cACAC,eAAAD,cAEAA,aAOA,QAAA39E,UAAA63D,MAAAgmB,YACA,GACAC,WADAnwL,MAGA,IAAAkwL,WAEA,IADA,GAAA51C,WAAA4vB,MACA5vB,UAAA2qC,mBACA3qC,UAAAA,UAAA2qC,kBAAA/M,OACA59B,UAAAzkI,OAAAs6K,UAAAN,mBAAAv1C,UAAAzkI,QACAzV,OAAAJ,IAAAmwL,YAKAA,UAAAN,mBAAA3lB,MAAAr0J,QACAzV,OAAAJ,IAAAmwL,UAIA,KADA,GAAAv7L,YAAAs1K,MACAt1K,WAAAA,WAAAL,QACAK,WAAAihB,OAAAs6K,UAAAN,mBAAAj7L,WAAAihB,QACAzV,OAAAJ,IAAAmwL,UAGA,OAAAnwL,KA8CA,QAAA8tE,aAAAk6G,SAAA9d,OACA,GAAAr0J,MAAAq0J,MAAAr0J,KACAq0K,QAAAlC,SAAAnyK,IAEA,MAAAqxJ,QAAArxJ,KAAAk6K,cAAA7oB,QAAArxJ,KAAAzhB,QACA8yK,QAAAgjB,QAAA6F,cAAA7oB,QAAAgjB,QAAA91L,QADA,CAMA,GAAAg8K,KAAAl9K,KACAS,GAAAu2K,MAAAI,IACA8lB,eAAAlG,QAAA6F,YACAM,gBAAAnG,QAAAoG,iBAAApG,QAAA91L,UAGAm8L,SAAAH,gBAAAC,gBAEAj8L,MAAA07L,sBAAA5lB,MAAAr0J,KAAAzhB,UAKA81K,OAAAr0J,KAAAy6K,gBAAAnpB,MAAA/yK,MAAAg3K,QACAhrK,UAAAhM,OACAA,KAEA,IAAAo8L,UAAAn+E,SAAA63D,OAAA,EAEA,KAAAh3K,OAAAq9L,UACArpB,QAAAspB,SAAAt9L,QACAu9L,QAAA98L,GAAAT,KAAA,GAGA,KAAAA,OAAAs9L,WACApgB,IAAAogB,SAAAt9L,SACAq9L,SAAAr9L,OAEAu9L,QAAA98L,GAAAT,KAAA,MAAAk9K,IAAA,GAAAA,MAgBA,QAAAh+K,UAAAuB,GAAA1B,KAEA,GAAAA,MAAAA,IAAAA,IAAAK,QAKA,GAAAqB,GAAA+8L,UACAz+L,IAAA+b,QAAA,MAAA,EACA/b,IAAAmjB,MAAA,OAAAxjB,QAAA,SAAAylB,GAAA,MAAA1jB,IAAA+8L,UAAA79L,IAAAwkB,KAEA1jB,GAAA+8L,UAAA79L,IAAAZ,SAEA,CACA,GAAAm+K,KAAA,KAAAz8K,GAAAw8F,aAAA,UAAA,IAAA,GACAigF,KAAApiK,QAAA,IAAA/b,IAAA,KAAA,GACA0B,GAAAtB,aAAA,SAAA+9K,IAAAn+K,KAAAK,SASA,QAAAC,aAAAoB,GAAA1B,KAEA,GAAAA,MAAAA,IAAAA,IAAAK,QAKA,GAAAqB,GAAA+8L,UACAz+L,IAAA+b,QAAA,MAAA,EACA/b,IAAAmjB,MAAA,OAAAxjB,QAAA,SAAAylB,GAAA,MAAA1jB,IAAA+8L,UAAA7hJ,OAAAx3B,KAEA1jB,GAAA+8L,UAAA7hJ,OAAA58C,KAEA0B,GAAA+8L,UAAAx7L,QACAvB,GAAAwkD,gBAAA,aAEA,CAGA,IAFA,GAAAi4H,KAAA,KAAAz8K,GAAAw8F,aAAA,UAAA,IAAA,IACAwgG,IAAA,IAAA1+L,IAAA,IACAm+K,IAAApiK,QAAA2iL,MAAA,GACAvgB,IAAAA,IAAA39K,QAAAk+L,IAAA,IAEAvgB,KAAAA,IAAA99K,OACA89K,IACAz8K,GAAAtB,aAAA,QAAA+9K,KAEAz8K,GAAAwkD,gBAAA,UAOA,QAAAy4I,mBAAAznB,KACA,GAAAA,IAAA,CAIA,GAAA,gBAAAA,KAAA,CACA,GAAAnpK,OAKA,QAJA,IAAAmpK,IAAA0nB,KACAzwL,OAAAJ,IAAA8wL,kBAAA3nB,IAAAj2K,MAAA,MAEAkN,OAAAJ,IAAAmpK,KACAnpK,IACA,MAAA,gBAAAmpK,KACA2nB,kBAAA3nB,SADA,IAgDA,QAAA4nB,WAAAn+L,IACAo+L,IAAA,WACAA,IAAAp+L,MAIA,QAAAq+L,oBAAAt9L,GAAA1B,KACA,GAAAi/L,mBAAAv9L,GAAAy2L,qBAAAz2L,GAAAy2L,sBACA8G,mBAAAljL,QAAA/b,KAAA,IACAi/L,kBAAA17L,KAAAvD,KACAG,SAAAuB,GAAA1B,MAIA,QAAAk/L,uBAAAx9L,GAAA1B,KACA0B,GAAAy2L,oBACAv7I,OAAAl7C,GAAAy2L,mBAAAn4L,KAEAM,YAAAoB,GAAA1B,KAGA,QAAAm/L,oBACAz9L,GACAo8K,aACA1rD,IAEA,GAAA+iE,KAAAiK,kBAAA19L,GAAAo8K,cACAr/I,KAAA02J,IAAA12J,KACAt6B,QAAAgxL,IAAAhxL,QACAk7L,UAAAlK,IAAAkK,SACA,KAAA5gK,KAAA,MAAA2zF,KACA,IAAA/wH,OAAAo9B,OAAA6gK,WAAAC,mBAAAC,kBACAC,MAAA,EACA76I,IAAA,WACAljD,GAAA0nD,oBAAA/nD,MAAAq+L,OACAttE,MAEAstE,MAAA,SAAAt5L,GACAA,EAAAC,SAAA3E,MACA+9L,OAAAJ,WACAz6I,MAIAvlD,YAAA,WACAogM,MAAAJ,WACAz6I,OAEAzgD,QAAA,GACAzC,GAAAtC,iBAAAiC,MAAAq+L,OAKA,QAAAN,mBAAA19L,GAAAo8K,cACA,GAQAr/I,MARAkhK,OAAAlhM,OAAA2D,iBAAAV,IACAk+L,iBAAAD,OAAAE,eAAA,SAAA18K,MAAA,MACA28K,oBAAAH,OAAAE,eAAA,YAAA18K,MAAA,MACA48K,kBAAAC,WAAAJ,iBAAAE,qBACAG,gBAAAN,OAAAO,cAAA,SAAA/8K,MAAA,MACAg9K,mBAAAR,OAAAO,cAAA,YAAA/8K,MAAA,MACAi9K,iBAAAJ,WAAAC,gBAAAE,oBAGAh8L,QAAA,EACAk7L,UAAA,CA8BA,OA5BAvhB,gBAAAwhB,WACAS,kBAAA,IACAthK,KAAA6gK,WACAn7L,QAAA47L,kBACAV,UAAAS,oBAAA78L,QAEA66K,eAAAuiB,UACAD,iBAAA,IACA3hK,KAAA4hK,UACAl8L,QAAAi8L,iBACAf,UAAAc,mBAAAl9L,SAGAkB,QAAA8N,KAAAsF,IAAAwoL,kBAAAK,kBACA3hK,KAAAt6B,QAAA,EACA47L,kBAAAK,iBACAd,WACAe,UACA,KACAhB,UAAA5gK,KACAA,OAAA6gK,WACAQ,oBAAA78L,OACAk9L,mBAAAl9L,OACA,IAMAw7B,KAAAA,KACAt6B,QAAAA,QACAk7L,UAAAA,UACAiB,aANA7hK,OAAA6gK,YACAiB,YAAArgM,KAAAy/L,OAAAE,eAAA,cASA,QAAAG,YAAAQ,OAAAC,WAEA,KAAAD,OAAAv9L,OAAAw9L,UAAAx9L,QACAu9L,OAAAA,OAAA51G,OAAA41G,OAGA,OAAAvuL,MAAAsF,IAAApU,MAAA,KAAAs9L,UAAA5yL,IAAA,SAAA0P,EAAApW,GACA,MAAAu5L,MAAAnjL,GAAAmjL,KAAAF,OAAAr5L,OAIA,QAAAu5L,MAAAznL,GACA,MAAA,KAAAirF,OAAAjrF,EAAAvF,MAAA,GAAA,IAKA,QAAAitL,OAAA1oB,MAAA2oB,eACA,GAAAl/L,IAAAu2K,MAAAI,GAGAnD,OAAAxzK,GAAAm/L,YACAn/L,GAAAm/L,SAAAC,WAAA,EACAp/L,GAAAm/L,WAGA,IAAAj9K,MAAA+6K,kBAAA1mB,MAAAr0J,KAAAm9K,WACA,KAAA9rB,QAAArxJ,QAKAsxJ,MAAAxzK,GAAAs/L,WAAA,IAAAt/L,GAAAu/L,SAAA,CA4BA,IAxBA,GAAArC,KAAAh7K,KAAAg7K,IACAngK,KAAA7a,KAAA6a,KACAyiK,WAAAt9K,KAAAs9K,WACAC,aAAAv9K,KAAAu9K,aACAC,iBAAAx9K,KAAAw9K,iBACAC,YAAAz9K,KAAAy9K,YACAC,cAAA19K,KAAA09K,cACAC,kBAAA39K,KAAA29K,kBACAC,YAAA59K,KAAA49K,YACAb,MAAA/8K,KAAA+8K,MACAc,WAAA79K,KAAA69K,WACAC,eAAA99K,KAAA89K,eACAC,aAAA/9K,KAAA+9K,aACAC,OAAAh+K,KAAAg+K,OACAC,YAAAj+K,KAAAi+K,YACAC,gBAAAl+K,KAAAk+K,gBACAr2K,SAAA7H,KAAA6H,SAMAsjB,QAAAgzJ,eACAC,eAAAD,eAAAzc,OACA0c,gBAAAA,eAAA1/L,QACA0/L,eAAAA,eAAA1/L,OACAysC,QAAAizJ,eAAAjzJ,OAGA,IAAAkzJ,WAAAlzJ,QAAAs1I,aAAApM,MAAAiqB,YAEA,KAAAD,UAAAL,QAAA,KAAAA,OAAA,CAIA,GAAAO,YAAAF,UAAAZ,YACAA,YACAH,WACAkB,YAAAH,UAAAV,kBACAA,kBACAH,iBACAiB,QAAAJ,UAAAX,cACAA,cACAH,aAEAmB,gBAAAL,SACAN,cAAAH,YACAA,YACAe,UAAAN,UACA,kBAAAL,QAAAA,OACAjB,MACA6B,eAAAP,SACAJ,aAAAJ,WACAA,WACAgB,mBAAAR,SACAH,iBAAAJ,eACAA,eAEAgB,sBAAA/sB,SACAvoK,SAAAqe,UACAA,SAAAk1K,MACAl1K,SAGA,OAAAi3K,uBACAC,cAAAD,sBAAA,QAAAzqB,MAGA,IAAA2qB,aAAA,IAAAhE,MAAAtH,MACAuL,iBAAAC,uBAAAP,WAEAnwE,GAAA1wH,GAAAs/L,SAAAjqB,KAAA,WACA6rB,aACA1D,sBAAAx9L,GAAA2gM,SACAnD,sBAAAx9L,GAAA0gM,cAEAhwE,GAAA0uE,WACA8B,YACA1D,sBAAAx9L,GAAAygM,YAEAM,oBAAAA,mBAAA/gM,KAEA8gM,gBAAAA,eAAA9gM,IAEAA,GAAAs/L,SAAA,MAGA/oB,OAAAr0J,KAAAm/K,MAEA9iB,eAAAhI,MAAAr0J,KAAAu8J,OAAAlI,MAAAr0J,KAAAu8J,SAAA,SAAA,WACA,GAAA79K,QAAAZ,GAAAiB,WACAqgM,YAAA1gM,QAAAA,OAAA2gM,UAAA3gM,OAAA2gM,SAAAhrB,MAAAxkK,IACAuvL,cACAA,YAAA5qB,MAAAH,MAAAG,KACA4qB,YAAA3qB,IAAAwoB,UAEAmC,YAAA3qB,IAAAwoB,WAEA0B,WAAAA,UAAA7gM,GAAA0wH,MAKAkwE,iBAAAA,gBAAA5gM,IACAkhM,aACA5D,mBAAAt9L,GAAAygM,YACAnD,mBAAAt9L,GAAA0gM,aACAtD,UAAA,WACAE,mBAAAt9L,GAAA2gM,SACAnD,sBAAAx9L,GAAAygM,YACA/vE,GAAA0uE,WAAA+B,mBACAK,gBAAAR,uBACArjM,WAAA+yH,GAAAswE,uBAEAvD,mBAAAz9L,GAAA+8B,KAAA2zF,QAMA6lD,MAAAr0J,KAAAm/K,OACAnC,eAAAA,gBACA2B,WAAAA,UAAA7gM,GAAA0wH,KAGAwwE,YAAAC,kBACAzwE,OAIA,QAAA+wE,OAAAlrB,MAAAmrB,IAsEA,QAAAC,gBAEAjxE,GAAA0uE,YAIA7oB,MAAAr0J,KAAAm/K,QACArhM,GAAAiB,WAAAsgM,WAAAvhM,GAAAiB,WAAAsgM,cAAAhrB,MAAA,KAAAA,OAEAqrB,aAAAA,YAAA5hM,IACAkhM,aACA5D,mBAAAt9L,GAAA6hM,YACAvE,mBAAAt9L,GAAA8hM,kBACA1E,UAAA,WACAE,mBAAAt9L,GAAA+hM,cACAvE,sBAAAx9L,GAAA6hM,YACAnxE,GAAA0uE,WAAA+B,mBACAK,gBAAAQ,uBACArkM,WAAA+yH,GAAAsxE,uBAEAvE,mBAAAz9L,GAAA+8B,KAAA2zF,QAKA+wE,OAAAA,MAAAzhM,GAAA0wH,IACAwwE,YAAAC,kBACAzwE,MAhGA,GAAA1wH,IAAAu2K,MAAAI,GAGAnD,OAAAxzK,GAAAs/L,YACAt/L,GAAAs/L,SAAAF,WAAA,EACAp/L,GAAAs/L,WAGA,IAAAp9K,MAAA+6K,kBAAA1mB,MAAAr0J,KAAAm9K,WACA,IAAA9rB,QAAArxJ,MACA,MAAAw/K,KAIA,KAAAluB,MAAAxzK,GAAAm/L,WAAA,IAAAn/L,GAAAu/L,SAAA,CAIA,GAAArC,KAAAh7K,KAAAg7K,IACAngK,KAAA7a,KAAA6a,KACA8kK,WAAA3/K,KAAA2/K,WACAE,aAAA7/K,KAAA6/K,aACAD,iBAAA5/K,KAAA4/K,iBACAF,YAAA1/K,KAAA0/K,YACAH,MAAAv/K,KAAAu/K,MACAQ,WAAA//K,KAAA+/K,WACAC,eAAAhgL,KAAAggL,eACAC,WAAAjgL,KAAAigL,WACAp4K,SAAA7H,KAAA6H,SAEAm3K,YAAA,IAAAhE,MAAAtH,MACAuL,iBAAAC,uBAAAK,OAEAO,sBAAA/tB,SACAvoK,SAAAqe,UACAA,SAAA03K,MACA13K,SAGAypJ,OAAAwuB,wBACAf,cAAAe,sBAAA,QAAAzrB,MAGA,IAAA7lD,IAAA1wH,GAAAm/L,SAAA9pB,KAAA,WACAr1K,GAAAiB,YAAAjB,GAAAiB,WAAAsgM,WACAvhM,GAAAiB,WAAAsgM,SAAAhrB,MAAAxkK,KAAA,MAEAmvL,aACA1D,sBAAAx9L,GAAA+hM,cACAvE,sBAAAx9L,GAAA8hM,mBAEApxE,GAAA0uE,WACA8B,YACA1D,sBAAAx9L,GAAA6hM,YAEAK,gBAAAA,eAAAliM,MAEA0hM,KACAO,YAAAA,WAAAjiM,KAEAA,GAAAm/L,SAAA,MAGAgD,YACAA,WAAAR,cAEAA,gBAoCA,QAAAV,eAAA3xL,IAAA/P,KAAAg3K,OACA,gBAAAjnK,KACAiC,KACA,yBAAAhS,KAAA,yCACAipH,KAAAC,UAAAn5G,KAAA,IACAinK,MAAAlpI,SAEA5+B,MAAAa,MACAiC,KACA,yBAAAhS,KAAA,iEAEAg3K,MAAAlpI,SAKA,QAAAm0J,iBAAAlyL,KACA,MAAA,gBAAAA,OAAAb,MAAAa,KASA,QAAA8xL,wBAAAniM,IACA,GAAAs0K,QAAAt0K,IACA,OAAA,CAEA,IAAAmjM,YAAAnjM,GAAAoC,GACA,OAAAmyK,OAAA4uB,YAEAhB,uBACAljM,MAAAoN,QAAA82L,YACAA,WAAA,GACAA,aAGAnjM,GAAAw1K,SAAAx1K,GAAAsC,QAAA,EAIA,QAAA8gM,QAAAr5L,EAAAutK,QACA,IAAAA,MAAAr0J,KAAAm/K,MACApC,MAAA1oB,OAiGA,QAAA+rB,aAAAtiM,GAAAk1F,QAAAikF,IACAopB,oBAAAviM,GAAAk1F,QAAAikF,KAEAwhB,MAAA9E,SACAl4L,WAAA,WACA4kM,oBAAAviM,GAAAk1F,QAAAikF,KACA,GAIA,QAAAopB,qBAAAviM,GAAAk1F,QAAAikF,IACA,GAAAtoK,OAAAqkF,QAAArkF,MACA2xL,WAAAxiM,GAAA4yL,QACA,IAAA4P,aAAAtkM,MAAAoN,QAAAuF,OAMA,WALAU,MACA,6BAAA2jF,QAAA,WAAA,sDACA1pF,OAAArN,UAAAsN,SAAAlD,KAAAsI,OAAAmB,MAAA,GAAA,GACAmnK,GAKA,KAAA,GADAqZ,UAAAiQ,OACAh9L,EAAA,EAAA4f,EAAArlB,GAAA0+B,QAAAn9B,OAAAkE,EAAA4f,EAAA5f,IAEA,GADAg9L,OAAAziM,GAAA0+B,QAAAj5B,GACA+8L,WACAhQ,SAAApd,aAAAvkK,MAAA20I,SAAAi9C,UAAA,EACAA,OAAAjQ,WAAAA,WACAiQ,OAAAjQ,SAAAA,cAGA,IAAA5d,WAAApvB,SAAAi9C,QAAA5xL,OAIA,YAHA7Q,GAAA0iM,gBAAAj9L,IACAzF,GAAA0iM,cAAAj9L,GAMA+8L,cACAxiM,GAAA0iM,eAAA,GAIA,QAAAC,qBAAA9xL,MAAA6tB,SACA,MAAAA,SAAAu2I,MAAA,SAAA38I,GAAA,OAAAs8I,WAAAt8I,EAAAznB,SAGA,QAAA20I,UAAAi9C,QACA,MAAA,UAAAA,QACAA,OAAAjH,OACAiH,OAAA5xL,MAGA,QAAA+xL,oBAAAl+L,GACAA,EAAAC,OAAAi3L,WAAA,EAGA,QAAAiH,kBAAAn+L,GAEAA,EAAAC,OAAAi3L,YACAl3L,EAAAC,OAAAi3L,WAAA,EACAkH,QAAAp+L,EAAAC,OAAA,UAGA,QAAAm+L,SAAA9iM,GAAA+8B,MACA,GAAAr4B,GAAAxH,SAAA0C,YAAA,aACA8E,GAAAq+L,UAAAhmK,MAAA,GAAA,GACA/8B,GAAAF,cAAA4E,GAMA,QAAAs+L,YAAAzsB,OACA,OAAAA,MAAA+a,mBAAA/a,MAAAr0J,MAAAq0J,MAAAr0J,KAAAm9K,WAEA9oB,MADAysB,WAAAzsB,MAAA+a,kBAAA/M,QAyFA,QAAA0e,cAAA1sB,OACA,GAAA2sB,aAAA3sB,OAAAA,MAAAK,gBACA,OAAAssB,cAAAA,YAAAptB,KAAAp3I,QAAA0jJ,SACA6gB,aAAA/hB,uBAAAgiB,YAAAnsJ,WAEAw/H,MAIA,QAAA4sB,uBAAAxjB,MACA,GAAAz9J,SACAwc,QAAAihJ,KAAA9D,QAEA,KAAA,GAAA9pK,OAAA2sB,SAAA08I,UACAl5J,KAAAnQ,KAAA4tK,KAAA5tK,IAIA,IAAA+wF,WAAApkE,QAAA4iJ,gBACA,KAAA,GAAA8hB,SAAAtgG,WACA5gF,KAAA43J,SAAAspB,QAAAtgG,UAAAsgG,MAEA,OAAAlhL,MAGA,QAAAwlH,aAAA5rH,EAAAunL,UACA,GAAA,iBAAA7kM,KAAA6kM,SAAA3sB,KACA,MAAA56J,GAAA,cACA+yJ,MAAAw0B,SAAAzsB,iBAAAwE,YAKA,QAAAkoB,qBAAA/sB,OACA,KAAAA,MAAAA,MAAA31K,QACA,GAAA21K,MAAAr0J,KAAAm9K,WACA,OAAA,EAKA,QAAAkE,aAAAr1E,MAAAs1E,UACA,MAAAA,UAAAzxL,MAAAm8G,MAAAn8G,KAAAyxL,SAAA9sB,MAAAxoD,MAAAwoD,IAqQA,QAAA+sB,gBAAA//K,GAEAA,EAAAizJ,IAAA+sB,SACAhgL,EAAAizJ,IAAA+sB,UAGAhgL,EAAAizJ,IAAA2oB,UACA57K,EAAAizJ,IAAA2oB,WAIA,QAAAqE,gBAAAjgL,GACAA,EAAAxB,KAAA0hL,OAAAlgL,EAAAizJ,IAAAzxK,wBAGA,QAAA2+L,kBAAAngL,GACA,GAAAogL,QAAApgL,EAAAxB,KAAA2W,IACA+qK,OAAAlgL,EAAAxB,KAAA0hL,OACA39F,GAAA69F,OAAA3+L,KAAAy+L,OAAAz+L,KACA+gG,GAAA49F,OAAAz+L,IAAAu+L,OAAAv+L,GACA,IAAA4gG,IAAAC,GAAA,CACAxiF,EAAAxB,KAAA6hL,OAAA,CACA,IAAAxsL,GAAAmM,EAAAizJ,IAAAl2K,KACA8W,GAAAulJ,UAAAvlJ,EAAAysL,gBAAA,aAAA/9F,GAAA,MAAAC,GAAA,MACA3uF,EAAA0sL,mBAAA,MAmFA,QAAAC,WACAl+G,KACAm+G,YAEA,GAAAC,OAAAD,WAAAE,WAAAF,YAAAG,YACA,IAAAF,MAAA5lM,KAAAwnF,MAAA,CAMA,IAHA,GAEA1vE,OAAAoc,MAFA3a,UACAhB,UAAAqtL,MAAArtL,UAAA,EAEAT,MAAA8tL,MAAAz+K,KAAAqgE,OAAA,CACAtzD,MAAApc,MAAAoc,MAEAA,MAAA3b,WACAgB,OAAAlW,KAAA2mH,KAAAC,UAAAziC,KAAAh0E,MAAA+E,UAAA2b,QAGA,IAAAkkK,KAAAD,aAAArgL,MAAA,GAAA3X,OACAoZ,QAAAlW,KAAA,MAAA+0L,IAAA,KACA7/K,UAAA2b,MAAApc,MAAA,GAAA/U,OAKA,MAHAwV,WAAAivE,KAAAzkF,QACAwW,OAAAlW,KAAA2mH,KAAAC,UAAAziC,KAAAh0E,MAAA+E,aAEAgB,OAAA9F,KAAA,MAKA,QAAAsyL,eAAAvkM,GAAA0+B,SACA,GAAAntB,MAAAmtB,QAAAntB,MAAAmmL,SACA/F,YAAA+G,iBAAA14L,GAAA,QACA,IAAA2xL,YAAA,CACAuS,UAAAvS,YAAAjzJ,QAAAylK,aAEA5yL,KACA,UAAAogL,YAAA,4KAOAA,cACA3xL,GAAA2xL,YAAAnpE,KAAAC,UAAAkpE,aAEA,IAAA6S,cAAAjM,eAAAv4L,GAAA,SAAA,EACAwkM,gBACAxkM,GAAAwkM,aAAAA,cAIA,QAAAC,SAAAzkM,IACA,GAAAkiB,MAAA,EAOA,OANAliB,IAAA2xL,cACAzvK,MAAA,eAAAliB,GAAA,YAAA,KAEAA,GAAAwkM,eACAtiL,MAAA,SAAAliB,GAAA,aAAA,KAEAkiB,KAWA,QAAAwiL,iBAAA1kM,GAAA0+B,SACA,GAAAntB,MAAAmtB,QAAAntB,MAAAmmL,SACA0E,YAAA1D,iBAAA14L,GAAA,QACA,IAAAo8L,YAAA,CAGA8H,UAAA9H,YAAA19J,QAAAylK,aAEA5yL,KACA,UAAA6qL,YAAA,4KAOAp8L,GAAAo8L,YAAA5zE,KAAAC,UAAA6zE,eAAAF,cAGA,GAAAuI,cAAApM,eAAAv4L,GAAA,SAAA,EACA2kM,gBACA3kM,GAAA2kM,aAAAA,cAIA,QAAAC,WAAA5kM,IACA,GAAAkiB,MAAA,EAOA,OANAliB,IAAAo8L,cACAl6K,MAAA,eAAAliB,GAAA,YAAA,KAEAA,GAAA2kM,eACAziL,MAAA,UAAAliB,GAAA,aAAA,MAEAkiB,KA2FA,QAAA2iL,YAAAh0L,MAAAi0L,sBACA,GAAAC,IAAAD,qBAAAE,wBAAAC,WACA,OAAAp0L,OAAA/R,QAAAimM,GAAA,SAAAzuL,OAAA,MAAA4uL,aAAA5uL,SAGA,QAAA6uL,WAAAC,KAAA1mK,SA8HA,QAAA2mK,SAAAnsL,GACAwZ,OAAAxZ,EACAksL,KAAAA,KAAApsD,UAAA9/H,GAuEA,QAAAosL,aAAA3S,QAAA7yI,MAAAoD,KACA,GAAArqB,KAAA0sK,iBASA,IARA,MAAAzlJ,QAAAA,MAAAptB,OACA,MAAAwwB,MAAAA,IAAAxwB,OAEAigK,UACA4S,kBAAA5S,QAAAn+K,eAIAm+K,QACA,IAAA95J,IAAA1mB,MAAA5Q,OAAA,EAAAs3B,KAAA,GACA1mB,MAAA0mB,KAAA2sK,gBAAAD,kBADA1sK,WAOAA,KAAA,CAGA,IAAAA,KAAA,EAAA,CAEA,IAAA,GAAApzB,GAAA0M,MAAA5Q,OAAA,EAAAkE,GAAAozB,IAAApzB,KAEAA,EAAAozB,MAAA85J,UACAj0J,QAAAntB,MAEAmtB,QAAAntB,KACA,QAAAY,MAAA1M,GAAA,IAAA,8BAGAi5B,QAAAwkB,KACAxkB,QAAAwkB,IAAA/wC,MAAA1M,GAAAixK,IAAA52H,MAAAoD,IAKA/wC,OAAA5Q,OAAAs3B,IACA4sK,QAAA5sK,KAAA1mB,MAAA0mB,IAAA,GAAA69I,QACA,OAAA6uB,kBACA7mK,QAAAohB,OACAphB,QAAAohB,MAAA6yI,YAAA,EAAA7yI,MAAAoD,KAEA,MAAAqiJ,oBACA7mK,QAAAohB,OACAphB,QAAAohB,MAAA6yI,YAAA,EAAA7yI,MAAAoD,KAEAxkB,QAAAwkB,KACAxkB,QAAAwkB,IAAAyvI,QAAA7yI,MAAAoD,MAjPA,IANA,GAKAlgD,MAAAyiM,QALAtzL,SACAuzL,WAAAhnK,QAAAgnK,WACAC,cAAAjnK,QAAAknK,YAAAC,GACAC,oBAAApnK,QAAAqnK,kBAAAF,GACAnzK,MAAA,EAEA0yK,MAAA,CAGA,GAFApiM,KAAAoiM,KAEAK,SAAAO,mBAAAP,SAgFA,CACA,GAAAQ,cAAA,EACAC,WAAAT,QAAAjxL,cACA2xL,aAAAC,QAAAF,cAAAE,QAAAF,YAAA,GAAA3nM,QAAA,kBAAA2nM,WAAA,UAAA,MACAG,OAAAjB,KAAAtmM,QAAAqnM,aAAA,SAAAG,IAAAtgH,KAAAw9F,QAaA,MAZAyiB,cAAAziB,OAAAjiL,OACAykM,mBAAAE,aAAA,aAAAA,aACAlgH,KAAAA,KACAlnF,QAAA,qBAAA,MACAA,QAAA,4BAAA,OAEAynM,yBAAAL,WAAAlgH,QACAA,KAAAA,KAAAh0E,MAAA,IAEA0sB,QAAA8kE,OACA9kE,QAAA8kE,MAAAxd,MAEA,IAEAtzD,QAAA0yK,KAAA7jM,OAAA8kM,OAAA9kM,OACA6jM,KAAAiB,OACAf,YAAAY,WAAAxzK,MAAAuzK,aAAAvzK,WArGA,CACA,GAAA8zK,SAAApB,KAAA/qL,QAAA,IACA,IAAA,IAAAmsL,QAAA,CAEA,GAAAC,QAAAjoM,KAAA4mM,MAAA,CACA,GAAAsB,YAAAtB,KAAA/qL,QAAA,SAEA,IAAAqsL,YAAA,EAAA,CACAhoK,QAAAioK,mBACAjoK,QAAA+nK,QAAArB,KAAApsD,UAAA,EAAA0tD,aAEArB,QAAAqB,WAAA,EACA,WAKA,GAAAE,mBAAApoM,KAAA4mM,MAAA,CACA,GAAAyB,gBAAAzB,KAAA/qL,QAAA,KAEA,IAAAwsL,gBAAA,EAAA,CACAxB,QAAAwB,eAAA,EACA,WAKA,GAAAC,cAAA1B,KAAA9uL,MAAAywL,QACA,IAAAD,aAAA,CACAzB,QAAAyB,aAAA,GAAAvlM,OACA,UAIA,GAAAylM,aAAA5B,KAAA9uL,MAAAktK,OACA,IAAAwjB,YAAA,CACA,GAAAC,UAAAv0K,KACA2yK,SAAA2B,YAAA,GAAAzlM,QACA+jM,YAAA0B,YAAA,GAAAC,SAAAv0K,MACA,UAIA,GAAAw0K,eA8EA,WACA,GAAApnJ,OAAAslJ,KAAA9uL,MAAA6wL,aACA,IAAArnJ,MAAA,CACA,GAAAxpC,QACAq8K,QAAA7yI,MAAA,GACA++H,SACA/+H,MAAAptB,MAEA2yK,SAAAvlJ,MAAA,GAAAv+C,OAEA,KADA,GAAA2hD,KAAAkkJ,OACAlkJ,IAAAkiJ,KAAA9uL,MAAA+wL,kBAAAD,KAAAhC,KAAA9uL,MAAAojC,aACA2rJ,QAAA+B,KAAA,GAAA7lM,QACA+U,MAAAuoK,MAAAh9K,KAAAulM,KAEA,IAAAlkJ,IAIA,MAHA5sC,OAAAgxL,WAAApkJ,IAAA,GACAmiJ,QAAAniJ,IAAA,GAAA3hD,QACA+U,MAAA4sC,IAAAxwB,MACApc,SA/FA,IAAA4wL,cAAA,EAoGA,SAAA5wL,OACA,GAAAq8K,SAAAr8K,MAAAq8K,QACA2U,WAAAhxL,MAAAgxL,UAEA5B,cACA,MAAAD,SAAA8B,iBAAA5U,UACA2S,YAAAG,SAEAK,oBAAAnT,UAAA8S,UAAA9S,SACA2S,YAAA3S,SAQA,KAAA,GAJA6U,OAAA7B,cAAAhT,YAAA2U,WAEAjiL,EAAA/O,MAAAuoK,MAAAt9K,OACAs9K,MAAA,GAAA3gL,OAAAmnB,GACA5f,EAAA,EAAAA,EAAA4f,EAAA5f,IAAA,CACA,GAAAtD,MAAAmU,MAAAuoK,MAAAp5K,EAEAgiM,6BAAA,IAAAtlM,KAAA,GAAAkY,QAAA,QACA,KAAAlY,KAAA,UAAAA,MAAA,GACA,KAAAA,KAAA,UAAAA,MAAA,GACA,KAAAA,KAAA,UAAAA,MAAA,GAEA,IAAA0O,OAAA1O,KAAA,IAAAA,KAAA,IAAAA,KAAA,IAAA,EACA08K,OAAAp5K,IACAlG,KAAA4C,KAAA,GACA0O,MAAAg0L,WACAh0L,MACA6tB,QAAAomK;sDAKA0C,QACAr1L,MAAAtQ,MAAA60K,IAAAic,QAAA6S,cAAA7S,QAAAn+K,cAAAqqK,MAAAA,QACA4mB,QAAA9S,SAGAj0J,QAAAohB,OACAphB,QAAAohB,MAAA6yI,QAAA9T,MAAA2oB,MAAAlxL,MAAAwpC,MAAAxpC,MAAA4sC,MA5IAgkJ,eACAX,yBAAAd,QAAAL,OACAC,QAAA,EAEA,WAIA,GAAAr/G,UAAA,GAAA0hH,SAAA,GAAAlmL,SAAA,EACA,IAAAglL,SAAA,EAAA,CAEA,IADAkB,KAAAtC,KAAApzL,MAAAw0L,WAEAhjB,OAAAhlL,KAAAkpM,OACAP,aAAA3oM,KAAAkpM,OACAjB,QAAAjoM,KAAAkpM,OACAd,mBAAApoM,KAAAkpM,QAGAlmL,KAAAkmL,KAAArtL,QAAA,IAAA,IACA,IACAmsL,SAAAhlL,KACAkmL,KAAAtC,KAAApzL,MAAAw0L,QAEAxgH,MAAAo/G,KAAApsD,UAAA,EAAAwtD,SACAnB,QAAAmB,SAGAA,QAAA,IACAxgH,KAAAo/G,KACAA,KAAA,IAGA1mK,QAAA8kE,OAAAxd,MACAtnD,QAAA8kE,MAAAxd,MA0BA,GAAAo/G,OAAApiM,KAAA,CACA07B,QAAA8kE,OAAA9kE,QAAA8kE,MAAA4hG,OACAjzL,MAAA5Q,QAAAm9B,QAAAntB,MACAmtB,QAAAntB,KAAA,0CAAA6zL,KAAA,IAEA,QAKAE,cA2JA,QAAAqC,kBACAjxB,IACAmI,MACAj+K,QAEA,OACAm8B,KAAA,EACA25I,IAAAA,IACAoiB,UAAAja,MACAga,SAAA+O,aAAA/oB,OACAj+K,OAAAA,OACAm2C,aAOA,QAAA2xE,OACAu6D,SACAvkJ,SAsBA,QAAAmpK,UAAAr2L,KACA4rE,SACAA,QAAA,EACA0qH,OAAAt2L,MAIA,QAAAu2L,QAAAl5E,SAEAA,QAAAm5E,MACAC,QAAA,GAEAC,iBAAAr5E,QAAA6nD,OACAyxB,OAAA,GAjCAL,OAAAppK,QAAAntB,MAAAmmL,SAEAwQ,iBAAAxpK,QAAA0pK,UAAAvC,GACAwC,oBAAA3pK,QAAAurJ,aAAA4b,GACAyC,wBAAA5pK,QAAA6vJ,iBAAAsX,GAEA0C,WAAA5Q,oBAAAj5J,QAAAk5J,QAAA,iBACA4Q,cAAA7Q,oBAAAj5J,QAAAk5J,QAAA,oBACA6Q,eAAA9Q,oBAAAj5J,QAAAk5J,QAAA,qBAEAuM,WAAAzlK,QAAAylK,UAEA,IAEA7qG,MACAovG,cAHAv2L,SACAw2L,oBAAA,IAAAjqK,QAAAiqK,mBAGAV,QAAA,EACAE,OAAA,EACA/qH,QAAA,CAyMA,OAtLA+nH,WAAAliB,UACA1xK,KAAAu2L,OACApC,WAAAhnK,QAAAgnK,WACAE,WAAAlnK,QAAAknK,WACAG,iBAAArnK,QAAAqnK,iBACAjB,qBAAApmK,QAAAomK,qBACA6B,kBAAAjoK,QAAAkqK,SACA9oJ,MAAA,SAAA42H,IAAAmI,MAAA2oB,OAkDA,QAAAqB,sBAAA7oM,IAEA,SAAAA,GAAA02K,KAAA,aAAA12K,GAAA02K,KACAmxB,SACA,eAAA7nM,GAAA,IAAA,sEAIAA,GAAA64L,SAAA9sL,eAAA,UACA87L,SACA,6FAzDA,GAAA/wB,IAAA4xB,eAAAA,cAAA5xB,IAAAwxB,wBAAA5xB,IAIAikB,OAAA,QAAA7jB,KACA+H,MAAAiqB,cAAAjqB,OAGA,IAAAhwD,SAAA84E,iBAAAjxB,IAAAmI,MAAA6pB,cACA5xB,MACAjoD,QAAAioD,GAAAA,IAGAiyB,eAAAl6E,WAAAgpD,sBACAhpD,QAAAm6E,WAAA,EACAlB,OACA,0IAEApxB,IAAA,kCAKA,KAAA,GAAAjxK,GAAA,EAAAA,EAAA+iM,cAAAjnM,OAAAkE,IACAopH,QAAA25E,cAAA/iM,GAAAopH,QAAAnwF,UAAAmwF,OA4DA,IAzDAo5E,SACAgB,WAAAp6E,SACAA,QAAAm5E,MACAC,QAAA,IAGAC,iBAAAr5E,QAAA6nD,OACAyxB,OAAA,GAEAF,OACAiB,gBAAAr6E,SACAA,QAAAs6E,YAEAC,WAAAv6E,SACAw6E,UAAAx6E,SACAy6E,YAAAz6E,SAEA06E,eAAA16E,QAAAnwF,UAqBA46D,KAGAnnF,MAAA5Q,SAEA+3F,KAAAkwG,KAAA36E,QAAA46E,QAAA56E,QAAA66E,OACAb,qBAAAh6E,SACA86E,eAAArwG,MACAs9F,IAAA/nE,QAAA46E,OACAG,MAAA/6E,WAGAg5E,SACA,kJAZAvuG,KAAAu1B,QACAg6E,qBAAAvvG,OAiBAovG,gBAAA75E,QAAAm6E,UACA,GAAAn6E,QAAA46E,QAAA56E,QAAA66E,KACAG,oBAAAh7E,QAAA65E,mBACA,IAAA75E,QAAAi7E,UAAA,CACApB,cAAAqB,OAAA,CACA,IAAAxqM,MAAAsvH,QAAAm7E,YAAA,aAAAtB,cAAAvkB,cAAAukB,cAAAvkB,iBAAA5kL,MAAAsvH,YAEA65E,eAAA3xJ,SAAAl1C,KAAAgtH,SACAA,QAAAjuH,OAAA8nM,aAGAlB,OAIAO,OAAAl5E,UAHA65E,cAAA75E,QACA18G,MAAAtQ,KAAAgtH,SAKA,KAAA,GAAAo7E,KAAA,EAAAA,IAAAxB,eAAAlnM,OAAA0oM,MACAxB,eAAAwB,KAAAp7E,QAAAnwF,UAIAwkB,IAAA,WAEA,GAAA2rE,SAAA18G,MAAAA,MAAA5Q,OAAA,GACA2oM,SAAAr7E,QAAA93E,SAAA83E,QAAA93E,SAAAx1C,OAAA,EACA2oM,WAAA,IAAAA,SAAAntK,MAAA,MAAAmtK,SAAAlkH,OAAAmiH,OACAt5E,QAAA93E,SAAAgf,MAGA5jD,MAAA5Q,QAAA,EACAmnM,cAAAv2L,MAAAA,MAAA5Q,OAAA,GACAwmM,OAAAl5E,UAGArrB,MAAA,SAAAxd,MACA,IAAA0iH,cAYA,YAVA1iH,OAAAi9F,SACA4kB,SACA,uEAEA7hH,KAAAA,KAAArnF,SACAkpM,SACA,SAAA7hH,KAAA,2CAQA,KAAA20G,MACA,aAAA+N,cAAAhyB,KACAgyB,cAAA7P,SAAAnxD,cAAA1hD,KAFA,CAMA,GAAAjvC,UAAA2xJ,cAAA3xJ,QAKA,IAJAivC,KAAAmiH,OAAAniH,KAAArnF,OACAwrM,UAAAzB,eAAA1iH,KAAAokH,iBAAApkH,MAEA2iH,oBAAA5xJ,SAAAx1C,OAAA,IAAA,GACA,CACA,GAAAy1L,aACAiR,QAAA,MAAAjiH,OAAAgxG,WAAAkN,UAAAl+G,KAAAm+G,aACAptJ,SAAAl1C,MACAk7B,KAAA,EACAi6J,WAAAA,WACAhxG,KAAAA,OAEA,MAAAA,MAAAjvC,SAAAx1C,QAAA,MAAAw1C,SAAAA,SAAAx1C,OAAA,GAAAykF,MACAjvC,SAAAl1C,MACAk7B,KAAA,EACAipD,KAAAA,UAKAygH,QAAA,SAAAzgH,MACA0iH,cAAA3xJ,SAAAl1C,MACAk7B,KAAA,EACAipD,KAAAA,KACAgxF,WAAA,OAIA19E,KAGA,QAAA2vG,YAAAjpM,IACA,MAAA04L,iBAAA14L,GAAA,WACAA,GAAAgoM,KAAA,GAIA,QAAAkB,iBAAAlpM,IACA,GAAAqlB,GAAArlB,GAAA84L,UAAAv3L,MACA,IAAA8jB,EAEA,IAAA,GADAw5J,OAAA7+K,GAAA6+K,MAAA,GAAA3gL,OAAAmnB,GACA5f,EAAA,EAAAA,EAAA4f,EAAA5f,IACAo5K,MAAAp5K,IACAlG,KAAAS,GAAA84L,UAAArzL,GAAAlG,KACAsR,MAAA23G,KAAAC,UAAAzoH,GAAA84L,UAAArzL,GAAAoL,YAGA7Q,IAAAgoM,MAEAhoM,GAAA+pM,OAAA,GAIA,QAAAR,gBAAA16E,QAAAnwF,SACA2rK,WAAAx7E,SAIAA,QAAAk7E,OAAAl7E,QAAA98G,MAAA88G,QAAAiqE,UAAAv3L,OAEA+oM,WAAAz7E,SACA07E,YAAA17E,SACA27E,iBAAA37E,QACA,KAAA,GAAAppH,GAAA,EAAAA,EAAA8iM,WAAAhnM,OAAAkE,IACAopH,QAAA05E,WAAA9iM,GAAAopH,QAAAnwF,UAAAmwF,OAEA47E,cAAA57E,SAGA,QAAAw7E,YAAArqM,IACA,GAAA42L,KAAA2B,eAAAv4L,GAAA,MACA42L,OACA,aAAA52L,GAAA02K,KACAoxB,OAAA,uEAEA9nM,GAAA+R,IAAA6kL,KAIA,QAAA0T,YAAAtqM,IACA,GAAAyzL,KAAA8E,eAAAv4L,GAAA,MACAyzL,OACAzzL,GAAAyzL,IAAAA,IACAzzL,GAAA2zL,SAAA+W,WAAA1qM,KAIA,QAAAopM,YAAAppM,IACA,GAAA42L,IACA,IAAAA,IAAA8B,iBAAA14L,GAAA,SAAA,CACA,GAAA2qM,SAAA/T,IAAAtgL,MAAAs0L,WACA,KAAAD,QAIA,WAHA7C,QACA,6BAAAlR,IAIA52L,IAAA6qM,IAAAF,QAAA,GAAAhsM,MACA,IAAAu1B,OAAAy2K,QAAA,GAAAhsM,OACAmsM,cAAA52K,MAAA5d,MAAAy0L,cACAD,gBACA9qM,GAAAk0B,MAAA42K,cAAA,GAAAnsM,OACAqB,GAAAgrM,UAAAF,cAAA,GAAAnsM,OACAmsM,cAAA,KACA9qM,GAAAirM,UAAAH,cAAA,GAAAnsM,SAGAqB,GAAAk0B,MAAAA,OAKA,QAAAm1K,WAAArpM,IACA,GAAA42L,KAAA8B,iBAAA14L,GAAA,OACA,IAAA42L,IACA52L,GAAAwpM,GAAA5S,IACA+S,eAAA3pM,IACA42L,IAAAA,IACAgT,MAAA5pM,SAEA,CACA,MAAA04L,iBAAA14L,GAAA,YACAA,GAAA0pM,MAAA,EAEA,IAAAD,QAAA/Q,iBAAA14L,GAAA,YACAypM,UACAzpM,GAAAypM,OAAAA,SAKA,QAAAI,qBAAA7pM,GAAAY,QACA,GAAAm2L,MAAAmU,gBAAAtqM,OAAAm2C,SACAggJ,OAAAA,KAAAyS,GACAG,eAAA5S,MACAH,IAAA52L,GAAAypM,OACAG,MAAA5pM,KAGA8nM,OACA,MAAA9nM,GAAAypM,OAAA,YAAAzpM,GAAAypM,OAAA,IAAA,QAAA,qBACAzpM,GAAA,IAAA,iCAKA,QAAAkrM,iBAAAn0J,UAEA,IADA,GAAAtxC,GAAAsxC,SAAAx1C,OACAkE,KAAA,CACA,GAAA,IAAAsxC,SAAAtxC,GAAAs3B,KACA,MAAAga,UAAAtxC,EAEA,OAAAsxC,SAAAtxC,GAAAugF,MACA8hH,OACA,SAAA/wJ,SAAAtxC,GAAAugF,KAAArnF,OAAA,mDAIAo4C,SAAAgf,OAKA,QAAA4zI,gBAAA3pM,GAAAmrM,WACAnrM,GAAAorM,eACAprM,GAAAorM,iBAEAprM,GAAAorM,aAAAvpM,KAAAspM,WAGA,QAAA7B,aAAAtpM,IAEA,MADA04L,iBAAA14L,GAAA,YAEAA,GAAAq1K,MAAA,GAIA,QAAAk1B,aAAAvqM,IACA,GAAA,SAAAA,GAAA02K,IACA12K,GAAAqrM,SAAA9S,eAAAv4L,GAAA,QACAA,GAAA+R,KACA+1L,OACA,mKAKA,CACA,GAAAgC,UACA,cAAA9pM,GAAA02K,KACAozB,UAAApR,iBAAA14L,GAAA,SAEA8pM,WACAhC,OACA,2NAIA,GAGA9nM,GAAA8pM,UAAAA,WAAApR,iBAAA14L,GAAA,gBACA8pM,UAAApR,iBAAA14L,GAAA,iBACAA,GAAA8pM,UAAAA,UAEA,IAAAE,YAAAzR,eAAAv4L,GAAA,OACAgqM,cACAhqM,GAAAgqM,WAAA,OAAAA,WAAA,YAAAA,WAGAhqM,GAAA8pM,WACAhS,QAAA93L,GAAA,OAAAgqM,cAMA,QAAAQ,kBAAAxqM,IACA,GAAAk1F,UACAA,QAAAqjG,eAAAv4L,GAAA,SACAA,GAAAghL,UAAA9rF,SAEA,MAAAwjG,iBAAA14L,GAAA,qBACAA,GAAA2tL,gBAAA,GAIA,QAAA8c,cAAAzqM,IACA,GACAyF,GAAA4f,EAAA9lB,KAAAg2L,QAAA1kL,MAAAukL,UAAAkW,OADA1lJ,KAAA5lD,GAAA84L,SAEA,KAAArzL,EAAA,EAAA4f,EAAAugC,KAAArkD,OAAAkE,EAAA4f,EAAA5f,IAGA,GAFAlG,KAAAg2L,QAAA3vI,KAAAngD,GAAAlG,KACAsR,MAAA+0C,KAAAngD,GAAAoL,MACA06L,MAAA/sM,KAAAe,MAQA,GANAS,GAAAwrM,aAAA,EAEApW,UAAAqW,eAAAlsM,MACA61L,YACA71L,KAAAA,KAAAT,QAAA4sM,WAAA,KAEAC,OAAAntM,KAAAe,MACAA,KAAAA,KAAAT,QAAA6sM,OAAA,IACA96L,MAAA8lL,aAAA9lL,OACAy6L,QAAA,EACAlW,YACAA,UAAAhrL,OACAkhM,QAAA,EAEA,eADA/rM,KAAAu6K,SAAAv6K,SACAA,KAAA,cAEA61L,UAAAwW,QACArsM,KAAAu6K,SAAAv6K,OAEA61L,UAAA1U,MACAsX,WACAh4L,GACA,UAAA85K,SAAAv6K,MACA25L,kBAAAroL,MAAA,YAIAy6L,SACAtrM,GAAAghL,WAAAqnB,oBAAAroM,GAAA02K,IAAA12K,GAAA64L,SAAA97J,KAAAx9B,MAEAs4L,QAAA73L,GAAAT,KAAAsR,OAEAinL,QAAA93L,GAAAT,KAAAsR,WAEA,IAAAg7L,KAAArtM,KAAAe,MACAA,KAAAA,KAAAT,QAAA+sM,KAAA,IACA7T,WAAAh4L,GAAAT,KAAAsR,MAAAukL,WAAA,EAAA0S,YACA,CACAvoM,KAAAA,KAAAT,QAAAysM,MAAA,GAEA,IAAAO,UAAAvsM,KAAA+W,MAAAy1L,OACAj6L,IAAAg6L,UAAAA,SAAA,EACAh6L,OACAvS,KAAAA,KAAAyS,MAAA,IAAAF,IAAAvQ,OAAA,KAEAw2L,aAAA/3L,GAAAT,KAAAg2L,QAAA1kL,MAAAiB,IAAAsjL,WACA,UAAA71L,MACAysM,mBAAAhsM,GAAA6Q,WAGA,CAGA,GAAAmmL,YAAAkN,UAAArzL,MAAAszL,WACAnN,aACA8Q,OACAvoM,KAAA,KAAAsR,MAAA,sKAOAinL,QAAA93L,GAAAT,KAAAipH,KAAAC,UAAA53G,SAKA,QAAA65L,YAAA1qM,IAEA,IADA,GAAAY,QAAAZ,GACAY,QAAA,CACA,OAAAkO,KAAAlO,OAAAiqM,IACA,OAAA,CAEAjqM,QAAAA,OAAAA,OAEA,OAAA,EAGA,QAAA6qM,gBAAAlsM,MACA,GAAA+W,OAAA/W,KAAA+W,MAAAo1L,WACA,IAAAp1L,MAAA,CACA,GAAAgX,OAEA,OADAhX,OAAArY,QAAA,SAAAgQ,GAAAqf,IAAArf,EAAA+D,MAAA,KAAA,IACAsb,KAIA,QAAAs6K,cAAA/oB,OAEA,IAAA,GADA1yK,QACA1G,EAAA,EAAA4f,EAAAw5J,MAAAt9K,OAAAkE,EAAA4f,EAAA5f,KAGA0G,IAAA0yK,MAAAp5K,GAAAlG,OAAAo7L,MAAA9E,QAEAiS,OAAA,wBAAAjpB,MAAAp5K,GAAAlG,MAEA4M,IAAA0yK,MAAAp5K,GAAAlG,MAAAs/K,MAAAp5K,GAAAoL,KAEA,OAAA1E,KAIA,QAAAg+L,WAAAnqM,IACA,MAAA,WAAAA,GAAA02K,KAAA,UAAA12K,GAAA02K,IAGA,QAAAqyB,gBAAA/oM,IACA,MACA,UAAAA,GAAA02K,KACA,WAAA12K,GAAA02K,OACA12K,GAAA64L,SAAA97J,MACA,oBAAA/8B,GAAA64L,SAAA97J,MASA,QAAA+rK,eAAAjqB,OAEA,IAAA,GADAxyK,QACA5G,EAAA,EAAAA,EAAAo5K,MAAAt9K,OAAAkE,IAAA,CACA,GAAA2hM,MAAAvoB,MAAAp5K,EACAwmM,SAAAztM,KAAA4oM,KAAA7nM,QACA6nM,KAAA7nM,KAAA6nM,KAAA7nM,KAAAT,QAAAotM,WAAA,IACA7/L,IAAAxK,KAAAulM,OAGA,MAAA/6L,KAGA,QAAA2/L,oBAAAhsM,GAAA6Q,OAEA,IADA,GAAAs7L,KAAAnsM,GACAmsM,KACAA,IAAAtB,KAAAsB,IAAAj4K,QAAArjB,OACAi3L,OACA,IAAA9nM,GAAA,IAAA,aAAA6Q,MAAA,uRAOAs7L,IAAAA,IAAAvrM,OAgBA,QAAAwrM,kBAAApsM,GAAA0+B,SACA,GAAA,UAAA1+B,GAAA02K,IAAA,CACA,GAAAvqK,KAAAnM,GAAA64L,QACA,IAAA1sL,IAAA,aAAAA,IAAA,gBAAAA,IAAA,UAAA,CACA,GAAAkgM,aAAA9T,eAAAv4L,GAAA,QACAssM,YAAA5T,iBAAA14L,GAAA,QAAA,GACAusM,iBAAAD,YAAA,MAAAA,YAAA,IAAA,GAEAE,QAAAC,gBAAAzsM,GAEAopM,YAAAoD,SACAE,WAAAF,QAAA,OAAA,YACAjD,eAAAiD,QAAA9tK,SACA8tK,QAAArD,WAAA,EACAqD,QAAAhD,GAAA,IAAA6C,YAAA,iBAAAE,iBACA5C,eAAA6C,SACA5V,IAAA4V,QAAAhD,GACAI,MAAA4C,SAGA,IAAAG,SAAAF,gBAAAzsM,GACA04L,kBAAAiU,QAAA,SAAA,GACAD,WAAAC,QAAA,OAAA,SACApD,eAAAoD,QAAAjuK,SACAirK,eAAA6C,SACA5V,IAAA,IAAAyV,YAAA,cAAAE,iBACA3C,MAAA+C,SAGA,IAAAC,SAAAH,gBAAAzsM,GAQA,OAPA04L,kBAAAkU,QAAA,SAAA,GACAF,WAAAE,QAAA,QAAAP,aACA9C,eAAAqD,QAAAluK,SACAirK,eAAA6C,SACA5V,IAAA0V,YACA1C,MAAAgD,UAEAJ,UAKA,QAAAC,iBAAAzsM,IACA,MAAA2nM,kBAAA3nM,GAAA02K,IAAA12K,GAAA84L,UAAA9mL,QAAAhS,GAAAY,QAGA,QAAA8rM,YAAA1sM,GAAAT,KAAAsR,OACA7Q,GAAA64L,SAAAt5L,MAAAsR,MACA7Q,GAAA84L,UAAAj3L,MAAAtC,KAAAA,KAAAsR,MAAAA,QAeA,QAAAm1E,MAAAhmF,GAAAq+F,KACAA,IAAAxtF,OACAgnL,QAAA73L,GAAA,cAAA,MAAAq+F,IAAA,MAAA,KAMA,QAAA+mG,MAAAplM,GAAAq+F,KACAA,IAAAxtF,OACAgnL,QAAA73L,GAAA,YAAA,MAAAq+F,IAAA,MAAA,KA2CA,QAAAzP,UAAA0K,KAAA56D,SACA46D,OACAuzG,YAAAC,oBAAApuK,QAAAquK,YAAA,IACAC,sBAAAtuK,QAAAk7I,eAAAisB,GAEAoH,aAAA3zG,MAEA4zG,gBAAA5zG,MAAA,IAGA,QAAA6zG,iBAAAxqL,MACA,MAAAuxJ,SACA,2DACAvxJ,KAAA,IAAAA,KAAA,KAIA,QAAAsqL,cAAA32G,MAEA,GADAA,KAAA82G,OAAAr2B,SAAAzgF,MACA,IAAAA,KAAAv5D,KAAA,CAIA,IACAiwK,sBAAA12G,KAAAogF,MACA,SAAApgF,KAAAogF,KACA,MAAApgF,KAAAuiG,SAAA,mBAEA,MAEA,KAAA,GAAApzL,GAAA,EAAA4f,EAAAixE,KAAAv/C,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IAAA,CACA,GAAAyoH,OAAA53B,KAAAv/C,SAAAtxC,EACAwnM,cAAA/+E,OACAA,MAAAk/E,SACA92G,KAAA82G,QAAA,GAGA,GAAA92G,KAAA80G,aACA,IAAA,GAAAnB,KAAA,EAAAoD,IAAA/2G,KAAA80G,aAAA7pM,OAAA0oM,IAAAoD,IAAApD,MAAA,CACA,GAAAL,OAAAtzG,KAAA80G,aAAAnB,KAAAL,KACAqD,cAAArD,OACAA,MAAAwD,SACA92G,KAAA82G,QAAA,KAOA,QAAAF,iBAAA52G,KAAA+zF,SACA,GAAA,IAAA/zF,KAAAv5D,KAAA,CAOA,IANAu5D,KAAA82G,QAAA92G,KAAA++E,QACA/+E,KAAAg3G,YAAAjjB,SAKA/zF,KAAA82G,QAAA92G,KAAAv/C,SAAAx1C,SACA,IAAA+0F,KAAAv/C,SAAAx1C,QACA,IAAA+0F,KAAAv/C,SAAA,GAAAha,MAGA,YADAu5D,KAAAi3G,YAAA,EAKA,IAFAj3G,KAAAi3G,YAAA,EAEAj3G,KAAAv/C,SACA,IAAA,GAAAtxC,GAAA,EAAA4f,EAAAixE,KAAAv/C,SAAAx1C,OAAAkE,EAAA4f,EAAA5f,IACAynM,gBAAA52G,KAAAv/C,SAAAtxC,GAAA4kL,WAAA/zF,KAAAu0G,IAGA,IAAAv0G,KAAA80G,aACA,IAAA,GAAAnB,KAAA,EAAAoD,IAAA/2G,KAAA80G,aAAA7pM,OAAA0oM,IAAAoD,IAAApD,MACAiD,gBAAA52G,KAAA80G,aAAAnB,KAAAL,MAAAvf,UAMA,QAAAtT,UAAAzgF,MACA,MAAA,KAAAA,KAAAv5D,OAGA,IAAAu5D,KAAAv5D,SAGAu5D,KAAA0xG,MACA1xG,KAAAk1G,aACAl1G,KAAAkzG,IAAAlzG,KAAAu0G,KACAlxB,aAAArjF,KAAAogF,OACAs2B,sBAAA12G,KAAAogF,MACA82B,2BAAAl3G,QACA9qF,OAAAmX,KAAA2zE,MAAA2+E,MAAA43B,gBAIA,QAAAW,4BAAAl3G,MACA,KAAAA,KAAA11F,QAAA,CAEA,GADA01F,KAAAA,KAAA11F,OACA,aAAA01F,KAAAogF,IACA,OAAA,CAEA,IAAApgF,KAAAu0G,IACA,OAAA,EAGA,OAAA,EAuCA,QAAA4C,aACAtV,OACAtiB,SACAtkK,MAEA,GAAAlF,KAAAwpK,SAAA,aAAA,MACA,KAAA,GAAAt2K,QAAA44L,QAAA,CACA,GAAA9P,SAAA8P,OAAA54L,KAGA,WAAAA,MACA8oL,SAAAA,QAAA+M,WAAA/M,QAAA+M,UAAAhwL,OAEAmM,KACA,sGAIAlF,KAAA,IAAA9M,KAAA,KAAAmuM,WAAAnuM,KAAA8oL,SAAA,IAEA,MAAAh8K,KAAA2F,MAAA,GAAA,GAAA,IAGA,QAAA07L,YACAnuM,KACA8oL,SAEA,IAAAA,QACA,MAAA,cAGA,IAAAnqL,MAAAoN,QAAA+8K,SACA,MAAA,IAAAA,QAAAl8K,IAAA,SAAAk8K,SAAA,MAAAqlB,YAAAnuM,KAAA8oL,WAAAp2K,KAAA,KAAA,GAGA,IAAA07L,cAAAC,aAAApvM,KAAA6pL,QAAAx3K,OACAg9L,qBAAAC,QAAAtvM,KAAA6pL,QAAAx3K,MAEA,IAAAw3K,QAAA+M,UAIA,CACA,GAAArmI,MAAA,GACAg/I,gBAAA,GACAprL,OACA,KAAA,GAAA5Q,OAAAs2K,SAAA+M,UACA,GAAA4Y,aAAAj8L,KACAg8L,iBAAAC,aAAAj8L,KAEA83K,SAAA93K,MACA4Q,KAAA9gB,KAAAkQ,SAEA,IAAA,UAAAA,IAAA,CACA,GAAAqjL,WAAA/M,QAAA,SACA0lB,kBAAAE,UACA,OAAA,QAAA,MAAA,QACAxgJ,OAAA,SAAAygJ,aAAA,OAAA9Y,UAAA8Y,eACA/hM,IAAA,SAAA+hM,aAAA,MAAA,UAAAA,YAAA,QACAj8L,KAAA,WAGA0Q,MAAA9gB,KAAAkQ,IAGA4Q,MAAAphB,SACAwtD,MAAAo/I,aAAAxrL,OAGAorL,kBACAh/I,MAAAg/I,gBAOA,OAAA,oBAAAh/I,MALA4+I,aACAtlB,QAAAx3K,MAAA,WACAg9L,qBACA,IAAAxlB,QAAA,MAAA,YACAA,QAAAx3K,OACA,IAtCA,MAAA88L,eAAAE,qBACAxlB,QAAAx3K,MACA,oBAAAw3K,QAAA,MAAA,IAwCA,QAAA8lB,cAAAxrL,MACA,MAAA,6BAAAA,KAAAxW,IAAAiiM,eAAAn8L,KAAA,MAAA,gBAGA,QAAAm8L,eAAAr8L,KACA,GAAAs8L,QAAArwL,SAAAjM,IAAA,GACA,IAAAs8L,OACA,MAAA,oBAAAA,MAEA,IAAAt/I,MAAA86H,SAAA93K,IACA,OACA,qBACAy2G,KAAAC,UAAA12G,KAAA,IACAy2G,KAAAC,UAAA15D,MAAA,eAOA,QAAAkvH,IAAAj+K,GAAAq+F,KACAA,IAAA+2F,WACA7jL,KAAA,qDAEAvR,GAAAsuM,cAAA,SAAAv/I,MAAA,MAAA,MAAAA,KAAA,IAAAsvC,IAAA,MAAA,KAKA,QAAAkwG,QAAAvuM,GAAAq+F,KACAr+F,GAAAwuM,SAAA,SAAAz/I,MACA,MAAA,MAAAA,KAAA,KAAA/uD,GAAA,IAAA,KAAAq+F,IAAA,MAAA,KAAAA,IAAA+2F,WAAA/2F,IAAA+2F,UAAAhrL,KAAA,OAAA,UAAAi0F,IAAA+2F,WAAA/2F,IAAA+2F,UAAA1U,KAAA,QAAA,IAAA,KA4BA,QAAA+tB,UACAC,IACAhwK,SAEA,GAAAqH,OAAA,GAAA4oK,cAAAjwK,QAEA,QACA0K,OAAA,sBAFAslK,IAAAE,WAAAF,IAAA3oK,OAAA,aAEA,IACAwkJ,gBAAAxkJ,MAAAwkJ,iBAIA,QAAAqkB,YAAA5uM,GAAA+lC,OACA,GAAA/lC,GAAAutM,aAAAvtM,GAAA6uM,gBACA,MAAAC,WAAA9uM,GAAA+lC,MACA,IAAA/lC,GAAAq1K,OAAAr1K,GAAA+uM,cACA,MAAAC,SAAAhvM,GAAA+lC,MACA,IAAA/lC,GAAA6qM,MAAA7qM,GAAAivM,aACA,MAAAC,QAAAlvM,GAAA+lC,MACA,IAAA/lC,GAAAwpM,KAAAxpM,GAAAmvM,YACA,MAAAC,OAAApvM,GAAA+lC,MACA,IAAA,aAAA/lC,GAAA02K,KAAA12K,GAAAgqM,WAEA,CAAA,GAAA,SAAAhqM,GAAA02K,IACA,MAAA24B,SAAArvM,GAAA+lC,MAGA,IAAAgpB,KACA,IAAA/uD,GAAAghL,UACAjyH,KAAAugJ,aAAAtvM,GAAAghL,UAAAhhL,GAAA+lC,WACA,CACA,GAAA7jB,MAAAliB,GAAA+pM,UAAAj7L,GAAAygM,UAAAvvM,GAAA+lC,OAEAgR,SAAA/2C,GAAA2tL,eAAA,KAAA6hB,YAAAxvM,GAAA+lC,OAAA,EACAgpB,MAAA,OAAA/uD,GAAA,IAAA,KAAAkiB,KAAA,IAAAA,KAAA,KAAA60B,SAAA,IAAAA,SAAA,IAAA,IAGA,IAAA,GAAAtxC,GAAA,EAAAA,EAAAsgC,MAAAwiK,WAAAhnM,OAAAkE,IACAspD,KAAAhpB,MAAAwiK,WAAA9iM,GAAAzF,GAAA+uD,KAEA,OAAAA,MAlBA,MAAAygJ,aAAAxvM,GAAA+lC,QAAA,SAuBA,QAAA+oK,WAAA9uM,GAAA+lC,OAGA,MAFA/lC,IAAA6uM,iBAAA,EACA9oK,MAAAwkJ,gBAAA1oL,KAAA,qBAAA+sM,WAAA5uM,GAAA+lC,OAAA,KACA,OAAAA,MAAAwkJ,gBAAAhpL,OAAA,IAAAvB,GAAAstM,YAAA,QAAA,IAAA,IAIA,QAAA0B,SAAAhvM,GAAA+lC,OAEA,GADA/lC,GAAA+uM,eAAA,EACA/uM,GAAAwpM,KAAAxpM,GAAAmvM,YACA,MAAAC,OAAApvM,GAAA+lC,MACA,IAAA/lC,GAAAstM,YAAA,CAGA,IAFA,GAAAv7L,KAAA,GACAnR,OAAAZ,GAAAY,OACAA,QAAA,CACA,GAAAA,OAAAiqM,IAAA,CACA94L,IAAAnR,OAAAmR,GACA,OAEAnR,OAAAA,OAAAA,OAEA,MAAAmR,KAMA,MAAA68L,WAAA5uM,GAAA+lC,OAAA,IAAAA,MAAA0pK,SAAA,IAAA19L,IAAA,KALAg0B,MAAAx0B,KACA,wDAEAq9L,WAAA5uM,GAAA+lC,QAIA,MAAA+oK,WAAA9uM,GAAA+lC,OAIA,QAAAqpK,OACApvM,GACA+lC,MACA2pK,OACAC,UAGA,MADA3vM,IAAAmvM,aAAA,EACAS,gBAAA5vM,GAAAorM,aAAAp5L,QAAA+zB,MAAA2pK,OAAAC,UAGA,QAAAC,iBACAC,WACA9pK,MACA2pK,OACAC,UAcA,QAAAG,eAAA9vM,IACA,MAAA0vM,QACAA,OAAA1vM,GAAA+lC,OACA/lC,GAAAq1K,KACA25B,QAAAhvM,GAAA+lC,OACA6oK,WAAA5uM,GAAA+lC,OAjBA,IAAA8pK,WAAAtuM,OACA,MAAAouM,WAAA,MAGA,IAAAxE,WAAA0E,WAAAruM,OACA,OAAA2pM,WAAAvU,IACA,IAAAuU,UAAA,IAAA,KAAA2E,cAAA3E,UAAAvB,OAAA,IAAAgG,gBAAAC,WAAA9pK,MAAA2pK,OAAAC,UAEA,GAAAG,cAAA3E,UAAAvB,OAaA,QAAAsF,QACAlvM,GACA+lC,MACA2pK,OACAK,WAEA,GAAAnZ,KAAA52L,GAAA6qM,IACA32K,MAAAl0B,GAAAk0B,MACA82K,UAAAhrM,GAAAgrM,UAAA,IAAAhrM,GAAA,UAAA,GACAirM,UAAAjrM,GAAAirM,UAAA,IAAAjrM,GAAA,UAAA,EAiBA,OAdA+lC,OAAAiqK,eAAAhwM,KACA,SAAAA,GAAA02K,KACA,aAAA12K,GAAA02K,MACA12K,GAAA+R,KAEAg0B,MAAAx0B,KACA,IAAAvR,GAAA,IAAA,WAAAk0B,MAAA,OAAA0iK,IAAA,+HAGA,GAIA52L,GAAAivM,cAAA,GACAc,WAAA,MAAA,KAAAnZ,IAAA,cACA1iK,MAAA82K,UAAAC,UAAA,aACAyE,QAAAd,YAAA5uM,GAAA+lC,OACA,KAGA,QAAAwpK,WAAAvvM,GAAA+lC,OACA,GAAA7jB,MAAA,IAIAg4J,KAAA+1B,cAAAjwM,GAAA+lC,MACAm0I,QAAAh4J,MAAAg4J,KAAA,KAGAl6K,GAAA+R,MACAmQ,MAAA,OAAAliB,GAAA,IAAA,KAGAA,GAAAyzL,MACAvxK,MAAA,OAAAliB,GAAA,IAAA,KAEAA,GAAA2zL,WACAzxK,MAAA,kBAGAliB,GAAAgoM,MACA9lL,MAAA,aAGAliB,GAAAghL,YACA9+J,MAAA,QAAAliB,GAAA,IAAA,KAGA,KAAA,GAAAyF,GAAA,EAAAA,EAAAsgC,MAAAmqK,WAAA3uM,OAAAkE,IACAyc,MAAA6jB,MAAAmqK,WAAAzqM,GAAAzF,GA+BA,IA5BAA,GAAA6+K,QACA38J,MAAA,UAAAiuL,SAAAnwM,GAAA6+K,OAAA,MAGA7+K,GAAA6uK,QACA3sJ,MAAA,aAAAiuL,SAAAnwM,GAAA6uK,OAAA,MAGA7uK,GAAAm4L,SACAj2K,MAAAurL,YAAAztM,GAAAm4L,QAAA,EAAApyJ,MAAAx0B,MAAA,KAEAvR,GAAAq4L,eACAn2K,MAAAurL,YAAAztM,GAAAq4L,cAAA,EAAAtyJ,MAAAx0B,MAAA,KAIAvR,GAAAgqM,aAAAhqM,GAAA8pM,YACA5nL,MAAA,QAAAliB,GAAA,WAAA,KAGAA,GAAAmkL,cACAjiK,MAAAkuL,eAAApwM,GAAAmkL,YAAAp+I,OAAA,KAGA/lC,GAAAyrB,QACAvJ,MAAA,gBAAAliB,GAAAyrB,MAAA,MAAA,aAAAzrB,GAAAyrB,MAAA,SAAA,eAAAzrB,GAAAyrB,MAAA,WAAA,MAGAzrB,GAAA2tL,eAAA,CACA,GAAAA,gBAAA0iB,kBAAArwM,GAAA+lC,MACA4nJ,kBACAzrK,MAAAyrK,eAAA,KAYA,MATAzrK,MAAAA,KAAApjB,QAAA,KAAA,IAAA,IAEAkB,GAAAwuM,WACAtsL,KAAAliB,GAAAwuM,SAAAtsL,OAGAliB,GAAAsuM,gBACApsL,KAAAliB,GAAAsuM,cAAApsL,OAEAA,KAGA,QAAA+tL,eAAAjwM,GAAA+lC,OACA,GAAAm0I,MAAAl6K,GAAAm6K,UACA,IAAAD,KAAA,CACA,GAEAz0K,GAAA4f,EAAAg5E,IAAAiyG,YAFAjkM,IAAA,eACAkkM,YAAA,CAEA,KAAA9qM,EAAA,EAAA4f,EAAA60J,KAAA34K,OAAAkE,EAAA4f,EAAA5f,IAAA,CACA44F,IAAA67E,KAAAz0K,GACA6qM,aAAA,CACA,IAAAE,KAAAzqK,MAAAo0I,WAAA97E,IAAA9+F,KACAixM,OAGAF,cAAAE,IAAAxwM,GAAAq+F,IAAAt4D,MAAAx0B,OAEA++L,cACAC,YAAA,EACAlkM,KAAA,UAAAgyF,IAAA,KAAA,cAAAA,IAAA,QAAA,KAAAA,IAAAxtF,MAAA,WAAAwtF,IAAA,MAAA,gBAAAmqB,KAAAC,UAAApqB,IAAAxtF,OAAA,KAAAwtF,IAAAvsF,IAAA,SAAAusF,IAAA,IAAA,IAAA,KAAAA,IAAA+2F,UAAA,cAAA5sE,KAAAC,UAAApqB,IAAA+2F,WAAA,IAAA,MAGA,MAAAmb,YACAlkM,IAAA2F,MAAA,GAAA,GAAA,QADA,IAKA,QAAAq+L,mBAAArwM,GAAA+lC,OACA,GAAA2oK,KAAA1uM,GAAA+2C,SAAA,EAMA,IAJA,IAAA/2C,GAAA+2C,SAAAx1C,QAAA,IAAAmtM,IAAA3xK,MAEAgJ,MAAAx0B,KAAA,mEAEA,IAAAm9L,IAAA3xK,KAAA,CACA,GAAA0zK,iBAAAhC,SAAAC,IAAA3oK,MAAArH,QACA,OAAA,qCAAA+xK,gBAAA,OAAA,sBAAAA,gBAAAlmB,gBAAAp+K,IAAA,SAAA4iD,MAAA,MAAA,cAAAA,KAAA,MAAA98C,KAAA,KAAA,MAIA,QAAAm+L,gBACAtuB,MACA/7I,OAEA,MAAA,mBAAAv6B,OAAAmX,KAAAm/J,OAAA31K,IAAA,SAAA4F,KACA,MAAA2+L,eAAA3+L,IAAA+vK,MAAA/vK,KAAAg0B,SACA9zB,KAAA,KAAA,KAGA,QAAAy+L,eACA3+L,IACA/R,GACA+lC,OAEA,MAAA/lC,IAAA6qM,MAAA7qM,GAAAivM,aACA0B,iBAAA5+L,IAAA/R,GAAA+lC,OAQA,QAAAh0B,IAAA,gBANAupH,OAAAt7H,GAAA8pM,WAAA,aACA,aAAA9pM,GAAA02K,IACA12K,GAAAwpM,GACAxpM,GAAA,GAAA,KAAAwvM,YAAAxvM,GAAA+lC,QAAA,aAAA,aACAypK,YAAAxvM,GAAA+lC,QAAA,YACA6oK,WAAA5uM,GAAA+lC,QAAA,KAIA,QAAA4qK,kBACA5+L,IACA/R,GACA+lC,OAEA,GAAA6wJ,KAAA52L,GAAA6qM,IACA32K,MAAAl0B,GAAAk0B,MACA82K,UAAAhrM,GAAAgrM,UAAA,IAAAhrM,GAAA,UAAA,GACAirM,UAAAjrM,GAAAirM,UAAA,IAAAjrM,GAAA,UAAA,EAEA,OADAA,IAAAivM,cAAA,EACA,OAAArY,IAAA,cACA1iK,MAAA82K,UAAAC,UAAA,YACAyF,cAAA3+L,IAAA/R,GAAA+lC,OACA,KAGA,QAAAypK,aACAxvM,GACA+lC,MACA6qK,UACAC,cACAC,YAEA,GAAA/5J,UAAA/2C,GAAA+2C,QACA,IAAAA,SAAAx1C,OAAA,CACA,GAAAwvM,MAAAh6J,SAAA,EAEA,IAAA,IAAAA,SAAAx1C,QACAwvM,KAAAlG,KACA,aAAAkG,KAAAr6B,KACA,SAAAq6B,KAAAr6B,IAEA,OAAAm6B,eAAAjC,YAAAmC,KAAAhrK,MAEA,IAAAmoJ,mBAAA0iB,UACAI,qBAAAj6J,SAAAhR,MAAAiqK,gBACA,EACAQ,IAAAM,YAAAG,OACA,OAAA,IAAAl6J,SAAA5qC,IAAA,SAAAuX,GAAA,MAAA8sL,KAAA9sL,EAAAqiB,SAAA9zB,KAAA,KAAA,KAAAi8K,kBAAA,IAAAA,kBAAA,KAQA,QAAA8iB,sBACAj6J,SACAi5J,gBAGA,IAAA,GADA3jM,KAAA,EACA5G,EAAA,EAAAA,EAAAsxC,SAAAx1C,OAAAkE,IAAA,CACA,GAAAzF,IAAA+2C,SAAAtxC,EACA,IAAA,IAAAzF,GAAA+8B,KAAA,CAGA,GAAAm0K,mBAAAlxM,KACAA,GAAAorM,cAAAprM,GAAAorM,aAAA78L,KAAA,SAAAmV,GAAA,MAAAwtL,oBAAAxtL,EAAAkmL,SAAA,CACAv9L,IAAA,CACA,QAEA2jM,eAAAhwM,KACAA,GAAAorM,cAAAprM,GAAAorM,aAAA78L,KAAA,SAAAmV,GAAA,MAAAssL,gBAAAtsL,EAAAkmL,YACAv9L,IAAA,IAGA,MAAAA,KAGA,QAAA6kM,oBAAAlxM,IACA,WAAA8O,KAAA9O,GAAA6qM,KAAA,aAAA7qM,GAAA02K,KAAA,SAAA12K,GAAA02K,IAGA,QAAAu6B,SAAA36G,KAAAvwD,OACA,MAAA,KAAAuwD,KAAAv5D,KACA6xK,WAAAt4G,KAAAvwD,OACA,IAAAuwD,KAAAv5D,MAAAu5D,KAAA0gF,UACAm6B,WAAA76G,MAEA86G,QAAA96G,MAIA,QAAA86G,SAAAprH,MACA,MAAA,OAAA,IAAAA,KAAAjpD,KACAipD,KAAAgxG,WACAqa,yBAAA7oF,KAAAC,UAAAziC,KAAAA,QAAA,IAGA,QAAAmrH,YAAA1K,SACA,MAAA,MAAAj+E,KAAAC,UAAAg+E,QAAAzgH,MAAA,IAGA,QAAAqpH,SAAArvM,GAAA+lC,OACA,GAAAslK,UAAArrM,GAAAqrM,UAAA,YACAt0J,SAAAy4J,YAAAxvM,GAAA+lC,OACA15B,IAAA,MAAAg/L,UAAAt0J,SAAA,IAAAA,SAAA,IACA8nI,MAAA7+K,GAAA6+K,OAAA,IAAA7+K,GAAA6+K,MAAA1yK,IAAA,SAAAI,GAAA,MAAAutK,UAAAvtK,EAAAhN,MAAA,IAAAgN,EAAA,QAAA0F,KAAA,KAAA,IACAq/L,QAAAtxM,GAAA64L,SAAA,SAUA,QATAha,QAAAyyB,SAAAv6J,WACA1qC,KAAA,SAEAwyK,QACAxyK,KAAA,IAAAwyK,OAEAyyB,UACAjlM,MAAAwyK,MAAA,GAAA,SAAA,IAAAyyB,SAEAjlM,IAAA,IAIA,QAAAijM,cACAiC,cACAvxM,GACA+lC,OAEA,GAAAgR,UAAA/2C,GAAA2tL,eAAA,KAAA6hB,YAAAxvM,GAAA+lC,OAAA,EACA,OAAA,MAAAwrK,cAAA,IAAAhC,UAAAvvM,GAAA+lC,QAAAgR,SAAA,IAAAA,SAAA,IAAA,IAGA,QAAAo5J,UAAAthC,OAEA,IAAA,GADAxiK,KAAA,GACA5G,EAAA,EAAAA,EAAAopK,MAAAttK,OAAAkE,IAAA,CACA,GAAA2E,MAAAykK,MAAAppK,EACA4G,MAAA,IAAAjC,KAAA,KAAA,KAAAinM,yBAAAjnM,KAAAyG,OAAA,IAEA,MAAAxE,KAAA2F,MAAA,GAAA,GAIA,QAAAq/L,0BAAArrH,MACA,MAAAA,MACAlnF,QAAA,UAAA,WACAA,QAAA,UAAA,WAyBA,QAAA0yM,cAAA9C,KACA,GAAA+C,UAIA,OAHA/C,MACAgD,UAAAhD,IAAA+C,QAEAA,OAGA,QAAAC,WAAAp7G,KAAAm7G,QACA,GAAA,IAAAn7G,KAAAv5D,KAAA,CACA,IAAA,GAAAx9B,QAAA+2F,MAAAuiG,SACA,GAAA0S,MAAA/sM,KAAAe,MAAA,CACA,GAAAsR,OAAAylF,KAAAuiG,SAAAt5L,KACAsR,SACA,UAAAtR,KACAoyM,SAAAr7G,KAAA,UAAAzlF,MAAA,IAAA4gM,QACA5F,KAAArtM,KAAAe,MACAqyM,WAAA/gM,MAAAtR,KAAA,KAAAsR,MAAA,IAAA4gM,QAEAI,gBAAAhhM,MAAAtR,KAAA,KAAAsR,MAAA,IAAA4gM,SAKA,GAAAn7G,KAAAv/C,SACA,IAAA,GAAAtxC,GAAA,EAAAA,EAAA6wF,KAAAv/C,SAAAx1C,OAAAkE,IACAisM,UAAAp7G,KAAAv/C,SAAAtxC,GAAAgsM,YAGA,KAAAn7G,KAAAv5D,MACA80K,gBAAAv7G,KAAA0gG,WAAA1gG,KAAAtQ,KAAAyrH,QAIA,QAAAG,YAAAhb,IAAA5wG,KAAAyrH,QACA,GAAAK,SAAAlb,IAAA93L,QAAAizM,cAAA,IACAC,aAAAF,QAAAx7L,MAAA27L,iBACAD,eAAA,MAAAF,QAAA7wL,OAAA+wL,aAAAt/K,MAAA,IACA++K,OAAA5vM,KACA,4DACAmwM,aAAA,GAAA,mBAAAhsH,KAAArnF,QAGAkzM,gBAAAjb,IAAA5wG,KAAAyrH,QAGA,QAAAE,UAAAr7G,KAAAtQ,KAAAyrH,QACAI,gBAAAv7G,KAAAu0G,KAAA,GAAA7kH,KAAAyrH,QACAS,gBAAA57G,KAAApiE,MAAA,cAAA8xD,KAAAyrH,QACAS,gBAAA57G,KAAA00G,UAAA,iBAAAhlH,KAAAyrH,QACAS,gBAAA57G,KAAA20G,UAAA,iBAAAjlH,KAAAyrH,QAGA,QAAAS,iBAAAC,MAAAp1K,KAAAipD,KAAAyrH,QACA,gBAAAU,QAAAC,QAAA5zM,KAAA2zM,QACAV,OAAA5vM,KAAA,WAAAk7B,KAAA,KAAAo1K,MAAA,oBAAAnsH,KAAArnF,QAIA,QAAAkzM,iBAAAjb,IAAA5wG,KAAAyrH,QACA,IACA,GAAAl/L,UAAA,UAAAqkL,KACA,MAAAlyL,GACA,GAAAstM,cAAApb,IAAA93L,QAAAizM,cAAA,IAAAz7L,MAAA+7L,oBACAL,cACAP,OAAA5vM,KACA,qDACAmwM,aAAA,GAAA,wBAAAhsH,KAAArnF,QAGA8yM,OAAA5vM,KACA,uBAAA6C,EAAA,QAAA,cACAkyL,IAAA,yBACA5wG,KAAArnF,OAAA,OAQA,QAAA2zM,gBAAAvjJ,KAAA0iJ,QACA,IACA,MAAA,IAAAl/L,UAAAw8C,MACA,MAAAytH,KAEA,MADAi1B,QAAA5vM,MAAA26K,IAAAA,IAAAztH,KAAAA,OACA4lH,MAIA,QAAA49B,2BAAA51H,SACA,GAAAlzB,OAAAj+C,OAAA88F,OAAA,KAEA,OAAA,UACA26E,SACAvkJ,QACAy6I,IAEAz6I,QAAAjyB,UAAAiyB,QACA,IAAA8zK,SAAA9zK,QAAAntB,MAAAA,WACAmtB,SAAAntB,IAKA,KACA,GAAAgB,UAAA,YACA,MAAA7N,GACAA,EAAA+G,WAAA6K,MAAA,oBACAk8L,QACA,oSAWA,GAAAzgM,KAAA2sB,QAAAylK,WACA7oE,OAAA58F,QAAAylK,YAAAlhB,SACAA,QACA,IAAAx5H,MAAA13C,KACA,MAAA03C,OAAA13C,IAIA,IAAA0gM,UAAA91H,QAAAsmG,SAAAvkJ,QAIA+zK,UAAAhB,QAAAgB,SAAAhB,OAAAlwM,QACAixM,QACA,gCAAAvvB,SAAA,OACAwvB,SAAAhB,OAAAtlM,IAAA,SAAAzH,GAAA,MAAA,KAAAA,IAAAuN,KAAA,MAAA,KACAknK,IAGAs5B,SAAAC,MAAAD,SAAAC,KAAAnxM,QACAkxM,SAAAC,KAAAz0M,QAAA,SAAAuT,KAAA,MAAAwtK,KAAAxtK,IAAA2nK,KAKA,IAAA9sK,QACAsmM,cAyBA,OAxBAtmM,KAAA+8B,OAAAkpK,eAAAG,SAAArpK,OAAAupK,aACAtmM,IAAAk+K,gBAAAkoB,SAAAloB,gBAAAp+K,IAAA,SAAA4iD,MACA,MAAAujJ,gBAAAvjJ,KAAA4jJ,eAQAF,SAAAhB,QAAAgB,SAAAhB,OAAAlwM,SAAAoxM,YAAApxM,QACAixM,QACA,0CACAG,YAAAxmM,IAAA,SAAAsnL,KACA,GAAAjX,KAAAiX,IAAAjX,IACAztH,KAAA0kI,IAAA1kI,IAEA,OAAAytH,KAAA/wK,WAAA,UAAAsjD,KAAA,OACA98C,KAAA,MACAknK,IAKA1vH,MAAA13C,KAAA1F,KA+JA,QAAAumM,cAAA5yM,IACA,GAAAA,GAAA6yM,UACA,MAAA7yM,IAAA6yM,SAEA,IAAAnuK,WAAAxnC,SAAAq/J,cAAA,MAEA,OADA73H,WAAAyuJ,YAAAnzL,GAAAyH,WAAA,IACAi9B,UAAAouK,UAzvUA,GAAAj/B,WAAAroK,OAAArN,UAAAsN,SAmEAkuK,aAAAzF,QAAA,kBAAA,GAKAuT,oBAAAvT,QAAA,8BAiBAnoK,eAAAP,OAAArN,UAAA4N,eAmBAgnM,WAAA,SACAj5B,SAAA3uC,OAAA,SAAAgpC,KACA,MAAAA,KAAAr1K,QAAAi0M,WAAA,SAAA/pM,EAAA0a,GAAA,MAAAA,GAAAA,EAAAlQ,cAAA,OAMAynK,WAAA9vC,OAAA,SAAAgpC,KACA,MAAAA,KAAAlzJ,OAAA,GAAAzN,cAAA2gK,IAAAniK,MAAA,KAMAghM,YAAA,aACAx3B,UAAArwC,OAAA,SAAAgpC,KACA,MAAAA,KAAAr1K,QAAAk0M,YAAA,OAAAx+L,gBAkEAqxL,GAAA,SAAAt5L,EAAAC,EAAAkX,GAAA,OAAA,GAKAinC,SAAA,SAAA3hD,GAAA,MAAAA,IAoEAiqM,SAAA,uBAEAriB,aACA,YACA,YACA,UAGAsiB,iBACA,eACA,UACA,cACA,UACA,eACA,UACA,gBACA,YACA,YACA,cACA,iBAKAjjM,QAIAkjM,sBAAA3nM,OAAA88F,OAAA,MAKA8qG,QAAA,EAKAC,eAAA,EAKAttB,UAAA,EAKAl1B,aAAA,EAKAisB,aAAA,KAKAw2B,YAAA,KAKAC,mBAKA1pB,SAAAr+K,OAAA88F,OAAA,MAMAsxE,cAAAisB,GAMAne,eAAAme,GAMA1T,iBAAA0T,GAKAtX,gBAAA5Z,KAKA6Z,qBAAA7jI,SAMAs/H,YAAA4b,GAKA2N,gBAAAN,iBAKA7uB,YAAA74K,OAAAq/H,WAyBA+qC,OAAA,UAkBA69B,SAAA,gBAGAz2B,UAAA,mBAAAjgL,QACA22M,GAAA12B,WAAAjgL,OAAAqH,UAAAC,UAAAmQ,cACAmmL,KAAA+Y,IAAA,eAAAl1M,KAAAk1M,IACA9d,MAAA8d,IAAAA,GAAAr5L,QAAA,YAAA,EACAw7K,OAAA6d,IAAAA,GAAAr5L,QAAA,SAAA,EACAs5L,UAAAD,IAAAA,GAAAr5L,QAAA,WAAA,EACAu5L,MAAAF,IAAA,uBAAAl1M,KAAAk1M,IACAG,SAAAH,IAAA,cAAAl1M,KAAAk1M,MAAA7d,OAGAxO,eAAAD,MAEA+T,iBAAA,CACA,IAAAne,UACA,IACA,GAAA6J,QACAr7K,QAAA0xB,eAAA2pJ,KAAA,WACAluK,IAAA,WAEAwiL,iBAAA,KAGAp+L,OAAAW,iBAAA,eAAA,KAAAmpL,MACA,MAAAniL,IAKA,GAAAovM,WA2BAC,KA1BAl8B,kBAAA,WAWA,WAVA/oK,KAAAglM,YAOAA,WALA92B,WAAA,mBAAAhyK,SAGA,WAAAA,OAAA,QAAAgpM,IAAAC,SAKAH,WAIA/tB,SAAA/I,WAAAjgL,OAAAm3M,6BAOAr0B,UACA,mBAAAC,SAAAjK,SAAAiK,SACA,mBAAAgJ,UAAAjT,SAAAiT,QAAAC,QAMAgrB,MAFA,mBAAAI,MAAAt+B,SAAAs+B,KAEAA,IAGA,WACA,QAAAA,OACAxyM,KAAA6Q,IAAAhH,OAAA88F,OAAA,MAYA,MAVA6rG,KAAAh2M,UAAAinL,IAAA,SAAArzK,KACA,OAAA,IAAApQ,KAAA6Q,IAAAT,MAEAoiM,IAAAh2M,UAAAe,IAAA,SAAA6S,KACApQ,KAAA6Q,IAAAT,MAAA,GAEAoiM,IAAAh2M,UAAAi7C,MAAA,WACAz3C,KAAA6Q,IAAAhH,OAAA88F,OAAA,OAGA6rG,MAMA,IAAA5iM,MAAAojK,KACAqK,IAAArK,KACAy/B,uBAAA,KACAn1B,oBAAA,KAGAo1B,WAAA,mBAAA3iM,SACA4iM,WAAA,kBACAC,SAAA,SAAApgC,KAAA,MAAAA,KACAr1K,QAAAw1M,WAAA,SAAA5wL,GAAA,MAAAA,GAAAlQ,gBACA1U,QAAA,QAAA,IAEAyS,MAAA,SAAAC,IAAA2nK,IACA,GAAAhvE,OAAAgvE,GAAAi7B,uBAAAj7B,IAAA,EAEAlpK,QAAAqjM,YACArjM,OAAAqjM,YAAA/qM,KAAA,KAAAiJ,IAAA2nK,GAAAhvE,OACAkqG,aAAApkM,OAAAmjM,QACA1hM,QAAAiuB,MAAA,eAAAnuB,IAAA24F,QAIA60E,IAAA,SAAAxtK,IAAA2nK,IACAk7B,aAAApkM,OAAAmjM,QACA1hM,QAAAH,KAAA,cAAAC,KACA2nK,GAAAi7B,uBAAAj7B,IAAA,MAKA8F,oBAAA,SAAA9F,GAAAq7B,aACA,GAAAr7B,GAAAmJ,QAAAnJ,GACA,MAAA,QAEA,IAAAz6I,SAAA,kBAAAy6I,KAAA,MAAAA,GAAA0T,IACA1T,GAAAz6I,QACAy6I,GAAApB,OACAoB,GAAA0C,UAAA1C,GAAA1rF,YAAA/uD,QACAy6I,OACA55K,KAAAm/B,QAAAn/B,MAAAm/B,QAAA8uJ,cACAviD,KAAAvsG,QAAA+1K,MACA,KAAAl1M,MAAA0rI,KAAA,CACA,GAAA30H,OAAA20H,KAAA30H,MAAA,mBACA/W,MAAA+W,OAAAA,MAAA,GAGA,OACA/W,KAAA,IAAAg1M,SAAAh1M,MAAA,IAAA,gBACA0rI,OAAA,IAAAupE,YAAA,OAAAvpE,KAAA,IAIA,IAAAltG,QAAA,SAAAo2I,IAAAj7J,GAEA,IADA,GAAA7M,KAAA,GACA6M,GACAA,EAAA,GAAA,IAAA7M,KAAA8nK,KACAj7J,EAAA,IAAAi7J,KAAAA,KACAj7J,IAAA,CAEA,OAAA7M,KAGA+nM,wBAAA,SAAAj7B,IACA,GAAAA,GAAApB,QAAAoB,GAAAuD,QAAA,CAGA,IAFA,GAAA8N,SACAkqB,yBAAA,EACAv7B,IAAA,CACA,GAAAqR,KAAAjpL,OAAA,EAAA,CACA,GAAAyB,MAAAwnL,KAAAA,KAAAjpL,OAAA,EACA,IAAAyB,KAAAyqF,cAAA0rF,GAAA1rF,YAAA,CACAinH,2BACAv7B,GAAAA,GAAAuD,OACA,UACAg4B,yBAAA,IACAlqB,KAAAA,KAAAjpL,OAAA,IAAAyB,KAAA0xM,0BACAA,yBAAA,GAGAlqB,KAAA3oL,KAAAs3K,IACAA,GAAAA,GAAAuD,QAEA,MAAA,mBAAA8N,KACAr+K,IAAA,SAAAgtK,GAAA1zK,GAAA,MAAA,IAAA,IAAAA,EAAA,WAAAs4B,OAAA,IAAA,EAAA,EAAAt4B,KAAAvH,MAAAoN,QAAA6tK,IACA8F,oBAAA9F,GAAA,IAAA,QAAAA,GAAA,GAAA,oBACA8F,oBAAA9F,OACAlnK,KAAA,MAEA,MAAA,iBAAAgtK,oBAAA9F,IAAA,IAQA,IAAAw7B,KAAA,EAMA1+B,IAAA,WACAt0K,KAAAyiC,GAAAuwK,MACAhzM,KAAAizM,QAGA3+B,KAAA93K,UAAA02M,OAAA,SAAAjrJ,KACAjoD,KAAAizM,KAAA/yM,KAAA+nD,MAGAqsH,IAAA93K,UAAA22M,UAAA,SAAAlrJ,KACA1O,OAAAv5C,KAAAizM,KAAAhrJ,MAGAqsH,IAAA93K,UAAAq6K,OAAA,WACAvC,IAAAtxK,QACAsxK,IAAAtxK,OAAAowM,OAAApzM,OAIAs0K,IAAA93K,UAAAw6K,OAAA,WAGA,IAAA,GADAi8B,MAAAjzM,KAAAizM,KAAA5iM,QACAvM,EAAA,EAAA4f,EAAAuvL,KAAArzM,OAAAkE,EAAA4f,EAAA5f,IACAmvM,KAAAnvM,GAAA6wC,UAOA2/H,IAAAtxK,OAAA,IACA,IAAAuxK,gBAaAG,MAAA,SACAK,IACAx0J,KACA60B,SACAivC,KACA2wF,IACAtpI,QACAupI,iBACAC,cAEAl1K,KAAA+0K,IAAAA,IACA/0K,KAAAugB,KAAAA,KACAvgB,KAAAo1C,SAAAA,SACAp1C,KAAAqkF,KAAAA,KACArkF,KAAAg1K,IAAAA,IACAh1K,KAAAm1K,OAAAhoK,GACAnN,KAAA0rC,QAAAA,QACA1rC,KAAAqgL,sBAAAlzK,GACAnN,KAAA+qL,sBAAA59K,GACAnN,KAAA2qL,sBAAAx9K,GACAnN,KAAAoQ,IAAAmQ,MAAAA,KAAAnQ,IACApQ,KAAAi1K,iBAAAA,iBACAj1K,KAAA2vL,sBAAAxiL,GACAnN,KAAAf,WAAAkO,GACAnN,KAAAqzM,KAAA,EACArzM,KAAAo1K,UAAA,EACAp1K,KAAA6+L,cAAA,EACA7+L,KAAAq1K,WAAA,EACAr1K,KAAAs1K,UAAA,EACAt1K,KAAAipL,QAAA,EACAjpL,KAAAk1K,aAAAA,aACAl1K,KAAAu+K,cAAApxK,GACAnN,KAAAs/K,oBAAA,GAGAg0B,oBAAA/mF,OAAAwnD,cAAA,GAIAu/B,oBAAA/mF,MAAAv1G,IAAA,WACA,MAAAhX,MAAA2vL,mBAGA9lL,OAAA2wC,iBAAAk6H,MAAAl4K,UAAA82M,mBAEA,IAAAh1B,kBAAA,SAAAj6F;yCACA,KAAAA,OAAAA,KAAA,GAEA,IAAAsQ,MAAA,GAAA+/E,MAGA,OAFA//E,MAAAtQ,KAAAA,KACAsQ,KAAA0gF,WAAA,EACA1gF,MA+CA4+G,WAAAh3M,MAAAC,UACAg3M,aAAA3pM,OAAA88F,OAAA4sG,aACA,OACA,MACA,QACA,UACA,SACA,OACA,WAEAj3M,QAAA,SAAAm3M,QAEA,GAAAC,UAAAH,WAAAE,OACA5/B,KAAA2/B,aAAAC,OAAA,WAEA,IADA,GAAAjzM,SAAA2H,IAAAlI,UAAAL,OACAuI,OAAA3H,KAAA2H,KAAAlI,UAAAkI,IAEA,IAEAorL,UAFA1uK,OAAA6uL,SAAA5zM,MAAAE,KAAAQ,MACAq1K,GAAA71K,KAAA81K,MAEA,QAAA29B,QACA,IAAA,OACA,IAAA,UACAlgB,SAAA/yL,IACA,MACA,KAAA,SACA+yL,SAAA/yL,KAAA6P,MAAA,GAMA,MAHAkjL,WAAA1d,GAAA89B,aAAApgB,UAEA1d,GAAAY,IAAAO,SACAnyJ,UAMA,IAAA+uL,WAAA/pM,OAAAK,oBAAAspM,cAQAx9B,eACAC,eAAA,GASAF,SAAA,SAAA7mK,OAKA,GAJAlP,KAAAkP,MAAAA,MACAlP,KAAAy2K,IAAA,GAAAnC,KACAt0K,KAAAq2K,QAAA,EACAxC,IAAA3kK,MAAA,SAAAlP,MACAzD,MAAAoN,QAAAuF,OAAA,EACA4iM,SACAr8B,aACAE,aACAzmK,MAAAskM,aAAAI,WACA5zM,KAAA2zM,aAAAzkM,WAEAlP,MAAA6zM,KAAA3kM,OASA6mK,UAAAv5K,UAAAq3M,KAAA,SAAA5pM,KAEA,IAAA,GADA+W,MAAAnX,OAAAmX,KAAA/W,KACAnG,EAAA,EAAAA,EAAAkd,KAAAphB,OAAAkE,IACAwyK,eAAArsK,IAAA+W,KAAAld,GAAAmG,IAAA+W,KAAAld,MAOAiyK,SAAAv5K,UAAAm3M,aAAA,SAAAG,OACA,IAAA,GAAAhwM,GAAA,EAAA4f,EAAAowL,MAAAl0M,OAAAkE,EAAA4f,EAAA5f,IACA0D,QAAAssM,MAAAhwM,IAiMA,IAAA80K,QAAAtqK,OAAAkjM,qBAMA54B,QAAAv6K,GAAAu6K,OAAAa,UAAA,SAAAx6K,OAAAstH,MAAAirD,GAAApnK,KAOA,MANAonK,KACA5nK,KACA,WAAAQ,IAAA,uEAIAyoK,aAAA55K,OAAAstH,QAqEAqsD,OAAAr4J,KAAA,SACA+2J,UACAC,SACAC,IAEA,MAAAA,IAcAH,cAAAC,UAAAC,SAAAC,IAbAD,UAAA,kBAAAA,WACA3nK,KACA,qGAGA4nK,IAGAF,WAEAD,cAAAzwK,KAAA5G,KAAAs3K,UAAAC,WAsBAg6B,gBAAAj1M,QAAA,SAAAwgL,MACAlE,OAAAkE,MAAAnF,YAyBAsX,YAAA3yL,QAAA,SAAA8+B,MACAw9I,OAAAx9I,KAAA,KAAAw8I,cASAgB,OAAA6M,MAAA,SACAnO,UACAC,SACAC,GACApnK,KAMA,GAHAknK,YAAAoO,cAAApO,cAAAnqK,IACAoqK,WAAAmO,cAAAnO,aAAApqK,KAEAoqK,SAAA,MAAA1tK,QAAA88F,OAAA2wE,WAAA,KAIA,IAFAO,iBAAAznK,IAAAmnK,SAAAC,KAEAF,UAAA,MAAAC,SACA,IAAA5rJ,OACA7gB,QAAA6gB,IAAA2rJ,UACA,KAAA,GAAAmqB,SAAAlqB,UAAA,CACA,GAAAt4K,QAAA0sB,IAAA81K,OACAl1E,MAAAgrD,SAAAkqB,MACAxiM,UAAA1C,MAAAoN,QAAA1K,UACAA,QAAAA,SAEA0sB,IAAA81K,OAAAxiM,OACAA,OAAAsoF,OAAAglC,OACAhwH,MAAAoN,QAAA4iH,OAAAA,OAAAA,OAEA,MAAA5gG,MAMAitJ,OAAA1L,MACA0L,OAAAwM,QACAxM,OAAAP,OACAO,OAAA2M,SAAA,SACAjO,UACAC,SACAC,GACApnK,KAKA,GAHAmnK,UACAM,iBAAAznK,IAAAmnK,SAAAC,KAEAF,UAAA,MAAAC,SACA,IAAA5rJ,KAAA9hB,OAAA88F,OAAA,KAGA,OAFA77F,QAAA6gB,IAAA2rJ,WACAC,UAAAzsK,OAAA6gB,IAAA4rJ,UACA5rJ,KAEAitJ,OAAAmO,QAAA1P,aAKA,IA0aA0E,gBACAD,eA3aAjD,aAAA,SAAAvB,UAAAC,UACA,WAAApqK,KAAAoqK,SACAD,UACAC,UAmTAoD,cAAA,4CAgGAa,aACAzwB,SAAA,EAqBA4wB,cAAA,CAOA,IAAA,mBAAAo4B,eAAA7/B,SAAA6/B,cACAj4B,eAAA,WACAi4B,aAAAz4B,qBAEA,IAAA,mBAAA04B,kBACA9/B,SAAA8/B,iBAEA,uCAAAA,eAAAlqM,WAUAgyK,eAAA,WACA9/K,WAAAs/K,eAAA,QAVA,CACA,GAAApwD,SAAA,GAAA8oF,gBACAC,KAAA/oF,QAAAgpF,KACAhpF,SAAAipF,MAAAC,UAAA94B,eACAQ,eAAA,WACAm4B,KAAAI,YAAA,IAWA,GAAA,mBAAAr4B,UAAA9H,SAAA8H,SAAA,CACA,GAAAhoH,GAAAgoH,QAAAC,SACAF,gBAAA,WACA/nH,EAAAorH,KAAA9D,gBAMA22B,OAAAj2M,WAAAg3K,WAIA+I,gBAAAD,cA+CA,IAAA2F,MACAM,QAGAuyB,KAAAj5B,WAAAjgL,OAAA8zJ,WAGAolD,OACAA,KAAA7yB,MACA6yB,KAAAvyB,SACAuyB,KAAAC,YACAD,KAAAE,gBAEA/yB,KAAA,SAAA1M,KAAA,MAAAu/B,MAAA7yB,KAAA1M,MACAgN,QAAA,SAAAnkL,KAAAgkL,SAAAC,QACAyyB,KAAAvyB,QAAAnkL,KAAAgkL,SAAAC,QACAyyB,KAAAC,WAAA3yB,UACA0yB,KAAAC,WAAA1yB,QACAyyB,KAAAE,cAAA52M,OAOA,IAAA62M,WAGAC,eAAAniC,QACA,qMAMAoiC,eAAA,SAAA3xM,OAAAoN,KACAR,KACA,uBAAAQ,IAAA,kRAKApN,SAIA4xM,SACA,mBAAAC,QACAA,MAAA/qM,WAAA6K,MAAA,cAEA,IAAAigM,SAAA,CACA,GAAAE,mBAAAviC,QAAA,8CACAjkK,QAAA45K,SAAA,GAAA2sB,OAAAvmM,OAAA45K,UACAr3K,IAAA,SAAA7N,OAAAoN,IAAAlB,OACA,MAAA4lM,mBAAA1kM,MACAR,KAAA,4DAAAQ,MACA,IAEApN,OAAAoN,KAAAlB,OACA,MAMA,GAAA6lM,aACAtxB,IAAA,SAAAzgL,OAAAoN,KACA,GAAAqzK,KAAArzK,MAAApN,QACAgyM,UAAAN,eAAAtkM,MAAA,MAAAA,IAAAkP,OAAA,EAIA,OAHAmkK,MAAAuxB,WACAL,eAAA3xM,OAAAoN,KAEAqzK,MAAAuxB,YAIAC,YACAj+L,IAAA,SAAAhU,OAAAoN,KAIA,MAHA,gBAAAA,MAAAA,MAAApN,SACA2xM,eAAA3xM,OAAAoN,KAEApN,OAAAoN,MAIAqkM,WAAA,SAAAj9B,IACA,GAAAo9B,SAAA,CAEA,GAAA73K,SAAAy6I,GAAA0C,SACArnC,SAAA91G,QAAA0K,QAAA1K,QAAA0K,OAAAytK,cACAD,WACAF,UACAv9B,IAAAsR,aAAA,GAAA+rB,OAAAr9B,GAAA3kC,cAEA2kC,IAAAsR,aAAAtR,GAOA,IAgaAx0K,QAhaA05K,eAAAlzC,OAAA,SAAA5rI,MACA,GAAA++K,SAAA,MAAA/+K,KAAA0hB,OAAA,EACA1hB,MAAA++K,QAAA/+K,KAAAyS,MAAA,GAAAzS,IACA,IAAA27L,SAAA,MAAA37L,KAAA0hB,OAAA,EACA1hB,MAAA27L,QAAA37L,KAAAyS,MAAA,GAAAzS,IACA,IAAAq9K,SAAA,MAAAr9K,KAAA0hB,OAAA,EAEA,OADA1hB,MAAAq9K,QAAAr9K,KAAAyS,MAAA,GAAAzS,MAEAA,KAAAA,KACA81K,KAAA6lB,QACAte,QAAAA,QACA0B,QAAAA,WAmlBA+hB,eAAA,KACArc,0BAAA,EAwTAyB,iBAAA,IAEAP,SACAC,qBACAC,OACAC,YACAjkL,SAAA,EACAkkL,UAAA,EACA5yJ,MAAA,EAmIAokL,MAAA,EAOAnzB,QAAA,SACAxK,GACA49B,QACArmF,GACAhyF,SAEA/8B,KAAAw3K,GAAAA,GACAA,GAAAyN,UAAA/kL,KAAAF,MAEA+8B,SACA/8B,KAAA60K,OAAA93I,QAAA83I,KACA70K,KAAA+jL,OAAAhnJ,QAAAgnJ,KACA/jL,KAAA44L,OAAA77J,QAAA67J,KACA54L,KAAA++K,OAAAhiJ,QAAAgiJ,MAEA/+K,KAAA60K,KAAA70K,KAAA+jL,KAAA/jL,KAAA44L,KAAA54L,KAAA++K,MAAA,EAEA/+K,KAAA+uH,GAAAA,GACA/uH,KAAAyiC,KAAA0yK,MACAn1M,KAAAq1M,QAAA,EACAr1M,KAAAymL,MAAAzmL,KAAA44L,KACA54L,KAAAs1M,QACAt1M,KAAAu1M,WACAv1M,KAAAw1M,OAAA,GAAApD,MACApyM,KAAAy1M,UAAA,GAAArD,MACApyM,KAAAq1L,WAAA+f,QAAAtrM,WAEA,kBAAAsrM,SACAp1M,KAAA0vB,OAAA0lL,SAEAp1M,KAAA0vB,OAAAskJ,UAAAohC,SACAp1M,KAAA0vB,SACA1vB,KAAA0vB,OAAA,aACA9f,KACA,0BAAAwlM,QAAA,+FAGA59B,MAIAx3K,KAAAkP,MAAAlP,KAAA44L,SACAzrL,GACAnN,KAAAgX,MAMAgrK,SAAAxlL,UAAAwa,IAAA,WACAo9J,WAAAp0K,KACA,IAAAkP,OACAsoK,GAAAx3K,KAAAw3K,EACA,KACAtoK,MAAAlP,KAAA0vB,OAAA9oB,KAAA4wK,GAAAA,IACA,MAAAz0K,GACA,IAAA/C,KAAA+jL,KAGA,KAAAhhL,EAFA63K,aAAA73K,EAAAy0K,GAAA,uBAAAx3K,KAAA,WAAA,KAIA,QAGAA,KAAA60K,MACA55F,SAAA/rE,OAEAslK,YACAx0K,KAAA01M,cAEA,MAAAxmM,QAMA8yK,QAAAxlL,UAAA42M,OAAA,SAAA38B,KACA,GAAAh0I,IAAAg0I,IAAAh0I,EACAziC,MAAAy1M,UAAAhyB,IAAAhhJ,MACAziC,KAAAy1M,UAAAl4M,IAAAklC,IACAziC,KAAAu1M,QAAAr1M,KAAAu2K,KACAz2K,KAAAw1M,OAAA/xB,IAAAhhJ,KACAg0I,IAAAy8B,OAAAlzM,QAQAgiL,QAAAxlL,UAAAk5M,YAAA,WAIA,IAHA,GAAAC,QAAA31M,KAEA8D,EAAA9D,KAAAs1M,KAAA11M,OACAkE,KAAA,CACA,GAAA2yK,KAAAk/B,OAAAL,KAAAxxM,EACA6xM,QAAAF,UAAAhyB,IAAAhN,IAAAh0I,KACAg0I,IAAA08B,UAAAwC,QAGA,GAAAjpL,KAAA1sB,KAAAw1M,MACAx1M,MAAAw1M,OAAAx1M,KAAAy1M,UACAz1M,KAAAy1M,UAAA/oL,IACA1sB,KAAAy1M,UAAAh+J,QACA/qB,IAAA1sB,KAAAs1M,KACAt1M,KAAAs1M,KAAAt1M,KAAAu1M,QACAv1M,KAAAu1M,QAAA7oL,IACA1sB,KAAAu1M,QAAA31M,OAAA,GAOAoiL,QAAAxlL,UAAAm4C,OAAA,WAEA30C,KAAA44L,KACA54L,KAAAymL,OAAA,EACAzmL,KAAA++K,KACA/+K,KAAAL,MAEA4kL,aAAAvkL,OAQAgiL,QAAAxlL,UAAAmD,IAAA,WACA,GAAAK,KAAAq1M,OAAA,CACA,GAAAnmM,OAAAlP,KAAAgX,KACA,IACA9H,QAAAlP,KAAAkP,OAIAnF,SAAAmF,QACAlP,KAAA60K,KACA,CAEA,GAAAue,UAAApzL,KAAAkP,KAEA,IADAlP,KAAAkP,MAAAA,MACAlP,KAAA+jL,KACA,IACA/jL,KAAA+uH,GAAAnoH,KAAA5G,KAAAw3K,GAAAtoK,MAAAkkL,UACA,MAAArwL,GACA63K,YAAA73K,EAAA/C,KAAAw3K,GAAA,yBAAAx3K,KAAA,WAAA,SAGAA,MAAA+uH,GAAAnoH,KAAA5G,KAAAw3K,GAAAtoK,MAAAkkL,aAUApR,QAAAxlL,UAAAmwI,SAAA,WACA3sI,KAAAkP,MAAAlP,KAAAgX,MACAhX,KAAAymL,OAAA,GAMAzE,QAAAxlL,UAAAq6K,OAAA,WAIA,IAHA,GAAA8+B,QAAA31M,KAEA8D,EAAA9D,KAAAs1M,KAAA11M,OACAkE,KACA6xM,OAAAL,KAAAxxM,GAAA+yK,UAOAmL,QAAAxlL,UAAAo5M,SAAA,WACA,GAAAD,QAAA31M,IAEA,IAAAA,KAAAq1M,OAAA,CAIAr1M,KAAAw3K,GAAA0J,mBACA3nI,OAAAv5C,KAAAw3K,GAAAyN,UAAAjlL,KAGA,KADA,GAAA8D,GAAA9D,KAAAs1M,KAAA11M,OACAkE,KACA6xM,OAAAL,KAAAxxM,GAAAqvM,UAAAwC,OAEA31M,MAAAq1M,QAAA,GASA,IAAA7wB,aAAA,GAAA4tB,MA+BArtB,0BACAtqI,YAAA,EACAs5H,cAAA,EACA/8J,IAAAg8J,KACAniK,IAAAmiK,MA8HAoT,wBAAAwS,MAAA,EA8jBAtP,sBAAAa,wBAAA3tL,UAmDA,IAAA2vL,sBACA3jL,KAAA,SACAosK,MACAwM,UACAqK,UACAC,QAEA,IAAA9W,MAAA+a,mBAAA/a,MAAA+a,kBAAA1O,aAAA,EACArM,MAAA+a,kBAAAnE,gCACA5W,MACA8pB,eACAjT,UACAC,SAEAmqB,OAAAz0B,UAAAxM,MAAAI,QAAA7nK,GAAAi0K,eACA,IAAAxM,MAAAr0J,KAAAu1L,UAAA,CAEA,GAAAC,aAAAnhC,KACAuX,qBAAA6pB,SAAAD,YAAAA,eAIAC,SAAA,SAAAtjB,SAAA9d,OACA,GAAA73I,SAAA63I,MAAAK,gBAEAiN,sBADAtN,MAAA+a,kBAAA+C,SAAA/C,kBAGA5yJ,QAAA08I,UACA18I,QAAAokE,UACAyzE,MACA73I,QAAAqY,WAIA6gK,OAAA,SAAArhC,OACA,GAAAlpI,SAAAkpI,MAAAlpI,QACAikJ,kBAAA/a,MAAA+a,iBACAA,mBAAA3O,aACA2O,kBAAA3O,YAAA,EACAO,SAAAoO,kBAAA,YAEA/a,MAAAr0J,KAAAu1L,YACApqK,QAAAs1I,WAMAsD,wBAAAqL,mBAEAxM,uBAAAwM,mBAAA,KAKAv+H,QAAA,SAAAwjH,OACA,GAAA+a,mBAAA/a,MAAA+a,iBACAA,mBAAA1O,eACArM,MAAAr0J,KAAAu1L,UAGA1yB,yBAAAuM,mBAAA,GAFAA,kBAAAC,cAQA3D,aAAApiL,OAAAmX,KAAAmrK,qBAiKAQ,iBAAA,EACAF,iBAAA,EAgOAypB,MAAA,GAEA,SAAAvkC,KACAA,IAAAn1K,UAAAuxL,MAAA,SAAAhxJ,SACA,GAAAy6I,IAAAx3K,IAEAw3K,IAAAmK,KAAAu0B,OAEA,IAAAt0B,UAAAC,MAEAvzK,QAAA4gJ,aAAAuyB,OACAG,SAAA,kBAAApK,GAAA,KACAqK,OAAA,gBAAArK,GAAA,KACAiK,KAAAG,WAIApK,GAAApB,QAAA,EAEAr5I,SAAAA,QAAA6uJ,aAIAsB,sBAAA1V,GAAAz6I,SAEAy6I,GAAA0C,SAAAzB,aACA0S,0BAAA3T,GAAA1rF,aACA/uD,YACAy6I,IAKAi9B,UAAAj9B,IAGAA,GAAA2+B,MAAA3+B,GACAgJ,cAAAhJ,IACAgI,WAAAhI,IACAuV,WAAAvV,IACA+J,SAAA/J,GAAA,gBACAyP,eAAAzP,IACAwN,UAAAxN,IACAsP,YAAAtP,IACA+J,SAAA/J,GAAA,WAGAlpK,OAAA4gJ,aAAAuyB,OACAjK,GAAAkK,MAAApE,oBAAA9F,IAAA,GACAiK,KAAAI,QACAE,QAAA,OAAAvK,GAAA,MAAA,QAAAoK,SAAAC,SAGArK,GAAA0C,SAAA77K,IACAm5K,GAAAq+B,OAAAr+B,GAAA0C,SAAA77K,MAwFAyvL,OAjjCA,SAAAnc,KAIA,GAAAykC,WACAA,SAAAp/L,IAAA,WAAA,MAAAhX,MAAA8oB,MACA,IAAAutL,YACAA,UAAAr/L,IAAA,WAAA,MAAAhX,MAAAm6K,QAEAi8B,QAAAvlM,IAAA,SAAAylM,SACA1mM,KACA,2EAEA5P,OAGAq2M,SAAAxlM,IAAA,WACAjB,KAAA,sBAAA5P,OAGA6J,OAAA0xB,eAAAo2I,IAAAn1K,UAAA,QAAA45M,SACAvsM,OAAA0xB,eAAAo2I,IAAAn1K,UAAA,SAAA65M,UAEA1kC,IAAAn1K,UAAA+5M,KAAA1lM,IACA8gK,IAAAn1K,UAAAg6M,QAAAv/B,IAEAtF,IAAAn1K,UAAAqqL,OAAA,SACAuuB,QACArmF,GACAhyF,SAEA,GAAAy6I,IAAAx3K,IACA,IAAAmyK,cAAApjD,IACA,MAAA43D,eAAAnP,GAAA49B,QAAArmF,GAAAhyF,QAEAA,SAAAA,YACAA,QAAAgnJ,MAAA,CACA,IAAAF,SAAA,GAAA7B,SAAAxK,GAAA49B,QAAArmF,GAAAhyF,QAIA,OAHAA,SAAA05K,WACA1nF,GAAAnoH,KAAA4wK,GAAAqM,QAAA30K,OAEA,WACA20K,QAAA+xB,cAwgCA9nB,OAnqEA,SAAAnc,KACA,GAAA+kC,QAAA,QACA/kC,KAAAn1K,UAAAsjL,IAAA,SAAA9hL,MAAAV,IACA,GAAAq4M,QAAA31M,KAEAw3K,GAAAx3K,IACA,IAAAzD,MAAAoN,QAAA3L,OACA,IAAA,GAAA8F,GAAA,EAAA4f,EAAA1lB,MAAA4B,OAAAkE,EAAA4f,EAAA5f,IACA6xM,OAAA71B,IAAA9hL,MAAA8F,GAAAxG,SAGAk6K,GAAAiI,QAAAzhL,SAAAw5K,GAAAiI,QAAAzhL,YAAAkC,KAAA5C,IAGAo5M,OAAA75M,KAAAmB,SACAw5K,GAAAkI,eAAA,EAGA,OAAAlI,KAGA7F,IAAAn1K,UAAAqjL,MAAA,SAAA7hL,MAAAV,IAEA,QAAAg/K,MACA9E,GAAAwI,KAAAhiL,MAAAs+K,IACAh/K,GAAAwC,MAAA03K,GAAAv3K,WAHA,GAAAu3K,IAAAx3K,IAOA,OAFAs8K,IAAAh/K,GAAAA,GACAk6K,GAAAsI,IAAA9hL,MAAAs+K,IACA9E,IAGA7F,IAAAn1K,UAAAwjL,KAAA,SAAAhiL,MAAAV,IACA,GAAAq4M,QAAA31M,KAEAw3K,GAAAx3K,IAEA,KAAAC,UAAAL,OAEA,MADA43K,IAAAiI,QAAA51K,OAAA88F,OAAA,MACA6wE,EAGA,IAAAj7K,MAAAoN,QAAA3L,OAAA,CACA,IAAA,GAAA8F,GAAA,EAAA4f,EAAA1lB,MAAA4B,OAAAkE,EAAA4f,EAAA5f,IACA6xM,OAAA31B,KAAAhiL,MAAA8F,GAAAxG,GAEA,OAAAk6K,IAGA,GAAAm/B,KAAAn/B,GAAAiI,QAAAzhL,MACA,KAAA24M,IACA,MAAAn/B,GAEA,IAAA,IAAAv3K,UAAAL,OAEA,MADA43K,IAAAiI,QAAAzhL,OAAA,KACAw5K,EAEA,IAAAl6K,GAIA,IAFA,GAAAyxH,IACAu5E,IAAAqO,IAAA/2M,OACA0oM,OAEA,IADAv5E,GAAA4nF,IAAArO,QACAhrM,IAAAyxH,GAAAzxH,KAAAA,GAAA,CACAq5M,IAAAr1G,OAAAgnG,IAAA,EACA,OAIA,MAAA9wB,KAGA7F,IAAAn1K,UAAA6mL,MAAA,SAAArlL,OACA,GAAAw5K,IAAAx3K,KAEA42M,eAAA54M,MAAA6U,aACA+jM,kBAAA54M,OAAAw5K,GAAAiI,QAAAm3B,iBACAv5B,IACA,UAAAu5B,eAAA,6BACAt5B,oBAAA9F,IAAA,uCAAAx5K,MAAA,iKAGA67K,UAAA77K,OAAA,iBAAAA,MAAA,KAIA,IAAA24M,KAAAn/B,GAAAiI,QAAAzhL,MACA,IAAA24M,IAAA,CACAA,IAAAA,IAAA/2M,OAAA,EAAA2rB,QAAAorL,KAAAA,GAEA,KAAA,GADAn2M,MAAA+qB,QAAAtrB,UAAA,GACA6D,EAAA,EAAA4f,EAAAizL,IAAA/2M,OAAAkE,EAAA4f,EAAA5f,IACA,IACA6yM,IAAA7yM,GAAAhE,MAAA03K,GAAAh3K,MACA,MAAAuC,GACA63K,YAAA73K,EAAAy0K,GAAA,sBAAAx5K,MAAA,MAIA,MAAAw5K,MAkkEAsW,OAh+DA,SAAAnc,KACAA,IAAAn1K,UAAAwtJ,QAAA,SAAA4qB,MAAAwM,WACA,GAAA5J,IAAAx3K,IACAw3K,IAAAwJ,YACAO,SAAA/J,GAAA,eAEA,IAAAq/B,QAAAr/B,GAAA6J,IACAy1B,UAAAt/B,GAAAoL,OACAm0B,mBAAArY,cACAA,gBAAAlnB,GACAA,GAAAoL,OAAAhO,MAGAkiC,UAYAt/B,GAAA6J,IAAA7J,GAAAw/B,UAAAF,UAAAliC,QAVA4C,GAAA6J,IAAA7J,GAAAw/B,UACAx/B,GAAA6J,IAAAzM,MAAAwM,WAAA,EACA5J,GAAA0C,SAAA4R,WACAtU,GAAA0C,SAAA6R,SAIAvU,GAAA0C,SAAA4R,WAAAtU,GAAA0C,SAAA6R,QAAA,MAKA2S,eAAAqY,mBAEAF,SACAA,OAAAI,QAAA,MAEAz/B,GAAA6J,MACA7J,GAAA6J,IAAA41B,QAAAz/B,IAGAA,GAAAyK,QAAAzK,GAAAuD,SAAAvD,GAAAyK,SAAAzK,GAAAuD,QAAA6H,SACApL,GAAAuD,QAAAsG,IAAA7J,GAAA6J,MAMA1P,IAAAn1K,UAAAyiL,aAAA,WACA,GAAAzH,IAAAx3K,IACAw3K,IAAAqJ,UACArJ,GAAAqJ,SAAAlsI,UAIAg9H,IAAAn1K,UAAAozL,SAAA,WACA,GAAApY,IAAAx3K,IACA,KAAAw3K,GAAA0J,kBAAA,CAGAK,SAAA/J,GAAA,iBACAA,GAAA0J,mBAAA,CAEA,IAAAjiL,QAAAu4K,GAAAuD,SACA97K,QAAAA,OAAAiiL,mBAAA1J,GAAA0C,SAAAuG,UACAlnI,OAAAt6C,OAAAyhL,UAAAlJ,IAGAA,GAAAqJ,UACArJ,GAAAqJ,SAAA+0B,UAGA,KADA,GAAA9xM,GAAA0zK,GAAAyN,UAAArlL,OACAkE,KACA0zK,GAAAyN,UAAAnhL,GAAA8xM,UAIAp+B,IAAA1uJ,MAAAgtJ,QACA0B,GAAA1uJ,MAAAgtJ,OAAAO,UAGAmB,GAAAyJ,cAAA,EAEAzJ,GAAAw/B,UAAAx/B,GAAAoL,OAAA,MAEArB,SAAA/J,GAAA,aAEAA,GAAAwI,OAEAxI,GAAA6J,MACA7J,GAAA6J,IAAA41B,QAAA,MAGAz/B,GAAAyK,SACAzK,GAAAyK,OAAAhjL,OAAA,SAw4DA6uL,OAxNA,SAAAnc,KAEA2X,qBAAA3X,IAAAn1K,WAEAm1K,IAAAn1K,UAAA06M,UAAA,SAAA55M,IACA,MAAAs+K,UAAAt+K,GAAA0C,OAGA2xK,IAAAn1K,UAAAslL,QAAA,WACA,GAAAtK,IAAAx3K,KACA8xL,IAAAta,GAAA0C,SACAzyI,OAAAqqJ,IAAArqJ,OACAk7I,aAAAmP,IAAAnP,YAEA,IAAAnL,GAAAwJ,WAGA,IAAA,GAAA5wK,OAAAonK,IAAAyL,OAAA,CACA,GAAA1sH,MAAAihH,GAAAyL,OAAA7yK,IACAmmD,MAAAqxH,YACApQ,GAAAyL,OAAA7yK,KAAAmlK,YAAAh/G,MAAA,IAKAihH,GAAAiL,aAAAE,cAAAA,aAAApiK,KAAAiiK,aAAAE,YAIAlL,GAAAyK,OAAAU,YAEA,IAAA/N,MACA,KACAA,MAAAntI,OAAA7gC,KAAA4wK,GAAAsR,aAAAtR,GAAAwV,gBACA,MAAAjqL,GAMA,GALA63K,YAAA73K,EAAAy0K,GAAA,UAKAA,GAAA0C,SAAAi9B,YACA,IACAviC,MAAA4C,GAAA0C,SAAAi9B,YAAAvwM,KAAA4wK,GAAAsR,aAAAtR,GAAAwV,eAAAjqL,GACA,MAAAA,GACA63K,YAAA73K,EAAAy0K,GAAA,eACA5C,MAAA4C,GAAAoL,WAGAhO,OAAA4C,GAAAoL,OAiBA,MAZAhO,iBAAAF,SACAn4K,MAAAoN,QAAAirK,QACAhlK,KACA,uGAEA4nK,IAGA5C,MAAA0J,oBAGA1J,MAAA31K,OAAA0jL,aACA/N,QAwJAkZ,MAuNA,IAAAspB,eAAAz9E,OAAA/8H,OAAAL,OAEA86M,WACAz5M,KAAA,aACA6iL,UAAA,EAEAvT,OACArgH,QAAAuqJ,aACAE,QAAAF,aACAljM,KAAAylH,OAAA94B,SAGA02G,QAAA,WACAv3M,KAAA8nD,MAAAj+C,OAAA88F,OAAA,MACA3mG,KAAAghB,SAGAw2L,UAAA,WACA,GAAA7B,QAAA31M,IAEA,KAAA,GAAAoQ,OAAAulM,QAAA7tJ,MACA2nI,gBAAAkmB,OAAA7tJ,MAAA13C,IAAAulM,OAAA30L,OAIAykK,OACA54H,QAAA,SAAAl/C,KACA2hL,WAAAtvL,KAAA,SAAApC,MAAA,MAAA6rB,SAAA9b,IAAA/P,SAEA05M,QAAA,SAAA3pM,KACA2hL,WAAAtvL,KAAA,SAAApC,MAAA,OAAA6rB,QAAA9b,IAAA/P,UAIA6pC,OAAA,WACA,GAAAmtI,OAAA2K,uBAAAv/K,KAAAijL,OAAAhJ,SACAhF,iBAAAL,OAAAA,MAAAK,gBACA,IAAAA,iBAAA,CAEA,GAAAr3K,MAAAyxL,iBAAApa,iBACA,IAAAr3K,OACAoC,KAAA6sD,UAAApjC,QAAAzpB,KAAA6sD,QAAAjvD,OACAoC,KAAAs3M,SAAA7tL,QAAAzpB,KAAAs3M,QAAA15M,OAEA,MAAAg3K,MAGA,IAAAkd,KAAA9xL,KACA8nD,MAAAgqI,IAAAhqI,MACA9mC,KAAA8wK,IAAA9wK,KACA5Q,IAAA,MAAAwkK,MAAAxkK,IAGA6kK,iBAAAd,KAAA+W,KAAAjW,iBAAAF,IAAA,KAAAE,iBAAA,IAAA,IACAL,MAAAxkK,GACA03C,OAAA13C,MACAwkK,MAAA+a,kBAAA7nI,MAAA13C,KAAAu/K,kBAEAp2I,OAAAv4B,KAAA5Q,KACA4Q,KAAA9gB,KAAAkQ,OAEA03C,MAAA13C,KAAAwkK,MACA5zJ,KAAA9gB,KAAAkQ,KAEApQ,KAAAkU,KAAA8M,KAAAphB,OAAAyc,SAAArc,KAAAkU,MACAu7K,gBAAA3nI,MAAA9mC,KAAA,GAAAA,KAAAhhB,KAAA4iL,SAIAhO,MAAAr0J,KAAAu1L,WAAA,EAEA,MAAAlhC,SAIA6iC,mBACAJ,UAAAA,YAKA,SAAA1lC,KAEA,GAAA+lC,aACAA,WAAA1gM,IAAA,WAAA,MAAA1I,SAEAopM,UAAA7mM,IAAA,WACAjB,KACA,yEAIA/F,OAAA0xB,eAAAo2I,IAAA,SAAA+lC,WAKA/lC,IAAAgmC,MACA/nM,KAAAA,KACA9E,OAAAA,OACA2tK,aAAAA,aACAnC,eAAAA,gBAGA3E,IAAA9gK,IAAAA,IACA8gK,IAAAimC,OAAA3gC,IACAtF,IAAAiK,SAAAA,SAEAjK,IAAA50I,QAAAlzB,OAAA88F,OAAA,MACAsoF,YAAA3yL,QAAA,SAAA8+B,MACAu2I,IAAA50I,QAAA3B,KAAA,KAAAvxB,OAAA88F,OAAA,QAKAgrE,IAAA50I,QAAAkuJ,MAAAtZ,IAEA7mK,OAAA6mK,IAAA50I,QAAAguB,WAAA0sJ,mBAEAzpB,QAAArc,KACA4c,YAAA5c,KACA8c,WAAA9c,KACAwd,mBAAAxd,MAGAmc,OAEAjkL,OAAA0xB,eAAAuyJ,MAAAtxL,UAAA,aACAwa,IAAAk/J,oBAGArsK,OAAA0xB,eAAAuyJ,MAAAtxL,UAAA,eACAwa,IAAA,WAEA,MAAAhX,MAAAiiL,QAAAjiL,KAAAiiL,OAAA41B,cAIA/pB,MAAA7zJ,QAAA,OAMA,IAshDA9xB,KACAqqK,IACAolB,IACAJ,QACAC,cACAC,iBAmFAS,OAkLAiB,SAiPA0e,WAjhEA/xB,eAAAxT,QAAA,eAGAwlC,YAAAxlC,QAAA,yCACA+V,YAAA,SAAAvT,IAAA35I,KAAAqqK,MACA,MACA,UAAAA,MAAAsS,YAAAhjC,MAAA,WAAA35I,MACA,aAAAqqK,MAAA,WAAA1wB,KACA,YAAA0wB,MAAA,UAAA1wB,KACA,UAAA0wB,MAAA,UAAA1wB,KAIAwf,iBAAAhiB,QAAA,wCAEAiiB,cAAAjiB,QACA,wYAQA8hB,QAAA,+BAEAF,QAAA,SAAAv2L,MACA,MAAA,MAAAA,KAAA0hB,OAAA,IAAA,UAAA1hB,KAAAyS,MAAA,EAAA,IAGAikL,aAAA,SAAA12L,MACA,MAAAu2L,SAAAv2L,MAAAA,KAAAyS,MAAA,EAAAzS,KAAAgC,QAAA,IAGA60L,iBAAA,SAAA9mL,KACA,MAAA,OAAAA,MAAA,IAAAA,KAsFAwjL,cACA6mB,IAAA,6BACAC,KAAA,sCAGAC,UAAA3lC,QACA,snBAeAge,MAAAhe,QACA,kNAGA,GAGAk0B,SAAA,SAAA1xB,KAAA,MAAA,QAAAA,KAEAkD,cAAA,SAAAlD,KACA,MAAAmjC,WAAAnjC,MAAAwb,MAAAxb,MAcA0b,oBAAA5mL,OAAA88F,OAAA,MA0BA0rF,gBAAA9f,QAAA,6CAiFA4lC,QAAAtuM,OAAAq/H,QACA0xB,cAAAm2B,gBACAtlJ,gBAAAA,gBACA2lJ,eAAAA,eACAC,cAAAA,cACAxrL,aAAAA,aACAE,YAAAA,YACAyrL,YAAAA,YACAlyL,WAAAA,WACAmyL,YAAAA,YACAT,QAAAA,QACAU,eAAAA,eACA30L,aAAAA,eAKA+0L,KACAnrF,OAAA,SAAAt/F,EAAAutK,OACAgd,YAAAhd,QAEAjgI,OAAA,SAAA+9I,SAAA9d,OACA8d,SAAAnyK,KAAAuxK,MAAAld,MAAAr0J,KAAAuxK,MACAF,YAAAc,UAAA,GACAd,YAAAhd,SAGAxjH,QAAA,SAAAwjH,OACAgd,YAAAhd,OAAA,KA2CAie,UAAA,GAAAne,OAAA,UAEAjrK,OAAA,SAAA,WAAA,SAAA,SAAA,WAgrBA+uK,YACA7xE,OAAA8rF,iBACA99I,OAAA89I,iBACArhI,QAAA,SAAAwjH,OACA6d,iBAAA7d,MAAAie,aAsEAa,eAAA7pL,OAAA88F,OAAA,MAqCAyxG,aACAtmB,IACAtZ,YA6EA0E,OACAv2E,OAAAktF,YACAl/I,OAAAk/I,aAoCAwkB,OACA1xG,OAAAguF,YACAhgJ,OAAAggJ,aAKAkB,oBAAA,gBA6XAiD,YAAA,MACAG,qBAAA,MAmOAzC,QACA7vF,OAAA8yF,mBACA9kJ,OAAA8kJ,oBAsFAlR,UACA5hF,OAAA+yF,eACA/kJ,OAAA+kJ,gBAKAiB,eAAAnxD,OAAA,SAAA8uE,SACA,GAAA5tM,QACA6tM,cAAA,gBACAC,kBAAA,OAOA,OANAF,SAAAx4L,MAAAy4L,eAAAj8M,QAAA,SAAAo2K,MACA,GAAAA,KAAA,CACA,GAAAhmJ,KAAAgmJ,KAAA5yJ,MAAA04L,kBACA9rL,KAAA9sB,OAAA,IAAA8K,IAAAgiB,IAAA,GAAA1vB,QAAA0vB,IAAA,GAAA1vB,WAGA0N,MAyDA+tM,SAAA,MACAC,YAAA,iBACAvd,QAAA,SAAA98L,GAAAT,KAAA+P,KAEA,GAAA8qM,SAAA57M,KAAAe,MACAS,GAAAS,MAAA65M,YAAA/6M,KAAA+P,SACA,IAAA+qM,YAAA77M,KAAA8Q,KACAtP,GAAAS,MAAA65M,YAAA/6M,KAAA+P,IAAAxQ,QAAAu7M,YAAA,IAAA,iBACA,CACA,GAAAE,gBAAAnvJ,UAAA7rD,KACA,IAAArB,MAAAoN,QAAAgE,KAIA,IAAA,GAAA7J,GAAA,EAAAqE,IAAAwF,IAAA/N,OAAAkE,EAAAqE,IAAArE,IACAzF,GAAAS,MAAA85M,gBAAAjrM,IAAA7J,OAGAzF,IAAAS,MAAA85M,gBAAAjrM,MAKAkrM,aAAA,SAAA,MAAA,MAGApvJ,UAAA+/E,OAAA,SAAA/gI,MAGA,GAFAqvM,WAAAA,YAAAv8M,SAAAq/J,cAAA,OAAA97J,MAEA,YADA2J,KAAA0vK,SAAA1vK,QACAA,OAAAqvM,YACA,MAAArvM,KAGA,KAAA,GADAqwM,SAAArwM,KAAA6W,OAAA,GAAAzN,cAAApJ,KAAA4H,MAAA,GACAvM,EAAA,EAAAA,EAAA+0M,YAAAj5M,OAAAkE,IAAA,CACA,GAAAlG,MAAAi7M,YAAA/0M,GAAAg1M,OACA,IAAAl7M,OAAAk6M,YACA,MAAAl6M,SAgDAkB,OACA6nG,OAAAnuB,YACA7jC,OAAA6jC,aAoFAgjH,kBAAAhyD,OAAA,SAAA5rI,MACA,OACAigM,WAAAjgM,KAAA,SACAkgM,aAAAlgM,KAAA,YACAmgM,iBAAAngM,KAAA,gBACAsiM,WAAAtiM,KAAA,SACAwiM,aAAAxiM,KAAA,YACAuiM,iBAAAviM,KAAA,mBAIAm7M,cAAA19B,YAAA4Y,MACAgI,WAAA,aACAe,UAAA,YAGAR,eAAA,aACAN,mBAAA,gBACAW,cAAA,YACAV,kBAAA,cACA4c,qBAEA5rM,KAAA/R,OAAA49M,qBACA7rM,KAAA/R,OAAA69M,wBAEAzc,eAAA,mBACAN,mBAAA,2BAEA/uL,KAAA/R,OAAA89M,oBACA/rM,KAAA/R,OAAA+9M,uBAEAtc,cAAA,kBACAV,kBAAA,sBAKA,IAAAT,KAAArgB,UACAjgL,OAAAa,sBACAb,OAAAa,sBAAAmhF,KAAAhiF,QACAY,WACA,SAAAsB,IAAA,MAAAA,OAsDA4/L,YAAA,yBAiXAQ,WAAAriB,WACA10E,OAAA+5F,OACA0Y,SAAA1Y,OACAnnJ,OAAA,SAAAq7H,MAAAmrB,KAEA,IAAAnrB,MAAAr0J,KAAAm/K,KACAI,MAAAlrB,MAAAmrB,IAEAA,UAKAsZ,iBACAn8B,MACAm7B,MACA7hB,OACAjO,SACAzpL,MACA4+L,YAOAzH,QAAAojB,gBAAA9xH,OAAA6wH,aAEAkB,MA/wEA,SAAAC,SAgBA,QAAAC,aAAAxkC,KACA,MAAA,IAAAN,OAAAyjC,QAAAnnB,QAAAhc,KAAAniK,wBAAA1F,GAAA6nK,KAGA,QAAAykC,YAAAC,SAAAv4G,WACA,QAAA5nD,UACA,KAAAA,OAAA4nD,WACAw4G,WAAAD,UAIA,MADAngK,QAAA4nD,UAAAA,UACA5nD,OAGA,QAAAogK,YAAAt7M,IACA,GAAAY,QAAAk5M,QAAA74M,WAAAjB,GAEAwzK,OAAA5yK,SACAk5M,QAAApyM,YAAA9G,OAAAZ,IAKA,QAAAu7M,WAAAhlC,MAAAilC,mBAAApuB,UAAAC,OAAAouB,QAEA,GADAllC,MAAAiqB,cAAAib,QACA9uB,gBAAApW,MAAAilC,mBAAApuB,UAAAC,QAAA,CAIA,GAAAnrK,MAAAq0J,MAAAr0J,KACA60B,SAAAw/H,MAAAx/H,SACA2/H,IAAAH,MAAAG,GACAlD,OAAAkD,MAEAx0J,MAAAA,KAAA8lL,KACAG,QAGAA,OACA5xB,MAAAO,IAEA7mK,OAAAsjM,gBAAAhyM,QACA0O,OAAAsjM,gBAAAhlM,KAAA,SAAAmtM,QACA,MAAA3nC,UAAA2nC,QACAA,OAAAl9M,KAAAk4K,KACAglC,SAAAhlC,QAGAzmK,OAAAkiL,iBAAAzb,MAEAnlK,KACA,4BAAAmlK,IAAA,kHAGAH,MAAAlpI,SAIAkpI,MAAAI,IAAAJ,MAAAO,GACAgjC,QAAA1sK,gBAAAmpI,MAAAO,GAAAJ,KACAojC,QAAAv9C,cAAAma,IAAAH,OACAolC,SAAAplC,OAIAqlC,eAAArlC,MAAAx/H,SAAAykK,oBACAhoC,MAAAtxJ,OACA25L,kBAAAtlC,MAAAilC,oBAEA5D,OAAAxqB,UAAA7W,MAAAI,IAAA0W,QAGAnrK,MAAAA,KAAA8lL,KACAG,SAEA10B,OAAA8C,MAAAS,YACAT,MAAAI,IAAAmjC,QAAA9mB,cAAAzc,MAAAvwF,MACA4xH,OAAAxqB,UAAA7W,MAAAI,IAAA0W,UAEA9W,MAAAI,IAAAmjC,QAAA/mB,eAAAxc,MAAAvwF,MACA4xH,OAAAxqB,UAAA7W,MAAAI,IAAA0W,UAIA,QAAAV,iBAAApW,MAAAilC,mBAAApuB,UAAAC,QACA,GAAA5nL,GAAA8wK,MAAAr0J,IACA,IAAAsxJ,MAAA/tK,GAAA,CACA,GAAAq2M,eAAAtoC,MAAA+C,MAAA+a,oBAAA7rL,EAAAgyM,SAQA,IAPAjkC,MAAA/tK,EAAAA,EAAAg5K,OAAAjL,MAAA/tK,EAAAA,EAAA0E,OACA1E,EAAA8wK,OAAA,EAAA6W,UAAAC,QAMA7Z,MAAA+C,MAAA+a,mBAKA,MAJAyqB,eAAAxlC,MAAAilC,oBACA/nC,OAAAqoC,gBACAE,oBAAAzlC,MAAAilC,mBAAApuB,UAAAC,SAEA,GAKA,QAAA0uB,eAAAxlC,MAAAilC,oBACAhoC,MAAA+C,MAAAr0J,KAAA+5L,iBACAT,mBAAA35M,KAAAJ,MAAA+5M,mBAAAjlC,MAAAr0J,KAAA+5L,eACA1lC,MAAAr0J,KAAA+5L,cAAA,MAEA1lC,MAAAI,IAAAJ,MAAA+a,kBAAAtO,IACAk5B,YAAA3lC,QACAslC,kBAAAtlC,MAAAilC,oBACAG,SAAAplC,SAIAgd,YAAAhd,OAEAilC,mBAAA35M,KAAA00K,QAIA,QAAAylC,qBAAAzlC,MAAAilC,mBAAApuB,UAAAC,QAOA,IANA,GAAA5nL,GAKA02M,UAAA5lC,MACA4lC,UAAA7qB,mBAEA,GADA6qB,UAAAA,UAAA7qB,kBAAA/M,OACA/Q,MAAA/tK,EAAA02M,UAAAj6L,OAAAsxJ,MAAA/tK,EAAAA,EAAA45L,YAAA,CACA,IAAA55L,EAAA,EAAAA,EAAA6yM,IAAAyC,SAAAx5M,SAAAkE,EACA6yM,IAAAyC,SAAAt1M,GAAA+uL,UAAA2nB,UAEAX,oBAAA35M,KAAAs6M,UACA,OAKAvE,OAAAxqB,UAAA7W,MAAAI,IAAA0W,QAGA,QAAAuqB,QAAAh3M,OAAA+1K,IAAAylC,QACA5oC,MAAA5yK,UACA4yK,MAAA4oC,QACAA,OAAAn7M,aAAAL,QACAk5M,QAAAtyM,aAAA5G,OAAA+1K,IAAAylC,QAGAtC,QAAA3mB,YAAAvyL,OAAA+1K,MAKA,QAAAilC,gBAAArlC,MAAAx/H,SAAAykK,oBACA,GAAAt9M,MAAAoN,QAAAyrC,UACA,IAAA,GAAAtxC,GAAA,EAAAA,EAAAsxC,SAAAx1C,SAAAkE,EACA81M,UAAAxkK,SAAAtxC,GAAA+1M,mBAAAjlC,MAAAI,IAAA,MAAA,OAEAhD,aAAA4C,MAAAvwF,OACA8zH,QAAA3mB,YAAA5c,MAAAI,IAAAmjC,QAAA/mB,eAAAxc,MAAAvwF,OAIA,QAAAk2H,aAAA3lC,OACA,KAAAA,MAAA+a,mBACA/a,MAAAA,MAAA+a,kBAAA/M,MAEA,OAAA/Q,OAAA+C,MAAAG,KAGA,QAAAmlC,mBAAAtlC,MAAAilC,oBACA,IAAA,GAAAvR,KAAA,EAAAA,IAAAqO,IAAAhwG,OAAA/mG,SAAA0oM,IACAqO,IAAAhwG,OAAA2hG,KAAAzV,UAAAje,MAEA9wK,GAAA8wK,MAAAr0J,KAAAu8J,KACAjL,MAAA/tK,KACA+tK,MAAA/tK,EAAA6iG,SAAA7iG,EAAA6iG,OAAAksF,UAAAje,OACA/C,MAAA/tK,EAAAmyM,SAAA4D,mBAAA35M,KAAA00K,QAOA,QAAAolC,UAAAplC,OACA,GAAA9wK,EACA,IAAA+tK,MAAA/tK,EAAA8wK,MAAA+V,mBACAwtB,QAAAp7M,aAAA63K,MAAAI,IAAAlxK,EAAA,QAGA,KADA,GAAA42M,UAAA9lC,MACA8lC,UACA7oC,MAAA/tK,EAAA42M,SAAAhvK,UAAAmmI,MAAA/tK,EAAAA,EAAAo2K,SAAAuQ,WACA0tB,QAAAp7M,aAAA63K,MAAAI,IAAAlxK,EAAA,IAEA42M,SAAAA,SAAAz7M,MAIA4yK,OAAA/tK,EAAA46L,iBACA56L,IAAA8wK,MAAAlpI,SACA5nC,IAAA8wK,MAAAyL,mBACAxO,MAAA/tK,EAAAA,EAAAo2K,SAAAuQ,WAEA0tB,QAAAp7M,aAAA63K,MAAAI,IAAAlxK,EAAA,IAIA,QAAA62M,WAAAlvB,UAAAC,OAAAlW,OAAAolC,SAAApoB,OAAAqnB,oBACA,KAAAe,UAAApoB,SAAAooB,SACAhB,UAAApkC,OAAAolC,UAAAf,mBAAApuB,UAAAC,QAIA,QAAAmvB,mBAAAjmC,OACA,GAAA9wK,GAAA8b,EACAW,KAAAq0J,MAAAr0J,IACA,IAAAsxJ,MAAAtxJ,MAEA,IADAsxJ,MAAA/tK,EAAAyc,KAAAu8J,OAAAjL,MAAA/tK,EAAAA,EAAAstD,UAAAttD,EAAA8wK,OACA9wK,EAAA,EAAAA,EAAA6yM,IAAAvlJ,QAAAxxD,SAAAkE,EAAA6yM,IAAAvlJ,QAAAttD,GAAA8wK,MAEA,IAAA/C,MAAA/tK,EAAA8wK,MAAAx/H,UACA,IAAAx1B,EAAA,EAAAA,EAAAg1J,MAAAx/H,SAAAx1C,SAAAggB,EACAi7L,kBAAAjmC,MAAAx/H,SAAAx1B,IAKA,QAAAk7L,cAAArvB,UAAAjW,OAAAolC,SAAApoB,QACA,KAAAooB,UAAApoB,SAAAooB,SAAA,CACA,GAAAG,IAAAvlC,OAAAolC,SACA/oC,OAAAkpC,MACAlpC,MAAAkpC,GAAAhmC,MACAimC,0BAAAD,IACAF,kBAAAE,KAEApB,WAAAoB,GAAA/lC,OAMA,QAAAgmC,2BAAApmC,MAAAmrB,IACA,GAAAluB,MAAAkuB,KAAAluB,MAAA+C,MAAAr0J,MAAA,CACA,GAAAzc,GACAq9F,UAAAw1G,IAAAp9J,OAAA35C,OAAA,CAaA,KAZAiyK,MAAAkuB,IAGAA,GAAA5+F,WAAAA,UAGA4+F,GAAA0Z,WAAA7kC,MAAAI,IAAA7zE,WAGA0wE,MAAA/tK,EAAA8wK,MAAA+a,oBAAA9d,MAAA/tK,EAAAA,EAAA8+K,SAAA/Q,MAAA/tK,EAAAyc,OACAy6L,0BAAAl3M,EAAAi8L,IAEAj8L,EAAA,EAAAA,EAAA6yM,IAAAp9J,OAAA35C,SAAAkE,EACA6yM,IAAAp9J,OAAAz1C,GAAA8wK,MAAAmrB,GAEAluB,OAAA/tK,EAAA8wK,MAAAr0J,KAAAu8J,OAAAjL,MAAA/tK,EAAAA,EAAAy1C,QACAz1C,EAAA8wK,MAAAmrB,IAEAA,SAGA4Z,YAAA/kC,MAAAI,KAIA,QAAAimC,gBAAAxvB,UAAAyvB,MAAAC,MAAAtB,mBAAAuB,YAgBA,IAfA,GAQAC,aAAAC,SAAAC,YAAA7vB,OARA8vB,YAAA,EACAC,YAAA,EACAC,UAAAR,MAAAt7M,OAAA,EACA+7M,cAAAT,MAAA,GACAU,YAAAV,MAAAQ,WACAG,UAAAV,MAAAv7M,OAAA,EACAk8M,cAAAX,MAAA,GACAY,YAAAZ,MAAAU,WAMAG,SAAAZ,WAEAI,aAAAE,WAAAD,aAAAI,WACAjqC,QAAA+pC,eACAA,cAAAT,QAAAM,aACA5pC,QAAAgqC,aACAA,YAAAV,QAAAQ,WACAzpB,UAAA0pB,cAAAG,gBACAG,WAAAN,cAAAG,cAAAjC,oBACA8B,cAAAT,QAAAM,aACAM,cAAAX,QAAAM,cACAxpB,UAAA2pB,YAAAG,cACAE,WAAAL,YAAAG,YAAAlC,oBACA+B,YAAAV,QAAAQ,WACAK,YAAAZ,QAAAU,YACA5pB,UAAA0pB,cAAAI,cACAE,WAAAN,cAAAI,YAAAlC,oBACAmC,SAAA7D,QAAAtyM,aAAA4lL,UAAAkwB,cAAA3mC,IAAAmjC,QAAA1mB,YAAAmqB,YAAA5mC,MACA2mC,cAAAT,QAAAM,aACAO,YAAAZ,QAAAU,YACA5pB,UAAA2pB,YAAAE,gBACAG,WAAAL,YAAAE,cAAAjC,oBACAmC,SAAA7D,QAAAtyM,aAAA4lL,UAAAmwB,YAAA5mC,IAAA2mC,cAAA3mC,KACA4mC,YAAAV,QAAAQ,WACAI,cAAAX,QAAAM,eAEA7pC,QAAAypC,eAAAA,YAAA/oB,kBAAA4oB,MAAAM,YAAAE,YACAJ,SAAAzpC,MAAAiqC,cAAA1rM,KACAirM,YAAAS,cAAA1rM,KACA8rM,aAAAJ,cAAAZ,MAAAM,YAAAE,WACA9pC,QAAA0pC,UACA1B,UAAAkC,cAAAjC,mBAAApuB,UAAAkwB,cAAA3mC,MAEAumC,YAAAL,MAAAI,UAEAC,aACA3rM,KACA,kHAIAqiL,UAAAspB,YAAAO,gBACAG,WAAAV,YAAAO,cAAAjC,oBACAqB,MAAAI,cAAAnuM,GACA6uM,SAAA7D,QAAAtyM,aAAA4lL,UAAA8vB,YAAAvmC,IAAA2mC,cAAA3mC,MAGA4kC,UAAAkC,cAAAjC,mBAAApuB,UAAAkwB,cAAA3mC,MAGA8mC,cAAAX,QAAAM,aAGAD,aAAAE,WACAhwB,OAAA9Z,QAAAupC,MAAAU,UAAA,IAAA,KAAAV,MAAAU,UAAA,GAAA7mC,IACA2lC,UAAAlvB,UAAAC,OAAAyvB,MAAAM,YAAAI,UAAAhC,qBACA4B,YAAAI,WACAf,aAAArvB,UAAAyvB,MAAAM,YAAAE,WAIA,QAAAQ,cAAAvnH,KAAAumH,MAAA/8J,MAAAoD,KACA,IAAA,GAAAz9C,GAAAq6C,MAAAr6C,EAAAy9C,IAAAz9C,IAAA,CACA,GAAAie,GAAAm5L,MAAAp3M,EACA,IAAA+tK,MAAA9vJ,IAAAkwK,UAAAt9F,KAAA5yE,GAAA,MAAAje,IAIA,QAAAm4M,YAAAvpB,SAAA9d,MAAAilC,mBAAAuB,YACA,GAAA1oB,WAAA9d,MAAA,CAIA,GAAAI,KAAAJ,MAAAI,IAAA0d,SAAA1d,GAEA,IAAAlD,OAAA4gB,SAAApT,oBAMA,YALAzN,MAAA+C,MAAAM,aAAAyJ,UACAw9B,QAAAzpB,SAAA1d,IAAAJ,MAAAilC,oBAEAjlC,MAAA0K,oBAAA,EASA,IAAAxN,OAAA8C,MAAAQ,WACAtD,OAAA4gB,SAAAtd,WACAR,MAAAxkK,MAAAsiL,SAAAtiL,MACA0hK,OAAA8C,MAAAU,WAAAxD,OAAA8C,MAAAqU,SAGA,YADArU,MAAA+a,kBAAA+C,SAAA/C,kBAIA,IAAA7rL,GACAyc,KAAAq0J,MAAAr0J,IACAsxJ,OAAAtxJ,OAAAsxJ,MAAA/tK,EAAAyc,KAAAu8J,OAAAjL,MAAA/tK,EAAAA,EAAAkyM,WACAlyM,EAAA4uL,SAAA9d,MAGA,IAAAsmC,OAAAxoB,SAAAt9I,SACA2lK,GAAAnmC,MAAAx/H,QACA,IAAAy8H,MAAAtxJ,OAAAg6L,YAAA3lC,OAAA,CACA,IAAA9wK,EAAA,EAAAA,EAAA6yM,IAAAhiK,OAAA/0C,SAAAkE,EAAA6yM,IAAAhiK,OAAA7wC,GAAA4uL,SAAA9d,MACA/C,OAAA/tK,EAAAyc,KAAAu8J,OAAAjL,MAAA/tK,EAAAA,EAAA6wC,SAAA7wC,EAAA4uL,SAAA9d,OAEAhD,QAAAgD,MAAAvwF,MACAwtF,MAAAqpC,QAAArpC,MAAAkpC,IACAG,QAAAH,IAAAE,eAAAjmC,IAAAkmC,MAAAH,GAAAlB,mBAAAuB,YACAvpC,MAAAkpC,KACAlpC,MAAA6gB,SAAAruG,OAAA8zH,QAAAzmB,eAAA1c,IAAA,IACA2lC,UAAA3lC,IAAA,KAAA+lC,GAAA,EAAAA,GAAAn7M,OAAA,EAAAi6M,qBACAhoC,MAAAqpC,OACAJ,aAAA9lC,IAAAkmC,MAAA,EAAAA,MAAAt7M,OAAA,GACAiyK,MAAA6gB,SAAAruG,OACA8zH,QAAAzmB,eAAA1c,IAAA,IAEA0d,SAAAruG,OAAAuwF,MAAAvwF,MACA8zH,QAAAzmB,eAAA1c,IAAAJ,MAAAvwF,MAEAwtF,MAAAtxJ,OACAsxJ,MAAA/tK,EAAAyc,KAAAu8J,OAAAjL,MAAA/tK,EAAAA,EAAAs4M,YAAAt4M,EAAA4uL,SAAA9d,QAIA,QAAAynC,kBAAAznC,MAAA2O,MAAA+4B,SAGA,GAAAxqC,OAAAwqC,UAAAzqC,MAAA+C,MAAA31K,QACA21K,MAAA31K,OAAAshB,KAAA+5L,cAAA/2B,UAEA,KAAA,GAAAz/K,GAAA,EAAAA,EAAAy/K,MAAA3jL,SAAAkE,EACAy/K,MAAAz/K,GAAAyc,KAAAu8J,KAAAm5B,OAAA1yB,MAAAz/K,IAWA,QAAAq4M,SAAAnnC,IAAAJ,MAAAilC,oBACA,GAAA/nC,OAAA8C,MAAAS,YAAAxD,MAAA+C,MAAAM,cAGA,MAFAN,OAAAI,IAAAA,IACAJ,MAAA0K,oBAAA,GACA,CAGA,KAAAi9B,gBAAAvnC,IAAAJ,OACA,OAAA,CAGAA,OAAAI,IAAAA,GACA,IAAAD,KAAAH,MAAAG,IACAx0J,KAAAq0J,MAAAr0J,KACA60B,SAAAw/H,MAAAx/H,QACA,IAAAy8H,MAAAtxJ,QACAsxJ,MAAA/tK,EAAAyc,KAAAu8J,OAAAjL,MAAA/tK,EAAAA,EAAA0E,OAAA1E,EAAA8wK,OAAA,GACA/C,MAAA/tK,EAAA8wK,MAAA+a,oBAGA,MADAyqB,eAAAxlC,MAAAilC,qBACA,CAGA,IAAAhoC,MAAAkD,KAAA,CACA,GAAAlD,MAAAz8H,UAEA,GAAA4/H,IAAAwnC,gBAIA,GAAA3qC,MAAA/tK,EAAAyc,OAAAsxJ,MAAA/tK,EAAAA,EAAAykL,WAAA1W,MAAA/tK,EAAAA,EAAAqtM,YACA,GAAArtM,IAAAkxK,IAAAm8B,UAWA,MARA,mBAAAphM,UACA0sM,SAEAA,QAAA,EACA1sM,QAAAH,KAAA,WAAAolK,KACAjlK,QAAAH,KAAA,qBAAA9L,GACAiM,QAAAH,KAAA,qBAAAolK,IAAAm8B,aAEA,MAEA,CAIA,IAAA,GAFAuL,gBAAA,EACA13D,UAAAgwB,IAAA2nC,WACArU,IAAA,EAAAA,IAAAlzJ,SAAAx1C,OAAA0oM,MAAA,CACA,IAAAtjD,YAAAm3D,QAAAn3D,UAAA5vG,SAAAkzJ,KAAAuR,oBAAA,CACA6C,eAAA,CACA,OAEA13D,UAAAA,UAAAysC,YAIA,IAAAirB,eAAA13D,UAUA,MAPA,mBAAAj1I,UACA0sM,SAEAA,QAAA;mFACA1sM,QAAAH,KAAA,WAAAolK,KACAjlK,QAAAH,KAAA,sCAAAolK,IAAA4kB,WAAAxkJ,YAEA,MAxCA6kK,gBAAArlC,MAAAx/H,SAAAykK,mBA6CA,IAAAhoC,MAAAtxJ,MACA,IAAA,GAAAnQ,OAAAmQ,MACA,IAAAq8L,iBAAAxsM,KAAA,CACA8pM,kBAAAtlC,MAAAilC,mBACA,YAIA7kC,KAAAz0J,OAAAq0J,MAAAvwF,OACA2wF,IAAAz0J,KAAAq0J,MAAAvwF,KAEA,QAAA,EAGA,QAAAk4H,iBAAA5nH,KAAAigF,OACA,MAAA/C,OAAA+C,MAAAG,KAEA,IAAAH,MAAAG,IAAAr8J,QAAA,kBACAk8J,MAAAG,IAAAliK,iBAAA8hF,KAAAq8F,SAAAr8F,KAAAq8F,QAAAn+K,eAGA8hF,KAAAipG,YAAAhpB,MAAAS,UAAA,EAAA,GA9hBA,GAAAvxK,GAAA8b,EACA+2L,OAEA1gB,QAAAsjB,QAAAtjB,QACAkiB,QAAAoB,QAAApB,OAEA,KAAAr0M,EAAA,EAAAA,EAAA2F,MAAA7J,SAAAkE,EAEA,IADA6yM,IAAAltM,MAAA3F,OACA8b,EAAA,EAAAA,EAAAq2K,QAAAr2L,SAAAggB,EACAiyJ,MAAAokB,QAAAr2K,GAAAnW,MAAA3F,MACA6yM,IAAAltM,MAAA3F,IAAA5D,KAAA+1L,QAAAr2K,GAAAnW,MAAA3F,IA2BA,IAAA0iM,OAAA,EAsZAiW,QAAA,EAGAG,iBAAArqC,QAAA,gDAoGA,OAAA,UAAAmgB,SAAA9d,MAAAwM,UAAAg6B,WAAA3vB,UAAAC,QACA,GAAA9Z,QAAAgD,OAEA,YADA/C,MAAA6gB,WAAAmoB,kBAAAnoB,UAIA,IAAAmqB,iBAAA,EACAhD,qBAEA,IAAAjoC,QAAA8gB,UAEAmqB,gBAAA,EACAjD,UAAAhlC,MAAAilC,mBAAApuB,UAAAC,YACA,CACA,GAAAoxB,eAAAjrC,MAAA6gB,SAAAkL,SACA,KAAAkf,eAAA7qB,UAAAS,SAAA9d,OAEAqnC,WAAAvpB,SAAA9d,MAAAilC,mBAAAuB,gBACA,CACA,GAAA0B,cAAA,CAQA,GAJA,IAAApqB,SAAAkL,UAAAlL,SAAAqqB,aAAAzL,YACA5e,SAAA7vI,gBAAAyuJ,UACAlwB,WAAA,GAEAtP,OAAAsP,WAAA,CACA,GAAA+6B,QAAAzpB,SAAA9d,MAAAilC,oBAEA,MADAwC,kBAAAznC,MAAAilC,oBAAA,GACAnnB,QAEA9iL,MACA,yQAUA8iL,SAAA8mB,YAAA9mB,UAGA,GAAAsqB,QAAAtqB,SAAA1d,IACAioC,YAAA9E,QAAA74M,WAAA09M,OAWA,IAVApD,UACAhlC,MACAilC,mBAIAmD,OAAAxf,SAAA,KAAAyf,YACA9E,QAAA1mB,YAAAurB,SAGAnrC,MAAA+C,MAAA31K,QAKA,IAFA,GAAAy7M,UAAA9lC,MAAA31K,OACAi+M,UAAA3C,YAAA3lC,OACA8lC,UAAA,CACA,IAAA,GAAA52M,GAAA,EAAAA,EAAA6yM,IAAAvlJ,QAAAxxD,SAAAkE,EACA6yM,IAAAvlJ,QAAAttD,GAAA42M,SAGA,IADAA,SAAA1lC,IAAAJ,MAAAI,IACAkoC,UAAA,CACA,IAAA,GAAA5U,KAAA,EAAAA,IAAAqO,IAAAhwG,OAAA/mG,SAAA0oM,IACAqO,IAAAhwG,OAAA2hG,KAAAzV,UAAA6nB,SAKA,IAAAzE,QAAAyE,SAAAn6L,KAAAu8J,KAAAm5B,MACA,IAAAA,OAAAl4F,OAEA,IAAA,GAAAo/F,KAAA,EAAAA,IAAAlH,OAAAv2M,IAAAE,OAAAu9M,MACAlH,OAAAv2M,IAAAy9M,WAIAvrB,aAAA8oB,SAEAA,UAAAA,SAAAz7M,OAIA4yK,MAAAorC,aACAnC,aAAAmC,aAAAvqB,UAAA,EAAA,GACA7gB,MAAA6gB,SAAA3d,MACA8lC,kBAAAnoB,WAMA,MADA2pB,kBAAAznC,MAAAilC,mBAAAgD,gBACAjoC,MAAAI,OA0oDAmjC,QAAAA,QAAAliB,QAAAA,SAQAhC,QAEA14L,SAAAQ,iBAAA,kBAAA,WACA,GAAAsC,IAAA9C,SAAA8+L,aACAh8L,KAAAA,GAAA++M,QACAjc,QAAA9iM,GAAA,UAKA,IAAAg/M,UACA9pB,SAAA,SAAAl1L,GAAAk1F,QAAAqhF,OACA,WAAAA,MAAAG,KACA4rB,YAAAtiM,GAAAk1F,QAAAqhF,MAAAlpI,SACArtC,GAAAi/M,aAAA9yM,IAAA5D,KAAAvI,GAAA0+B,QAAA8mH,YACA,aAAA+wB,MAAAG,KAAAsd,gBAAAh0L,GAAA+8B,SACA/8B,GAAAi8L,YAAA/mG,QAAAkgG,UACAlgG,QAAAkgG,UAAAmF,OAKAv6L,GAAAtC,iBAAA,SAAAmlM,kBACA8Q,YACA3zM,GAAAtC,iBAAA,mBAAAklM,oBACA5iM,GAAAtC,iBAAA,iBAAAmlM,mBAGAjN,QACA51L,GAAA++M,QAAA,MAKA9pB,iBAAA,SAAAj1L,GAAAk1F,QAAAqhF,OACA,GAAA,WAAAA,MAAAG,IAAA,CACA4rB,YAAAtiM,GAAAk1F,QAAAqhF,MAAAlpI,QAKA,IAAA6xK,aAAAl/M,GAAAi/M,UACAE,WAAAn/M,GAAAi/M,aAAA9yM,IAAA5D,KAAAvI,GAAA0+B,QAAA8mH,SACA,IAAA25D,WAAA5wM,KAAA,SAAA+pB,EAAA7yB,GAAA,OAAAmvK,WAAAt8I,EAAA4mL,YAAAz5M,MAAA,EAGAzF,GAAA4yL,SACA19F,QAAArkF,MAAAtC,KAAA,SAAA0yB,GAAA,MAAA0hK,qBAAA1hK,EAAAk+K,cACAjqH,QAAArkF,QAAAqkF,QAAA6/F,UAAA4N,oBAAAztG,QAAArkF,MAAAsuM,cAEArc,QAAA9iM,GAAA,cAsFAqhM,MACAtiH,KAAA,SAAA/+E,GAAAyzL,IAAAld,OACA,GAAA1lK,OAAA4iL,IAAA5iL,KAEA0lK,OAAAysB,WAAAzsB,MACA,IAAA6oC,eAAA7oC,MAAAr0J,MAAAq0J,MAAAr0J,KAAAm9K,WACAggB,gBAAAr/M,GAAAs/M,mBACA,SAAAt/M,GAAAS,MAAA8+M,QAAA,GAAAv/M,GAAAS,MAAA8+M,OACA1uM,QAAAuuM,eACA7oC,MAAAr0J,KAAAm/K,MAAA,EACApC,MAAA1oB,MAAA,WACAv2K,GAAAS,MAAA8+M,QAAAF,mBAGAr/M,GAAAS,MAAA8+M,QAAA1uM,MAAAwuM,gBAAA,QAIA/oK,OAAA,SAAAt2C,GAAAyzL,IAAAld,OACA,GAAA1lK,OAAA4iL,IAAA5iL,KAIAA,SAHA4iL,IAAAsB,WAIAxe,MAAAysB,WAAAzsB,OACAA,MAAAr0J,MAAAq0J,MAAAr0J,KAAAm9K,YAEA9oB,MAAAr0J,KAAAm/K,MAAA,EACAxwL,MACAouL,MAAA1oB,MAAA,WACAv2K,GAAAS,MAAA8+M,QAAAv/M,GAAAs/M,qBAGA7d,MAAAlrB,MAAA,WACAv2K,GAAAS,MAAA8+M,QAAA,UAIAv/M,GAAAS,MAAA8+M,QAAA1uM,MAAA7Q,GAAAs/M,mBAAA,SAIA15D,OAAA,SACA5lJ,GACAk1F,QACAqhF,MACA8d,SACAI,WAEAA,YACAz0L,GAAAS,MAAA8+M,QAAAv/M,GAAAs/M,sBAKAE,oBACA/zL,MAAAuzL,QACA3d,KAAAA,MAQAoe,iBACAlgN,KAAA+7H,OACA4kE,OAAA3kB,QACA2hB,IAAA3hB,QACA50H,KAAA20E,OACAv+F,KAAAu+F,OACAkkE,WAAAlkE,OACAumE,WAAAvmE,OACAmkE,aAAAnkE,OACAymE,aAAAzmE,OACAokE,iBAAApkE,OACAwmE,iBAAAxmE,OACAqkE,YAAArkE,OACAukE,kBAAAvkE,OACAskE,cAAAtkE,OACAvxG,UAAAy4E,OAAA84B,OAAA9vH,SAkDAk0M,YACAngN,KAAA,aACAsvK,MAAA4wC,gBACAr9B,UAAA,EAEAh5I,OAAA,SAAAttB,GACA,GAAAw7L,QAAA31M,KAEAo1C,SAAAp1C,KAAAk6K,SAAAqI,eACA,IAAAntI,WAKAA,SAAAA,SAAA0W,OAAA,SAAA/pC,GAAA,MAAAA,GAAAgzJ,KAAAuK,mBAAAv9J,KAEAqzB,SAAAx1C,QAAA,CAKAw1C,SAAAx1C,OAAA,GACAgQ,KACA,uFAEA5P,KAAA+6K,QAIA,IAAA/1H,MAAAhlD,KAAAglD,IAIAA,OAAA,WAAAA,MAAA,WAAAA,MAEAp1C,KACA,8BAAAo1C,KACAhlD,KAAA+6K,QAIA,IAAA2mB,UAAAtsJ,SAAA,EAIA,IAAAusJ,oBAAA3hM,KAAAiiL,QACA,MAAAyf,SAKA,IAAAn1E,OAAA+0E,aAAAI,SAEA,KAAAn1E,MACA,MAAAm1E,SAGA,IAAA1hM,KAAAg+M,SACA,MAAAj4E,aAAA5rH,EAAAunL,SAMA,IAAAj/J,IAAA,gBAAAziC,KAAA,KAAA,GACAusH,OAAAn8G,IAAA,MAAAm8G,MAAAn8G,IACAm8G,MAAA8oD,UACA5yI,GAAA,UACAA,GAAA8pF,MAAAwoD,IACA/C,YAAAzlD,MAAAn8G,KACA,IAAAupH,OAAApN,MAAAn8G,KAAAsI,QAAA+pB,IAAA8pF,MAAAn8G,IAAAqyB,GAAA8pF,MAAAn8G,IACAm8G,MAAAn8G,GAEA,IAAAmQ,OAAAgsG,MAAAhsG,OAAAgsG,MAAAhsG,UAAAm9K,WAAA8D,sBAAAxhM,MACAi+M,YAAAj+M,KAAA4iL,OACAif,SAAAP,aAAA2c,YAQA,IAJA1xF,MAAAhsG,KAAAi4J,YAAAjsD,MAAAhsG,KAAAi4J,WAAA5rK,KAAA,SAAAsN,GAAA,MAAA,SAAAA,EAAAtc,SACA2uH,MAAAhsG,KAAAm/K,MAAA,GAIAmC,UACAA,SAAAthL,OACAqhL,YAAAr1E,MAAAs1E,YACAviB,mBAAAuiB,UACA,CAGA,GAAAjN,SAAAiN,SAAAthL,KAAAm9K,WAAA5yL,UAAAyV,KAEA,IAAA,WAAAykC,KAOA,MALAhlD,MAAAg+M,UAAA,EACAphC,eAAAgY,QAAA,aAAA,WACA+gB,OAAAqI,UAAA,EACArI,OAAA12B,iBAEAl5C,YAAA5rH,EAAAunL,SACA,IAAA,WAAA18I,KAAA,CACA,GAAAs6H,mBAAA/yD,OACA,MAAA0xF,YAEA,IAAAC,cACAle,aAAA,WAAAke,eACAthC,gBAAAr8J,KAAA,aAAAy/K,cACApjB,eAAAr8J,KAAA,iBAAAy/K,cACApjB,eAAAgY,QAAA,aAAA,SAAAkL,OAAAoe,aAAApe,SAIA,MAAA4B,aAiBAx0B,MAAApiK,QACAiqK,IAAAp7C,OACAwkF,UAAAxkF,QACAmkF,uBAEA5wC,OAAAloH,IAEA,IAAAo5J,kBACAlxC,MAAAA,MAEAzlI,OAAA,SAAAttB,GAQA,IAAA,GAPA46J,KAAA/0K,KAAA+0K,KAAA/0K,KAAAiiL,OAAA1hK,KAAAw0J,KAAA,OACAvqK,IAAAX,OAAA88F,OAAA,MACA03G,aAAAr+M,KAAAq+M,aAAAr+M,KAAAo1C,SACAkpK,YAAAt+M,KAAAijL,OAAAhJ,YACA7kI,SAAAp1C,KAAAo1C,YACAmpK,eAAA/c,sBAAAxhM,MAEA8D,EAAA,EAAAA,EAAAw6M,YAAA1+M,OAAAkE,IAAA,CACA,GAAAie,GAAAu8L,YAAAx6M,EACA,IAAAie,EAAAgzJ,IACA,GAAA,MAAAhzJ,EAAA3R,KAAA,IAAAupH,OAAA53G,EAAA3R,KAAAsI,QAAA,WACA08B,SAAAl1C,KAAA6hB,GACAvX,IAAAuX,EAAA3R,KAAA2R,GACAA,EAAAxB,OAAAwB,EAAAxB,UAAAm9K,WAAA6gB,mBACA,CACA,GAAAr5B,MAAAnjK,EAAAkzJ,iBACAr3K,KAAAsnL,KAAAA,KAAA/Q,KAAAp3I,QAAAn/B,MAAAsnL,KAAAnQ,KAAA,GAAAhzJ,EAAAgzJ,GACAnlK,MAAA,+CAAAhS,KAAA,MAKA,GAAAygN,aAAA,CAGA,IAAA,GAFAG,SACAC,WACAnW,IAAA,EAAAA,IAAA+V,aAAAz+M,OAAA0oM,MAAA,CACA,GAAAoW,KAAAL,aAAA/V,IACAoW,KAAAn+L,KAAAm9K,WAAA6gB,eACAG,IAAAn+L,KAAA2W,IAAAwnL,IAAA1pC,IAAAzxK,wBACAiH,IAAAk0M,IAAAtuM,KACAouM,KAAAt+M,KAAAw+M,KAEAD,QAAAv+M,KAAAw+M,KAGA1+M,KAAAw+M,KAAArkM,EAAA46J,IAAA,KAAAypC,MACAx+M,KAAAy+M,QAAAA,QAGA,MAAAtkM,GAAA46J,IAAA,KAAA3/H,WAGAupK,aAAA,WAEA3+M,KAAAg3M,UACAh3M,KAAA4iL,OACA5iL,KAAAw+M,MACA,GACA,GAEAx+M,KAAA4iL,OAAA5iL,KAAAw+M,MAGAI,QAAA,WACA,GAAAxpK,UAAAp1C,KAAAq+M,aACAF,UAAAn+M,KAAAm+M,YAAAn+M,KAAApC,MAAA,KAAA,OACAw3C,UAAAx1C,QAAAI,KAAA6+M,QAAAzpK,SAAA,GAAA4/H,IAAAmpC,aAMA/oK,SAAA94C,QAAAwlM,gBACA1sJ,SAAA94C,QAAA0lM,gBACA5sJ,SAAA94C,QAAA4lM,kBAKAliM,KAAA8+M,QAAAvjN,SAAA8H,KAAA07M,aAEA3pK,SAAA94C,QAAA,SAAAylB,GACA,GAAAA,EAAAxB,KAAA6hL,MAAA,CACA,GAAA/jM,IAAA0jB,EAAAizJ,IACAp/J,EAAAvX,GAAAS,KACA68L,oBAAAt9L,GAAA8/M,WACAvoM,EAAAulJ,UAAAvlJ,EAAAysL,gBAAAzsL,EAAA0sL,mBAAA,GACAjkM,GAAAtC,iBAAAmgM,mBAAA79L,GAAA0jM,QAAA,QAAAhzE,IAAAhsH,GACAA,IAAA,aAAAlG,KAAAkG,EAAA6uI,gBACAvzI,GAAA0nD,oBAAAm2I,mBAAAntE,IACA1wH,GAAA0jM,QAAA,KACAlG,sBAAAx9L,GAAA8/M,mBAOA/4B,SACAy5B,QAAA,SAAAxgN,GAAA8/M,WAEA,IAAApF,cACA,OAAA,CAGA,IAAA/4M,KAAAg/M,SACA,MAAAh/M,MAAAg/M,QAOA,IAAAj1L,OAAA1rB,GAAAyH,WACAzH,IAAAy2L,oBACAz2L,GAAAy2L,mBAAAx4L,QAAA,SAAAK,KAAAM,YAAA8sB,MAAAptB,OAEAG,SAAAitB,MAAAo0L,WACAp0L,MAAAjrB,MAAA8+M,QAAA,OACA59M,KAAAqhL,IAAAmQ,YAAAznK,MACA,IAAA6Z,MAAAm4J,kBAAAhyK,MAEA,OADA/pB,MAAAqhL,IAAAt7K,YAAAgkB,OACA/pB,KAAAg/M,SAAAp7K,KAAAq5J,gBAiCAgiB,oBACAlB,WAAAA,WACAK,gBAAAA,gBAMAtwB,OAAAx/K,OAAAg6K,YAAAA,YACAwF,MAAAx/K,OAAA2pK,cAAAA,cACA6V,MAAAx/K,OAAAy3K,eAAAA,eACA+H,MAAAx/K,OAAAs+K,gBAAAA,gBACAkB,MAAAx/K,OAAAkiL,iBAAAA,iBAGA1lL,OAAAgjL,MAAA/wJ,QAAAy7I,WAAAqlC,oBACA/yM,OAAAgjL,MAAA/wJ,QAAAguB,WAAAk0J,oBAGAnxB,MAAAtxL,UAAAw6M,UAAA37B,UAAAi+B,MAAAtmC,KAGA8a,MAAAtxL,UAAAq5M,OAAA,SACAx3M,GACA+iL,WAGA,MADA/iL,IAAAA,IAAAg9K,UAAAuV,MAAAvyL,QAAA8O,GACAg0K,eAAAnhL,KAAA3B,GAAA+iL,YAKA0M,MAAAlS,SAAA,WACAttK,OAAA81K,WACAA,SACAA,SAAAC,KAAA,OAAAyJ,OACAokB,UACAniM,QAAAA,QAAA6zB,KAAA,OAAA,OACA,qHAMA,IAAAt1B,OAAAojM,eACAr2B,WAAA,mBAAAtrK,UAEAA,QAAAA,QAAA6zB,KAAA,OAAA,OACA,4KAKA,EAaA,IAiIAs7K,SAjIA/b,uBAAA9nB,WARA,SAAA8jC,QAAAC,SACA,GAAAC,KAAA9jN,SAAAq/J,cAAA,MAEA,OADAykD,KAAAlO,UAAA,WAAAgO,QAAA,MACAE,IAAAlO,UAAAz4L,QAAA0mM,SAAA,GAKA,KAAA,SAIAzc,aAAA,wBACA2c,cAAA,yBAEA5c,WAAAl5D,OAAA,SAAAg5D,YACA,GAAA/3D,MAAA+3D,WAAA,GAAArlM,QAAAmiN,cAAA,QACAC,MAAA/c,WAAA,GAAArlM,QAAAmiN,cAAA,OACA,OAAA,IAAA1iN,QAAA6tI,KAAA,gBAAA80E,MAAA,OAmEAC,SACApU,YAAA,eACAxI,cAAAA,cACAE,QAAAA,SAyCA2c,SACArU,YAAA,eACAxI,cAAAG,gBACAD,QAAAG,WAOAyc,IACAC,OAAA,SAAAlc,MAGA,MAFAyb,SAAAA,SAAA3jN,SAAAq/J,cAAA,OACAskD,QAAA/N,UAAA1N,KACAyb,QAAAvtB,cAMAsS,WAAA1xB,QACA,6FAMA6xB,iBAAA7xB,QACA,2DAKAqzB,iBAAArzB,QACA,mSAmBAx6H,UAAA,4EAGA6nK,OAAA,wBACAC,aAAA,OAAAD,OAAA,QAAAA,OAAA,IACApa,aAAA,GAAA5oM,QAAA,KAAAijN,cACAna,cAAA,aACA7jB,OAAA,GAAAjlL,QAAA,QAAAijN,aAAA,UACAza,QAAA,qBACAN,QAAA,QACAG,mBAAA,QAEAa,2BAAA,CACA,KAAA3oM,QAAA,SAAA,SAAAmP,EAAA0zB,GACA8lK,0BAAA,KAAA9lK,GAIA,IAkSAmmK,QACA3D,WACAoE,WACAC,cACAC,eACAP,iBACAG,oBACAC,wBAysBAuE,YACAG,sBAn/BAhH,mBAAA9xB,QAAA,yBAAA,GACAkyB,WAEAlB,aACAuc,OAAA,IACAC,OAAA,IACAC,SAAA,IACAC,QAAA,IACAC,QAAA,MAEA5c,YAAA,wBACAD,wBAAA,4BAGA8c,mBAAA5tC,QAAA,gBAAA,GACAqyB,yBAAA,SAAA7vB,IAAA0uB,MAAA,MAAA1uB,MAAAorC,mBAAAprC,MAAA,OAAA0uB,KAAA,IAuQAyG,KAAA,YACAN,MAAA,YACAX,WAAA,2BACAG,cAAA,6CAEAgB,MAAA,SACAJ,OAAA,cACAD,WAAA,WAEAtB,iBAAAj/D,OAAAk2E,GAAAC,QAmkBArV,QAAA,eACAC,WAAA,UA8FA6V,SACA3V,iBAAAA,kBAGA4V,WACAb,QACAC,QACAW,SAmBAE,cACAx2L,MAAAA,MACAu6D,KAAAA,KACAo/G,KAAAA,MAKA8c,aACAxc,YAAA,EACA9N,QAAAoqB,UACA7nC,WAAA8nC,aACA7Z,SAAAA,SACAxC,WAAAA,WACA3b,YAAAA,YACA8b,iBAAAA,iBACAnsB,cAAAA,cACA2U,gBAAAA,gBACAwe,WA7+RA,SAAAnV,SACA,MAAAA,SAAAuqB,OAAA,SAAAx/L,KAAA1U,GACA,MAAA0U,MAAAumE,OAAAj7E,EAAA8+L,qBACA96L,KAAA,MA0+RA+vM,YAQAlV,oBAAA3hE,OAAAgiE,iBA4HAW,QAAA,+CACAF,aAAA,+FAGA/jB,UACAu4B,IAAA,GACAC,IAAA,EACApjB,MAAA,GACAqjB,MAAA,GACAhpK,GAAA,GACAn0C,KAAA,GACAC,MAAA,GACAm9M,KAAA,GACAhJ,QAAA,EAAA,KAMAtL,SAAA,SAAA9C,WAAA,MAAA,MAAAA,UAAA,iBAEA6C,cACAtqD,KAAA,4BACAw0C,QAAA,2BACAsqB,KAAAvU,SAAA,0CACAwU,KAAAxU,SAAA,mBACAzsM,MAAAysM,SAAA,oBACAyU,IAAAzU,SAAA,kBACA1nG,KAAA0nG,SAAA,mBACA9oM,KAAA8oM,SAAA,6CACA0U,OAAA1U,SAAA,6CACA7oM,MAAA6oM,SAAA,8CAyHA2U,gBACA3kC,GAAAA,GACAl/F,KAAAwvH,OACAsU,MAAAluC,MAKAg6B,aAAA,SAAAjwK,SACA/8B,KAAA+8B,QAAAA,QACA/8B,KAAA4P,KAAAmtB,QAAAntB,MAAAmmL,SACA/1L,KAAA4mM,WAAA5Q,oBAAAj5J,QAAAk5J,QAAA,iBACAj2L,KAAAuuM,WAAAvY,oBAAAj5J,QAAAk5J,QAAA,WACAj2L,KAAAw4K,WAAA1tK,OAAAA,UAAAm2M,gBAAAlkL,QAAAy7I,WACA,IAAAP,eAAAl7I,QAAAk7I,eAAAisB,EACAlkM,MAAAquM,eAAA,SAAAhwM,IAAA,OAAA45K,cAAA55K,GAAA02K,MACA/0K,KAAA8tM,OAAA,EACA9tM,KAAA4oL,oBAmbA8nB,oBAAA,GAAA9zM,QAAA,MAAA,iMAIAkjB,MAAA,KAAAxP,KAAA,WAAA,OAGAggM,iBAAA,GAAA1zM,QAAA,MAAA,qBAEAkjB,MAAA,KAAAxP,KAAA,yBAAA,qBAGAmgM,QAAA,mBAGAL,cAAA,iGA4OA+Q,eAvDA,SAAAC,aACA,MAAA,UAAAb,aACA,QAAAvlI,SACAsmG,SACAvkJ,SAEA,GAAAskL,cAAAx3M,OAAA88F,OAAA45G,aACAzQ,UACAiB,OAKA,IAJAsQ,aAAAzxM,KAAA,SAAAC,IAAAwtK,MACAA,IAAA0zB,KAAAjB,QAAA5vM,KAAA2P,MAGAktB,QAAA,CAEAA,QAAAk5J,UACAorB,aAAAprB,SACAsqB,YAAAtqB,aAAA1uG,OAAAxqD,QAAAk5J,UAGAl5J,QAAAy7I,aACA6oC,aAAA7oC,WAAA1tK,OACAjB,OAAA88F,OAAA45G,YAAA/nC,YACAz7I,QAAAy7I,YAIA,KAAA,GAAApoK,OAAA2sB,SACA,YAAA3sB,KAAA,eAAAA,MACAixM,aAAAjxM,KAAA2sB,QAAA3sB,MAKA,GAAA0gM,UAAAsQ,YAAA9/B,SAAA+/B,aAMA,OAJAvR,QAAA5vM,KAAAJ,MAAAgwM,OAAAD,aAAAiB,SAAA/D,MAEA+D,SAAAhB,OAAAA,OACAgB,SAAAC,KAAAA,KACAD,SAGA,OACA91H,QAAAA,QACAsmI,mBAAA1Q,0BAAA51H,YAUA,SACAsmG,SACAvkJ,SAEA,GAAAgwK,KAAAhmF,MAAAu6D,SAAAtkL,OAAA+/B,QACAkwD,UAAA8/G,IAAAhwK,QACA,IAAAqwB,MAAA0/I,SAAAC,IAAAhwK,QACA,QACAgwK,IAAAA,IACAtlK,OAAA2lB,KAAA3lB,OACAmhJ,gBAAAx7H,KAAAw7H,mBAMA24B,MAAAJ,eAAAZ,aACAe,mBAAAC,MAAAD,mBAIAE,aAAAh4E,OAAA,SAAA/mG,IACA,GAAApkC,IAAAuyL,MAAAnuJ,GACA,OAAApkC,KAAAA,GAAA8yM,YAGAsQ,MAAA3zB,MAAAtxL,UAAAq5M,MAoFA,OAnFA/nB,OAAAtxL,UAAAq5M,OAAA,SACAx3M,GACA+iL,WAKA,IAHA/iL,GAAAA,IAAAuyL,MAAAvyL,OAGA9C,SAAA8H,MAAAhF,KAAA9C,SAAAI,gBAIA,MAHAiU,MACA,4EAEA5P,IAGA,IAAA+8B,SAAA/8B,KAAAk6K,QAEA,KAAAn9I,QAAA0K,OAAA,CACA,GAAA65I,UAAAvkJ,QAAAukJ,QACA,IAAAA,SACA,GAAA,gBAAAA,UACA,MAAAA,SAAAhiK,OAAA,MACAgiK,SAAAkgC,aAAAlgC,YAGA1xK,KACA,2CAAAmtB,QAAA,SACA/8B,WAIA,CAAA,IAAAshL,SAAAsc,SAMA,MAFAhuL,MAAA,2BAAA0xK,SAAAthL,MAEAA,IALAshL,UAAAA,SAAA6vB,cAOA9yM,MACAijL,SAAA2vB,aAAA5yM,IAEA,IAAAijL,SAAA,CAEAhzK,OAAA4gJ,aAAAuyB,MACAA,KAAA,UAGA,IAAAqQ,KAAAwvB,mBAAAhgC,UACA6hB,qBAAAA,qBACAX,WAAAzlK,QAAAylK,WACAyE,SAAAlqK,QAAAkqK,UACAjnM,MACAynC,OAAAqqJ,IAAArqJ,OACAmhJ,gBAAAkJ,IAAAlJ,eACA7rJ,SAAA0K,OAAAA,OACA1K,QAAA6rJ,gBAAAA,gBAGAt6K,OAAA4gJ,aAAAuyB,OACAA,KAAA,eACAM,QAAA,OAAA/hL,KAAA,MAAA,WAAA,UAAA,iBAIA,MAAAyhN,OAAA76M,KAAA5G,KAAA3B,GAAA+iL,YAiBA0M,MAAA9yG,QAAAsmI,mBAEAxzB,QC3yUA,WAEA,YASA,IAAA4zB,cAAA,WACA1hN,KAAAwI,OAEAk5M,cAAAllN,WAKAgM,KAAA,WACA,GAAAq4M,MAAA7gN,MAAA2hN,MA0BA,OAvBAd,MAAAe,SAAA,IAGAf,KAAAgB,WACAhB,KAAAiB,UACAjB,KAAAkB,QAAA,EACAlB,KAAAmB,QAAA,EACAnB,KAAAoB,cAAA,iBACApB,KAAAqB,WAAA,mBAAA9mN,SAAAA,OAAAqH,UAAArH,OAAAqH,UAAA,KAGAo+M,KAAAsB,WAAA,KACAtB,KAAAuB,SAAA,EACAvB,KAAAwB,eAAA,EACAxB,KAAAyB,aAAA,EACAzB,KAAAjuC,IAAA,KAGAiuC,KAAA0B,kBAAA,EAGA1B,KAAA2B,SAEA3B,MAQA4B,OAAA,SAAAC,KACA,GAAA7B,MAAA7gN,MAAA2hN,MAQA,IAPAe,IAAA36L,WAAA26L,KAGA7B,KAAAjuC,KACA+vC,wBAGA,KAAAD,KAAAA,KAAA,GAAAA,KAAA,EAAA,CAIA,GAHA7B,KAAAmB,QAAAU,IAGA7B,KAAAkB,OACA,MAAAlB,KAIAA,MAAAwB,gBACAxB,KAAAsB,WAAArwH,KAAA5iF,MAAAwzM,IAIA,KAAA,GAAA5+M,GAAA,EAAAA,EAAA+8M,KAAAiB,OAAAliN,OAAAkE,IACA,IAAA+8M,KAAAiB,OAAAh+M,GAAA8+M,UAKA,IAAA,GAHAC,KAAAhC,KAAAiB,OAAAh+M,GAAAg/M,eAGAljM,EAAA,EAAAA,EAAAijM,IAAAjjN,OAAAggB,IAAA,CACA,GAAAmjM,OAAAlC,KAAAiB,OAAAh+M,GAAAk/M,WAAAH,IAAAjjM,GAEAmjM,QAAAA,MAAAE,QACAF,MAAAE,MAAAR,OAAAM,MAAAf,QAAAU,KAMA,MAAA7B,MAGA,MAAAA,MAAAmB,SAOAkB,KAAA,SAAAC,OACA,GAAAtC,MAAA7gN,MAAA2hN,MAGAd,MAAAjuC,KACA+vC,oBAGA9B,KAAAkB,OAAAoB,MAGAtC,KAAAwB,gBACAxB,KAAAsB,WAAArwH,KAAA5iF,MAAAi0M,MAAA,EAAAtC,KAAAmB,QAIA,KAAA,GAAAl+M,GAAA,EAAAA,EAAA+8M,KAAAiB,OAAAliN,OAAAkE,IACA,IAAA+8M,KAAAiB,OAAAh+M,GAAA8+M,UAKA,IAAA,GAHAC,KAAAhC,KAAAiB,OAAAh+M,GAAAg/M,eAGAljM,EAAA,EAAAA,EAAAijM,IAAAjjN,OAAAggB,IAAA,CACA,GAAAmjM,OAAAlC,KAAAiB,OAAAh+M,GAAAk/M,WAAAH,IAAAjjM,GAEAmjM,QAAAA,MAAAE,QACAF,MAAAE,MAAAE,QAAA,OAAAJ,MAAAhB,QAMA,MAAAlB,OAOAuC,OAAA,WAGA,IAAA,GAFAvC,MAAA7gN,MAAA2hN,OAEA79M,EAAA+8M,KAAAiB,OAAAliN,OAAA,EAAAkE,GAAA,EAAAA,IACA+8M,KAAAiB,OAAAh+M,GAAAs/M,QAUA,OANAvC,MAAAwB,eAAAxB,KAAAjuC,SAAA,KAAAiuC,KAAAjuC,IAAA2sC,QACAsB,KAAAjuC,IAAA2sC,QACAsB,KAAAjuC,IAAA,KACA+vC,qBAGA9B,MAQAwC,OAAA,SAAAC,KACA,OAAAtjN,MAAA2hN,QAAAE,QAAAyB,IAAAnmN,QAAA,MAAA,MAOAqlN,OAAA,WACA,GAAA3B,MAAA7gN,MAAA2hN,MASA,IANAd,KAAAz8K,MAAAy8K,KAAAjuC,IAAAiuC,KAAAjuC,IAAAxuI,OAAA,UAAA,UAGAy8K,KAAA0C,gBAGA1C,KAAAwB,cAEA,GAAA,mBAAAnwH,OACA,IACA,GAAAr1F,MAAA,GAAAq1F,WAGA,KAAAr1F,KAAA2mN,mBACA3C,KAAAoB,cAAA,WAEA,MAAAl/M,GACA89M,KAAAuB,SAAA,MAGAvB,MAAAuB,SAAA,CAKA,KACA,GAAAvlN,MAAA,GAAAq1F,MACAr1F,MAAAsmN,QACAtC,KAAAuB,SAAA,GAEA,MAAAr/M,IAOA,MAJA89M,MAAAuB,SACAvB,KAAA4C,eAGA5C,MAOA4C,aAAA,WACA,GAAA5C,MAAA7gN,MAAA2hN,OACA+B,UAAA,IAGA,KACAA,UAAA,mBAAAxxH,OAAA,GAAAA,OAAA,KACA,MAAA2oF,KACA,MAAAgmC,MAGA,IAAA6C,WAAA,kBAAAA,WAAAC,YACA,MAAA9C,KAGA,IAAA+C,UAAAF,UAAAC,YAAA,eAAAxmN,QAAA,OAAA,IAGA0mN,WAAAhD,KAAAqB,YAAArB,KAAAqB,WAAAx/M,UAAAiS,MAAA,kBACAmvM,WAAAD,YAAAxnM,SAAAwnM,WAAA,GAAA/jM,MAAA,KAAA,GAAA,IAAA,EAmBA,OAjBA+gM,MAAAgB,SACAkC,MAAAD,aAAAF,WAAAF,UAAAC,YAAA,cAAAxmN,QAAA,OAAA,KACA6mN,OAAAJ,SACAK,OAAAP,UAAAC,YAAA,4BAAAxmN,QAAA,OAAA,IACA+mN,MAAAR,UAAAC,YAAA,8BAAAxmN,QAAA,OAAA,IACAgnN,MAAAT,UAAAC,YAAA,8BAAAxmN,QAAA,OAAA,IACAinN,MAAAV,UAAAC,YAAA,yBAAAxmN,QAAA,OAAA,IACAknN,MAAAX,UAAAC,YAAA,cAAAxmN,QAAA,OAAA,IACAmnN,MAAAZ,UAAAC,YAAA,gBAAAxmN,QAAA,OAAA,IACAonN,OAAAb,UAAAC,YAAA,iBAAAD,UAAAC,YAAA,eAAAD,UAAAC,YAAA,eAAAxmN,QAAA,OAAA,IACAqnN,OAAAd,UAAAC,YAAA,iBAAAD,UAAAC,YAAA,eAAAD,UAAAC,YAAA,eAAAxmN,QAAA,OAAA,IACAsnN,OAAAf,UAAAC,YAAA,+BAAAxmN,QAAA,OAAA,IACAunN,OAAAhB,UAAAC,YAAA,+BAAAxmN,QAAA,OAAA,IACAwnN,QAAAjB,UAAAC,YAAA,4BAAAxmN,QAAA,OAAA,IACAynN,QAAAlB,UAAAC,YAAA,kBAAAD,UAAAC,YAAA,gBAAAxmN,QAAA,OAAA,KAGA0jN,MASAgE,mBAAA,WACA,GAAAhE,MAAA7gN,MAAA2hN,OAGAmD,SAAA,sDAAAjoN,KAAAgkN,KAAAqB,YAAArB,KAAAqB,WAAAx/M,WACAqiN,WAAA,cAAA3pN,SAAAylN,KAAAqB,YAAArB,KAAAqB,WAAA8C,eAAA,GAAAnE,KAAAqB,YAAArB,KAAAqB,WAAA+C,iBAAA,EACA,KAAApE,KAAAqE,gBAAArE,KAAAjuC,MAAAkyC,UAAAC,SAAA,CAIAlE,KAAAqE,gBAAA,EAKArE,KAAAsE,iBAAA,QAAAtE,KAAAjuC,IAAAwyC,aACAvE,KAAAsE,iBAAA,EACAtE,KAAAuC,UAKAvC,KAAAwE,eAAAxE,KAAAjuC,IAAAjuI,aAAA,EAAA,EAAA,MAKA,IAAA2gL,QAAA,WAEA3D,OAAA4D,aAGA,IAAA9/M,QAAAo7M,KAAAjuC,IAAAjxB,oBACAl8I,QAAA2yC,OAAAyoK,KAAAwE,eACA5/M,OAAAusF,QAAA6uH,KAAAjuC,IAAA3gF,iBAGA,KAAAxsF,OAAA04C,MACA14C,OAAA+/M,OAAA,GAEA//M,OAAA04C,MAAA,GAIA,kBAAA0iK,MAAAjuC,IAAA6yC,QACA5E,KAAAjuC,IAAA6yC,SAIAhgN,OAAAm8I,QAAA,WACAn8I,OAAA66I,WAAA,GAGAugE,KAAAqE,gBAAA,EACArE,KAAA0B,kBAAA,EAGAhnN,SAAAwqD,oBAAA,aAAAu/J,QAAA,GACA/pN,SAAAwqD,oBAAA,WAAAu/J,QAAA,IAQA,OAHA/pN,UAAAQ,iBAAA,aAAAupN,QAAA,GACA/pN,SAAAQ,iBAAA,WAAAupN,QAAA,GAEAzE,OAQA0C,aAAA,WACA,GAAA1C,MAAA7gN,IAEA,IAAA6gN,KAAAyB,aAAAzB,KAAAjuC,SAAA,KAAAiuC,KAAAjuC,IAAA8yC,SAAA/D,OAAAU,cAAA,CAKA,IAAA,GAAAv+M,GAAA,EAAAA,EAAA+8M,KAAAiB,OAAAliN,OAAAkE,IACA,GAAA+8M,KAAAiB,OAAAh+M,GAAA8+M,UACA,IAAA,GAAAhjM,GAAA,EAAAA,EAAAihM,KAAAiB,OAAAh+M,GAAA6hN,QAAA/lN,OAAAggB,IACA,IAAAihM,KAAAiB,OAAAh+M,GAAA6hN,QAAA/lM,GAAAgmM,QACA,MAAA/E,KA4BA,OAtBAA,MAAAgF,eACAl/M,aAAAk6M,KAAAgF,eAIAhF,KAAAgF,cAAA7pN,WAAA,WACA6kN,KAAAyB,cAIAzB,KAAAgF,cAAA,KACAhF,KAAAz8K,MAAA,aACAy8K,KAAAjuC,IAAA8yC,UAAAtmC,KAAA,WACAyhC,KAAAz8K,MAAA,YAEAy8K,KAAAiF,4BACAjF,MAAAiF,oBACAjF,KAAA0E,mBAGA,KAEA1E,OAOA0E,YAAA,WACA,GAAA1E,MAAA7gN,IAEA,IAAA6gN,KAAAjuC,SAAA,KAAAiuC,KAAAjuC,IAAA6yC,QAAA9D,OAAAU,cAyBA,MArBA,YAAAxB,KAAAz8K,OAAAy8K,KAAAgF,eACAl/M,aAAAk6M,KAAAgF,eACAhF,KAAAgF,cAAA,MACA,cAAAhF,KAAAz8K,OACAy8K,KAAAjuC,IAAA6yC,SAAArmC,KAAA,WACAyhC,KAAAz8K,MAAA,SAGA,KAAA,GAAAtgC,GAAA,EAAAA,EAAA+8M,KAAAiB,OAAAliN,OAAAkE,IACA+8M,KAAAiB,OAAAh+M,GAAAiiN,MAAA,YAIAlF,KAAAgF,gBACAl/M,aAAAk6M,KAAAgF,eACAhF,KAAAgF,cAAA,OAEA,eAAAhF,KAAAz8K,QACAy8K,KAAAiF,qBAAA,GAGAjF,MAKA,IAAAc,QAAA,GAAAD,cASAsE,KAAA,SAAArvL,GACA,GAAAkqL,MAAA7gN,IAGA,KAAA22B,EAAA/3B,KAAA,IAAA+3B,EAAA/3B,IAAAgB,OAEA,WADAmQ,SAAAiuB,MAAA,6DAIA6iL,MAAAr4M,KAAAmuB,GAEAqvL,MAAAxpN,WAMAgM,KAAA,SAAAmuB,GACA,GAAAkqL,MAAA7gN,IAqEA,OAlEA2hN,QAAA/uC,KACA+vC,oBAIA9B,KAAAoF,UAAAtvL,EAAA07D,WAAA,EACAwuH,KAAAqF,QAAA,gBAAAvvL,GAAA1rB,OAAA0rB,EAAA1rB,QAAA0rB,EAAA1rB,QACA41M,KAAAsF,OAAAxvL,EAAAyvL,QAAA,EACAvF,KAAAkB,OAAAprL,EAAAusL,OAAA,EACArC,KAAAwF,MAAA1vL,EAAAk5C,OAAA,EACAgxI,KAAAyF,MAAA3vL,EAAA4vL,MAAA,EACA1F,KAAA2F,SAAA,iBAAA7vL,GAAA8vL,SAAA9vL,EAAA8vL,QACA5F,KAAA6F,MAAA/vL,EAAAgwL,MAAA,EACA9F,KAAA1iD,QAAAxnI,EAAAyT,WACAy2K,KAAA+F,KAAA,gBAAAjwL,GAAA/3B,IAAA+3B,EAAA/3B,KAAA+3B,EAAA/3B,KACAiiN,KAAAmB,YAAA70M,KAAAwpB,EAAA8rL,OAAA9rL,EAAA8rL,OAAA,EACA5B,KAAAgG,oBAAAlwL,EAAAmwL,qBAAA,EAGAjG,KAAAkG,UAAA,EACAlG,KAAA1qK,OAAA,WACA0qK,KAAA8E,WACA9E,KAAAmG,cACAnG,KAAAoG,UAGApG,KAAAqG,OAAAvwL,EAAAwwL,QAAA7pN,GAAAq5B,EAAAwwL,WACAtG,KAAAuG,QAAAzwL,EAAA0wL,SAAA/pN,GAAAq5B,EAAA0wL,YACAxG,KAAAyG,QAAA3wL,EAAAxvB,SAAA7J,GAAAq5B,EAAAxvB,YACA05M,KAAA0G,aAAA5wL,EAAA6wL,cAAAlqN,GAAAq5B,EAAA6wL,iBACA3G,KAAA4G,aAAA9wL,EAAA+wL,cAAApqN,GAAAq5B,EAAA+wL,iBACA7G,KAAA8G,SAAAhxL,EAAAixL,UAAAtqN,GAAAq5B,EAAAixL,aACA/G,KAAAgH,QAAAlxL,EAAAmxL,SAAAxqN,GAAAq5B,EAAAmxL,YACAjH,KAAAkH,QAAApxL,EAAAqxL,SAAA1qN,GAAAq5B,EAAAqxL,YACAnH,KAAAoH,QAAAtxL,EAAAuxL,SAAA5qN,GAAAq5B,EAAAuxL,YACArH,KAAAsH,UAAAxxL,EAAAyxL,WAAA9qN,GAAAq5B,EAAAyxL,cACAvH,KAAAwH,QAAA1xL,EAAA2xL,SAAAhrN,GAAAq5B,EAAA2xL,YACAzH,KAAA0H,QAAA5xL,EAAA6xL,SAAAlrN,GAAAq5B,EAAA6xL,YACA3H,KAAA4H,aAGA5H,KAAA+B,UAAAjB,OAAAU,gBAAAxB,KAAAsF,WAGA,KAAAxE,OAAA/uC,KAAA+uC,OAAA/uC,KAAA+uC,OAAAY,kBACAZ,OAAAkD,qBAIAlD,OAAAG,OAAA5hN,KAAA2gN,MAGAA,KAAAoF,WACApF,KAAAoG,OAAA/mN,MACAlC,MAAA,OACAR,OAAA,WACAqjN,KAAAn/D,UAMAm/D,KAAA2F,UACA3F,KAAAt3E,OAGAs3E,MAOAt3E,KAAA,WACA,GAAAs3E,MAAA7gN,KACAgqF,IAAA,IAGA,IAAA23H,OAAAS,QAEA,WADAvB,MAAAkF,MAAA,YAAA,KAAA,oBAKA,iBAAAlF,MAAA+F,OACA/F,KAAA+F,MAAA/F,KAAA+F,MAIA,KAAA,GAAA9iN,GAAA,EAAAA,EAAA+8M,KAAA+F,KAAAhnN,OAAAkE,IAAA,CACA,GAAAw/M,KAAA9wC,GAEA,IAAAquC,KAAAqF,SAAArF,KAAAqF,QAAApiN,GAEAw/M,IAAAzC,KAAAqF,QAAApiN,OACA,CAGA,GAAA,iBADA0uK,IAAAquC,KAAA+F,KAAA9iN,IACA,CACA+8M,KAAAkF,MAAA,YAAA,KAAA,yDACA,UAIAzC,IAAA,0BAAAt/L,KAAAwuJ,KACA8wC,MACAA,IAAA,aAAAt/L,KAAAwuJ,IAAA1yJ,MAAA,IAAA,GAAA,KAGAwjM,MACAA,IAAAA,IAAA,GAAAzwM,eAUA,GALAywM,KACAvzM,QAAAH,KAAA,8FAIA0zM,KAAA3B,OAAA0B,OAAAC,KAAA,CACAt5H,IAAA62H,KAAA+F,KAAA9iN,EACA,QAIA,MAAAkmF,MAKA62H,KAAA+F,KAAA58H,IACA62H,KAAA1qK,OAAA,UAIA,WAAA/6C,OAAAmK,SAAAmjN,UAAA,UAAA1+H,IAAA35E,MAAA,EAAA,KACAwwM,KAAAsF,QAAA,EACAtF,KAAA+B,WAAA,GAIA,GAAA+F,OAAA9H,MAGAA,KAAA+B,WACAgG,WAAA/H,MAGAA,UAtBAA,MAAAkF,MAAA,YAAA,KAAA,iDA+BArkE,KAAA,SAAAt3G,OAAAy+K,UACA,GAAAhI,MAAA7gN,KACAyiC,GAAA,IAGA,IAAA,gBAAA2H,QACA3H,GAAA2H,OACAA,OAAA,SACA,CAAA,GAAA,gBAAAA,SAAA,WAAAy2K,KAAA1qK,SAAA0qK,KAAA1iD,QAAA/zH,QAEA,MAAA,KACA,QAAA,KAAAA,OAAA,CAEAA,OAAA,WAKA,KAAA,GADA0+K,KAAA,EACAhlN,EAAA,EAAAA,EAAA+8M,KAAA8E,QAAA/lN,OAAAkE,IACA+8M,KAAA8E,QAAA7hN,GAAA8hN,UAAA/E,KAAA8E,QAAA7hN,GAAAilN,SACAD,MACArmL,GAAAo+K,KAAA8E,QAAA7hN,GAAA0tH,IAIA,KAAAs3F,IACA1+K,OAAA,KAEA3H,GAAA,MAKA,GAAAsgL,OAAAtgL,GAAAo+K,KAAAmC,WAAAvgL,IAAAo+K,KAAAmI,gBAGA,KAAAjG,MACA,MAAA,KAWA,IAPAtgL,KAAA2H,SACAA,OAAA24K,MAAA5kD,SAAA,aAMA,WAAA0iD,KAAA1qK,OAAA,CAEA4sK,MAAA5kD,QAAA/zH,OAGA24K,MAAAgG,QAAA,CAGA,IAAAE,SAAAlG,MAAAvxF,GAQA,OAPAqvF,MAAAoG,OAAA/mN,MACAlC,MAAA,OACAR,OAAA,WACAqjN,KAAAn/D,KAAAunE,YAIAA,QAIA,GAAAxmL,KAAAsgL,MAAA6C,QAQA,MANAiD,WACA7sN,WAAA,WACA6kN,KAAAkF,MAAA,OAAAhD,MAAAvxF,MACA,GAGAuxF,MAAAvxF,GAIAqvF,MAAA+B,WACAjB,OAAA4D,aAIA,IAAAz4E,MAAAl+H,KAAAsF,IAAA,EAAA6uM,MAAAmG,MAAA,EAAAnG,MAAAmG,MAAArI,KAAA1iD,QAAA/zH,QAAA,GAAA,KACAhiB,SAAAxZ,KAAAsF,IAAA,GAAA2sM,KAAA1iD,QAAA/zH,QAAA,GAAAy2K,KAAA1iD,QAAA/zH,QAAA,IAAA,IAAA0iG,MACAhsI,QAAA,IAAAsnB,SAAAxZ,KAAAc,IAAAqzM,MAAA2D,MAGA3D,OAAA6C,SAAA,EACA7C,MAAAgG,QAAA,EACAhG,MAAA5kD,QAAA/zH,OACA24K,MAAAmG,MAAAp8E,KACAi2E,MAAAoG,OAAAtI,KAAA1iD,QAAA/zH,QAAA,GAAA,IACA24K,MAAAqG,OAAAvI,KAAA1iD,QAAA/zH,QAAA,GAAAy2K,KAAA1iD,QAAA/zH,QAAA,IAAA,IACA24K,MAAAsD,SAAAtD,MAAAsD,QAAAxF,KAAA1iD,QAAA/zH,QAAA,GAGA,IAAAuqD,MAAAouH,MAAAE,KACA,IAAApC,KAAA+B,UAAA,CAEA,GAAAyG,cAAA,WACAxI,KAAAyI,eAAAvG,MAGA,IAAAL,KAAAK,MAAAhB,QAAAlB,KAAAkB,OAAA,EAAAgB,MAAAf,OACArtH,MAAA7C,KAAA8uD,eAAA8hE,IAAAf,OAAA/uC,IAAA/xB,aACAkiE,MAAAwG,WAAA5H,OAAA/uC,IAAA/xB,gBAGA,KAAAlsD,KAAA60H,aAAArrK,MACA4kK,MAAAsD,MAAA1xH,KAAA60H,aAAAC,YAAA,EAAA38E,KAAA,OAAAn4C,KAAA60H,aAAAC,YAAA,EAAA38E,KAAA1kH,UAEA26L,MAAAsD,MAAA1xH,KAAA60H,aAAArrK,MAAA,EAAA2uF,KAAA,OAAAn4C,KAAA60H,aAAArrK,MAAA,EAAA2uF,KAAA1kH,UAIAtnB,UAAAojC,EAAAA,IACA28K,KAAAmG,WAAAjE,MAAAvxF,KAAAx1H,WAAA6kN,KAAAkI,OAAA3rI,KAAAyjI,KAAAkC,OAAAjiN,UAGA+nN,UACA7sN,WAAA,WACA6kN,KAAAkF,MAAA,OAAAhD,MAAAvxF,MACA,GAIA,aAAAmwF,OAAAv9K,MACAilL,gBAEAxI,KAAAntC,KAAA,SAAA21C,cAGAxI,KAAA6I,YAAA3G,MAAAvxF,UAEA,CAEA,GAAAm4F,WAAA,WACAh1H,KAAAksD,YAAA/T,KACAn4C,KAAAwuH,MAAAJ,MAAAhB,QAAAlB,KAAAkB,QAAAJ,OAAAI,QAAAptH,KAAAwuH,MACAxuH,KAAA8tH,OAAAM,MAAAf,QAAAL,OAAAc,SACA9tH,KAAApC,aAAAwwH,MAAA2D,KAGA,KAIA,GAHA/xH,KAAA+sD,OAGA/sD,KAAA2C,OAGA,WAFAupH,MAAAkF,MAAA,YAAAhD,MAAAvxF,IAAA,mIAMA1wH,WAAAojC,EAAAA,IACA28K,KAAAmG,WAAAjE,MAAAvxF,KAAAx1H,WAAA6kN,KAAAkI,OAAA3rI,KAAAyjI,KAAAkC,OAAAjiN,UAGA+nN,UACAhI,KAAAkF,MAAA,OAAAhD,MAAAvxF,KAEA,MAAAqpD,KACAgmC,KAAAkF,MAAA,YAAAhD,MAAAvxF,IAAAqpD,OAKA+uC,mBAAAxuN,QAAAA,OAAAyuN,SAAAl1H,KAAA9sF,YAAA85M,OAAAO,WAAA4H,UACA,IAAA,IAAAn1H,KAAA9sF,YAAA+hN,mBACAD,gBACA,CACA,GAAAx3H,UAAA,WAEAw3H,YAGAh1H,KAAA5uC,oBAAA47J,OAAAM,cAAA9vH,UAAA,GAEAwC,MAAA54F,iBAAA4lN,OAAAM,cAAA9vH,UAAA,GAGA0uH,KAAA6I,YAAA3G,MAAAvxF,MAIA,MAAAuxF,OAAAvxF,KAQAswB,MAAA,SAAAr/G,IACA,GAAAo+K,MAAA7gN,IAGA,IAAA,WAAA6gN,KAAA1qK,OAQA,MAPA0qK,MAAAoG,OAAA/mN,MACAlC,MAAA,QACAR,OAAA,WACAqjN,KAAA/+D,MAAAr/G,OAIAo+K,IAMA,KAAA,GAFAgC,KAAAhC,KAAAiC,aAAArgL,IAEA3+B,EAAA,EAAAA,EAAA++M,IAAAjjN,OAAAkE,IAAA,CAEA+8M,KAAA6I,YAAA7G,IAAA/+M,GAGA,IAAAi/M,OAAAlC,KAAAmC,WAAAH,IAAA/+M,GAEA,IAAAi/M,QAAAA,MAAA6C,UAEA7C,MAAAmG,MAAArI,KAAA/zE,KAAA+1E,IAAA/+M,IACAi/M,MAAAgH,UAAA,EACAhH,MAAA6C,SAAA,EAGA/E,KAAAmJ,UAAAnH,IAAA/+M,IAEAi/M,MAAAE,OACA,GAAApC,KAAA+B,UAAA,CAEA,IAAAG,MAAAE,MAAAuG,aACA,aAGA,KAAAzG,MAAAE,MAAAuG,aAAAznE,KACAghE,MAAAE,MAAAuG,aAAAS,QAAA,GAEAlH,MAAAE,MAAAuG,aAAAznE,KAAA,GAIA8+D,KAAAqJ,aAAAnH,MAAAE,WACAn2M,OAAAi2M,MAAAE,MAAA76L,WAAA26L,MAAAE,MAAA76L,WAAA8b,EAAAA,GACA6+K,MAAAE,MAAAnhE,OAMA7hJ,WAAA,IACA4gN,KAAAkF,MAAA,QAAAhD,MAAAA,MAAAvxF,IAAA,MAIA,MAAAqvF,OASA9+D,KAAA,SAAAt/G,GAAAomL,UACA,GAAAhI,MAAA7gN,IAGA,IAAA,WAAA6gN,KAAA1qK,OAQA,MAPA0qK,MAAAoG,OAAA/mN,MACAlC,MAAA,OACAR,OAAA,WACAqjN,KAAA9+D,KAAAt/G,OAIAo+K,IAMA,KAAA,GAFAgC,KAAAhC,KAAAiC,aAAArgL,IAEA3+B,EAAA,EAAAA,EAAA++M,IAAAjjN,OAAAkE,IAAA,CAEA+8M,KAAA6I,YAAA7G,IAAA/+M,GAGA,IAAAi/M,OAAAlC,KAAAmC,WAAAH,IAAA/+M,GAEAi/M,SAEAA,MAAAmG,MAAAnG,MAAAoG,QAAA,EACApG,MAAAgH,UAAA,EACAhH,MAAA6C,SAAA,EACA7C,MAAAgG,QAAA,EAGAlI,KAAAmJ,UAAAnH,IAAA/+M,IAEAi/M,MAAAE,QACApC,KAAA+B,UAEAG,MAAAE,MAAAuG,mBACA,KAAAzG,MAAAE,MAAAuG,aAAAznE,KACAghE,MAAAE,MAAAuG,aAAAS,QAAA,GAEAlH,MAAAE,MAAAuG,aAAAznE,KAAA,GAIA8+D,KAAAqJ,aAAAnH,MAAAE,QAEAn2M,MAAAi2M,MAAAE,MAAA76L,WAAA26L,MAAAE,MAAA76L,WAAA8b,EAAAA,IACA6+K,MAAAE,MAAApiE,YAAAkiE,MAAAoG,QAAA,EACApG,MAAAE,MAAAnhE,UAIA+mE,UACAhI,KAAAkF,MAAA,OAAAhD,MAAAvxF,MAKA,MAAAqvF,OASAqC,KAAA,SAAAC,MAAA1gL,IACA,GAAAo+K,MAAA7gN,IAGA,IAAA,WAAA6gN,KAAA1qK,OAQA,MAPA0qK,MAAAoG,OAAA/mN,MACAlC,MAAA,OACAR,OAAA,WACAqjN,KAAAqC,KAAAC,MAAA1gL,OAIAo+K,IAIA,QAAA,KAAAp+K,GAAA,CACA,GAAA,iBAAA0gL,OAGA,MAAAtC,MAAAkB,MAFAlB,MAAAkB,OAAAoB,MASA,IAAA,GAFAN,KAAAhC,KAAAiC,aAAArgL,IAEA3+B,EAAA,EAAAA,EAAA++M,IAAAjjN,OAAAkE,IAAA,CAEA,GAAAi/M,OAAAlC,KAAAmC,WAAAH,IAAA/+M,GAEAi/M,SACAA,MAAAhB,OAAAoB,MAEAtC,KAAA+B,WAAAG,MAAAE,MACAF,MAAAE,MAAAnxH,KAAA8uD,eAAAuiE,MAAA,EAAAJ,MAAAf,QAAAL,OAAA/uC,IAAA/xB,aACAkiE,MAAAE,QACAF,MAAAE,MAAAE,QAAAxB,OAAAI,QAAAoB,OAGAtC,KAAAkF,MAAA,OAAAhD,MAAAvxF,MAIA,MAAAqvF,OAWA4B,OAAA,WACA,GAEAC,KAAAjgL,GAFAo+K,KAAA7gN,KACAQ,KAAAP,SAIA,IAAA,IAAAO,KAAAZ,OAEA,MAAAihN,MAAAmB,OACA,IAAA,IAAAxhN,KAAAZ,QAAA,IAAAY,KAAAZ,YAAA,KAAAY,KAAA,GAAA,CAEAqgN,KAAAiC,eACApqM,QAAAlY,KAAA,KACA,EACAiiC,GAAApmB,SAAA7b,KAAA,GAAA,IAEAkiN,IAAA36L,WAAAvnB,KAAA,QAEAA,MAAAZ,QAAA,IACA8iN,IAAA36L,WAAAvnB,KAAA,IACAiiC,GAAApmB,SAAA7b,KAAA,GAAA,IAIA,IAAAuiN,MACA,UAAA,KAAAL,KAAAA,KAAA,GAAAA,KAAA,GA2CA,MADAK,OAAAtgL,GAAAo+K,KAAAmC,WAAAvgL,IAAAo+K,KAAA8E,QAAA,GACA5C,MAAAA,MAAAf,QAAA,CAzCA,IAAA,WAAAnB,KAAA1qK,OAQA,MAPA0qK,MAAAoG,OAAA/mN,MACAlC,MAAA,SACAR,OAAA,WACAqjN,KAAA4B,OAAA3iN,MAAA+gN,KAAArgN,SAIAqgN,SAIA,KAAAp+K,KACAo+K,KAAAmB,QAAAU,KAIAjgL,GAAAo+K,KAAAiC,aAAArgL,GACA,KAAA,GAAA3+B,GAAA,EAAAA,EAAA2+B,GAAA7iC,OAAAkE,KAEAi/M,MAAAlC,KAAAmC,WAAAvgL,GAAA3+B,OAGAi/M,MAAAf,QAAAU,IAGAliN,KAAA,IACAqgN,KAAAmJ,UAAAvnL,GAAA3+B,IAGA+8M,KAAA+B,WAAAG,MAAAE,QAAAF,MAAAhB,OACAgB,MAAAE,MAAAnxH,KAAA8uD,eAAA8hE,IAAAf,OAAA/uC,IAAA/xB,aACAkiE,MAAAE,QAAAF,MAAAhB,SACAgB,MAAAE,MAAAR,OAAAC,IAAAf,OAAAc,UAGA5B,KAAAkF,MAAA,SAAAhD,MAAAvxF,KAQA,OAAAqvF,OAWAsJ,KAAA,SAAAz8M,KAAAD,GAAAtF,IAAAs6B,IACA,GAAAo+K,MAAA7gN,IAGA,IAAA,WAAA6gN,KAAA1qK,OAQA,MAPA0qK,MAAAoG,OAAA/mN,MACAlC,MAAA,OACAR,OAAA,WACAqjN,KAAAsJ,KAAAz8M,KAAAD,GAAAtF,IAAAs6B,OAIAo+K,IAIAA,MAAA4B,OAAA/0M,KAAA+0B,GAIA,KAAA,GADAogL,KAAAhC,KAAAiC,aAAArgL,IACA3+B,EAAA,EAAAA,EAAA++M,IAAAjjN,OAAAkE,IAAA,CAEA,GAAAi/M,OAAAlC,KAAAmC,WAAAH,IAAA/+M,GAGA,IAAAi/M,MAAA,CAOA,GALAtgL,IACAo+K,KAAAmJ,UAAAnH,IAAA/+M,IAIA+8M,KAAA+B,YAAAG,MAAAhB,OAAA,CACA,GAAAlhE,aAAA8gE,OAAA/uC,IAAA/xB,YACAt/F,IAAAs/F,YAAA14I,IAAA,GACA46M,OAAAf,QAAAt0M,KACAq1M,MAAAE,MAAAnxH,KAAA8uD,eAAAlzI,KAAAmzI,aACAkiE,MAAAE,MAAAnxH,KAAAs4H,wBAAA38M,GAAA8zC,KAGAs/J,KAAAwJ,mBAAAtH,MAAAr1M,KAAAD,GAAAtF,IAAA06M,IAAA/+M,KAIA,MAAA+8M,OAWAwJ,mBAAA,SAAAtH,MAAAr1M,KAAAD,GAAAtF,IAAAs6B,IACA,GAAAo+K,MAAA7gN,KACA0iN,IAAAh1M,KACAgvF,IAAAhvF,KAAAD,GAAA,MAAA,KACA+E,KAAA5D,KAAAc,IAAAhC,KAAAD,IACAg4H,MAAAjzH,KAAA,IACA83M,QAAA7kF,MAAA,EAAAt9H,IAAAs9H,MAAAt9H;iHAGAmiN,SAAA,IACA7kF,MAAA72H,KAAAC,KAAA42H,OAAA,EAAA6kF,UACAA,QAAA,GAGAvH,MAAAwH,UAAA3iN,YAAA,WAEA69H,MAAA,IACAi9E,KAAA,OAAAhmH,IAAA,KAAA,KAIAgmH,IAAA9zM,KAAAsF,IAAA,EAAAwuM,KACAA,IAAA9zM,KAAAY,IAAA,EAAAkzM,KAGAA,IAAA9zM,KAAAsa,MAAA,IAAAw5L,KAAA,IAGA7B,KAAA+B,eACA,KAAAngL,KACAo+K,KAAAmB,QAAAU,KAGAK,MAAAf,QAAAU,KAEA7B,KAAA4B,OAAAC,IAAAK,MAAAvxF,KAAA,IAIA/jH,GAAAC,MAAAg1M,KAAAj1M,IAAAA,GAAAC,MAAAg1M,KAAAj1M,MACA+8M,cAAAzH,MAAAwH,WACAxH,MAAAwH,UAAA,KACA1J,KAAA4B,OAAAh1M,GAAAs1M,MAAAvxF,KACAqvF,KAAAkF,MAAA,OAAAhD,MAAAvxF,OAEA84F,UASAN,UAAA,SAAAvnL,IACA,GAAAo+K,MAAA7gN,KACA+iN,MAAAlC,KAAAmC,WAAAvgL,GAYA,OAVAsgL,QAAAA,MAAAwH,YACA1J,KAAA+B,WACAG,MAAAE,MAAAnxH,KAAA24H,sBAAA9I,OAAA/uC,IAAA/xB,aAGA2pE,cAAAzH,MAAAwH,WACAxH,MAAAwH,UAAA,KACA1J,KAAAkF,MAAA,OAAAtjL,KAGAo+K,MAWAhxI,KAAA,WACA,GAEAA,MAAAptC,GAAAsgL,MAFAlC,KAAA7gN,KACAQ,KAAAP,SAIA,IAAA,IAAAO,KAAAZ,OAEA,MAAAihN,MAAAwF,KACA,IAAA,IAAA7lN,KAAAZ,OAAA,CACA,GAAA,iBAAAY,MAAA,GAMA,SADAuiN,MAAAlC,KAAAmC,WAAA3mM,SAAA7b,KAAA,GAAA,OACAuiN,MAAAsD,KALAx2I,MAAArvE,KAAA,GACAqgN,KAAAwF,MAAAx2I,SAMA,KAAArvE,KAAAZ,SACAiwE,KAAArvE,KAAA,GACAiiC,GAAApmB,SAAA7b,KAAA,GAAA,IAKA,KAAA,GADAqiN,KAAAhC,KAAAiC,aAAArgL,IACA3+B,EAAA,EAAAA,EAAA++M,IAAAjjN,OAAAkE,KACAi/M,MAAAlC,KAAAmC,WAAAH,IAAA/+M,OAGAi/M,MAAAsD,MAAAx2I,KACAgxI,KAAA+B,WAAAG,MAAAE,OAAAF,MAAAE,MAAAuG,eACAzG,MAAAE,MAAAuG,aAAA35I,KAAAA,KACAA,OACAkzI,MAAAE,MAAAuG,aAAAkB,UAAA3H,MAAAoG,QAAA,EACApG,MAAAE,MAAAuG,aAAAmB,QAAA5H,MAAAqG,QAMA,OAAAvI,OAWA8F,KAAA,WACA,GAEAA,MAAAlkL,GAFAo+K,KAAA7gN,KACAQ,KAAAP,SAIA,IAAA,IAAAO,KAAAZ,OAEA6iC,GAAAo+K,KAAA8E,QAAA,GAAAn0F,QACA,IAAA,IAAAhxH,KAAAZ,OAAA,CAEA,GAAAijN,KAAAhC,KAAAiC,eACA/xL,MAAA8xL,IAAAnqM,QAAAlY,KAAA,GACAuwB,QAAA,EACA0R,GAAApmB,SAAA7b,KAAA,GAAA,IAEAmmN,KAAA5+L,WAAAvnB,KAAA,QAEA,KAAAA,KAAAZ,SACA+mN,KAAA5+L,WAAAvnB,KAAA,IACAiiC,GAAApmB,SAAA7b,KAAA,GAAA,IAIA,IAAAuiN,MACA,IAAA,gBAAA4D,MAsDA,MADA5D,OAAAlC,KAAAmC,WAAAvgL,IACAsgL,MAAAA,MAAA2D,MAAA7F,KAAA6F,KApDA,IAAA,WAAA7F,KAAA1qK,OAQA,MAPA0qK,MAAAoG,OAAA/mN,MACAlC,MAAA,OACAR,OAAA,WACAqjN,KAAA8F,KAAA7mN,MAAA+gN,KAAArgN,SAIAqgN,SAIA,KAAAp+K,KACAo+K,KAAA6F,MAAAC,MAIAlkL,GAAAo+K,KAAAiC,aAAArgL,GACA,KAAA,GAAA3+B,GAAA,EAAAA,EAAA2+B,GAAA7iC,OAAAkE,IAIA,GAFAi/M,MAAAlC,KAAAmC,WAAAvgL,GAAA3+B,IAEA,CAGAi/M,MAAAgH,UAAAlJ,KAAA/zE,KAAArqG,GAAA3+B,IACAi/M,MAAAwG,WAAA1I,KAAA+B,UAAAjB,OAAA/uC,IAAA/xB,YAAAkiE,MAAAwG,WACAxG,MAAA2D,MAAAC,KAGA9F,KAAA+B,WAAAG,MAAAE,OAAAF,MAAAE,MAAAuG,aACAzG,MAAAE,MAAAuG,aAAAj3H,aAAArjF,MAAAy3M,KACA5D,MAAAE,QACAF,MAAAE,MAAA1wH,aAAAo0H,KAIA,IAAA75E,MAAA+zE,KAAA/zE,KAAArqG,GAAA3+B,IACAskB,UAAAy4L,KAAA1iD,QAAA4kD,MAAA5kD,SAAA,GAAA0iD,KAAA1iD,QAAA4kD,MAAA5kD,SAAA,IAAA,IAAArxB,KACAhsI,QAAA,IAAAsnB,SAAAxZ,KAAAc,IAAAqzM,MAAA2D,QAGA7F,KAAAmG,WAAAvkL,GAAA3+B,KAAAi/M,MAAA6C,UACA/E,KAAA6I,YAAAjnL,GAAA3+B,IACA+8M,KAAAmG,WAAAvkL,GAAA3+B,IAAA9H,WAAA6kN,KAAAkI,OAAA3rI,KAAAyjI,KAAAkC,OAAAjiN,UAGA+/M,KAAAkF,MAAA,OAAAhD,MAAAvxF,KAQA,MAAAqvF,OAWA/zE,KAAA,WACA,GAEAA,MAAArqG,GAFAo+K,KAAA7gN,KACAQ,KAAAP,SAIA,IAAA,IAAAO,KAAAZ,OAEA6iC,GAAAo+K,KAAA8E,QAAA,GAAAn0F,QACA,IAAA,IAAAhxH,KAAAZ,OAAA,CAEA,GAAAijN,KAAAhC,KAAAiC,eACA/xL,MAAA8xL,IAAAnqM,QAAAlY,KAAA,GACAuwB,QAAA,EACA0R,GAAApmB,SAAA7b,KAAA,GAAA,IACAqgN,KAAA8E,QAAA/lN,SACA6iC,GAAAo+K,KAAA8E,QAAA,GAAAn0F,IACAsb,KAAA/kH,WAAAvnB,KAAA,SAEA,KAAAA,KAAAZ,SACAktI,KAAA/kH,WAAAvnB,KAAA,IACAiiC,GAAApmB,SAAA7b,KAAA,GAAA,IAIA,QAAA,KAAAiiC,GACA,MAAAo+K,KAIA,IAAA,WAAAA,KAAA1qK,OAQA,MAPA0qK,MAAAoG,OAAA/mN,MACAlC,MAAA,OACAR,OAAA,WACAqjN,KAAA/zE,KAAAhtI,MAAA+gN,KAAArgN,SAIAqgN,IAIA,IAAAkC,OAAAlC,KAAAmC,WAAAvgL,GAEA,IAAAsgL,MAAA,CACA,KAAA,gBAAAj2E,OAAAA,MAAA,GAuBA,CACA,GAAA+zE,KAAA+B,UAAA,CACA,GAAAgI,UAAA/J,KAAAgK,QAAApoL,IAAAk/K,OAAA/uC,IAAA/xB,YAAAkiE,MAAAwG,WAAA,EACAuB,SAAA/H,MAAAgH,UAAAhH,MAAAgH,UAAAhH,MAAAmG,MAAA,CACA,OAAAnG,OAAAmG,OAAA4B,SAAAF,SAAAh8M,KAAAc,IAAAqzM,MAAA2D,QAEA,MAAA3D,OAAAE,MAAApiE,YA3BA,GAAAgqE,SAAAhK,KAAAgK,QAAApoL,GACAooL,UACAhK,KAAA/+D,MAAAr/G,IAAA,GAIAsgL,MAAAmG,MAAAp8E,KACAi2E,MAAAgG,QAAA,EACAlI,KAAA6I,YAAAjnL,IAGAooL,SACAhK,KAAAn/D,KAAAj/G,IAAA,IAIAo+K,KAAA+B,WAAAG,MAAAE,QACAF,MAAAE,MAAApiE,YAAA/T,MAGA+zE,KAAAkF,MAAA,OAAAtjL,IAYA,MAAAo+K,OAQAgK,QAAA,SAAApoL,IACA,GAAAo+K,MAAA7gN,IAGA,IAAA,gBAAAyiC,IAAA,CACA,GAAAsgL,OAAAlC,KAAAmC,WAAAvgL,GACA,SAAAsgL,QAAAA,MAAA6C,QAIA,IAAA,GAAA9hN,GAAA,EAAAA,EAAA+8M,KAAA8E,QAAA/lN,OAAAkE,IACA,IAAA+8M,KAAA8E,QAAA7hN,GAAA8hN,QACA,OAAA,CAIA,QAAA,GAQAx9L,SAAA,SAAAqa,IACA,GAAAo+K,MAAA7gN,KACAooB,SAAAy4L,KAAAkG,UAGAhE,MAAAlC,KAAAmC,WAAAvgL,GAKA,OAJAsgL,SACA36L,SAAAy4L,KAAA1iD,QAAA4kD,MAAA5kD,SAAA,GAAA,KAGA/1I,UAOAgc,MAAA,WACA,MAAApkC,MAAAm2C,QAOAitK,OAAA,WAKA,IAAA,GAJAvC,MAAA7gN,KAGA+qN,OAAAlK,KAAA8E,QACA7hN,EAAA,EAAAA,EAAAinN,OAAAnrN,OAAAkE,IAAA,CAOA,GALAinN,OAAAjnN,GAAA8hN,SACA/E,KAAA9+D,KAAAgpE,OAAAjnN,GAAA0tH,MAIAqvF,KAAA+B,UAAA,CAEA,kBAAA/lN,KAAA8kN,OAAAO,YAAAP,OAAAO,WAAAx/M,aAEAqoN,OAAAjnN,GAAAm/M,MAAArkN,IAAA,0FAIAmsN,OAAAjnN,GAAAm/M,MAAAl9J,oBAAA,QAAAglK,OAAAjnN,GAAAknN,UAAA,GACAD,OAAAjnN,GAAAm/M,MAAAl9J,oBAAA47J,OAAAM,cAAA8I,OAAAjnN,GAAAmnN,SAAA,SAIAF,QAAAjnN,GAAAm/M,MAGApC,KAAA6I,YAAAqB,OAAAjnN,GAAA0tH,IAGA,IAAAzgG,OAAA4wL,OAAAG,OAAAppM,QAAAmoM,KACA9vL,QAAA,GACA4wL,OAAAG,OAAAxgH,OAAAvwE,MAAA,GAKA,GAAAm6L,WAAA,CACA,KAAApnN,EAAA,EAAAA,EAAA69M,OAAAG,OAAAliN,OAAAkE,IACA,GAAA69M,OAAAG,OAAAh+M,GAAA8iN,OAAA/F,KAAA+F,KAAA,CACAsE,UAAA,CACA,OAgBA,MAZApjK,QAAAojK,gBACApjK,OAAA+4J,KAAA+F,MAIAjF,OAAAS,SAAA,EAGAvB,KAAA1qK,OAAA,WACA0qK,KAAA8E,WACA9E,KAAA,KAEA,MAWAvkC,GAAA,SAAAt+K,MAAAV,GAAAmlC,GAAAixI,MACA,GAAAmtC,MAAA7gN,KACAw2L,OAAAqqB,KAAA,MAAA7iN,MAMA,OAJA,kBAAAV,KACAk5L,OAAAt2L,KAAAwzK,MAAAjxI,GAAAA,GAAAnlC,GAAAA,GAAAo2K,KAAAA,OAAAjxI,GAAAA,GAAAnlC,GAAAA,KAGAujN,MAUAsK,IAAA,SAAAntN,MAAAV,GAAAmlC,IACA,GAAAo+K,MAAA7gN,KACAw2L,OAAAqqB,KAAA,MAAA7iN,OACA8F,EAAA,CAQA,IALA,gBAAAxG,MACAmlC,GAAAnlC,GACAA,GAAA,MAGAA,IAAAmlC,GAEA,IAAA3+B,EAAA,EAAAA,EAAA0yL,OAAA52L,OAAAkE,IAAA,CACA,GAAAsnN,MAAA3oL,KAAA+zJ,OAAA1yL,GAAA2+B,EACA,IAAAnlC,KAAAk5L,OAAA1yL,GAAAxG,IAAA8tN,OAAA9tN,IAAA8tN,KAAA,CACA50B,OAAAl1F,OAAAx9F,EAAA,EACA,YAGA,IAAA9F,MAEA6iN,KAAA,MAAA7iN,cACA,CAEA,GAAAgjB,MAAAnX,OAAAmX,KAAA6/L,KACA,KAAA/8M,EAAA,EAAAA,EAAAkd,KAAAphB,OAAAkE,IACA,IAAAkd,KAAAld,GAAA4U,QAAA,QAAAnc,MAAAoN,QAAAk3M,KAAA7/L,KAAAld,OACA+8M,KAAA7/L,KAAAld,QAKA,MAAA+8M,OAUAntC,KAAA,SAAA11K,MAAAV,GAAAmlC,IACA,GAAAo+K,MAAA7gN,IAKA,OAFA6gN,MAAAvkC,GAAAt+K,MAAAV,GAAAmlC,GAAA,GAEAo+K,MAUAkF,MAAA,SAAA/nN,MAAAykC,GAAA5yB,KAKA,IAAA,GAJAgxM,MAAA7gN,KACAw2L,OAAAqqB,KAAA,MAAA7iN,OAGA8F,EAAA0yL,OAAA52L,OAAA,EAAAkE,GAAA,EAAAA,IACA0yL,OAAA1yL,GAAA2+B,IAAA+zJ,OAAA1yL,GAAA2+B,KAAAA,IAAA,SAAAzkC,QACAhC,WAAA,SAAAsB,IACAA,GAAAsJ,KAAA5G,KAAAyiC,GAAA5yB,MACAutE,KAAAyjI,KAAArqB,OAAA1yL,GAAAxG,IAAA,GAGAk5L,OAAA1yL,GAAA4vK,MACAmtC,KAAAsK,IAAAntN,MAAAw4L,OAAA1yL,GAAAxG,GAAAk5L,OAAA1yL,GAAA2+B,IAKA,OAAAo+K,OASAwK,WAAA,WACA,GAAAxK,MAAA7gN,IAEA,IAAA6gN,KAAAoG,OAAArnN,OAAA,EAAA,CACA,GAAA0rN,MAAAzK,KAAAoG,OAAA,EAGApG,MAAAntC,KAAA43C,KAAAttN,MAAA,WACA6iN,KAAAoG,OAAApnN,QACAghN,KAAAwK,eAGAC,KAAA9tN,SAGA,MAAAqjN,OAQAkI,OAAA,SAAAhG,OACA,GAAAlC,MAAA7gN,KACAoqC,OAAA24K,MAAA5kD,OAKA,KAAA0iD,KAAA+B,WAAAG,MAAAE,QAAAF,MAAAE,MAAA3rH,OAEA,MADAt7F,YAAA6kN,KAAAkI,OAAA3rI,KAAAyjI,KAAAkC,OAAA,KACAlC,IAIA,IAAAhxI,SAAAkzI,MAAAsD,QAAAxF,KAAA1iD,QAAA/zH,QAAA,GAWA,IARAy2K,KAAAkF,MAAA,MAAAhD,MAAAvxF,MAGAqvF,KAAA+B,WAAA/yI,MACAgxI,KAAA9+D,KAAAghE,MAAAvxF,KAAA,GAAAkwB,KAAAqhE,MAAAvxF,KAIAqvF,KAAA+B,WAAA/yI,KAAA,CACAgxI,KAAAkF,MAAA,OAAAhD,MAAAvxF,KACAuxF,MAAAmG,MAAAnG,MAAAoG,QAAA,EACApG,MAAAgH,UAAA,EACAhH,MAAAwG,WAAA5H,OAAA/uC,IAAA/xB,WAEA,IAAA//I,SAAA,KAAAiiN,MAAAqG,MAAArG,MAAAoG,QAAAv6M,KAAAc,IAAAqzM,MAAA2D,MACA7F,MAAAmG,WAAAjE,MAAAvxF,KAAAx1H,WAAA6kN,KAAAkI,OAAA3rI,KAAAyjI,KAAAkC,OAAAjiN,SAuBA,MAnBA+/M,MAAA+B,YAAA/yI,OACAkzI,MAAA6C,SAAA,EACA7C,MAAAgG,QAAA,EACAhG,MAAAmG,MAAAnG,MAAAoG,QAAA,EACApG,MAAAgH,UAAA,EACAlJ,KAAA6I,YAAA3G,MAAAvxF,KAGAqvF,KAAAqJ,aAAAnH,MAAAE,OAGAtB,OAAA4B,gBAIA1C,KAAA+B,WAAA/yI,MACAgxI,KAAA9+D,KAAAghE,MAAAvxF,KAGAqvF,MAQA6I,YAAA,SAAAjnL,IACA,GAAAo+K,MAAA7gN,IAOA,OALA6gN,MAAAmG,WAAAvkL,MACA97B,aAAAk6M,KAAAmG,WAAAvkL,WACAo+K,MAAAmG,WAAAvkL,KAGAo+K,MAQAmC,WAAA,SAAAvgL,IAIA,IAAA,GAHAo+K,MAAA7gN,KAGA8D,EAAA,EAAAA,EAAA+8M,KAAA8E,QAAA/lN,OAAAkE,IACA,GAAA2+B,KAAAo+K,KAAA8E,QAAA7hN,GAAA0tH,IACA,MAAAqvF,MAAA8E,QAAA7hN,EAIA,OAAA,OAOAklN,eAAA,WACA,GAAAnI,MAAA7gN,IAEA6gN,MAAA0K,QAGA,KAAA,GAAAznN,GAAA,EAAAA,EAAA+8M,KAAA8E,QAAA/lN,OAAAkE,IACA,GAAA+8M,KAAA8E,QAAA7hN,GAAAilN,OACA,MAAAlI,MAAA8E,QAAA7hN,GAAA4mC,OAKA,OAAA,IAAAi+K,OAAA9H,OAMA0K,OAAA,WACA,GAAA1K,MAAA7gN,KACAozB,MAAAytL,KAAAyF,MACAkF,IAAA,EACA1nN,EAAA,CAGA,MAAA+8M,KAAA8E,QAAA/lN,OAAAwzB,OAAA,CAKA,IAAAtvB,EAAA,EAAAA,EAAA+8M,KAAA8E,QAAA/lN,OAAAkE,IACA+8M,KAAA8E,QAAA7hN,GAAAilN,QACAyC,KAKA,KAAA1nN,EAAA+8M,KAAA8E,QAAA/lN,OAAA,EAAAkE,GAAA,EAAAA,IAAA,CACA,GAAA0nN,KAAAp4L,MACA,MAGAytL,MAAA8E,QAAA7hN,GAAAilN,SAEAlI,KAAA+B,WAAA/B,KAAA8E,QAAA7hN,GAAAm/M,OACApC,KAAA8E,QAAA7hN,GAAAm/M,MAAA3iE,WAAA,GAIAugE,KAAA8E,QAAArkH,OAAAx9F,EAAA,GACA0nN,UAUA1I,aAAA,SAAArgL,IACA,GAAAo+K,MAAA7gN,IAEA,QAAA,KAAAyiC,GAAA,CAEA,IAAA,GADAogL,QACA/+M,EAAA,EAAAA,EAAA+8M,KAAA8E,QAAA/lN,OAAAkE,IACA++M,IAAA3iN,KAAA2gN,KAAA8E,QAAA7hN,GAAA0tH,IAGA,OAAAqxF,KAEA,OAAApgL,KASA6mL,eAAA,SAAAvG,OACA,GAAAlC,MAAA7gN,IAqBA,OAlBA+iN,OAAAE,MAAAuG,aAAA7H,OAAA/uC,IAAAjxB,qBACAohE,MAAAE,MAAAuG,aAAApxK,OAAA0P,MAAA+4J,KAAA+F,MAGA7D,MAAA0I,QACA1I,MAAAE,MAAAuG,aAAAx3H,QAAA+wH,MAAA0I,SAEA1I,MAAAE,MAAAuG,aAAAx3H,QAAA+wH,MAAAE,OAIAF,MAAAE,MAAAuG,aAAA35I,KAAAkzI,MAAAsD,MACAtD,MAAAsD,QACAtD,MAAAE,MAAAuG,aAAAkB,UAAA3H,MAAAoG,QAAA,EACApG,MAAAE,MAAAuG,aAAAmB,QAAA5H,MAAAqG,OAEArG,MAAAE,MAAAuG,aAAAj3H,aAAArjF,MAAA6zM,MAAA2D,MAEA7F,MAQAqJ,aAAA,SAAAv1H,MACA,GAAAksH,MAAA7gN,IAEA,IAAA6gN,KAAAwE,eAAA,CACA1wH,KAAA60H,aAAA5nE,QAAA,KACAjtD,KAAA60H,aAAAlpE,WAAA,EACA,KAAA3rD,KAAA60H,aAAApxK,OAAAyoK,KAAAwE,eAAA,MAAAtiN,KAIA,MAFA4xF,MAAA60H,aAAA,KAEA3I,MAWA,IAAA8H,OAAA,SAAA+C,MACA1rN,KAAA2rN,QAAAD,KACA1rN,KAAAwI,OAEAmgN,OAAAnsN,WAKAgM,KAAA,WACA,GAAAq4M,MAAA7gN,KACAf,OAAA4hN,KAAA8K,OAqBA,OAlBA9K,MAAAkB,OAAA9iN,OAAA8iN,OACAlB,KAAAwF,MAAApnN,OAAAonN,MACAxF,KAAAmB,QAAA/iN,OAAA+iN,QACAnB,KAAA6F,MAAAznN,OAAAynN,MACA7F,KAAAqI,MAAA,EACArI,KAAA+E,SAAA,EACA/E,KAAAkI,QAAA,EACAlI,KAAA1iD,QAAA,YAGA0iD,KAAArvF,MAAAmwF,OAAAC,SAGA3iN,OAAA0mN,QAAAzlN,KAAA2gN,MAGAA,KAAAl6G,SAEAk6G,MAOAl6G,OAAA,WACA,GAAAk6G,MAAA7gN,KACAf,OAAA4hN,KAAA8K,QACAlJ,OAAAd,OAAAI,QAAAlB,KAAAkB,QAAAlB,KAAA8K,QAAA5J,OAAA,EAAAlB,KAAAmB,OA4BA,OA1BA/iN,QAAA2jN,WAEA/B,KAAAoC,UAAA,KAAAtB,OAAA/uC,IAAA7gF,WAAA4vH,OAAA/uC,IAAAg5C,iBAAAjK,OAAA/uC,IAAA7gF,aACA8uH,KAAAoC,MAAAnxH,KAAA8uD,eAAA6hE,OAAAd,OAAA/uC,IAAA/xB,aACAggE,KAAAoC,MAAA3rH,QAAA,EACAupH,KAAAoC,MAAAjxH,QAAA2vH,OAAAQ,cAEAtB,KAAAoC,MAAA,GAAA/wH,OAGA2uH,KAAAmK,SAAAnK,KAAAgL,eAAAzuI,KAAAyjI,MACAA,KAAAoC,MAAAlnN,iBAAA,QAAA8kN,KAAAmK,UAAA,GAGAnK,KAAAoK,QAAApK,KAAAiL,cAAA1uI,KAAAyjI,MACAA,KAAAoC,MAAAlnN,iBAAA4lN,OAAAM,cAAApB,KAAAoK,SAAA,GAGApK,KAAAoC,MAAArkN,IAAAK,OAAA2nN,KACA/F,KAAAoC,MAAAwD,QAAA,OACA5F,KAAAoC,MAAAR,OAAAA,OAAAd,OAAAc,SAGA5B,KAAAoC,MAAA15E,QAGAs3E,MAOAn2K,MAAA,WACA,GAAAm2K,MAAA7gN,KACAf,OAAA4hN,KAAA8K,OAgBA,OAbA9K,MAAAkB,OAAA9iN,OAAA8iN,OACAlB,KAAAwF,MAAApnN,OAAAonN,MACAxF,KAAAmB,QAAA/iN,OAAA+iN,QACAnB,KAAA6F,MAAAznN,OAAAynN,MACA7F,KAAAqI,MAAA,EACArI,KAAAkJ,UAAA,EACAlJ,KAAA+E,SAAA,EACA/E,KAAAkI,QAAA,EACAlI,KAAA1iD,QAAA,YAGA0iD,KAAArvF,MAAAmwF,OAAAC,SAEAf,MAMAgL,eAAA,WACA,GAAAhL,MAAA7gN,IAGA6gN,MAAA8K,QAAA5F,MAAA,YAAAlF,KAAArvF,IAAAqvF,KAAAoC,MAAAjlL,MAAA6iL,KAAAoC,MAAAjlL,MAAAovB,KAAA,GAGAyzJ,KAAAoC,MAAAl9J,oBAAA,QAAA86J,KAAAmK,UAAA,IAMAc,cAAA,WACA,GAAAjL,MAAA7gN,KACAf,OAAA4hN,KAAA8K,OAGA1sN,QAAA8nN,UAAAn4M,KAAAC,KAAA,GAAAgyM,KAAAoC,MAAA76L,UAAA,GAGA,IAAAve,OAAAmX,KAAA/hB,OAAAk/J,SAAAv+J,SACAX,OAAAk/J,SAAA4tD,WAAA,EAAA,IAAA9sN,OAAA8nN,aAGA,WAAA9nN,OAAAk3C,SACAl3C,OAAAk3C,OAAA,SACAl3C,OAAA8mN,MAAA,QACA9mN,OAAAosN,cAIAxK,KAAAoC,MAAAl9J,oBAAA47J,OAAAM,cAAApB,KAAAoK,SAAA,IAOA,IAAAnjK,UAMA8gK,WAAA,SAAA/H,MACA,GAAA72H,KAAA62H,KAAA+F,IAGA,IAAA9+J,MAAAkiC,KAOA,MALA62H,MAAAkG,UAAAj/J,MAAAkiC,KAAA5hE,aAGA4jM,WAAAnL,KAKA,IAAA,sBAAAhkN,KAAAmtF,KAAA,CAIA,IAAA,GAFAzpE,MAAAupH,KAAA9/C,IAAAlqE,MAAA,KAAA,IACAmsM,SAAA,GAAAnzK,YAAAv4B,KAAA3gB,QACAkE,EAAA,EAAAA,EAAAyc,KAAA3gB,SAAAkE,EACAmoN,SAAAnoN,GAAAyc,KAAA2pH,WAAApmI,EAGA87I,iBAAAqsE,SAAA7zK,OAAAyoK,UACA,CAEA,GAAAqL,KAAA,GAAA1hF,eACA0hF,KAAAzhF,KAAA,MAAAzgD,KAAA,GACAkiI,IAAA99H,gBAAAyyH,KAAAgG,oBACAqF,IAAAliF,aAAA,cACAkiF,IAAA/kN,OAAA,WAEA,GAAAimD,OAAA8+J,IAAAxhF,OAAA,IAAA,EACA,IAAA,MAAAt9E,MAAA,MAAAA,MAAA,MAAAA,KAEA,WADAyzJ,MAAAkF,MAAA,YAAA,KAAA,0CAAAmG,IAAAxhF,OAAA,IAIAkV,iBAAAssE,IAAAniF,SAAA82E,OAEAqL,IAAAC,QAAA,WAEAtL,KAAA+B,YACA/B,KAAAsF,QAAA,EACAtF,KAAA+B,WAAA,EACA/B,KAAA8E,iBACA79J,OAAAkiC,KACA62H,KAAAt3E,SAGA6iF,YAAAF,OAQAE,YAAA,SAAAF,KACA,IACAA,IAAAnhF,OACA,MAAAhoI,GACAmpN,IAAAC,YASAvsE,gBAAA,SAAAysE,YAAAxL,MAEAc,OAAA/uC,IAAAhzB,gBAAAysE,YAAA,SAAAj0K,QACAA,QAAAyoK,KAAA8E,QAAA/lN,OAAA,IACAkoD,MAAA+4J,KAAA+F,MAAAxuK,OACA4zK,UAAAnL,KAAAzoK,UAEA,WACAyoK,KAAAkF,MAAA,YAAA,KAAA,kCASAiG,UAAA,SAAAnL,KAAAzoK,QAEAA,SAAAyoK,KAAAkG,YACAlG,KAAAkG,UAAA3uK,OAAAhwB,UAIA,IAAAve,OAAAmX,KAAA6/L,KAAA1iD,SAAAv+J,SACAihN,KAAA1iD,SAAA4tD,WAAA,EAAA,IAAAlL,KAAAkG,aAIA,WAAAlG,KAAA1qK,SACA0qK,KAAA1qK,OAAA,SACA0qK,KAAAkF,MAAA,QACAlF,KAAAwK,eAOA1I,kBAAA,WAEA,IACA,mBAAA9wH,cACA8vH,OAAA/uC,IAAA,GAAA/gF,cACA,mBAAA6tD,oBACAiiE,OAAA/uC,IAAA,GAAAlzB,oBAEAiiE,OAAAU,eAAA,EAEA,MAAAt/M,GACA4+M,OAAAU,eAAA,EAKA,GAAAh3C,KAAA,iBAAAxuK,KAAA8kN,OAAAO,YAAAP,OAAAO,WAAAoK,UACAC,WAAA5K,OAAAO,YAAAP,OAAAO,WAAAqK,WAAA53M,MAAA,0BACAslB,QAAAsyL,WAAAlwM,SAAAkwM,WAAA,GAAA,IAAA,IACA,IAAAlhD,KAAApxI,SAAAA,QAAA,EAAA,CACA,GAAAuyL,QAAA,SAAA3vN,KAAA8kN,OAAAO,YAAAP,OAAAO,WAAAx/M,UAAAmQ,gBACA8uM,OAAAO,YAAAP,OAAAO,WAAAuK,aAAAD,QAAA7K,OAAAO,aAAAP,OAAAO,WAAAuK,aAAAD,UACA7K,OAAAU,eAAA,GAKAV,OAAAU,gBACAV,OAAAQ,eAAA,KAAAR,OAAA/uC,IAAA7gF,WAAA4vH,OAAA/uC,IAAAg5C,iBAAAjK,OAAA/uC,IAAA7gF,aACA4vH,OAAAQ,WAAArwH,KAAA5iF,MAAAyyM,OAAAI,OAAA,EAAA,EACAJ,OAAAQ,WAAAnwH,QAAA2vH,OAAA/uC,IAAA3gF,cAIA0vH,OAAAa,SAIA,mBAAAl5M,SAAAA,OAAAC,KACAD,UAAA,WACA,OACAq4M,OAAAA,OACAqE,KAAAA,QAMA,mBAAA58M,WACAA,QAAAu4M,OAAAA,OACAv4M,QAAA48M,KAAAA,MAIA,mBAAA5qN,SACAA,OAAAsmN,aAAAA,aACAtmN,OAAAumN,OAAAA,OACAvmN,OAAA4qN,KAAAA,KACA5qN,OAAAutN,MAAAA,OACA,mBAAAt/M,UACAA,OAAAq4M,aAAAA,aACAr4M,OAAAs4M,OAAAA,OACAt4M,OAAA28M,KAAAA,KACA38M,OAAAs/M,MAAAA,UAiBA,WAEA,YAGAjH,cAAAllN,UAAAkwN,MAAA,EAAA,EAAA,GACAhL,aAAAllN,UAAAmwN,cAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAWAjL,aAAAllN,UAAAowN,OAAA,SAAAC,KACA,GAAAhM,MAAA7gN,IAGA,KAAA6gN,KAAAjuC,MAAAiuC,KAAAjuC,IAAAzgF,SACA,MAAA0uH,KAIA,KAAA,GAAA/8M,GAAA+8M,KAAAiB,OAAAliN,OAAA,EAAAkE,GAAA,EAAAA,IACA+8M,KAAAiB,OAAAh+M,GAAA8oN,OAAAC,IAGA,OAAAhM,OAWAa,aAAAllN,UAAA06B,IAAA,SAAA1f,EAAAyC,EAAA2iB,GACA,GAAAikL,MAAA7gN,IAGA,OAAA6gN,MAAAjuC,KAAAiuC,KAAAjuC,IAAAzgF,UAKAl4E,EAAA,gBAAAA,GAAA4mM,KAAA6L,KAAA,GAAAzyM,EACA2iB,EAAA,gBAAAA,GAAAikL,KAAA6L,KAAA,GAAA9vL,EAEA,gBAAAplB,GAIAqpM,KAAA6L,MAHA7L,KAAA6L,MAAAl1M,EAAAyC,EAAA2iB,GACAikL,KAAAjuC,IAAAzgF,SAAA2e,YAAA+vG,KAAA6L,KAAA,GAAA7L,KAAA6L,KAAA,GAAA7L,KAAA6L,KAAA,IAKA7L,OAdAA,MA+BAa,aAAAllN,UAAAypE,YAAA,SAAAzuD,EAAAyC,EAAA2iB,EAAAkwL,IAAAC,IAAAC,KACA,GAAAnM,MAAA7gN,IAGA,KAAA6gN,KAAAjuC,MAAAiuC,KAAAjuC,IAAAzgF,SACA,MAAA0uH,KAIA,IAAAoM,IAAApM,KAAA8L,YAOA,OANA1yM,GAAA,gBAAAA,GAAAgzM,GAAA,GAAAhzM,EACA2iB,EAAA,gBAAAA,GAAAqwL,GAAA,GAAArwL,EACAkwL,IAAA,gBAAAA,KAAAG,GAAA,GAAAH,IACAC,IAAA,gBAAAA,KAAAE,GAAA,GAAAF,IACAC,IAAA,gBAAAA,KAAAC,GAAA,GAAAD,IAEA,gBAAAx1M,GAIAy1M,IAHApM,KAAA8L,cAAAn1M,EAAAyC,EAAA2iB,EAAAkwL,IAAAC,IAAAC,KACAnM,KAAAjuC,IAAAzgF,SAAAmvD,eAAA9pI,EAAAyC,EAAA2iB,EAAAkwL,IAAAC,IAAAC,KAKAnM,OAWAmF,KAAAxpN,UAAAgM,KAAA,SAAA0kN,QACA,MAAA,UAAAv2L,GACA,GAAAkqL,MAAA7gN,IAuBA,OApBA6gN,MAAA8L,aAAAh2L,EAAAsvC,cAAA,EAAA,EAAA,GACA46I,KAAAsM,QAAAx2L,EAAAi2L,QAAA,KACA/L,KAAA6L,KAAA/1L,EAAAO,KAAA,KACA2pL,KAAAuM,aACAC,mBAAA,KAAA12L,EAAA02L,eAAA12L,EAAA02L,eAAA,IACAC,mBAAA,KAAA32L,EAAA22L,eAAA32L,EAAA22L,eAAA,IACAC,kBAAA,KAAA52L,EAAA42L,cAAA52L,EAAA42L,cAAA,EACAxqE,kBAAA,KAAApsH,EAAAosH,cAAApsH,EAAAosH,cAAA,UACAG,gBAAA,KAAAvsH,EAAAusH,YAAAvsH,EAAAusH,YAAA,IACAsqE,iBAAA,KAAA72L,EAAA62L,aAAA72L,EAAA62L,aAAA,OACA/qE,gBAAA,KAAA9rH,EAAA8rH,YAAA9rH,EAAA8rH,YAAA,EACAG,kBAAA,KAAAjsH,EAAAisH,cAAAjsH,EAAAisH,cAAA,GAIAi+D,KAAA4M,UAAA92L,EAAA+2L,WAAApwN,GAAAq5B,EAAA+2L,cACA7M,KAAA8M,OAAAh3L,EAAAi3L,QAAAtwN,GAAAq5B,EAAAi3L,WACA/M,KAAAgN,eAAAl3L,EAAAm3L,gBAAAxwN,GAAAq5B,EAAAm3L,mBAGAZ,OAAAtmN,KAAA5G,KAAA22B,KAEAqvL,KAAAxpN,UAAAgM,MAQAw9M,KAAAxpN,UAAAowN,OAAA,SAAAC,IAAApqL,IACA,GAAAo+K,MAAA7gN,IAGA,KAAA6gN,KAAA+B,UACA,MAAA/B,KAIA,IAAA,WAAAA,KAAA1qK,OAQA,MAPA0qK,MAAAoG,OAAA/mN,MACAlC,MAAA,SACAR,OAAA,WACAqjN,KAAA+L,OAAAC,IAAApqL,OAIAo+K,IAIA,IAAAkN,gBAAA,KAAApM,OAAA/uC,IAAAo7C,mBAAA,UAAA,QAGA,QAAA,KAAAvrL,GAAA,CAEA,GAAA,gBAAAoqL,KAIA,MAAAhM,MAAAsM,OAHAtM,MAAAsM,QAAAN,IACAhM,KAAA6L,MAAAG,IAAA,EAAA,GAQA,IAAA,GADAhK,KAAAhC,KAAAiC,aAAArgL,IACA3+B,EAAA,EAAAA,EAAA++M,IAAAjjN,OAAAkE,IAAA,CAEA,GAAAi/M,OAAAlC,KAAAmC,WAAAH,IAAA/+M,GAEA,IAAAi/M,MAAA,CACA,GAAA,gBAAA8J,KAsBA,MAAA9J,OAAAoK,OArBApK,OAAAoK,QAAAN,IACA9J,MAAA2J,MAAAG,IAAA,EAAA,GAEA9J,MAAAE,QAEAF,MAAAqK,YAAAI,aAAA,aAGAzK,MAAA0I,SAAA1I,MAAA0I,QAAAoB,KACAoB,YAAAlL,MAAAgL,YAGA,YAAAA,WACAhL,MAAA0I,QAAA36G,YAAA+7G,IAAA,EAAA,GAEA9J,MAAA0I,QAAAoB,IAAA39M,MAAA29M,KAIAhM,KAAAkF,MAAA,SAAAhD,MAAAvxF,MAOA,MAAAqvF,OAWAmF,KAAAxpN,UAAA06B,IAAA,SAAA1f,EAAAyC,EAAA2iB,EAAA6F,IACA,GAAAo+K,MAAA7gN,IAGA,KAAA6gN,KAAA+B,UACA,MAAA/B,KAIA,IAAA,WAAAA,KAAA1qK,OAQA,MAPA0qK,MAAAoG,OAAA/mN,MACAlC,MAAA,MACAR,OAAA,WACAqjN,KAAA3pL,IAAA1f,EAAAyC,EAAA2iB,EAAA6F,OAIAo+K,IAQA,IAJA5mM,EAAA,gBAAAA,GAAA,EAAAA,EACA2iB,EAAA,gBAAAA,IAAA,GAAAA,MAGA,KAAA6F,GAAA,CAEA,GAAA,gBAAAjrB,GAGA,MAAAqpM,MAAA6L,IAFA7L,MAAA6L,MAAAl1M,EAAAyC,EAAA2iB,GAQA,IAAA,GADAimL,KAAAhC,KAAAiC,aAAArgL,IACA3+B,EAAA,EAAAA,EAAA++M,IAAAjjN,OAAAkE,IAAA,CAEA,GAAAi/M,OAAAlC,KAAAmC,WAAAH,IAAA/+M,GAEA,IAAAi/M,MAAA,CACA,GAAA,gBAAAvrM,GAcA,MAAAurM,OAAA2J,IAbA3J,OAAA2J,MAAAl1M,EAAAyC,EAAA2iB,GAEAmmL,MAAAE,QAEAF,MAAA0I,UAAA1I,MAAA0I,QAAAoB,KACAoB,YAAAlL,MAAA,WAGAA,MAAA0I,QAAA36G,YAAAt5F,EAAAyC,EAAA2iB,IAGAikL,KAAAkF,MAAA,MAAAhD,MAAAvxF,MAOA,MAAAqvF,OAaAmF,KAAAxpN,UAAAypE,YAAA,SAAAzuD,EAAAyC,EAAA2iB,EAAA6F,IACA,GAAAo+K,MAAA7gN,IAGA,KAAA6gN,KAAA+B,UACA,MAAA/B,KAIA,IAAA,WAAAA,KAAA1qK,OAQA,MAPA0qK,MAAAoG,OAAA/mN,MACAlC,MAAA,cACAR,OAAA,WACAqjN,KAAA56I,YAAAzuD,EAAAyC,EAAA2iB,EAAA6F,OAIAo+K,IAQA,IAJA5mM,EAAA,gBAAAA,GAAA4mM,KAAA8L,aAAA,GAAA1yM,EACA2iB,EAAA,gBAAAA,GAAAikL,KAAA8L,aAAA,GAAA/vL,MAGA,KAAA6F,GAAA,CAEA,GAAA,gBAAAjrB,GAGA,MAAAqpM,MAAA8L,YAFA9L,MAAA8L,cAAAn1M,EAAAyC,EAAA2iB,GAQA,IAAA,GADAimL,KAAAhC,KAAAiC,aAAArgL,IACA3+B,EAAA,EAAAA,EAAA++M,IAAAjjN,OAAAkE,IAAA,CAEA,GAAAi/M,OAAAlC,KAAAmC,WAAAH,IAAA/+M,GAEA,IAAAi/M,MAAA,CACA,GAAA,gBAAAvrM,GAmBA,MAAAurM,OAAA4J,YAlBA5J,OAAA4J,cAAAn1M,EAAAyC,EAAA2iB,GAEAmmL,MAAAE,QAEAF,MAAA0I,UAEA1I,MAAA2J,OACA3J,MAAA2J,KAAA7L,KAAA6L,OAAA,EAAA,GAAA,KAGAuB,YAAAlL,MAAA,YAGAA,MAAA0I,QAAAnqE,eAAA9pI,EAAAyC,EAAA2iB,IAGAikL,KAAAkF,MAAA,cAAAhD,MAAAvxF,MAOA,MAAAqvF,OAiCAmF,KAAAxpN,UAAA0xN,WAAA,WACA,GAEAv3L,GAAA8L,GAAAsgL,MAFAlC,KAAA7gN,KACAQ,KAAAP,SAIA,KAAA4gN,KAAA+B,UACA,MAAA/B,KAIA,IAAA,IAAArgN,KAAAZ,OAEA,MAAAihN,MAAAuM,WACA,IAAA,IAAA5sN,KAAAZ,OAAA,CACA,GAAA,gBAAAY,MAAA,GAgCA,MADAuiN,OAAAlC,KAAAmC,WAAA3mM,SAAA7b,KAAA,GAAA,KACAuiN,MAAAA,MAAAqK,YAAAvM,KAAAuM,WA/BAz2L,GAAAn2B,KAAA,OAGA,KAAAiiC,KACA9L,EAAAu3L,aACAv3L,EAAAu3L,YACAb,eAAA12L,EAAA02L,eACAC,eAAA32L,EAAA22L,eACAC,cAAA52L,EAAA42L,cACAxqE,cAAApsH,EAAAosH,cACAG,YAAAvsH,EAAAusH,YACAT,YAAA9rH,EAAA8rH,YACAG,cAAAjsH,EAAAisH,cACA4qE,aAAA72L,EAAA62L,eAIA3M,KAAAuM,aACAC,mBAAA,KAAA12L,EAAAu3L,WAAAb,eAAA12L,EAAAu3L,WAAAb,eAAAxM,KAAAsN,gBACAb,mBAAA,KAAA32L,EAAAu3L,WAAAZ,eAAA32L,EAAAu3L,WAAAZ,eAAAzM,KAAAuN,gBACAb,kBAAA,KAAA52L,EAAAu3L,WAAAX,cAAA52L,EAAAu3L,WAAAX,cAAA1M,KAAAwN,eACAtrE,kBAAA,KAAApsH,EAAAu3L,WAAAnrE,cAAApsH,EAAAu3L,WAAAnrE,cAAA89D,KAAAyN,eACAprE,gBAAA,KAAAvsH,EAAAu3L,WAAAhrE,YAAAvsH,EAAAu3L,WAAAhrE,YAAA29D,KAAA0N,aACA9rE,gBAAA,KAAA9rH,EAAAu3L,WAAAzrE,YAAA9rH,EAAAu3L,WAAAzrE,YAAAo+D,KAAA2N,aACA5rE,kBAAA,KAAAjsH,EAAAu3L,WAAAtrE,cAAAjsH,EAAAu3L,WAAAtrE,cAAAi+D,KAAA4N,eACAjB,iBAAA,KAAA72L,EAAAu3L,WAAAV,aAAA72L,EAAAu3L,WAAAV,aAAA3M,KAAA6N,oBAQA,KAAAluN,KAAAZ,SACA+2B,EAAAn2B,KAAA,GACAiiC,GAAApmB,SAAA7b,KAAA,GAAA,IAKA,KAAA,GADAqiN,KAAAhC,KAAAiC,aAAArgL,IACA3+B,EAAA,EAAAA,EAAA++M,IAAAjjN,OAAAkE,IAGA,GAFAi/M,MAAAlC,KAAAmC,WAAAH,IAAA/+M,IAEA,CAEA,GAAA6qN,IAAA5L,MAAAqK,WACAuB,KACAtB,mBAAA,KAAA12L,EAAA02L,eAAA12L,EAAA02L,eAAAsB,GAAAtB,eACAC,mBAAA,KAAA32L,EAAA22L,eAAA32L,EAAA22L,eAAAqB,GAAArB,eACAC,kBAAA,KAAA52L,EAAA42L,cAAA52L,EAAA42L,cAAAoB,GAAApB,cACAxqE,kBAAA,KAAApsH,EAAAosH,cAAApsH,EAAAosH,cAAA4rE,GAAA5rE,cACAG,gBAAA,KAAAvsH,EAAAusH,YAAAvsH,EAAAusH,YAAAyrE,GAAAzrE,YACAT,gBAAA,KAAA9rH,EAAA8rH,YAAA9rH,EAAA8rH,YAAAksE,GAAAlsE,YACAG,kBAAA,KAAAjsH,EAAAisH,cAAAjsH,EAAAisH,cAAA+rE,GAAA/rE,cACA4qE,iBAAA,KAAA72L,EAAA62L,aAAA72L,EAAA62L,aAAAmB,GAAAnB,aAIA,IAAA36H,QAAAkwH,MAAA0I,OACA54H,SACAA,OAAAw6H,eAAAsB,GAAAtB,eACAx6H,OAAAy6H,eAAAqB,GAAArB,eACAz6H,OAAA06H,cAAAoB,GAAApB,cACA16H,OAAAkwD,cAAA4rE,GAAA5rE,cACAlwD,OAAAqwD,YAAAyrE,GAAAzrE,YACArwD,OAAA4vD,YAAAksE,GAAAlsE,YACA5vD,OAAA+vD,cAAA+rE,GAAA/rE,cACA/vD,OAAA26H,aAAAmB,GAAAnB,eAGAzK,MAAA2J,OACA3J,MAAA2J,KAAA7L,KAAA6L,OAAA,EAAA,GAAA,KAIAuB,YAAAlL,MAAA,YAKA,MAAAlC,OAWA8H,MAAAnsN,UAAAgM,KAAA,SAAA0kN,QACA,MAAA,YACA,GAAArM,MAAA7gN,KACAf,OAAA4hN,KAAA8K,OAGA9K,MAAA8L,aAAA1tN,OAAA0tN,aACA9L,KAAAsM,QAAAluN,OAAAkuN,QACAtM,KAAA6L,KAAAztN,OAAAytN,KACA7L,KAAAuM,YAAAnuN,OAAAmuN,YAGAF,OAAAtmN,KAAA5G,MAGA6gN,KAAAsM,QACAluN,OAAA2tN,OAAA/L,KAAAsM,SACAtM,KAAA6L,MACAztN,OAAAi4B,IAAA2pL,KAAA6L,KAAA,GAAA7L,KAAA6L,KAAA,GAAA7L,KAAA6L,KAAA,GAAA7L,KAAArvF,OAGAm3F,MAAAnsN,UAAAgM,MAOAmgN,MAAAnsN,UAAAkuC,MAAA,SAAAwiL,QACA,MAAA,YACA,GAAArM,MAAA7gN,KACAf,OAAA4hN,KAAA8K,OAQA,OALA9K,MAAA8L,aAAA1tN,OAAA0tN,aACA9L,KAAA6L,KAAAztN,OAAAytN,KACA7L,KAAAuM,YAAAnuN,OAAAmuN,YAGAF,OAAAtmN,KAAA5G,QAEA2oN,MAAAnsN,UAAAkuC,MAUA,IAAAujL,aAAA,SAAAlL,MAAA3nL,MACAA,KAAAA,MAAA,UAGA,YAAAA,MACA2nL,MAAA0I,QAAA9J,OAAA/uC,IAAA9/E,eACAiwH,MAAA0I,QAAA4B,eAAAtK,MAAAqK,YAAAC,eACAtK,MAAA0I,QAAA6B,eAAAvK,MAAAqK,YAAAE,eACAvK,MAAA0I,QAAA8B,cAAAxK,MAAAqK,YAAAG,cACAxK,MAAA0I,QAAA1oE,cAAAggE,MAAAqK,YAAArqE,cACAggE,MAAA0I,QAAAvoE,YAAA6/D,MAAAqK,YAAAlqE,YACA6/D,MAAA0I,QAAAhpE,YAAAsgE,MAAAqK,YAAA3qE,YACAsgE,MAAA0I,QAAA7oE,cAAAmgE,MAAAqK,YAAAxqE,cACAmgE,MAAA0I,QAAA+B,aAAAzK,MAAAqK,YAAAI,aACAzK,MAAA0I,QAAA36G,YAAAiyG,MAAA2J,KAAA,GAAA3J,MAAA2J,KAAA,GAAA3J,MAAA2J,KAAA,IACA3J,MAAA0I,QAAAnqE,eAAAyhE,MAAA4J,aAAA,GAAA5J,MAAA4J,aAAA,GAAA5J,MAAA4J,aAAA,MAEA5J,MAAA0I,QAAA9J,OAAA/uC,IAAAo7C,qBACAjL,MAAA0I,QAAAoB,IAAA39M,MAAA6zM,MAAAoK,SAGApK,MAAA0I,QAAAz5H,QAAA+wH,MAAAE,OAGAF,MAAA6C,SACA7C,MAAA4I,QAAA7pE,MAAAihE,MAAAvxF,KAAA,GAAAkwB,KAAAqhE,MAAAvxF","file":"library.min.js","sourcesContent":["(function(window, factory) {\n\tvar lazySizes = factory(window, window.document);\n\twindow.lazySizes = lazySizes;\n\tif(typeof module == 'object' && module.exports){\n\t\tmodule.exports = lazySizes;\n\t}\n}(window, function l(window, document) {\n\t'use strict';\n\t/*jshint eqnull:true */\n\tif(!document.getElementsByClassName){return;}\n\n\tvar lazySizesConfig;\n\n\tvar docElem = document.documentElement;\n\n\tvar Date = window.Date;\n\n\tvar supportPicture = window.HTMLPictureElement;\n\n\tvar _addEventListener = 'addEventListener';\n\n\tvar _getAttribute = 'getAttribute';\n\n\tvar addEventListener = window[_addEventListener];\n\n\tvar setTimeout = window.setTimeout;\n\n\tvar requestAnimationFrame = window.requestAnimationFrame || setTimeout;\n\n\tvar requestIdleCallback = window.requestIdleCallback;\n\n\tvar regPicture = /^picture$/i;\n\n\tvar loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];\n\n\tvar regClassCache = {};\n\n\tvar forEach = Array.prototype.forEach;\n\n\tvar hasClass = function(ele, cls) {\n\t\tif(!regClassCache[cls]){\n\t\t\tregClassCache[cls] = new RegExp('(\\\\s|^)'+cls+'(\\\\s|$)');\n\t\t}\n\t\treturn regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];\n\t};\n\n\tvar addClass = function(ele, cls) {\n\t\tif (!hasClass(ele, cls)){\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);\n\t\t}\n\t};\n\n\tvar removeClass = function(ele, cls) {\n\t\tvar reg;\n\t\tif ((reg = hasClass(ele,cls))) {\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));\n\t\t}\n\t};\n\n\tvar addRemoveLoadEvents = function(dom, fn, add){\n\t\tvar action = add ? _addEventListener : 'removeEventListener';\n\t\tif(add){\n\t\t\taddRemoveLoadEvents(dom, fn);\n\t\t}\n\t\tloadEvents.forEach(function(evt){\n\t\t\tdom[action](evt, fn);\n\t\t});\n\t};\n\n\tvar triggerEvent = function(elem, name, detail, noBubbles, noCancelable){\n\t\tvar event = document.createEvent('CustomEvent');\n\n\t\tevent.initCustomEvent(name, !noBubbles, !noCancelable, detail || {});\n\n\t\telem.dispatchEvent(event);\n\t\treturn event;\n\t};\n\n\tvar updatePolyfill = function (el, full){\n\t\tvar polyfill;\n\t\tif( !supportPicture && ( polyfill = (window.picturefill || lazySizesConfig.pf) ) ){\n\t\t\tpolyfill({reevaluate: true, elements: [el]});\n\t\t} else if(full && full.src){\n\t\t\tel.src = full.src;\n\t\t}\n\t};\n\n\tvar getCSS = function (elem, style){\n\t\treturn (getComputedStyle(elem, null) || {})[style];\n\t};\n\n\tvar getWidth = function(elem, parent, width){\n\t\twidth = width || elem.offsetWidth;\n\n\t\twhile(width < lazySizesConfig.minSize && parent && !elem._lazysizesWidth){\n\t\t\twidth =  parent.offsetWidth;\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\treturn width;\n\t};\n\n\tvar rAF = (function(){\n\t\tvar running, waiting;\n\t\tvar fns = [];\n\n\t\tvar run = function(){\n\t\t\tvar fn;\n\t\t\trunning = true;\n\t\t\twaiting = false;\n\t\t\twhile(fns.length){\n\t\t\t\tfn = fns.shift();\n\t\t\t\tfn[0].apply(fn[1], fn[2]);\n\t\t\t}\n\t\t\trunning = false;\n\t\t};\n\n\t\tvar rafBatch = function(fn){\n\t\t\tif(running){\n\t\t\t\tfn.apply(this, arguments);\n\t\t\t} else {\n\t\t\t\tfns.push([fn, this, arguments]);\n\n\t\t\t\tif(!waiting){\n\t\t\t\t\twaiting = true;\n\t\t\t\t\t(document.hidden ? setTimeout : requestAnimationFrame)(run);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trafBatch._lsFlush = run;\n\n\t\treturn rafBatch;\n\t})();\n\n\tvar rAFIt = function(fn, simple){\n\t\treturn simple ?\n\t\t\tfunction() {\n\t\t\t\trAF(fn);\n\t\t\t} :\n\t\t\tfunction(){\n\t\t\t\tvar that = this;\n\t\t\t\tvar args = arguments;\n\t\t\t\trAF(function(){\n\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t});\n\t\t\t}\n\t\t;\n\t};\n\n\tvar throttle = function(fn){\n\t\tvar running;\n\t\tvar lastTime = 0;\n\t\tvar gDelay = 125;\n\t\tvar RIC_DEFAULT_TIMEOUT = 666;\n\t\tvar rICTimeout = RIC_DEFAULT_TIMEOUT;\n\t\tvar run = function(){\n\t\t\trunning = false;\n\t\t\tlastTime = Date.now();\n\t\t\tfn();\n\t\t};\n\t\tvar idleCallback = requestIdleCallback ?\n\t\t\tfunction(){\n\t\t\t\trequestIdleCallback(run, {timeout: rICTimeout});\n\t\t\t\tif(rICTimeout !== RIC_DEFAULT_TIMEOUT){\n\t\t\t\t\trICTimeout = RIC_DEFAULT_TIMEOUT;\n\t\t\t\t}\n\t\t\t}:\n\t\t\trAFIt(function(){\n\t\t\t\tsetTimeout(run);\n\t\t\t}, true)\n\t\t;\n\n\t\treturn function(isPriority){\n\t\t\tvar delay;\n\t\t\tif((isPriority = isPriority === true)){\n\t\t\t\trICTimeout = 44;\n\t\t\t}\n\n\t\t\tif(running){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trunning =  true;\n\n\t\t\tdelay = gDelay - (Date.now() - lastTime);\n\n\t\t\tif(delay < 0){\n\t\t\t\tdelay = 0;\n\t\t\t}\n\n\t\t\tif(isPriority || (delay < 9 && requestIdleCallback)){\n\t\t\t\tidleCallback();\n\t\t\t} else {\n\t\t\t\tsetTimeout(idleCallback, delay);\n\t\t\t}\n\t\t};\n\t};\n\n\t//based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html\n\tvar debounce = function(func) {\n\t\tvar timeout, timestamp;\n\t\tvar wait = 99;\n\t\tvar run = function(){\n\t\t\ttimeout = null;\n\t\t\tfunc();\n\t\t};\n\t\tvar later = function() {\n\t\t\tvar last = Date.now() - timestamp;\n\n\t\t\tif (last < wait) {\n\t\t\t\tsetTimeout(later, wait - last);\n\t\t\t} else {\n\t\t\t\t(requestIdleCallback || run)(run);\n\t\t\t}\n\t\t};\n\n\t\treturn function() {\n\t\t\ttimestamp = Date.now();\n\n\t\t\tif (!timeout) {\n\t\t\t\ttimeout = setTimeout(later, wait);\n\t\t\t}\n\t\t};\n\t};\n\n\n\tvar loader = (function(){\n\t\tvar lazyloadElems, preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;\n\n\t\tvar eLvW, elvH, eLtop, eLleft, eLright, eLbottom;\n\n\t\tvar defaultExpand, preloadExpand, hFac;\n\n\t\tvar regImg = /^img$/i;\n\t\tvar regIframe = /^iframe$/i;\n\n\t\tvar supportScroll = ('onscroll' in window) && !(/glebot/.test(navigator.userAgent));\n\n\t\tvar shrinkExpand = 0;\n\t\tvar currentExpand = 0;\n\n\t\tvar isLoading = 0;\n\t\tvar lowRuns = -1;\n\n\t\tvar resetPreloading = function(e){\n\t\t\tisLoading--;\n\t\t\tif(e && e.target){\n\t\t\t\taddRemoveLoadEvents(e.target, resetPreloading);\n\t\t\t}\n\n\t\t\tif(!e || isLoading < 0 || !e.target){\n\t\t\t\tisLoading = 0;\n\t\t\t}\n\t\t};\n\n\t\tvar isNestedVisible = function(elem, elemExpand){\n\t\t\tvar outerRect;\n\t\t\tvar parent = elem;\n\t\t\tvar visible = getCSS(document.body, 'visibility') == 'hidden' || getCSS(elem, 'visibility') != 'hidden';\n\n\t\t\teLtop -= elemExpand;\n\t\t\teLbottom += elemExpand;\n\t\t\teLleft -= elemExpand;\n\t\t\teLright += elemExpand;\n\n\t\t\twhile(visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem){\n\t\t\t\tvisible = ((getCSS(parent, 'opacity') || 1) > 0);\n\n\t\t\t\tif(visible && getCSS(parent, 'overflow') != 'visible'){\n\t\t\t\t\touterRect = parent.getBoundingClientRect();\n\t\t\t\t\tvisible = eLright > outerRect.left &&\n\t\t\t\t\t\teLleft < outerRect.right &&\n\t\t\t\t\t\teLbottom > outerRect.top - 1 &&\n\t\t\t\t\t\teLtop < outerRect.bottom + 1\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn visible;\n\t\t};\n\n\t\tvar checkElements = function() {\n\t\t\tvar eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal, beforeExpandVal;\n\n\t\t\tif((loadMode = lazySizesConfig.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)){\n\n\t\t\t\ti = 0;\n\n\t\t\t\tlowRuns++;\n\n\t\t\t\tif(preloadExpand == null){\n\t\t\t\t\tif(!('expand' in lazySizesConfig)){\n\t\t\t\t\t\tlazySizesConfig.expand = docElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefaultExpand = lazySizesConfig.expand;\n\t\t\t\t\tpreloadExpand = defaultExpand * lazySizesConfig.expFactor;\n\t\t\t\t}\n\n\t\t\t\tif(currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden){\n\t\t\t\t\tcurrentExpand = preloadExpand;\n\t\t\t\t\tlowRuns = 0;\n\t\t\t\t} else if(loadMode > 1 && lowRuns > 1 && isLoading < 6){\n\t\t\t\t\tcurrentExpand = defaultExpand;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentExpand = shrinkExpand;\n\t\t\t\t}\n\n\t\t\t\tfor(; i < eLlen; i++){\n\n\t\t\t\t\tif(!lazyloadElems[i] || lazyloadElems[i]._lazyRace){continue;}\n\n\t\t\t\t\tif(!supportScroll){unveilElement(lazyloadElems[i]);continue;}\n\n\t\t\t\t\tif(!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)){\n\t\t\t\t\t\telemExpand = currentExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(beforeExpandVal !== elemExpand){\n\t\t\t\t\t\teLvW = innerWidth + (elemExpand * hFac);\n\t\t\t\t\t\telvH = innerHeight + elemExpand;\n\t\t\t\t\t\telemNegativeExpand = elemExpand * -1;\n\t\t\t\t\t\tbeforeExpandVal = elemExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\trect = lazyloadElems[i].getBoundingClientRect();\n\n\t\t\t\t\tif ((eLbottom = rect.bottom) >= elemNegativeExpand &&\n\t\t\t\t\t\t(eLtop = rect.top) <= elvH &&\n\t\t\t\t\t\t(eLright = rect.right) >= elemNegativeExpand * hFac &&\n\t\t\t\t\t\t(eLleft = rect.left) <= eLvW &&\n\t\t\t\t\t\t(eLbottom || eLright || eLleft || eLtop) &&\n\t\t\t\t\t\t((isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4)) || isNestedVisible(lazyloadElems[i], elemExpand))){\n\t\t\t\t\t\tunveilElement(lazyloadElems[i]);\n\t\t\t\t\t\tloadedSomething = true;\n\t\t\t\t\t\tif(isLoading > 9){break;}\n\t\t\t\t\t} else if(!loadedSomething && isCompleted && !autoLoadElem &&\n\t\t\t\t\t\tisLoading < 4 && lowRuns < 4 && loadMode > 2 &&\n\t\t\t\t\t\t(preloadElems[0] || lazySizesConfig.preloadAfterLoad) &&\n\t\t\t\t\t\t(preloadElems[0] || (!elemExpandVal && ((eLbottom || eLright || eLleft || eLtop) || lazyloadElems[i][_getAttribute](lazySizesConfig.sizesAttr) != 'auto')))){\n\t\t\t\t\t\tautoLoadElem = preloadElems[0] || lazyloadElems[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(autoLoadElem && !loadedSomething){\n\t\t\t\t\tunveilElement(autoLoadElem);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar throttledCheckElements = throttle(checkElements);\n\n\t\tvar switchLoadingClass = function(e){\n\t\t\taddClass(e.target, lazySizesConfig.loadedClass);\n\t\t\tremoveClass(e.target, lazySizesConfig.loadingClass);\n\t\t\taddRemoveLoadEvents(e.target, rafSwitchLoadingClass);\n\t\t};\n\t\tvar rafedSwitchLoadingClass = rAFIt(switchLoadingClass);\n\t\tvar rafSwitchLoadingClass = function(e){\n\t\t\trafedSwitchLoadingClass({target: e.target});\n\t\t};\n\n\t\tvar changeIframeSrc = function(elem, src){\n\t\t\ttry {\n\t\t\t\telem.contentWindow.location.replace(src);\n\t\t\t} catch(e){\n\t\t\t\telem.src = src;\n\t\t\t}\n\t\t};\n\n\t\tvar handleSources = function(source){\n\t\t\tvar customMedia, parent;\n\n\t\t\tvar sourceSrcset = source[_getAttribute](lazySizesConfig.srcsetAttr);\n\n\t\t\tif( (customMedia = lazySizesConfig.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) ){\n\t\t\t\tsource.setAttribute('media', customMedia);\n\t\t\t}\n\n\t\t\tif(sourceSrcset){\n\t\t\t\tsource.setAttribute('srcset', sourceSrcset);\n\t\t\t}\n\n\t\t\t//https://bugzilla.mozilla.org/show_bug.cgi?id=1170572\n\t\t\tif(customMedia){\n\t\t\t\tparent = source.parentNode;\n\t\t\t\tparent.insertBefore(source.cloneNode(), source);\n\t\t\t\tparent.removeChild(source);\n\t\t\t}\n\t\t};\n\n\t\tvar lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg){\n\t\t\tvar src, srcset, parent, isPicture, event, firesLoad;\n\n\t\t\tif(!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented){\n\n\t\t\t\tif(sizes){\n\t\t\t\t\tif(isAuto){\n\t\t\t\t\t\taddClass(elem, lazySizesConfig.autosizesClass);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.setAttribute('sizes', sizes);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsrcset = elem[_getAttribute](lazySizesConfig.srcsetAttr);\n\t\t\t\tsrc = elem[_getAttribute](lazySizesConfig.srcAttr);\n\n\t\t\t\tif(isImg) {\n\t\t\t\t\tparent = elem.parentNode;\n\t\t\t\t\tisPicture = parent && regPicture.test(parent.nodeName || '');\n\t\t\t\t}\n\n\t\t\t\tfiresLoad = detail.firesLoad || (('src' in elem) && (srcset || src || isPicture));\n\n\t\t\t\tevent = {target: elem};\n\n\t\t\t\tif(firesLoad){\n\t\t\t\t\taddRemoveLoadEvents(elem, resetPreloading, true);\n\t\t\t\t\tclearTimeout(resetPreloadingTimer);\n\t\t\t\t\tresetPreloadingTimer = setTimeout(resetPreloading, 2500);\n\n\t\t\t\t\taddClass(elem, lazySizesConfig.loadingClass);\n\t\t\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass, true);\n\t\t\t\t}\n\n\t\t\t\tif(isPicture){\n\t\t\t\t\tforEach.call(parent.getElementsByTagName('source'), handleSources);\n\t\t\t\t}\n\n\t\t\t\tif(srcset){\n\t\t\t\t\telem.setAttribute('srcset', srcset);\n\t\t\t\t} else if(src && !isPicture){\n\t\t\t\t\tif(regIframe.test(elem.nodeName)){\n\t\t\t\t\t\tchangeIframeSrc(elem, src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.src = src;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(srcset || isPicture){\n\t\t\t\t\tupdatePolyfill(elem, {src: src});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trAF(function(){\n\t\t\t\tif(elem._lazyRace){\n\t\t\t\t\tdelete elem._lazyRace;\n\t\t\t\t}\n\t\t\t\tremoveClass(elem, lazySizesConfig.lazyClass);\n\n\t\t\t\tif( !firesLoad || elem.complete ){\n\t\t\t\t\tif(firesLoad){\n\t\t\t\t\t\tresetPreloading(event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisLoading--;\n\t\t\t\t\t}\n\t\t\t\t\tswitchLoadingClass(event);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tvar unveilElement = function (elem){\n\t\t\tvar detail;\n\n\t\t\tvar isImg = regImg.test(elem.nodeName);\n\n\t\t\t//allow using sizes=\"auto\", but don't use. it's invalid. Use data-sizes=\"auto\" or a valid value for sizes instead (i.e.: sizes=\"80vw\")\n\t\t\tvar sizes = isImg && (elem[_getAttribute](lazySizesConfig.sizesAttr) || elem[_getAttribute]('sizes'));\n\t\t\tvar isAuto = sizes == 'auto';\n\n\t\t\tif( (isAuto || !isCompleted) && isImg && (elem.src || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesConfig.errorClass)){return;}\n\n\t\t\tdetail = triggerEvent(elem, 'lazyunveilread').detail;\n\n\t\t\tif(isAuto){\n\t\t\t\t autoSizer.updateElem(elem, true, elem.offsetWidth);\n\t\t\t}\n\n\t\t\telem._lazyRace = true;\n\t\t\tisLoading++;\n\n\t\t\tlazyUnveil(elem, detail, isAuto, sizes, isImg);\n\t\t};\n\n\t\tvar onload = function(){\n\t\t\tif(isCompleted){return;}\n\t\t\tif(Date.now() - started < 999){\n\t\t\t\tsetTimeout(onload, 999);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar afterScroll = debounce(function(){\n\t\t\t\tlazySizesConfig.loadMode = 3;\n\t\t\t\tthrottledCheckElements();\n\t\t\t});\n\n\t\t\tisCompleted = true;\n\n\t\t\tlazySizesConfig.loadMode = 3;\n\n\t\t\tthrottledCheckElements();\n\n\t\t\taddEventListener('scroll', function(){\n\t\t\t\tif(lazySizesConfig.loadMode == 3){\n\t\t\t\t\tlazySizesConfig.loadMode = 2;\n\t\t\t\t}\n\t\t\t\tafterScroll();\n\t\t\t}, true);\n\t\t};\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tstarted = Date.now();\n\n\t\t\t\tlazyloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass);\n\t\t\t\tpreloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass + ' ' + lazySizesConfig.preloadClass);\n\t\t\t\thFac = lazySizesConfig.hFac;\n\n\t\t\t\taddEventListener('scroll', throttledCheckElements, true);\n\n\t\t\t\taddEventListener('resize', throttledCheckElements, true);\n\n\t\t\t\tif(window.MutationObserver){\n\t\t\t\t\tnew MutationObserver( throttledCheckElements ).observe( docElem, {childList: true, subtree: true, attributes: true} );\n\t\t\t\t} else {\n\t\t\t\t\tdocElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);\n\t\t\t\t\tdocElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);\n\t\t\t\t\tsetInterval(throttledCheckElements, 999);\n\t\t\t\t}\n\n\t\t\t\taddEventListener('hashchange', throttledCheckElements, true);\n\n\t\t\t\t//, 'fullscreenchange'\n\t\t\t\t['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend', 'webkitAnimationEnd'].forEach(function(name){\n\t\t\t\t\tdocument[_addEventListener](name, throttledCheckElements, true);\n\t\t\t\t});\n\n\t\t\t\tif((/d$|^c/.test(document.readyState))){\n\t\t\t\t\tonload();\n\t\t\t\t} else {\n\t\t\t\t\taddEventListener('load', onload);\n\t\t\t\t\tdocument[_addEventListener]('DOMContentLoaded', throttledCheckElements);\n\t\t\t\t\tsetTimeout(onload, 20000);\n\t\t\t\t}\n\n\t\t\t\tif(lazyloadElems.length){\n\t\t\t\t\tcheckElements();\n\t\t\t\t} else {\n\t\t\t\t\tthrottledCheckElements();\n\t\t\t\t}\n\t\t\t},\n\t\t\tcheckElems: throttledCheckElements,\n\t\t\tunveil: unveilElement\n\t\t};\n\t})();\n\n\n\tvar autoSizer = (function(){\n\t\tvar autosizesElems;\n\n\t\tvar sizeElement = rAFIt(function(elem, parent, event, width){\n\t\t\tvar sources, i, len;\n\t\t\telem._lazysizesWidth = width;\n\t\t\twidth += 'px';\n\n\t\t\telem.setAttribute('sizes', width);\n\n\t\t\tif(regPicture.test(parent.nodeName || '')){\n\t\t\t\tsources = parent.getElementsByTagName('source');\n\t\t\t\tfor(i = 0, len = sources.length; i < len; i++){\n\t\t\t\t\tsources[i].setAttribute('sizes', width);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!event.detail.dataAttr){\n\t\t\t\tupdatePolyfill(elem, event.detail);\n\t\t\t}\n\t\t});\n\t\tvar getSizeElement = function (elem, dataAttr, width){\n\t\t\tvar event;\n\t\t\tvar parent = elem.parentNode;\n\n\t\t\tif(parent){\n\t\t\t\twidth = getWidth(elem, parent, width);\n\t\t\t\tevent = triggerEvent(elem, 'lazybeforesizes', {width: width, dataAttr: !!dataAttr});\n\n\t\t\t\tif(!event.defaultPrevented){\n\t\t\t\t\twidth = event.detail.width;\n\n\t\t\t\t\tif(width && width !== elem._lazysizesWidth){\n\t\t\t\t\t\tsizeElement(elem, parent, event, width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar updateElementsSizes = function(){\n\t\t\tvar i;\n\t\t\tvar len = autosizesElems.length;\n\t\t\tif(len){\n\t\t\t\ti = 0;\n\n\t\t\t\tfor(; i < len; i++){\n\t\t\t\t\tgetSizeElement(autosizesElems[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar debouncedUpdateElementsSizes = debounce(updateElementsSizes);\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tautosizesElems = document.getElementsByClassName(lazySizesConfig.autosizesClass);\n\t\t\t\taddEventListener('resize', debouncedUpdateElementsSizes);\n\t\t\t},\n\t\t\tcheckElems: debouncedUpdateElementsSizes,\n\t\t\tupdateElem: getSizeElement\n\t\t};\n\t})();\n\n\tvar init = function(){\n\t\tif(!init.i){\n\t\t\tinit.i = true;\n\t\t\tautoSizer._();\n\t\t\tloader._();\n\t\t}\n\t};\n\n\t(function(){\n\t\tvar prop;\n\n\t\tvar lazySizesDefaults = {\n\t\t\tlazyClass: 'lazyload',\n\t\t\tloadedClass: 'lazyloaded',\n\t\t\tloadingClass: 'lazyloading',\n\t\t\tpreloadClass: 'lazypreload',\n\t\t\terrorClass: 'lazyerror',\n\t\t\t//strictClass: 'lazystrict',\n\t\t\tautosizesClass: 'lazyautosizes',\n\t\t\tsrcAttr: 'data-src',\n\t\t\tsrcsetAttr: 'data-srcset',\n\t\t\tsizesAttr: 'data-sizes',\n\t\t\t//preloadAfterLoad: false,\n\t\t\tminSize: 40,\n\t\t\tcustomMedia: {},\n\t\t\tinit: true,\n\t\t\texpFactor: 1.5,\n\t\t\thFac: 0.8,\n\t\t\tloadMode: 2\n\t\t};\n\n\t\tlazySizesConfig = window.lazySizesConfig || window.lazysizesConfig || {};\n\n\t\tfor(prop in lazySizesDefaults){\n\t\t\tif(!(prop in lazySizesConfig)){\n\t\t\t\tlazySizesConfig[prop] = lazySizesDefaults[prop];\n\t\t\t}\n\t\t}\n\n\t\twindow.lazySizesConfig = lazySizesConfig;\n\n\t\tsetTimeout(function(){\n\t\t\tif(lazySizesConfig.init){\n\t\t\t\tinit();\n\t\t\t}\n\t\t});\n\t})();\n\n\treturn {\n\t\tcfg: lazySizesConfig,\n\t\tautoSizer: autoSizer,\n\t\tloader: loader,\n\t\tinit: init,\n\t\tuP: updatePolyfill,\n\t\taC: addClass,\n\t\trC: removeClass,\n\t\thC: hasClass,\n\t\tfire: triggerEvent,\n\t\tgW: getWidth,\n\t\trAF: rAF,\n\t};\n}\n));\n","//! moment.js\n//! version : 2.19.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n        return (Object.getOwnPropertyNames(obj).length === 0);\n    } else {\n        var k;\n        for (k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.weekdayMismatch &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n        if (unit === 'FullYear' && isLeapYear(mom.year())) {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n        }\n        else {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction mod(n, x) {\n    return ((n % x) + x) % x;\n}\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nfunction daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            var aliasedRequire = require;\n            aliasedRequire('./locale/' + name);\n            getSetGlobalLocale(oldLocale);\n        } catch (e) {}\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== config._d.getDay()) {\n        getParsingFlags(config).weekdayMismatch = true;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [\n        untruncateYear(yearStr),\n        defaultLocaleMonthsShort.indexOf(monthStr),\n        parseInt(dayStr, 10),\n        parseInt(hourStr, 10),\n        parseInt(minuteStr, 10)\n    ];\n\n    if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n}\n\nfunction untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n    if (year <= 49) {\n        return 2000 + year;\n    } else if (year <= 999) {\n        return 1900 + year;\n    }\n    return year;\n}\n\nfunction preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n        if (weekdayProvided !== weekdayActual) {\n            getParsingFlags(config).weekdayMismatch = true;\n            config._isValid = false;\n            return false;\n        }\n    }\n    return true;\n}\n\nvar obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n};\n\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n        return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n    } else {\n        var hm = parseInt(numOffset, 10);\n        var m = hm % 100, h = (hm - m) / 100;\n        return h * 60 + m;\n    }\n}\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (match) {\n        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n        if (!checkWeekday(match[1], parsedArray, config)) {\n            return;\n        }\n\n        config._a = parsedArray;\n        config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n        config._d = createUTCDate.apply(null, config._a);\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    switch (units) {\n        case 'year': output = monthDiff(this, that) / 12; break;\n        case 'month': output = monthDiff(this, that); break;\n        case 'quarter': output = monthDiff(this, that) / 3; break;\n        case 'second': output = (this - that) / 1e3; break; // 1000\n        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n        default: output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction clone$1 () {\n    return createDuration(this);\n}\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction sign(x) {\n    return ((x > 0) - (x < 0)) || +x;\n}\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n    return totalSign + 'P' +\n        (Y ? ymSign + Y + 'Y' : '') +\n        (M ? ymSign + M + 'M' : '') +\n        (D ? daysSign + D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? hmsSign + h + 'H' : '') +\n        (m ? hmsSign + m + 'M' : '') +\n        (s ? hmsSign + s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.clone          = clone$1;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.19.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding  = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n","//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nvar monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nvar monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nvar monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nvar es = moment.defineLocale('es', {\n    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort : function (m, format) {\n        if (!m) {\n            return monthsShortDot;\n        } else if (/-MMM-/.test(format)) {\n            return monthsShort[m.month()];\n        } else {\n            return monthsShortDot[m.month()];\n        }\n    },\n    monthsRegex : monthsRegex,\n    monthsShortRegex : monthsRegex,\n    monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex : /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse : monthsParse,\n    longMonthsParse : monthsParse,\n    shortMonthsParse : monthsParse,\n    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D [de] MMMM [de] YYYY',\n        LLL : 'D [de] MMMM [de] YYYY H:mm',\n        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar : {\n        sameDay : function () {\n            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay : function () {\n            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek : function () {\n            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay : function () {\n            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek : function () {\n            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'en %s',\n        past : 'hace %s',\n        s : 'unos segundos',\n        m : 'un minuto',\n        mm : '%d minutos',\n        h : 'una hora',\n        hh : '%d horas',\n        d : 'un día',\n        dd : '%d días',\n        M : 'un mes',\n        MM : '%d meses',\n        y : 'un año',\n        yy : '%d años'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n    ordinal : '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn es;\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.THREE = global.THREE || {})));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\tif ( Number.isInteger === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\t\tNumber.isInteger = function ( value ) {\n\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t\t};\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( Function.prototype.name === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\t( function () {\n\n\t\t\tObject.assign = function ( target ) {\n\n\t\t\t\t'use strict';\n\n\t\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t\t}\n\n\t\t\t\tvar output = Object( target );\n\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t};\n\n\t\t} )();\n\n\t}\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tvar REVISION = '87';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar Uncharted2ToneMapping = 3;\n\tvar CineonToneMapping = 4;\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar SphericalReflectionMapping = 305;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RGB_S3TC_DXT1_Format = 2001;\n\tvar RGBA_S3TC_DXT1_Format = 2002;\n\tvar RGBA_S3TC_DXT3_Format = 2003;\n\tvar RGBA_S3TC_DXT5_Format = 2004;\n\tvar RGB_PVRTC_4BPPV1_Format = 2100;\n\tvar RGB_PVRTC_2BPPV1_Format = 2101;\n\tvar RGBA_PVRTC_4BPPV1_Format = 2102;\n\tvar RGBA_PVRTC_2BPPV1_Format = 2103;\n\tvar RGB_ETC1_Format = 2151;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\t\tvar uuid = new Array( 36 );\n\t\t\tvar rnd = 0, r;\n\n\t\t\treturn function generateUUID() {\n\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn uuid.join( '' );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * _Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * _Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tvalue --;\n\t\t\tvalue |= value >> 1;\n\t\t\tvalue |= value >> 2;\n\t\t\tvalue |= value >> 4;\n\t\t\tvalue |= value >> 8;\n\t\t\tvalue |= value >> 16;\n\t\t\tvalue ++;\n\n\t\t\treturn value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t}\n\n\tObject.defineProperties( Vector2.prototype, {\n\n\t\t\"width\" : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.x = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\" : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.y = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tisVector2: true,\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min = new Vector2();\n\t\t\tvar max = new Vector2();\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tlengthManhattan: function() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar textureId = 0;\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Texture.prototype, EventDispatcher.prototype, {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tfunction getDataURL( image ) {\n\n\t\t\t\tvar canvas;\n\n\t\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\t\tcanvas = image;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\t\tuv.multiply( this.repeat );\n\t\t\tuv.add( this.offset );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\t this.x = 1;\n\t\t\t\t this.y = 0;\n\t\t\t\t this.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\t this.x = q.x / s;\n\t\t\t\t this.y = q.y / s;\n\t\t\t\t this.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector4();\n\t\t\t\t\tmax = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t */\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\tthis.activeMipMapLevel = 0;\n\n\t}\n\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function ( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Quaternion.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tw: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._w = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c1 = cos( x / 2 );\n\t\t\tvar c2 = cos( y / 2 );\n\t\t\tvar c3 = cos( z / 2 );\n\n\t\t\tvar s1 = sin( x / 2 );\n\t\t\tvar s2 = sin( y / 2 );\n\t\t\tvar s3 = sin( z / 2 );\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function () {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar r;\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\t\tif ( r < EPS ) {\n\n\t\t\t\t\tr = 0;\n\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t\t}\n\n\t\t\t\tthis._x = v1.x;\n\t\t\t\tthis._y = v1.y;\n\t\t\t\tthis._z = v1.z;\n\t\t\t\tthis._w = r;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tinverse: function () {\n\n\t\t\treturn this.conjugate().normalize();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector3( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t}\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function applyEuler( euler ) {\n\n\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyAxisAngle: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function project( camera ) {\n\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tunproject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function unproject( camera ) {\n\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min = new Vector3();\n\t\t\tvar max = new Vector3();\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\t\tthis.x = y * v.z - z * v.y;\n\t\t\tthis.y = z * v.x - x * v.z;\n\t\t\tthis.z = x * v.y - y * v.x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\t\treturn this.sub( v1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\treflect: function () {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function reflect( normal ) {\n\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function ( s ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCylindrical: function ( c ) {\n\n\t\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\t\tthis.y = c.y;\n\t\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0,       0,       0,       1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function extractRotation( m ) {\n\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\t\tte[ 4 ] = xy - wz;\n\t\t\tte[ 8 ] = xz + wy;\n\n\t\t\tte[ 1 ] = xy + wz;\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\t\tte[ 9 ] = yz - wx;\n\n\t\t\tte[ 2 ] = xz - wy;\n\t\t\tte[ 6 ] = yz + wx;\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function () {\n\n\t\t\tvar x = new Vector3();\n\t\t\tvar y = new Vector3();\n\t\t\tvar z = new Vector3();\n\n\t\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tz.subVectors( eye, target );\n\n\t\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t\tz.z = 1;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t\t// up and z are parallel\n\n\t\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tz.normalize();\n\t\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t\t}\n\n\t\t\t\tx.normalize();\n\t\t\t\ty.crossVectors( z, x );\n\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn attribute;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPosition: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 12 ] = v.x;\n\t\t\tte[ 13 ] = v.y;\n\t\t\tte[ 14 ] = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0,  0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s,  c, 0,\n\t\t\t\t0, 0,  0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts,  c, 0, 0,\n\t\t\t\t0,  0, 1, 0,\n\t\t\t\t0,  0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeShear: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, y, z, 0,\n\t\t\t\tx, 1, z, 0,\n\t\t\t\tx, y, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\t\tthis.scale( scale );\n\t\t\tthis.setPosition( position );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function () {\n\n\t\t\tvar vector = new Vector3();\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\tvar det = this.determinant();\n\t\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\tposition.z = te[ 14 ];\n\n\t\t\t\t// scale the rotation part\n\t\t\t\tmatrix.copy( this );\n\n\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\t\tscale.x = sx;\n\t\t\t\tscale.y = sy;\n\t\t\t\tscale.z = sz;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tif ( far === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Base for inner nodes (including the root) ---\n\n\tfunction UniformContainer() {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array( 16 );\n\tvar mat3array = new Float32Array( 9 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( renderer, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\n\tfunction setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValue2fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n\tfunction setValue3fv( gl, v ) {\n\n\t\tif ( v.x !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\telse if ( v.r !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\telse\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n\tfunction setValue4fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValue2fm( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n\t}\n\n\tfunction setValue3fm( gl, v ) {\n\n\t\tif ( v.elements === undefined ) {\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t} else {\n\n\t\t\tmat3array.set( v.elements );\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t}\n\n\t}\n\n\tfunction setValue4fm( gl, v ) {\n\n\t\tif ( v.elements === undefined ) {\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t} else {\n\n\t\t\tmat4array.set( v.elements );\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t}\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\n\tfunction setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\n\tfunction setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\n\tfunction setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\n\tfunction setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2a( gl, v ) {\n\n\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n\t}\n\n\tfunction setValueV3a( gl, v ) {\n\n\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n\t}\n\n\tfunction setValueV4a( gl, v ) {\n\n\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2a( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n\t}\n\n\tfunction setValueM3a( gl, v ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n\t}\n\n\tfunction setValueM4a( gl, v ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tUniformContainer.call( this ); // mix-in\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t// are not allowed in structured uniforms.\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ] );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\tfor ( ; ; ) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\tid = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program, renderer ) {\n\n\t\tUniformContainer.call( this );\n\n\t\tthis.renderer = renderer;\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\tpath = info.name,\n\t\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tObject.assign( Color.prototype, {\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function () {\n\n\t\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\t\tif ( s === 0 ) {\n\n\t\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function () {\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tthis.r = r * r;\n\t\t\tthis.g = g * g;\n\t\t\tthis.b = b * b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function () {\n\n\t\t\tthis.r = Math.sqrt( this.r );\n\t\t\tthis.g = Math.sqrt( this.g );\n\t\t\tthis.b = Math.sqrt( this.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( optionalTarget ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\thsl.h = hue;\n\t\t\thsl.s = saturation;\n\t\t\thsl.l = lightness;\n\n\t\t\treturn hsl;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tvar hsl = this.getHSL();\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\n\t\t\talphaMap: { value: null },\n\n\t\t},\n\n\t\tspecularmap: {\n\n\t\t\tspecularMap: { value: null },\n\n\t\t},\n\n\t\tenvmap: {\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {},\n\t\t\t\tshadowCameraNear: {},\n\t\t\t\tshadowCameraFar: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tvar UniformsUtils = {\n\n\t\tmerge: function ( uniforms ) {\n\n\t\t\tvar merged = {};\n\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn merged;\n\n\t\t},\n\n\t\tclone: function ( uniforms_src ) {\n\n\t\t\tvar uniforms_dst = {};\n\n\t\t\tfor ( var u in uniforms_src ) {\n\n\t\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uniforms_dst;\n\n\t\t}\n\n\t};\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\n\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n\tvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\n\tvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n\tvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n\tvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n\tvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n\tvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\";\n\n\tvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars: lights_pars,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_template: lights_template,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment: normal_fragment,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t},\n\n\t\tshadow: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t},\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\tclearCoat: { value: 0 },\n\t\t\t\tclearCoatRoughness: { value: 0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box2.prototype, {\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction WebGLFlareRenderer( renderer, gl, state, textures, capabilities ) {\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar shader, program, attributes, uniforms;\n\n\t\tvar tempTexture, occlusionTexture;\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 1, - 1,  0, 0,\n\t\t\t\t 1, - 1,  1, 0,\n\t\t\t\t 1,  1,  1, 1,\n\t\t\t\t- 1,  1,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\t// buffers\n\n\t\t\tvertexBuffer     = gl.createBuffer();\n\t\t\telementBuffer    = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\t// textures\n\n\t\t\ttempTexture      = gl.createTexture();\n\t\t\tocclusionTexture = gl.createTexture();\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t\tprogram = createProgram( shader );\n\n\t\t\tattributes = {\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t\t};\n\n\t\t}\n\n\t\t/*\n\t\t * Render lens flares\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t *         reads these back and calculates occlusion.\n\t\t */\n\n\t\tthis.render = function ( flares, scene, camera, viewport ) {\n\n\t\t\tif ( flares.length === 0 ) return;\n\n\t\t\tvar tempPosition = new Vector3();\n\n\t\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\t\tvar size = 16 / viewport.w,\n\t\t\t\tscale = new Vector2( size * invAspect, size );\n\n\t\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n\t\t\tvar validArea = new Box2();\n\n\t\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tstate.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.vertex );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t// loop through all lens flares to update their occlusion and positions\n\t\t\t// setup gl and common used attribs/uniforms\n\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.buffers.depth.setMask( false );\n\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\t\tsize = 16 / viewport.w;\n\t\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t\t// calc object screen position\n\n\t\t\t\tvar flare = flares[ i ];\n\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\t\ttempPosition.applyMatrix4( camera.projectionMatrix );\n\n\t\t\t\t// setup arrays for gl programs\n\n\t\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t\t// screen cull\n\n\t\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// render pink quad\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// restore graphics\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// update object positions\n\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// render flares\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\n\t\t\t\t\t\t\ttextures.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\t\tstate.buffers.depth.setMask( true );\n\n\t\t\tstate.reset();\n\n\t\t};\n\n\t\tfunction createProgram( shader ) {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\t\tvar prefix = \"precision \" + capabilities.precision + \" float;\\n\";\n\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\t\tgl.compileShader( fragmentShader );\n\t\t\tgl.compileShader( vertexShader );\n\n\t\t\tgl.attachShader( program, fragmentShader );\n\t\t\tgl.attachShader( program, vertexShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar program, attributes, uniforms;\n\n\t\tvar texture;\n\n\t\t// decompose matrixWorld\n\n\t\tvar spritePosition = new Vector3();\n\t\tvar spriteRotation = new Quaternion();\n\t\tvar spriteScale = new Vector3();\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t\t- 0.5,   0.5,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\tvertexBuffer  = gl.createBuffer();\n\t\t\telementBuffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\tprogram = createProgram();\n\n\t\t\tattributes = {\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t\t};\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = 8;\n\t\t\tcanvas.height = 8;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\t\ttexture = new CanvasTexture( canvas );\n\n\t\t}\n\n\t\tthis.render = function ( sprites, scene, camera ) {\n\n\t\t\tif ( sprites.length === 0 ) return;\n\n\t\t\t// setup gl\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tstate.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.position );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.BLEND );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\t\tvar oldFogType = 0;\n\t\t\tvar sceneFogType = 0;\n\t\t\tvar fog = scene.fog;\n\n\t\t\tif ( fog ) {\n\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\t\tif ( fog.isFog ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\t\toldFogType = 1;\n\t\t\t\t\tsceneFogType = 1;\n\n\t\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\t\toldFogType = 2;\n\t\t\t\t\tsceneFogType = 2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\t\toldFogType = 0;\n\t\t\t\tsceneFogType = 0;\n\n\t\t\t}\n\n\n\t\t\t// update positions and sort\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t\t}\n\n\t\t\tsprites.sort( painterSortStable );\n\n\t\t\t// render all sprites\n\n\t\t\tvar scale = [];\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\t\t\t\tvar material = sprite.material;\n\n\t\t\t\tif ( material.visible === false ) continue;\n\n\t\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\t\tvar fogType = 0;\n\n\t\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\t\tfogType = sceneFogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\t\toldFogType = fogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.map !== null ) {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\n\t\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\n\t\t\tstate.reset();\n\n\t\t};\n\n\t\tfunction createProgram() {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform float rotation;',\n\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t'uniform vec2 uvOffset;',\n\t\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t\t'attribute vec2 position;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t\t'uniform vec3 color;',\n\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t'uniform float opacity;',\n\n\t\t\t\t'uniform int fogType;',\n\t\t\t\t'uniform vec3 fogColor;',\n\t\t\t\t'uniform float fogDensity;',\n\t\t\t\t'uniform float fogNear;',\n\t\t\t\t'uniform float fogFar;',\n\t\t\t\t'uniform float alphaTest;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t\t'}',\n\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.compileShader( vertexShader );\n\t\t\tgl.compileShader( fragmentShader );\n\n\t\t\tgl.attachShader( program, vertexShader );\n\t\t\tgl.attachShader( program, fragmentShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction painterSortStable( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn b.id - a.id;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.flatShading = false;\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\t\tthis.visible = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tObject.assign( Material.prototype, EventDispatcher.prototype, {\n\n\t\tisMaterial: true,\n\n\t\tonBeforeCompile: function () {},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = meta === undefined;\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t}\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\t\tif ( this.visible === false ) data.visible = false;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.overdraw = source.overdraw;\n\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\t\tthis.defines = source.defines;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = this.uniforms;\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  referencePosition: <float>,\n\t *  nearDistance: <float>,\n\t *  farDistance: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tfunction MeshDistanceMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box3.prototype, {\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\tvar z = attribute.getZ( i );\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByObject: function () {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function expandByObject( object ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\t\tvar i, l;\n\n\t\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tintersectsSphere: ( function () {\n\n\t\t\tvar closestPoint = new Vector3();\n\n\t\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetBoundingSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\t\tthis.getCenter( result.center );\n\n\t\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar points = [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t];\n\n\t\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t}\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function () {\n\n\t\t\tvar box = new Box3();\n\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t\t}\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\tresult.sub( this.center ).normalize();\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\t\tvar box = optionalTarget || new Box3();\n\n\t\t\tbox.set( this.center, this.center );\n\t\t\tbox.expandByScalar( this.radius );\n\n\t\t\treturn box;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn attribute;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Plane( normal, constant ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tObject.assign( Plane.prototype, {\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t\t},\n\n\t\tintersectLine: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tvar direction = line.delta( v1 );\n\n\t\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar m1 = new Matrix3();\n\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant -= offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tObject.assign( Frustum.prototype, {\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsObject( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSprite: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function () {\n\n\t\t\tvar p1 = new Vector3(),\n\t\t\t\tp2 = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\tvar planes = this.planes;\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\t\tvar _frustum = new Frustum(),\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_shadowMapSize = new Vector2(),\n\t\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t\t_lookTarget = new Vector3(),\n\t\t\t_lightPositionWorld = new Vector3(),\n\n\t\t\t_MorphingFlag = 1,\n\t\t\t_SkinningFlag = 2,\n\n\t\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t\t_materialCache = {};\n\n\t\tvar cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tvar cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t\tvar cube2DViewPorts = [\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\n\t\t];\n\n\t\t// init\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\t//\n\n\t\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.renderReverseSided = true;\n\t\tthis.renderSingleSided = true;\n\n\t\tthis.render = function ( lights, scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( lights.length === 0 ) return;\n\n\t\t\t// TODO Clean up (needed in case of contextlost)\n\t\t\tvar _gl = _renderer.context;\n\t\t\tvar _state = _renderer.state;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.disable( _gl.BLEND );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tvar faceCount;\n\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\t\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t// following orientation:\n\t\t\t\t\t//\n\t\t\t\t\t//  xzXZ\n\t\t\t\t\t//   y Y\n\t\t\t\t\t//\n\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t// z - Negative z direction\n\n\t\t\t\t\t// positive X\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative X\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Z\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative Z\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Y\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t// negative Y\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\t\tshadow.update( light );\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\tfaceCount = 6;\n\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfaceCount = 1;\n\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\t// compute shadow matrix\n\n\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t);\n\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t// run a single pass if not\n\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t};\n\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tvar side = material.side;\n\n\t\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n\t\t\t\tside = FrontSide;\n\n\t\t\t}\n\n\t\t\tif ( scope.renderReverseSided ) {\n\n\t\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\t\telse if ( side === BackSide ) side = FrontSide;\n\n\t\t\t}\n\n\t\t\tresult.side = side;\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAttributes( gl ) {\n\n\t\tvar buffers = {};\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\t\tvar buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tvar type = gl.FLOAT;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = gl.FLOAT;\n\n\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = gl.SHORT;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = gl.INT;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = gl.BYTE;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( attribute.dynamic === false ) {\n\n\t\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\treturn buffers[ attribute.uuid ];\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\t\t\t\n\t\t\tvar data = buffers[ attribute.uuid ];\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tdelete buffers[ attribute.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\tvar data = buffers[ attribute.uuid ];\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers[ attribute.uuid ] = createBuffer( attribute, bufferType );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Euler( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || Euler.DefaultOrder;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tObject.defineProperties( Euler.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\torder: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._order;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._order = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Euler.prototype, {\n\n\t\tisEuler: true,\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = _Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function () {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\tvar q = new Quaternion();\n\n\t\t\treturn function reorder( newOrder ) {\n\n\t\t\t\tq.setFromEuler( this );\n\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tObject.assign( Layers.prototype, {\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel | 0;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tvar object3DId = 0;\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation.onChange( onRotationChange );\n\t\tquaternion.onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n\t\tisObject3D: true,\n\n\t\tonBeforeRender: function () {},\n\t\tonAfterRender: function () {},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function () {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar q1 = new Quaternion();\n\n\t\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateOnAxis: function () {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function translateX( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function translateY( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function translateZ( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function () {\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function worldToLocal( vector ) {\n\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( this.isCamera ) {\n\n\t\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t\t}\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\t\tthis.children.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar scale = new Vector3();\n\n\t\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldRotation: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldScale: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is '' when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.geometry !== undefined ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\t\tthis.projectionMatrix = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Camera,\n\n\t\tisCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan(\n\t\t\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( view !== null ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tObject.assign( Face3.prototype, {\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar count = 0;\n\tfunction GeometryIdCount() { return count++; }\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj = new Object3D();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tvar tempNormals = [];\n\t\t\tvar tempUVs = [];\n\t\t\tvar tempUVs2 = [];\n\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tvar f, fl, face;\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar d = 0;\n\t\t\tvar vertices = this.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tif ( i > 0 ) {\n\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\tvertices1 = this.vertices,\n\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\tfaces1 = this.faces,\n\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\t\tcolors1 = this.colors,\n\t\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\t\tif ( uv === undefined ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tuvs1.push( uvCopy );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar i, il, j, jl, k, kl;\n\n\t\t\t// reset\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\t\tthis.lineDistances = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// vertices\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// face vertex uvs\n\n\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargets = source.morphTargets;\n\n\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = {};\n\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t\t// morph normals\n\n\t\t\tvar morphNormals = source.morphNormals;\n\n\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphNormal = {};\n\n\t\t\t\t// vertex normals\n\n\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// face normals\n\n\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t\t}\n\n\t\t\t// skin weights\n\n\t\t\tvar skinWeights = source.skinWeights;\n\n\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// skin indices\n\n\t\t\tvar skinIndices = source.skinIndices;\n\n\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tvar lineDistances = source.lineDistances;\n\n\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// update flags\n\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.uuid = _Math.generateUUID();\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.onUploadCallback = function () {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\n\t\tisBufferAttribute: true,\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyIndicesArray: function ( indices ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tvar index = indices[ i ];\n\n\t\t\t\tarray[ offset ++ ] = index.a;\n\t\t\t\tarray[ offset ++ ] = index.b;\n\t\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Int8BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize );\n\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\n\tfunction Uint8BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize );\n\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\n\tfunction Uint8ClampedBufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize );\n\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\n\tfunction Int16BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize );\n\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\n\tfunction Uint16BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize );\n\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\n\tfunction Int32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize );\n\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\n\tfunction Uint32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize );\n\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\n\tfunction Float32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize );\n\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\n\tfunction Float64BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize );\n\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tthis.indices = [];\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, {\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex = undefined;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction arrayMax( array ) {\n\n\t\tif ( array.length === 0 ) return - Infinity;\n\n\t\tvar max = array[ 0 ];\n\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t\t}\n\n\t\treturn max;\n\n\t}\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t}\n\n\tBufferGeometry.MaxIndex = 65535;\n\n\tObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj = new Object3D();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh ) {\n\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\t\tvar TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tvar box = new Box3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function computeBoundingSphere() {\n\n\t\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tvar position = this.attributes.position;\n\n\t\t\t\tif ( position ) {\n\n\t\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function normalizeNormals() {\n\n\t\t\t\tvar normals = this.attributes.normal;\n\n\t\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\t\tvector.normalize();\n\n\t\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: array\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar name, i, l;\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( name in morphAttributes ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// BoxGeometry\n\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\n\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\t// BoxBufferGeometry\n\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar numberOfVertices = 0;\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth = width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar ix, iy;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PlaneGeometry\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t// PlaneBufferGeometry\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar ix, iy;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n\t}\n\n\tObject.assign( Ray.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function recast( t ) {\n\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tresult.subVectors( point, this.origin );\n\t\t\tvar directionDistance = result.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn result.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t\t// point behind the ray\n\n\t\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t\t}\n\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\t\treturn v1.distanceToSquared( point );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceSqToSegment: function () {\n\n\t\t\tvar segCenter = new Vector3();\n\t\t\tvar segDir = new Vector3();\n\t\t\tvar diff = new Vector3();\n\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t// defined by v0 and v1\n\t\t\t\t// It can also set two optional targets :\n\t\t\t\t// - The closest point on the ray\n\t\t\t\t// - The closest point on the segment\n\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\t\tif ( det > 0 ) {\n\n\t\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\textDet = segExtent * det;\n\n\t\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t\t}\n\n\t\t\t\treturn sqrDist;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\tvar t0 = tca - thc;\n\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\tvar t1 = tca + thc;\n\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t :  null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, optionalTarget );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, optionalTarget ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t\t},\n\n\t\tintersectsBox: ( function () {\n\n\t\t\tvar v = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectTriangle: function () {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\tvar diff = new Vector3();\n\t\t\tvar edge1 = new Vector3();\n\t\t\tvar edge2 = new Vector3();\n\t\t\tvar normal = new Vector3();\n\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\tvar sign;\n\n\t\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\tsign = 1;\n\n\t\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\t\tsign = - 1;\n\t\t\t\t\tDdN = - DdN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t\t// b1 < 0, no intersection\n\t\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t\t// b2 < 0, no intersection\n\t\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t\t// t < 0, no intersection\n\t\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Ray intersects triangle.\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tObject.assign( Line3.prototype, {\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function () {\n\n\t\t\tvar startP = new Vector3();\n\t\t\tvar startEnd = new Vector3();\n\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\t\tif ( clampToLine ) {\n\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tObject.assign( Triangle, {\n\n\t\tnormal: function () {\n\n\t\t\tvar v0 = new Vector3();\n\n\t\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tresult.subVectors( c, b );\n\t\t\t\tv0.subVectors( a, b );\n\t\t\t\tresult.cross( v0 );\n\n\t\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tbarycoordFromPoint: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\t\tv0.subVectors( c, a );\n\t\t\t\tv1.subVectors( b, a );\n\t\t\t\tv2.subVectors( point, a );\n\n\t\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\t// collinear or singular triangle\n\t\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t\t}\n\n\t\t\t\tvar invDenom = 1 / denom;\n\t\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t\t// barycentric coordinates must always sum to 1\n\t\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarea: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function area() {\n\n\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmidpoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tnormal: function ( optionalTarget ) {\n\n\t\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tplane: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Plane();\n\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tclosestPointToPoint: function () {\n\n\t\t\tvar plane = new Plane();\n\t\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\t\tvar projectedPoint = new Vector3();\n\t\t\tvar closestPoint = new Vector3();\n\n\t\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\tvar minDistance = Infinity;\n\n\t\t\t\t// project the point onto the plane of the triangle\n\n\t\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t\t// check if the projection lies within the triangle\n\n\t\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t\t// if so, this is the closest point\n\n\t\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar m, ml, name;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\tvar vA = new Vector3();\n\t\t\tvar vB = new Vector3();\n\t\t\tvar vC = new Vector3();\n\n\t\t\tvar tempA = new Vector3();\n\t\t\tvar tempB = new Vector3();\n\t\t\tvar tempC = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tvar barycoord = new Vector3();\n\n\t\t\tvar intersectionPoint = new Vector3();\n\t\t\tvar intersectionPointWorld = new Vector3();\n\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\t\treturn uv1.clone();\n\n\t\t\t}\n\n\t\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\t\tvar intersect;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersect === null ) return null;\n\n\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\tobject: object\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\t\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uv ) {\n\n\t\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t\t}\n\n\t\t\t\treturn intersection;\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar material = this.material;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\tif ( material === undefined ) return;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\t// Check boundingBox before continuing\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t\t}\n\n\t\t\t\tvar intersection;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar a, b, c;\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\t\tvar i, l;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar uvs;\n\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBackground( renderer, state, geometries, premultipliedAlpha ) {\n\n\t\tvar clearColor = new Color( 0x000000 );\n\t\tvar clearAlpha = 0;\n\n\t\tvar planeCamera, planeMesh;\n\t\tvar boxMesh;\n\n\t\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\t\tvar background = scene.background;\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tpolygonOffset: true,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\t\tvar scale = camera.far;\n\n\t\t\t\t\t\tthis.matrixWorld.makeScale( scale, scale, scale );\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t\t\tthis.material.polygonOffsetUnits = scale * 10;\n\n\t\t\t\t\t};\n\n\t\t\t\t\tgeometries.update( boxMesh.geometry );\n\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t\t);\n\n\t\t\t\t\tgeometries.update( planeMesh.geometry );\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.map = background;\n\n\t\t\t\t// TODO Push this to renderList\n\n\t\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\t\treturn a.program.id - b.program.id;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction WebGLRenderList() {\n\n\t\tvar renderItems = [];\n\t\tvar renderItemsIndex = 0;\n\n\t\tvar opaque = [];\n\t\tvar transparent = [];\n\n\t\tfunction init() {\n\n\t\t\trenderItemsIndex = 0;\n\n\t\t\topaque.length = 0;\n\t\t\ttransparent.length = 0;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, z, group ) {\n\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\t\tif ( renderItem === undefined ) {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: material.program,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = material.program;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t}\n\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\t\trenderItemsIndex ++;\n\n\t\t}\n\n\t\tfunction sort() {\n\n\t\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tvar lists = {};\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar hash = scene.id + ',' + camera.id;\n\t\t\tvar list = lists[ hash ];\n\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists[ hash ] = list;\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = {};\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n\t}\n\n\tfunction WebGLMorphtargets( gl ) {\n\n\t\tvar influencesList = {};\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tfunction update( object, geometry, material, program ) {\n\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\t\tvar length = objectInfluences.length;\n\n\t\t\tvar influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t\t// Remove current morphAttributes\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\t// Add morphAttributes\n\n\t\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tif ( influence ) {\n\n\t\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tif ( position.isInterleavedBufferAttribute ) {\n\n\t\t\t\tcount = position.data.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t} else {\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\t\t}\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, attributes, infoMemory ) {\n\n\t\tvar geometries = {};\n\t\tvar wireframeAttributes = {};\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\t// TODO Remove duplicate code\n\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t\t}\n\n\t\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfoMemory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\t\tinfoMemory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\t\tif ( attribute ) return attribute;\n\n\t\t\tvar indices = [];\n\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\t// console.time( 'wireframe' );\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tvar array = geometryIndex.array;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// console.timeEnd( 'wireframe' );\n\n\t\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction UniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction WebGLLights() {\n\n\t\tvar cache = new UniformsCache();\n\n\t\tvar state = {\n\n\t\t\thash: '',\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\n\t\t};\n\n\t\tvar vector3 = new Vector3();\n\t\tvar matrix4 = new Matrix4();\n\t\tvar matrix42 = new Matrix4();\n\n\t\tfunction setup( lights, shadows, camera ) {\n\n\t\t\tvar r = 0, g = 0, b = 0;\n\n\t\t\tvar directionalLength = 0;\n\t\t\tvar pointLength = 0;\n\t\t\tvar spotLength = 0;\n\t\t\tvar rectAreaLength = 0;\n\t\t\tvar hemiLength = 0;\n\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tvar color = light.color;\n\t\t\t\tvar intensity = light.intensity;\n\t\t\t\tvar distance = light.distance;\n\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\t// (a) intensity controls irradiance of entire light\n\t\t\t\t\tuniforms.color\n\t\t\t\t\t\t.copy( color )\n\t\t\t\t\t\t.multiplyScalar( intensity / ( light.width * light.height ) );\n\n\t\t\t\t\t// (b) intensity controls the radiance per light area\n\t\t\t\t\t// uniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5,                0.0, 0.0 );\n\t\t\t\t\tuniforms.halfHeight.set(              0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.ambient[ 0 ] = r;\n\t\t\tstate.ambient[ 1 ] = g;\n\t\t\tstate.ambient[ 2 ] = b;\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\t// TODO (sam-g-steel) why aren't we using join\n\t\t\tstate.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tstate: state\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( geometries, infoRender ) {\n\n\t\tvar updateList = {};\n\n\t\tfunction update( object ) {\n\n\t\t\tvar frame = infoRender.frame;\n\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction clear() {\n\n\t\t\tupdateList = {};\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tclear: clear\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t}\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\tbreak;\n\n\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t}\n\n\tfunction parseIncludes( string ) {\n\n\t\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\t\tfunction replace( match, include ) {\n\n\t\t\tvar replace = ShaderChunk[ include ];\n\n\t\t\tif ( replace === undefined ) {\n\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t}\n\n\t\t\treturn parseIncludes( replace );\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction unrollLoops( string ) {\n\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\tvar unroll = '';\n\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t}\n\n\t\t\treturn unroll;\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\t\tvar gl = renderer.context;\n\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = shader.vertexShader;\n\t\tvar fragmentShader = shader.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t}\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t// console.log( 'building new program ' );\n\n\t\t//\n\n\t\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t\t'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = parseIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\t\tfragmentShader = parseIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\t\tif ( ! material.isShaderMaterial ) {\n\n\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function() {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tuniforms: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tattributes: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\n\t\t//\n\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t\t];\n\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( map.isTexture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\t\tvar precision = capabilities.precision;\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexColors: material.vertexColors,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.flatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\t\tarray.push( renderer.gammaOutput );\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function ( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, infoMemory ) {\n\n\t\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t\t//\n\n\t\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t// premultiplied alpha.\n\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction makePowerOfTwo( image ) {\n\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = _Math.nearestPowerOfTwo( image.width );\n\t\t\t\tcanvas.height = _Math.nearestPowerOfTwo( image.height );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tinfoMemory.textures --;\n\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\tinfoMemory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t\t} else {\n\n\t\t\t\t// 2D texture\n\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\t// remove all webgl properties\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.remove( renderTarget.texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image.length === 6 ) {\n\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\t\tvar cubeImage = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\t\timage = makePowerOfTwo( image );\n\n\t\t\t}\n\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t        console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( !( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfoMemory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t_gl.generateMipmap( target );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = {};\n\n\t\tfunction get( object ) {\n\n\t\t\tvar uuid = object.uuid;\n\t\t\tvar map = properties[ uuid ];\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties[ uuid ] = map;\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tdelete properties[ object.uuid ];\n\n\t\t}\n\n\t\tfunction clear() {\n\n\t\t\tproperties = {};\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tclear: clear\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, utils ) {\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar capabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentProgram = null;\n\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\t\tvar version = parseFloat( /^WebGL\\ ([0-9])/.exec( gl.getParameter( gl.VERSION ) )[ 1 ] );\n\t\tvar lineWidthAvailable = parseFloat( version ) >= 1.0;\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t// init\n\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\tdepthBuffer.setClear( 1 );\n\t\tstencilBuffer.setClear( 0 );\n\n\t\tenable( gl.DEPTH_TEST );\n\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\tsetFlipSided( false );\n\t\tsetCullFace( CullFaceBack );\n\t\tenable( gl.CULL_FACE );\n\n\t\tenable( gl.BLEND );\n\t\tsetBlending( NormalBlending );\n\n\t\t//\n\n\t\tfunction initAttributes() {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tcapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tcapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getCompressedTextureFormats() {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t}\n\n\t\tfunction useProgram( program ) {\n\n\t\t\tif ( currentProgram !== program ) {\n\n\t\t\t\tgl.useProgram( program );\n\n\t\t\t\tcurrentProgram = program;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending !== NoBlending ) {\n\n\t\t\t\tenable( gl.BLEND );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.BLEND );\n\n\t\t\t}\n\n\t\t\tif ( blending !== CustomBlending ) {\n\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendEquation = null;\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t} else {\n\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t\t}\n\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t}\n\n\t\tfunction setMaterial( material ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( gl.CULL_FACE )\n\t\t\t\t: enable( gl.CULL_FACE );\n\n\t\t\tsetFlipSided( material.side === BackSide );\n\n\t\t\tmaterial.transparent === true\n\t\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t\t: setBlending( NoBlending );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentProgram = null;\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\t\tuseProgram: useProgram,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\treturn {\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ArrayCamera( array ) {\n\n\t\tPerspectiveCamera.call( this );\n\n\t\tthis.cameras = array || [];\n\n\t}\n\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\t\tconstructor: ArrayCamera,\n\n\t\tisArrayCamera: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebVRManager( renderer ) {\n\n\t\tvar scope = this;\n\n\t\tvar device = null;\n\t\tvar frameData = null;\n\n\t\tif ( 'VRFrameData' in window ) {\n\n\t\t\tframeData = new window.VRFrameData();\n\n\t\t}\n\n\t\tvar matrixWorldInverse = new Matrix4();\n\n\t\tvar standingMatrix = new Matrix4();\n\t\tvar standingMatrixInverse = new Matrix4();\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\t\tcameraL.layers.enable( 1 );\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\t\tcameraR.layers.enable( 2 );\n\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\t//\n\n\t\tvar currentSize, currentPixelRatio;\n\n\t\tfunction onVRDisplayPresentChange() {\n\n\t\t\tif ( device !== null && device.isPresenting ) {\n\n\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\t} else if ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t}\n\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t\t//\n\n\t\tthis.enabled = false;\n\t\tthis.standing = false;\n\n\t\tthis.getDevice = function () {\n\n\t\t\treturn device;\n\n\t\t};\n\n\t\tthis.setDevice = function ( value ) {\n\n\t\t\tif ( value !== undefined ) device = value;\n\n\t\t};\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tif ( device === null ) return camera;\n\n\t\t\tdevice.depthNear = camera.near;\n\t\t\tdevice.depthFar = camera.far;\n\n\t\t\tdevice.getFrameData( frameData );\n\n\t\t\t//\n\n\t\t\tvar pose = frameData.pose;\n\n\t\t\tif ( pose.position !== null ) {\n\n\t\t\t\tcamera.position.fromArray( pose.position );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.position.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( pose.orientation !== null ) {\n\n\t\t\t\tcamera.quaternion.fromArray( pose.orientation );\n\n\t\t\t}\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( this.standing && stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\t\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\t\t\tcamera.matrixWorld.multiply( standingMatrix );\n\t\t\t\tcamera.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t\t//\n\n\t\t\tcameraL.near = camera.near;\n\t\t\tcameraR.near = camera.near;\n\n\t\t\tcameraL.far = camera.far;\n\t\t\tcameraR.far = camera.far;\n\n\t\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t\tif ( this.standing && stageParameters ) {\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tvar parent = camera.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t\t// HACK @mrdoob\n\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t//\n\n\t\t\tvar layers = device.getLayers();\n\n\t\t\tif ( layers.length ) {\n\n\t\t\t\tvar layer = layers[ 0 ];\n\n\t\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t\t}\n\n\t\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getStandingMatrix = function () {\n\n\t\t\treturn standingMatrix;\n\n\t\t};\n\n\t\tthis.submitFrame = function () {\n\n\t\t\tif ( device && device.isPresenting ) device.submitFrame();\n\n\t\t};\n\n\t\tthis.dispose = function() {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function() {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function() {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled ||\n\t\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\t\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author thespite / http://www.twitter.com/thespite\n\t */\n\n\tfunction WebGLUtils ( gl, extensions ) {\n\n\t\tfunction convert ( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\t\tif ( p === ByteType ) return gl.BYTE;\n\t\t\tif ( p === ShortType ) return gl.SHORT;\n\t\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\t\tif ( p === IntType ) return gl.INT;\n\t\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\t\tif ( p === OneFactor ) return gl.ONE;\n\t\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\treturn { convert: convert }\n\n\t}\n\n\t// import { Sphere } from '../math/Sphere';\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\t\tvar lightsArray = [];\n\t\tvar shadowsArray = [];\n\n\t\tvar currentRenderList = null;\n\n\t\tvar spritesArray = [];\n\t\tvar flaresArray = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\t\tthis.context = null;\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t\t_isContextLost = false,\n\n\t\t\t// internal state cache\n\n\t\t\t_currentRenderTarget = null,\n\t\t\t_currentFramebuffer = null,\n\t\t\t_currentMaterialId = - 1,\n\t\t\t_currentGeometryProgram = '',\n\n\t\t\t_currentCamera = null,\n\t\t\t_currentArrayCamera = null,\n\n\t\t\t_currentViewport = new Vector4(),\n\t\t\t_currentScissor = new Vector4(),\n\t\t\t_currentScissorTest = null,\n\n\t\t\t//\n\n\t\t\t_usedTextureUnits = 0,\n\n\t\t\t//\n\n\t\t\t_width = _canvas.width,\n\t\t\t_height = _canvas.height,\n\n\t\t\t_pixelRatio = 1,\n\n\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissorTest = false,\n\n\t\t\t// frustum\n\n\t\t\t_frustum = new Frustum(),\n\n\t\t\t// clipping\n\n\t\t\t_clipping = new WebGLClipping(),\n\t\t\t_clippingEnabled = false,\n\t\t\t_localClippingEnabled = false,\n\n\t\t\t// camera matrices cache\n\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_vector3 = new Vector3(),\n\n\t\t\t// info\n\n\t\t\t_infoMemory = {\n\t\t\t\tgeometries: 0,\n\t\t\t\ttextures: 0\n\t\t\t},\n\n\t\t\t_infoRender = {\n\n\t\t\t\tframe: 0,\n\t\t\t\tcalls: 0,\n\t\t\t\tvertices: 0,\n\t\t\t\tfaces: 0,\n\t\t\t\tpoints: 0\n\n\t\t\t};\n\n\t\tthis.info = {\n\n\t\t\trender: _infoRender,\n\t\t\tmemory: _infoMemory,\n\t\t\tprograms: null\n\n\t\t};\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t\t};\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t\t}\n\n\t\tvar extensions, capabilities, state;\n\t\tvar properties, textures, attributes, geometries, objects, lights;\n\t\tvar programCache, renderLists;\n\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\t\tvar flareRenderer, spriteRenderer;\n\n\t\tvar utils;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_float_linear' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\t\tBufferGeometry.MaxIndex = 4294967296;\n\n\t\t\t}\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, _infoMemory );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, _infoMemory );\n\t\t\tobjects = new WebGLObjects( geometries, _infoRender );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\t\tlights = new WebGLLights();\n\t\t\trenderLists = new WebGLRenderLists();\n\n\t\t\tbackground = new WebGLBackground( _this, state, geometries, _premultipliedAlpha );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\t\tflareRenderer = new WebGLFlareRenderer( _this, _gl, state, textures, capabilities );\n\t\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\t\t_this.info.programs = programCache.programs;\n\n\t\t\t_this.context = _gl;\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.state = state;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// vr\n\n\t\tvar vr = new WebVRManager( _this );\n\n\t\tthis.vr = vr;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\t\tthis.shadowMap = shadowMap;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\tvar device = vr.getDevice();\n\n\t\t\tif ( device && device.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t_canvas.height = height * _pixelRatio;\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width * _pixelRatio,\n\t\t\t\theight: _height * _pixelRatio\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t_canvas.width = width * pixelRatio;\n\t\t\t_canvas.height = height * pixelRatio;\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\t_viewport.set( x, _height - y - height, width, height );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\t_scissor.set( x, _height - y - height, width, height );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = background.getClearColor;\n\t\tthis.setClearColor = background.setClearColor;\n\t\tthis.getClearAlpha = background.getClearAlpha;\n\t\tthis.setClearAlpha = background.setClearAlpha;\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\trenderLists.dispose();\n\n\t\t\tvr.dispose();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( event ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tinitGLContext();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = 0;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) return;\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t}\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlightsArray.push( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tshadowsArray.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.material ) {\n\n\t\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar isAnimating = false;\n\t\tvar onAnimationFrame = null;\n\n\t\tfunction start() {\n\n\t\t\tif ( isAnimating ) return;\n\t\t\t( vr.getDevice() || window ).requestAnimationFrame( loop );\n\t\t\tisAnimating = true;\n\n\t\t}\n\n\t\tfunction loop( time ) {\n\n\t\t\tif ( onAnimationFrame !== null ) onAnimationFrame( time );\n\t\t\t( vr.getDevice() || window ).requestAnimationFrame( loop );\n\n\t\t}\n\n\t\tthis.animate = function ( callback ) {\n\n\t\t\tonAnimationFrame = callback;\n\t\t\tstart();\n\n\t\t};\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost ) return;\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tcamera = vr.getCamera( camera );\n\n\t\t\t}\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t\tspritesArray.length = 0;\n\t\t\tflaresArray.length = 0;\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\tcurrentRenderList.init();\n\n\t\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\t_infoRender.frame ++;\n\t\t\t_infoRender.calls = 0;\n\t\t\t_infoRender.vertices = 0;\n\t\t\t_infoRender.faces = 0;\n\t\t\t_infoRender.points = 0;\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = null;\n\n\t\t\t}\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t\t// render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t}\n\n\t\t\t// custom renderers\n\n\t\t\tspriteRenderer.render( spritesArray, scene, camera );\n\t\t\tflareRenderer.render( flaresArray, scene, camera, _currentViewport );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tvr.submitFrame();\n\n\t\t\t}\n\n\t\t\t// _gl.finish();\n\n\t\t};\n\n\t\t/*\n\t\t// TODO Duplicated code (Frustum)\n\n\t\tvar _sphere = new Sphere();\n\n\t\tfunction isObjectViewable( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSpriteViewable( sprite ) {\n\n\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSphereViewable( sphere ) {\n\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\t\tif ( numPlanes === 0 ) return true;\n\n\t\t\tvar planes = _this.clippingPlanes,\n\n\t\t\t\tcenter = sphere.center,\n\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\ti = 0;\n\n\t\t\tdo {\n\n\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t\t} while ( ++ i !== numPlanes );\n\n\t\t\treturn true;\n\n\t\t}\n\t\t*/\n\n\t\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\t\tif ( ! object.visible ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlightsArray.push( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tshadowsArray.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tspritesArray.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isLensFlare ) {\n\n\t\t\t\t\tflaresArray.push( object );\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\tstate.setMaterial( material );\n\n\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t\t_currentGeometryProgram = '';\n\n\t\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader );\n\n\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.fog = fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\t_usedTextureUnits = 0;\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate === false ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\tsize = _Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t\t}\n\n\t\t\t\t// RectAreaLight Texture\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\t\tif ( m_uniforms.ltcMat !== undefined ) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;\n\t\t\t\tif ( m_uniforms.ltcMag !== undefined ) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;\n\n\t\t\t\tWebGLUniforms.upload(\n\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t\t}\n\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif ( material.color ) {\n\n\t\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t\t}\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( material.specularMap ) {\n\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _height * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value = fog.color;\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value = material.specular;\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t}\n\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\n\t\t}\n\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t// GL state setting\n\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\t\tstate.setCullFace( cullFace );\n\t\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n\t\t};\n\n\t\t// Textures\n\n\t\tfunction allocTextureUnit() {\n\n\t\t\tvar textureUnit = _usedTextureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\t_usedTextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tthis.allocTextureUnit = allocTextureUnit;\n\n\t\t// this.setTexture2D = setTexture2D;\n\t\tthis.setTexture2D = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTexture( texture, slot ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTextureCube = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t// TODO: unify these code paths\n\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar framebuffer = null;\n\t\t\tvar isCube = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2 ( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tFogExp2.prototype.clone = function () {\n\n\t\treturn new FogExp2( this.color.getHex(), this.density );\n\n\t};\n\n\tFogExp2.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog ( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tFog.prototype.clone = function () {\n\n\t\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n\t};\n\n\tFog.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene () {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t}\n\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Scene,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlare( texture, size, distance, blending, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.lensFlares = [];\n\n\t\tthis.positionScreen = new Vector3();\n\t\tthis.customUpdateCallback = undefined;\n\n\t\tif ( texture !== undefined ) {\n\n\t\t\tthis.add( texture, size, distance, blending, color );\n\n\t\t}\n\n\t}\n\n\tLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LensFlare,\n\n\t\tisLensFlare: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.positionScreen.copy( source.positionScreen );\n\t\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\t\tif ( size === undefined ) size = - 1;\n\t\t\tif ( distance === undefined ) distance = 0;\n\t\t\tif ( opacity === undefined ) opacity = 1;\n\t\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\t\tif ( blending === undefined ) blending = NormalBlending;\n\n\t\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\t\tthis.lensFlares.push( {\n\t\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\t\tscale: 1, \t\t// scale\n\t\t\t\trotation: 0, \t\t// rotation\n\t\t\t\topacity: opacity,\t// opacity\n\t\t\t\tcolor: color,\t\t// color\n\t\t\t\tblending: blending\t// blending\n\t\t\t} );\n\n\t\t},\n\n\t\t/*\n\t\t * Update lens flares update positions on all flares based on the screen position\n\t\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t\t */\n\n\t\tupdateLensFlares: function () {\n\n\t\t\tvar f, fl = this.lensFlares.length;\n\t\t\tvar flare;\n\t\t\tvar vecX = - this.positionScreen.x * 2;\n\t\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *\tuvOffset: new THREE.Vector2(),\n\t *\tuvScale: new THREE.Vector2()\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar intersectPoint = new Vector3();\n\t\t\tvar worldPosition = new Vector3();\n\t\t\tvar worldScale = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tupdate: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar levels = this.levels;\n\n\t\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Skeleton( bones, boneInverses ) {\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone, i, il;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: ( function () {\n\n\t\t\tvar offsetMatrix = new Matrix4();\n\t\t\tvar identityMatrix = new Matrix4();\n\n\t\t\treturn function update() {\n\n\t\t\t\tvar bones = this.bones;\n\t\t\t\tvar boneInverses = this.boneInverses;\n\t\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t\t// flatten bone matrices to array\n\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tvar bones = this.initBones();\n\t\tvar skeleton = new Skeleton( bones );\n\n\t\tthis.bind( skeleton, this.matrixWorld );\n\n\t\tthis.normalizeSkinWeights();\n\n\t}\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tinitBones: function () {\n\n\t\t\tvar bones = [], bone, gbone;\n\t\t\tvar i, il;\n\n\t\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t\t// create new 'Bone' object\n\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t\tbones.push( bone );\n\n\t\t\t\t\t// apply values\n\n\t\t\t\t\tbone.name = gbone.name;\n\t\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t\t}\n\n\t\t\t\t// second, create bone hierarchy\n\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t\t// let's update the corresponding matrices\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn bones;\n\n\t\t},\n\n\t\tbind: function ( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tvar scale, i;\n\n\t\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\t\tscale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\t\tvar vec = new Vector4();\n\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\t\tscale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\t\treturn new LineSegments( geometry, material );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar precision = raycaster.linePrecision;\n\t\t\t\tvar precisionSq = precision * precision;\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar vStart = new Vector3();\n\t\t\t\tvar vEnd = new Vector3();\n\t\t\t\tvar interSegment = new Vector3();\n\t\t\t\tvar interRay = new Vector3();\n\t\t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true\n\n\t} );\n\n\t/**\n\t * @author mgreter / http://github.com/mgreter\n\t */\n\n\tfunction LineLoop( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineLoop,\n\n\t\tisLineLoop: true,\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar object = this;\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\t\tsphere.radius += threshold;\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\tvar position = new Vector3();\n\n\t\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.generateMipmaps = false;\n\n\t\tvar scope = this;\n\n\t\tfunction update() {\n\n\t\t\trequestAnimationFrame( update );\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tscope.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate();\n\n\t}\n\n\tVideoTexture.prototype = Object.create( Texture.prototype );\n\tVideoTexture.prototype.constructor = VideoTexture;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar i, j, l, o, ol;\n\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\t\tvar vertex;\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tvar position, indices, groups;\n\t\t\tvar group, start, count;\n\t\t\tvar index1, index2;\n\n\t\t\tvertex = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\t\t\t\tindices = geometry.index;\n\t\t\t\tgroups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\t\tstart = group.start;\n\t\t\t\t\tcount = group.count;\n\n\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( key in edges ) {\n\n\t\t\t\t\te = edges[ key ];\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\n\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\t// ParametricGeometry\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t// ParametricBufferGeometry\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar EPS = 0.00001;\n\n\t\tvar normal = new Vector3();\n\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\tvar pu = new Vector3(), pv = new Vector3();\n\n\t\tvar i, j;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tvar u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tp0 = func( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tp1 = func( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp1 = func( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tp1 = func( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp1 = func( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\tvar a = i * sliceCount + j;\n\t\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PolyhedronGeometry\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t// PolyhedronBufferGeometry\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tappplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\tvar i, j;\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction appplyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TetrahedronGeometry\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t// TetrahedronBufferGeometry\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// OctahedronGeometry\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t// OctahedronBufferGeometry\n\n\tfunction OctahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// IcosahedronGeometry\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t \tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t// IcosahedronBufferGeometry\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// DodecahedronGeometry\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t// DodecahedronBufferGeometry\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t\t  1, - 1, - 1,     1, - 1,  1,\n\t\t\t  1,  1, - 1,     1,  1,  1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t,     0, - r,  t,\n\t\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t,  0,    - r,  t,  0,\n\t\t\t r, - t,  0,     r,  t,  0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t,  0, - r,     t,  0, - r,\n\t\t\t- t,  0,  r,     t,  0,  r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */\n\n\t// TubeGeometry\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t// TubeBufferGeometry\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\tvar i, j;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tvar P = path.getPointAt( i / tubularSegments );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin =   Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */\n\n\t// TorusKnotGeometry\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t// TorusKnotBufferGeometry\n\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, j;\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TorusGeometry\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t// TorusBufferGeometry\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\ttriangulate: ( function () {\n\n\t\t\t/**\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t * See original code and more information here:\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t *\n\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t * www.actionsnippet.com\n\t\t\t *\n\t\t\t * ported to javascript by Joshua Koo\n\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t *\n\t\t\t */\n\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\t\tvar p;\n\t\t\t\tvar ax, ay, bx, by;\n\t\t\t\tvar cx, cy, px, py;\n\n\t\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// takes in an contour array and returns\n\n\t\t\treturn function triangulate( contour, indices ) {\n\n\t\t\t\tvar n = contour.length;\n\n\t\t\t\tif ( n < 3 ) return null;\n\n\t\t\t\tvar result = [],\n\t\t\t\t\tverts = [],\n\t\t\t\t\tvertIndices = [];\n\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\t\tvar u, v, w;\n\n\t\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t\t}\n\n\t\t\t\tvar nv = n;\n\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t\t//return null;\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnv --;\n\n\t\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tfunction removeDupEndPts(points) {\n\n\t\t\t\tvar l = points.length;\n\n\t\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\t\tpoints.pop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\n\t\t\t\t\tvar perpSeg2;\n\t\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t\t// return real intersection point\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t\t// they are collinear or degenerate\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t\t// both segments are points\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#1  is a single point\n\t\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#2  is a single point\n\t\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t\t// The order of legs is important\n\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t\t// angle != 180 deg.\n\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\t\tvar hole;\n\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with shape edges\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar indepHoles = [];\n\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with hole edges\n\t\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ] ];\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\t\tshapePt, holePt,\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tindepHoles.push( h );\n\n\t\t\t\t}\n\n\t\t\t\tvar minShapeIndex = 0;\n\t\t\t\tvar counter = indepHoles.length * 2;\n\t\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\t\tcounter --;\n\t\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\t\tconsole.log( 'THREE.ShapeUtils: Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t\t// which can be connected without intersections\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\t\tcutKey = shapePt.x + ':' + shapePt.y + ':' + holeIdx;\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t\t}\n\n\n\t\t\tvar i, il, f, face,\n\t\t\t\tkey, index,\n\t\t\t\tallPointsMap = {};\n\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\t\tvar allpoints = contour.concat();\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t\t}\n\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t\t// prepare all points map\n\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\t\tkey = allpoints[ i ].x + ':' + allpoints[ i ].y;\n\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Duplicate point', key, i );\n\n\t\t\t\t}\n\n\t\t\t\tallPointsMap[ key ] = i;\n\n\t\t\t}\n\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t\t// check all face vertices against all points map\n\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\t\tface = triangles[ i ];\n\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\t\tkey = face[ f ].x + ':' + face[ f ].y;\n\n\t\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn triangles.concat();\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  amount: <int>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *  frames: <Object> // containing arrays of tangents, normals, binormals\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\t// ExtrudeGeometry\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\t// ExtrudeBufferGeometry\n\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\t\tif ( typeof ( shapes ) === \"undefined\" ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// can't really use automatic vertex normals\n\t\t// as then front and back sides get smoothed too\n\t\t// should do separate smoothing just for sides\n\n\t\t//this.computeVertexNormals();\n\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n\t}\n\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n\tExtrudeBufferGeometry.prototype.getArrays = function () {\n\n\t\tvar positionAttribute = this.getAttribute( \"position\" );\n\t\tvar verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];\n\n\t\tvar uvAttribute = this.getAttribute( \"uv\" );\n\t\tvar uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];\n\n\t\tvar IndexAttribute = this.index;\n\t\tvar indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];\n\n\t\treturn {\n\t\t\tposition: verticesArray,\n\t\t\tuv: uvArray,\n\t\t\tindex: indicesArray\n\t\t};\n\n\t};\n\n\tExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tvar sl = shapes.length;\n\t\toptions.arrays = this.getArrays();\n\n\t\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\t\tvar shape = shapes[ s ];\n\t\t\tthis.addShape( shape, options );\n\n\t\t}\n\n\t\tthis.setIndex( options.arrays.index );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( options.arrays.position, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t};\n\n\tExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tvar arrays = options.arrays ? options.arrays : this.getArrays();\n\t\tvar verticesArray = arrays.position;\n\t\tvar indicesArray = arrays.index;\n\t\tvar uvArray = arrays.uv;\n\n\t\tvar placeholder = [];\n\n\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\t\tvar extrudePath = options.extrudePath;\n\t\tvar extrudePts, extrudeByPath = false;\n\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\t\tvar splineTube, binormal, normal, position2;\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\t\tvar scope = this;\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length/3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length/3 -start, options.material !== undefined ? options.material : 0);\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length/3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length/3 -start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1);\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tindicesArray.push( verticesArray.length / 3 );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t\tif ( ! options.arrays ) {\n\n\t\t\tthis.setIndex( indicesArray );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t\t}\n\n\t};\n\n\tExtrudeGeometry.WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */\n\n\t// TextGeometry\n\n\tfunction TextGeometry(  text, parameters ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t// TextBufferGeometry\n\n\tfunction TextBufferGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// SphereGeometry\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t// SphereBufferGeometry\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = thetaStart + thetaLength;\n\n\t\tvar ix, iy;\n\n\t\tvar index = 0;\n\t\tvar grid = [];\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = iy / heightSegments;\n\n\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tvar u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// RingGeometry\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t// RingBufferGeometry\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 20;\n\t\touterRadius = outerRadius || 50;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// some helper variables\n\n\t\tvar segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author astrodud / http://astrodud.isgreat.org/\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// LatheGeometry\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t// LatheBufferGeometry\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar base;\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// ShapeGeometry\n\n\tfunction ShapeGeometry( shapes, curveSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\t// ShapeBufferGeometry\n\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tcurveSegments = curveSegments || 12;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar groupStart = 0;\n\t\tvar groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar i, l, shapeHole;\n\n\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\t\tvar shapeVertices = points.shape;\n\t\t\tvar shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t\t// also check if holes are in the opposite direction\n\n\t\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t\t// prepare source geometry\n\n\t\tvar geometry2;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar sourceVertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\tvar e = edges[ key ];\n\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// CylinderGeometry\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t// CylinderBufferGeometry\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\t\theight = height !== undefined ? height : 100;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\t// ConeGeometry\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t// ConeBufferGeometry\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */\n\n\t// CircleGeometry\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t// CircleBufferGeometry\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, s;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\n\tvar Geometries = Object.freeze({\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  color: <THREE.Color>,\n\t *  opacity: <float>\n\t * }\n\t */\n\n\tfunction ShadowMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.opacity = 1.0;\n\n\t\tthis.lights = true;\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( Material.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearCoat = 0.0;\n\t\tthis.clearCoatRoughness = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearCoat = source.clearCoat;\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  gradientMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tfunction MeshToonMaterial( parameters ) {\n\n\t\tMeshPhongMaterial.call( this );\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.gradientMap = null;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tLineBasicMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Materials = Object.freeze({\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FileLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FileLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t \tresponse = new ArrayBuffer( data.length );\n\n\t\t\t\t\t\t\tvar view = new Uint8Array( response );\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ response ], { type: mimeType } );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = event.target.response;\n\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\t\tonProgress( event );\n\n\t\t\t\t\t}, false );\n\n\t\t\t\t}\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t\t}\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMimeType: function ( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRequestHeader: function ( value ) {\n\n\t\t\tthis.requestHeader = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( CompressedTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tfunction DataTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( DataTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( ImageLoader.prototype, {\n\n\t\tcrossOrigin: 'Anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\t\timage.addEventListener( 'load', function () {\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\t/*\n\t\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tif ( onProgress ) onProgress( event );\n\n\t\t\t}, false );\n\t\t\t*/\n\n\t\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( CubeTextureLoader.prototype, {\n\n\t\tcrossOrigin: 'Anonymous',\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( TextureLoader.prototype, {\n\n\t\tcrossOrigin: 'Anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar texture = new Texture();\n\t\t\ttexture.image = loader.load( url, function () {\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.matrix = new Matrix4();\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdate: function ( light ) {\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow( ) {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true\n\n\t} );\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction RectAreaLight( color, intensity, width, height ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.position.set( 0, 1, 0 );\n\t\tthis.updateMatrix();\n\n\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t\t// TODO (abelnation): distance/decay\n\n\t\t// TODO (abelnation): update method for RectAreaLight to update transform to lookat target\n\n\t\t// TODO (abelnation): shadows\n\n\t}\n\n\t// TODO (abelnation): RectAreaLight update when light shape is changed\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: RectAreaLight,\n\n\t\tisRectAreaLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function ( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function ( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function ( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function ( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function ( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tevaluate: function( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[   i1   ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function() {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tthrow new Error( \"call to abstract method\" );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( Interpolant.prototype, {\n\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = -0;\n\t\tthis._offsetPrev = -0;\n\t\tthis._weightNext = -0;\n\t\tthis._offsetNext = -0;\n\n\t}\n\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\tvar KeyframeTrackPrototype;\n\n\tKeyframeTrackPrototype = {\n\n\t\tTimeBufferType: Float32Array,\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\t\treturn new DiscreteInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new LinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\t\treturn new CubicInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function ( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrackPrototype:', message );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t},\n\n\t\tgetInterpolation: function () {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function () {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function ( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function ( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function ( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) -- to;\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.\n\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function () {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\twriteIndex = 1,\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else keep = true;\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\tfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\t\tif ( times === undefined || times.length === 0 ) {\n\n\t\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t\t}\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t\tthis.validate();\n\t\tthis.optimize();\n\n\t}\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0,\n\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.apply( this, arguments );\n\n\t}\n\n\tKeyframeTrack.prototype = KeyframeTrackPrototype;\n\tKeyframeTrackPrototype.constructor = KeyframeTrack;\n\n\t// Static methods:\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\tparse: function( json ) {\n\n\t\t\tif( json.type === undefined ) {\n\n\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t\t}\n\n\t\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\t\tif ( json.times === undefined ) {\n\n\t\t\t\tvar times = [], values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\t\tjson.times = times;\n\t\t\t\tjson.values = values;\n\n\t\t\t}\n\n\t\t\t// derived classes can define a static parse method\n\t\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\t\treturn trackType.parse( json );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\t\treturn new trackType(\n\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\t\tcase \"scalar\":\n\t\t\t\tcase \"double\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"number\":\n\t\t\t\tcase \"integer\":\n\n\t\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\t\tcase \"vector\":\n\t\t\t\tcase \"vector2\":\n\t\t\t\tcase \"vector3\":\n\t\t\t\tcase \"vector4\":\n\n\t\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\t\tcase \"color\":\n\n\t\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\t\tcase \"quaternion\":\n\n\t\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\t\tcase \"bool\":\n\t\t\t\tcase \"boolean\":\n\n\t\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\t\tcase \"string\":\n\n\t\t\t\t\treturn StringKeyframeTrack;\n\n\t\t\t}\n\n\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t\tthis.optimize();\n\n\t}\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\t\ttoJSON: function ( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\t\ttimes, values\n\t\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t\t},\n\n\t\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function ( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || - 1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( AnimationClip.prototype, {\n\n\t\tresetDuration: function () {\n\n\t\t\tvar tracks = this.tracks, duration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t},\n\n\t\ttrim: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\toptimize: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.textures = {};\n\n\t}\n\n\tObject.assign( MaterialLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t\t// Deprecated\n\n\t\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\t\treturn material;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( BufferGeometryLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader() {\n\n\t\tthis.onLoadStart = function () {};\n\t\tthis.onLoadProgress = function () {};\n\t\tthis.onLoadComplete = function () {};\n\n\t}\n\n\tLoader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\tObject.assign( Loader.prototype, {\n\n\t\tcrossOrigin: undefined,\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar parts = url.split( '/' );\n\n\t\t\tif ( parts.length === 1 ) return './';\n\n\t\t\tparts.pop();\n\n\t\t\treturn parts.join( '/' ) + '/';\n\n\t\t},\n\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tcreateMaterial: ( function () {\n\n\t\t\tvar BlendingMode = {\n\t\t\t\tNoBlending: NoBlending,\n\t\t\t\tNormalBlending: NormalBlending,\n\t\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\t\tCustomBlending: CustomBlending\n\t\t\t};\n\n\t\t\tvar color = new Color();\n\t\t\tvar textureLoader = new TextureLoader();\n\t\t\tvar materialLoader = new MaterialLoader();\n\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\t\treturn uuid;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\t\treturn materialLoader.parse( json );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction JSONLoader( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t}\n\n\tObject.assign( JSONLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tparse: ( function () {\n\n\t\t\tfunction parseModel( json, geometry ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\t\toffset, zLength,\n\n\t\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\t\ttype,\n\t\t\t\t\tisQuad,\n\t\t\t\t\thasMaterial,\n\t\t\t\t\thasFaceVertexUv,\n\t\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\t\tfaces = json.faces,\n\t\t\t\t\tvertices = json.vertices,\n\t\t\t\t\tnormals = json.normals,\n\t\t\t\t\tcolors = json.colors,\n\n\t\t\t\t\tscale = json.scale,\n\n\t\t\t\t\tnUvLayers = 0;\n\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\t\tvar scale = json.scale;\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\treturn function ( json, texturePath ) {\n\n\t\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t\t// Geometry 4.0 spec\n\t\t\t\t\tjson = json.data;\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tjson.scale = 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new Geometry();\n\n\t\t\t\tparseModel( json, geometry );\n\t\t\t\tparseSkin( json, geometry );\n\t\t\t\tparseMorphing( json, geometry );\n\t\t\t\tparseAnimations( json, geometry );\n\n\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\t\treturn { geometry: geometry };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.texturePath = '';\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.texturePath === '' ) {\n\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseGeometries: function ( json ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t\t// Deprecated\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\t\tvar object;\n\n\t\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn geometries[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn array;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn materials[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'Scene':\n\n\t\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LOD':\n\n\t\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Line':\n\n\t\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointCloud':\n\t\t\t\t\tcase 'Points':\n\n\t\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Group':\n\n\t\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tobject = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t\tobject.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\t\tif ( data.shadow ) {\n\n\t\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\t\tvar children = data.children;\n\n\t\t\t\t\tfor ( var  i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\t\tvar levels = data.levels;\n\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint(t), getTangent(t)\n\t * .getPointAt(u), getTangentAt(u)\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\tObject.assign( Curve.prototype, {\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function ( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\tvar i, u, theta;\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tu = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar point = this.v2.clone().sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u ) {\n\n\t\treturn this.getPoint( u );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function ( t ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tCurve.call( this );\n\n\t\tthis.curves = [];\n\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n\t\t\t\t\t: (curve && curve.isLineCurve) ? 1\n\t\t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**************************************************************\n\t\t *\tCreate Geometries Helpers\n\t\t **************************************************************/\n\n\t\t/// Generate geometry from path points (for Line or Points objects)\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\t// Generate geometry from equidistant sampling along the path\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn new Vector2( x, y );\n\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.points = ( points === undefined ) ? [] : points;\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\treturn new Vector2(\n\t\t\tCatmullRom( weight, point0.x, point1.x, point2.x, point3.x ),\n\t\t\tCatmullRom( weight, point0.y, point1.y, point2.y, point3.y )\n\t\t);\n\n\t};\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\treturn new Vector2(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\treturn new Vector2(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t};\n\n\tvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tfromPoints: function ( vectors ) {\n\n\t\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.fromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = PathPrototype;\n\tPathPrototype.constructor = Path;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape() {\n\n\t\tPath.apply( this, arguments );\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn this.extractAllPoints( divisions );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/\n\n\tfunction ShapePath() {\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tObject.assign( ShapePath.prototype, {\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Font( data ) {\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\t\tfunction createPaths( text ) {\n\n\t\t\t\tvar chars = String( text ).split( '' );\n\t\t\t\tvar scale = size / data.resolution;\n\t\t\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\t\t\tvar offsetX = 0, offsetY = 0;\n\n\t\t\t\tvar paths = [];\n\n\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\t\tvar char = chars[ i ];\n\n\t\t\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\t\t\toffsetX = 0;\n\t\t\t\t\t\toffsetY -= line_height;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY );\n\t\t\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn paths;\n\n\t\t\t}\n\n\t\t\tfunction createPath( c, scale, offsetX, offsetY ) {\n\n\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\t\tif ( ! glyph ) return;\n\n\t\t\t\tvar path = new ShapePath();\n\n\t\t\t\tvar pts = [];\n\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\t\tif ( glyph.o ) {\n\n\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tCubicBezier( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\t\tCubicBezier( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( size === undefined ) size = 100;\n\t\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\t\tvar data = this.data;\n\n\t\t\tvar paths = createPaths( text );\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FontLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\tvar context;\n\n\tvar AudioContext = {\n\n\t\tgetContext: function () {\n\n\t\t\tif ( context === undefined ) {\n\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn context;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( AudioLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar context = AudioContext.getContext();\n\n\t\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: ( function () {\n\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\t\tvar eyeRight = new Matrix4();\n\t\t\tvar eyeLeft = new Matrix4();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tinstance = this;\n\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\tnear = camera.near;\n\t\t\t\t\tfar = camera.far;\n\t\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t\t// translate xOffset\n\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t\t// for left eye\n\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t\t// for right eye\n\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CubeCamera( near, far, cubeResolution ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar fov = 90, aspect = 1;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\t\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\t\tthis.update = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\t\tvar renderTarget = this.renderTarget;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTarget.activeCubeFace = i;\n\t\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar scale = new Vector3();\n\n\t\t\tvar orientation = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar listener = this.context.listener;\n\t\t\t\tvar up = this.up;\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.loop = false;\n\t\tthis.startTime = 0;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\t\tsource.start( 0, this.startTime );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tbufferType = Array;\n\t\t\t\tmixFunction = this._select;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tObject.assign( PropertyMixer.prototype, {\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function ( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function ( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function () {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function () {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tObject.assign( Composite.prototype, {\n\n\t\tgetValue: function ( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function ( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tObject.assign( PropertyBinding, {\n\n\t\tComposite: Composite,\n\n\t\tcreate: function ( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param  {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: function ( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( /[^\\w-]/g, '' );\n\n\t\t},\n\n\t\tparseTrackName: function () {\n\n\t\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t\t// be matched to parse the rest of the track name.\n\t\t\tvar directoryRe = /((?:[\\w-]+[\\/:])*)/;\n\n\t\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\t\tvar nodeRe = /([\\w-\\.]+)?/;\n\n\t\t\t// Object on target node, and accessor. Name may contain only word\n\t\t\t// characters. Accessor may contain any character except closing bracket.\n\t\t\tvar objectRe = /(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?/;\n\n\t\t\t// Property and accessor. May contain only word characters. Accessor may\n\t\t\t// contain any non-bracket characters.\n\t\t\tvar propertyRe = /\\.([\\w-]+)(?:\\[(.+)\\])?/;\n\n\t\t\tvar trackRe = new RegExp(''\n\t\t\t\t+ '^'\n\t\t\t\t+ directoryRe.source\n\t\t\t\t+ nodeRe.source\n\t\t\t\t+ objectRe.source\n\t\t\t\t+ propertyRe.source\n\t\t\t\t+ '$'\n\t\t\t);\n\n\t\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\t\treturn function ( trackName ) {\n\n\t\t\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\t\t\tif ( ! matches ) {\n\n\t\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar results = {\n\t\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\t\t\tpropertyName: matches[ 5 ],     // required\n\t\t\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t\t\t};\n\n\t\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\t\t\tif ( lastDot !== undefined && lastDot !== -1 ) {\n\n\t\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t\t\t// include '.' characters).\n\t\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== -1 ) {\n\n\t\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn results;\n\n\t\t\t\t};\n\n\t\t}(),\n\n\t\tfindNode: function ( root, nodeName ) {\n\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tvar searchSkeleton = function ( skeleton ) {\n\n\t\t\t\t\tfor ( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function () {},\n\t\t_setValue_unavailable: function () {},\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t],\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function () {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode(\n\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( PropertyBinding.prototype, {\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t} );\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup( var_args ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() { return scope._objects.length; },\n\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_; }\n\t\t\t},\n\n\t\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t\t};\n\n\t}\n\n\tObject.assign( AnimationObjectGroup.prototype, {\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ],\n\t\t\t\t\tknownObject = undefined;\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\t\tnew PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function ( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = -1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\t\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\t\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n\t}\n\n\tObject.assign( AnimationAction.prototype, {\n\n\t\t// State & Scheduling\n\n\t\tplay: function() {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function() {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function() {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\tthis._loopCount = -1;\t// forget previous loops\n\t\t\tthis._startTime = null;\t// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function() {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function() {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function() {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function() {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function() {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function() {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function() {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function() {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function() {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\n\t\t\tif ( deltaTime === 0 ) return time;\n\n\t\t\tvar duration = this._clip.duration,\n\n\t\t\t\tloop = this.loop,\n\t\t\t\tloopCount = this._loopCount;\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else break handle_stop;\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\tthis.time = time;\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.time = time;\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n\t\t_bindAction: function ( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function ( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function ( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function () {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function ( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function ( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function ( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function ( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tremove_empty_map: {\n\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function () {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function () {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function ( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function () {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function ( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function ( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tUniform.prototype.clone = function () {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\t\tconstructor: InstancedBufferGeometry,\n\n\t\tisInstancedBufferGeometry: true,\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\n\t\t\t} );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\t\tcount: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.count;\n\n\t\t\t}\n\n\t\t},\n\n\t\tarray: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.array;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBufferAttribute.prototype, {\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.onUploadCallback = function () {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\n\t\tisInterleavedBuffer: true,\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\t\tconstructor: InstancedInterleavedBuffer,\n\n\t\tisInstancedInterleavedBuffer: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\t\tBufferAttribute.call( this, array, itemSize );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\t\tconstructor: InstancedBufferAttribute,\n\n\t\tisInstancedBufferAttribute: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Raycaster.prototype, {\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tObject.assign( Clock.prototype, {\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The poles (phi) are at the positive and negative y axis.\n\t * The equator starts at positive z.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Spherical.prototype, {\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function() {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = vec3.length();\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */\n\n\tfunction Cylindrical( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Cylindrical.prototype, {\n\n\t\tset: function ( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\t\tthis.y = vec3.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( renderCallback ) {};\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n\tVertexNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\t\tvar faces = objGeometry.faces;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction SpotLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0,   0,   0,   1,\n\t\t\t0, 0, 0,   1,   0,   1,\n\t\t\t0, 0, 0, - 1,   0,   1,\n\t\t\t0, 0, 0,   0,   1,   1,\n\t\t\t0, 0, 0,   0, - 1,   1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar vector2 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tthis.light.updateMatrixWorld();\n\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction getBoneList( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object && object.isBone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tvar bones = getBoneList( object );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar color1 = new Color( 0, 0, 1 );\n\t\tvar color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.onBeforeRender();\n\n\t}\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.onBeforeRender = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\tvar boneMatrix = new Matrix4();\n\t\tvar matrixWorldInv = new Matrix4();\n\n\t\treturn function onBeforeRender() {\n\n\t\t\tvar bones = this.bones;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\t\tvar bone = bones[ i ];\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\t\tj += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize, color ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction RectAreaLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\t\tthis.line = new Line( geometry, material );\n\t\tthis.add( this.line );\n\n\n\t\tthis.update();\n\n\t}\n\n\tRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\n\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n\tRectAreaLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tRectAreaLightHelper.prototype.update = function () {\n\n\t\t// calculate new dimensions of the helper\n\n\t\tvar hx = this.light.width * 0.5;\n\t\tvar hy = this.light.height * 0.5;\n\n\t\tvar position = this.line.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\t// update vertices\n\n\t\tarray[  0 ] =   hx; array[  1 ] = - hy; array[  2 ] = 0;\n\t\tarray[  3 ] =   hx; array[  4 ] =   hy; array[  5 ] = 0;\n\t\tarray[  6 ] = - hx; array[  7 ] =   hy; array[  8 ] = 0;\n\t\tarray[  9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\t\tarray[ 12 ] =   hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\t\tposition.needsUpdate = true;\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.line.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.line.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction HemisphereLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\t\tvar colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\tvar color1 = new Color();\n\t\tvar color2 = new Color();\n\n\t\treturn function update() {\n\n\t\t\tvar mesh = this.children[ 0 ];\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t\tcolor1.copy( this.light.color );\n\t\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tsize = size || 10;\n\t\tdivisions = divisions || 10;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = size / divisions;\n\t\tvar halfSize = size / 2;\n\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tGridHelper.prototype = Object.create( LineSegments.prototype );\n\tGridHelper.prototype.constructor = GridHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */\n\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\t\tradius = radius || 10;\n\t\tradials = radials || 16;\n\t\tcircles = circles || 8;\n\t\tdivisions = divisions || 64;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar x, z;\n\t\tvar v, i, j, r, color;\n\n\t\t// create the radials\n\n\t\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * radius;\n\t\t\tz = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tr = radius - ( radius / circles * i );\n\n\t\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t}\n\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n\tFaceNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction DirectionalLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size,   size, 0,\n\t\t\t  size,   size, 0,\n\t\t\t  size, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size,   size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar v3 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\tv3.subVectors( v2, v1 );\n\n\t\t\tthis.lightPlane.lookAt( v3 );\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt( v3 );\n\t\t\tthis.targetLine.scale.z = v3.length();\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\tvar colorCone = new Color( 0xff0000 );\n\t\tvar colorUp = new Color( 0x00aaff );\n\t\tvar colorTarget = new Color( 0xffffff );\n\t\tvar colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( \"n1\", \"n2\", colorFrustum );\n\t\taddLine( \"n2\", \"n4\", colorFrustum );\n\t\taddLine( \"n4\", \"n3\", colorFrustum );\n\t\taddLine( \"n3\", \"n1\", colorFrustum );\n\n\t\t// far\n\n\t\taddLine( \"f1\", \"f2\", colorFrustum );\n\t\taddLine( \"f2\", \"f4\", colorFrustum );\n\t\taddLine( \"f4\", \"f3\", colorFrustum );\n\t\taddLine( \"f3\", \"f1\", colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( \"n1\", \"f1\", colorFrustum );\n\t\taddLine( \"n2\", \"f2\", colorFrustum );\n\t\taddLine( \"n3\", \"f3\", colorFrustum );\n\t\taddLine( \"n4\", \"f4\", colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( \"p\", \"n1\", colorCone );\n\t\taddLine( \"p\", \"n2\", colorCone );\n\t\taddLine( \"p\", \"n3\", colorCone );\n\t\taddLine( \"p\", \"n4\", colorCone );\n\n\t\t// up\n\n\t\taddLine( \"u1\", \"u2\", colorUp );\n\t\taddLine( \"u2\", \"u3\", colorUp );\n\t\taddLine( \"u3\", \"u1\", colorUp );\n\n\t\t// target\n\n\t\taddLine( \"c\", \"t\", colorTarget );\n\t\taddLine( \"p\", \"c\", colorCross );\n\n\t\t// cross\n\n\t\taddLine( \"cn1\", \"cn2\", colorCross );\n\t\taddLine( \"cn3\", \"cn4\", colorCross );\n\n\t\taddLine( \"cf1\", \"cf2\", colorCross );\n\t\taddLine( \"cf3\", \"cf4\", colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry, pointMap;\n\n\t\tvar vector = new Vector3();\n\t\tvar camera = new Camera();\n\n\t\tfunction setPoint( point, x, y, z ) {\n\n\t\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\t\tvar points = pointMap[ point ];\n\n\t\t\tif ( points !== undefined ) {\n\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function update() {\n\n\t\t\tgeometry = this.geometry;\n\t\t\tpointMap = this.pointMap;\n\n\t\t\tvar w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix\n\t\t\t// world matrix must be identity\n\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tthis.object = object;\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = ( function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function update( object ) {\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t\t}\n\n\t\t\tif ( this.object !== undefined ) {\n\n\t\t\t\tbox.setFromObject( this.object );\n\n\t\t\t}\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tvar min = box.min;\n\t\t\tvar max = box.max;\n\n\t\t\t/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t};\n\n\t} )();\n\n\tBoxHelper.prototype.setFromObject = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3Helper( box, hex ) {\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.box = box;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t\tthis.onBeforeRender();\n\n\t}\n\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\n\tBox3Helper.prototype.constructor = Box3Helper;\n\n\tBox3Helper.prototype.onBeforeRender = function () {\n\n\t\tvar box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction PlaneHelper( plane, size, hex ) {\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = ( size === undefined ) ? 1 : size;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\t//\n\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tvar geometry2 = new BufferGeometry();\n\t\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n\t\t//\n\n\t\tthis.onBeforeRender();\n\n\t}\n\n\tPlaneHelper.prototype = Object.create( Line.prototype );\n\tPlaneHelper.prototype.constructor = PlaneHelper;\n\n\tPlaneHelper.prototype.onBeforeRender = function () {\n\n\t\tvar scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.updateMatrixWorld();\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar lineGeometry;\n\tvar coneGeometry;\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tif ( lineGeometry === undefined ) {\n\n\t\t\tlineGeometry = new BufferGeometry();\n\t\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = ( function () {\n\n\t\tvar axis = new Vector3();\n\t\tvar radians;\n\n\t\treturn function setDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tradians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.copy( color );\n\t\tthis.cone.material.color.copy( color );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxisHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = [\n\t\t\t0, 0, 0,  size, 0, 0,\n\t\t\t0, 0, 0,  0, size, 0,\n\t\t\t0, 0, 0,  0, 0, size\n\t\t];\n\n\t\tvar colors = [\n\t\t\t1, 0, 0,  1, 0.6, 0,\n\t\t\t0, 1, 0,  0.6, 1, 0,\n\t\t\t0, 0, 1,  0, 0.6, 1\n\t\t];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tAxisHelper.prototype = Object.create( LineSegments.prototype );\n\tAxisHelper.prototype.constructor = AxisHelper;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly();\n\tvar py = new CubicPoly();\n\tvar pz = new CubicPoly();\n\n\tfunction CatmullRomCurve3( points ) {\n\n\t\tCurve.call( this );\n\n\t\tif ( points.length < 2 ) console.warn( 'THREE.CatmullRomCurve3: Points array needs at least two entries.' );\n\n\t\tthis.points = points || [];\n\t\tthis.closed = false;\n\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n\tCatmullRomCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\n\t\tvar point = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tp1 = points[ intPoint % l ];\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.type === 'catmullrom' ) {\n\n\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t\t}\n\n\t\treturn new Vector3( px.calc( weight ), py.calc( weight ), pz.calc( weight ) );\n\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n\tCubicBezierCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\treturn new Vector3(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\treturn new Vector3(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve3.prototype = Object.create( Curve.prototype );\n\tLineCurve3.prototype.constructor = LineCurve3;\n\n\tLineCurve3.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar vector = new Vector3();\n\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\tvector.multiplyScalar( t );\n\t\tvector.add( this.v1 );\n\n\t\treturn vector;\n\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t},\n\n\t\tdetach: function ( child, parent, scene ) {\n\n\t\t\tchild.applyMatrix( parent.matrixWorld );\n\t\t\tparent.remove( child );\n\t\t\tscene.add( child );\n\n\t\t},\n\n\t\tattach: function ( child, scene, parent ) {\n\n\t\t\tchild.applyMatrix( new Matrix4().getInverse( parent.matrixWorld ) );\n\n\t\t\tscene.remove( child );\n\t\t\tparent.add( child );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n\t}\n\n\tvar LineStrip = 0;\n\n\tvar LinePieces = 1;\n\n\tfunction MeshFaceMaterial( materials ) {\n\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\treturn materials;\n\n\t}\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tif ( materials === undefined ) materials = [];\n\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\t\tmaterials.clone = function () {\n\n\t\t\treturn materials.slice();\n\n\t\t};\n\t\treturn materials;\n\n\t}\n\n\tfunction PointCloud( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction Particle( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\treturn new Sprite( material );\n\n\t}\n\n\tfunction ParticleSystem( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction PointCloudMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleBasicMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleSystemMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction Vertex( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\n\t}\n\n\t//\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t}\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\treturn new Int8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\treturn new Uint8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\treturn new Int16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\treturn new Uint16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\treturn new Int32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\treturn new Uint32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\treturn new Float64BufferAttribute( array, itemSize );\n\n\t}\n\n\t//\n\n\tCurve.create = function ( construct, getPoint ) {\n\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\n\t\treturn construct;\n\n\t};\n\n\t//\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction SplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction Spline( points ) {\n\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\tObject.assign( Spline.prototype, {\n\n\t\tinitFromArray: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t\t},\n\t\tgetControlPointsArray: function ( optionalTarget ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t\t},\n\t\treparametrizeByArcLength: function ( samplingCoef ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\tfunction BoundingBoxHelper( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\treturn new BoxHelper( object, color );\n\n\t}\n\n\tfunction EdgesHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n\t};\n\n\tfunction WireframeHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\t//\n\n\tfunction XHRLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\treturn new FileLoader( manager );\n\n\t}\n\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\treturn new DataTextureLoader( manager );\n\n\t}\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tLine3.prototype.center = function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t};\n\n\t_Math.random16 = function () {\n\n\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t};\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.'  );\n\n\t\t},\n\t\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\textractPosition: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\n\t\t},\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tgetPosition: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function getPosition() {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t\t};\n\n\t\t}(),\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\n\t\t},\n\t\tmultiplyToArray: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.'  );\n\n\t\t},\n\t\trotateAxis: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\ttranslate: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t\t},\n\t\trotateX: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t\t},\n\t\trotateY: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t\t},\n\t\trotateZ: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t\t},\n\t\trotateByAxis: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t\t},\n\t\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t\t},\n\t\tmakeFrustum: function( left, right, bottom, top, near, far ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t\t}\n\n\t} );\n\n\tPlane.prototype.isIntersectionLine = function ( line ) {\n\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\n\t};\n\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t};\n\n\tObject.assign( Ray.prototype, {\n\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\n\t\textrude: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tsetEulerFromRotationMatrix: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t\t},\n\t\tapplyProjection: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\treturn this.applyMatrix4( m );\n\n\t\t},\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tGeometry.prototype.computeTangents = function () {\n\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t};\n\n\tObject.assign( Object3D.prototype, {\n\n\t\tgetChildByName: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\n\t\t},\n\t\trenderDepth: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\n\t\teulerOrder: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\n\t\tobjects: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\treturn this.arcLengthDivisions;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\tthis.arcLengthDivisions = value;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\n\t\tlength: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\treturn this.array.length;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\n\t\taddIndex: function ( index ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\t\tif ( indexOffset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\n\t\t},\n\t\tclearDrawCalls: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\n\t\t},\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeOffsets: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\n\t\tdynamic: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\n\t\twrapAround: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\n\t\t\t}\n\t\t},\n\n\t\tshading: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\t\tmetal: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\n\t\tderivatives: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\n\t\tgetCurrentRenderTarget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\treturn this.getRenderTarget();\n\n\t\t},\n\n\t\tgetMaxAnisotropy: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t\t},\n\n\t\tgetPrecision: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\t\treturn this.capabilities.precision;\n\n\t\t},\n\n\t\tsupportsFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\treturn this.capabilities.vertexTextures;\n\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\n\t\t},\n\t\tinitMaterial: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t\t},\n\t\taddPrePlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t\t},\n\t\taddPostPlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t\t},\n\t\tupdateShadowMap: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.enabled;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.cullFace;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\t\tthis.shadowMap.cullFace = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\n\t\tcullFace: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\n\t\t\t},\n\t\t\tset: function ( cullFace ) {\n\n\t\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\t\tthis.renderReverseSided = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\t\twrapS: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tAudio.prototype.load = function ( file ) {\n\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\tvar scope = this;\n\t\tvar audioLoader = new AudioLoader();\n\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\tscope.setBuffer( buffer );\n\n\t\t} );\n\t\treturn this;\n\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\n\t};\n\n\t//\n\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\t\treturn this.update( renderer, scene );\n\n\t};\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tvar ImageUtils = {\n\n\t\tcrossOrigin: undefined,\n\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\t\tvar loader = new TextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\t\tvar loader = new CubeTextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadCompressedTexture: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t},\n\n\t\tloadCompressedTextureCube: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction Projector() {\n\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function () {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t}\n\n\t//\n\n\tfunction CanvasRenderer() {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tthis.clear = function () {};\n\t\tthis.render = function () {};\n\t\tthis.setClearColor = function () {};\n\t\tthis.setSize = function () {};\n\n\t}\n\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.ShaderLib = ShaderLib;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.FogExp2 = FogExp2;\n\texports.Fog = Fog;\n\texports.Scene = Scene;\n\texports.LensFlare = LensFlare;\n\texports.Sprite = Sprite;\n\texports.LOD = LOD;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.Skeleton = Skeleton;\n\texports.Bone = Bone;\n\texports.Mesh = Mesh;\n\texports.LineSegments = LineSegments;\n\texports.LineLoop = LineLoop;\n\texports.Line = Line;\n\texports.Points = Points;\n\texports.Group = Group;\n\texports.VideoTexture = VideoTexture;\n\texports.DataTexture = DataTexture;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CubeTexture = CubeTexture;\n\texports.CanvasTexture = CanvasTexture;\n\texports.DepthTexture = DepthTexture;\n\texports.Texture = Texture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.TextureLoader = TextureLoader;\n\texports.ObjectLoader = ObjectLoader;\n\texports.MaterialLoader = MaterialLoader;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.LoadingManager = LoadingManager;\n\texports.JSONLoader = JSONLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.FontLoader = FontLoader;\n\texports.FileLoader = FileLoader;\n\texports.Loader = Loader;\n\texports.Cache = Cache;\n\texports.AudioLoader = AudioLoader;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.SpotLight = SpotLight;\n\texports.PointLight = PointLight;\n\texports.RectAreaLight = RectAreaLight;\n\texports.HemisphereLight = HemisphereLight;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DirectionalLight = DirectionalLight;\n\texports.AmbientLight = AmbientLight;\n\texports.LightShadow = LightShadow;\n\texports.Light = Light;\n\texports.StereoCamera = StereoCamera;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.CubeCamera = CubeCamera;\n\texports.ArrayCamera = ArrayCamera;\n\texports.Camera = Camera;\n\texports.AudioListener = AudioListener;\n\texports.PositionalAudio = PositionalAudio;\n\texports.AudioContext = AudioContext;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.Audio = Audio;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.PropertyMixer = PropertyMixer;\n\texports.PropertyBinding = PropertyBinding;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.AnimationUtils = AnimationUtils;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationClip = AnimationClip;\n\texports.Uniform = Uniform;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.BufferGeometry = BufferGeometry;\n\texports.GeometryIdCount = GeometryIdCount;\n\texports.Geometry = Geometry;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.Face3 = Face3;\n\texports.Object3D = Object3D;\n\texports.Raycaster = Raycaster;\n\texports.Layers = Layers;\n\texports.EventDispatcher = EventDispatcher;\n\texports.Clock = Clock;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.Interpolant = Interpolant;\n\texports.Triangle = Triangle;\n\texports.Math = _Math;\n\texports.Spherical = Spherical;\n\texports.Cylindrical = Cylindrical;\n\texports.Plane = Plane;\n\texports.Frustum = Frustum;\n\texports.Sphere = Sphere;\n\texports.Ray = Ray;\n\texports.Matrix4 = Matrix4;\n\texports.Matrix3 = Matrix3;\n\texports.Box3 = Box3;\n\texports.Box2 = Box2;\n\texports.Line3 = Line3;\n\texports.Euler = Euler;\n\texports.Vector4 = Vector4;\n\texports.Vector3 = Vector3;\n\texports.Vector2 = Vector2;\n\texports.Quaternion = Quaternion;\n\texports.Color = Color;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.PointLightHelper = PointLightHelper;\n\texports.RectAreaLightHelper = RectAreaLightHelper;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.GridHelper = GridHelper;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.CameraHelper = CameraHelper;\n\texports.BoxHelper = BoxHelper;\n\texports.Box3Helper = Box3Helper;\n\texports.PlaneHelper = PlaneHelper;\n\texports.ArrowHelper = ArrowHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.LineCurve3 = LineCurve3;\n\texports.ArcCurve = ArcCurve;\n\texports.EllipseCurve = EllipseCurve;\n\texports.SplineCurve = SplineCurve;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.LineCurve = LineCurve;\n\texports.Shape = Shape;\n\texports.Path = Path;\n\texports.ShapePath = ShapePath;\n\texports.Font = Font;\n\texports.CurvePath = CurvePath;\n\texports.Curve = Curve;\n\texports.ShapeUtils = ShapeUtils;\n\texports.SceneUtils = SceneUtils;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.PointsMaterial = PointsMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.Material = Material;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.BufferAttribute = BufferAttribute;\n\texports.REVISION = REVISION;\n\texports.MOUSE = MOUSE;\n\texports.CullFaceNone = CullFaceNone;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.FrontSide = FrontSide;\n\texports.BackSide = BackSide;\n\texports.DoubleSide = DoubleSide;\n\texports.FlatShading = FlatShading;\n\texports.SmoothShading = SmoothShading;\n\texports.NoColors = NoColors;\n\texports.FaceColors = FaceColors;\n\texports.VertexColors = VertexColors;\n\texports.NoBlending = NoBlending;\n\texports.NormalBlending = NormalBlending;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.CustomBlending = CustomBlending;\n\texports.AddEquation = AddEquation;\n\texports.SubtractEquation = SubtractEquation;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.MinEquation = MinEquation;\n\texports.MaxEquation = MaxEquation;\n\texports.ZeroFactor = ZeroFactor;\n\texports.OneFactor = OneFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.NeverDepth = NeverDepth;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.EqualDepth = EqualDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterDepth = GreaterDepth;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.MixOperation = MixOperation;\n\texports.AddOperation = AddOperation;\n\texports.NoToneMapping = NoToneMapping;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.UVMapping = UVMapping;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.ByteType = ByteType;\n\texports.ShortType = ShortType;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.IntType = IntType;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.FloatType = FloatType;\n\texports.HalfFloatType = HalfFloatType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.AlphaFormat = AlphaFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBAFormat = RGBAFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.RGBEFormat = RGBEFormat;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LoopPingPong = LoopPingPong;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.LinearEncoding = LinearEncoding;\n\texports.sRGBEncoding = sRGBEncoding;\n\texports.GammaEncoding = GammaEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.CubeGeometry = BoxGeometry;\n\texports.Face4 = Face4;\n\texports.LineStrip = LineStrip;\n\texports.LinePieces = LinePieces;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MultiMaterial = MultiMaterial;\n\texports.PointCloud = PointCloud;\n\texports.Particle = Particle;\n\texports.ParticleSystem = ParticleSystem;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Vertex = Vertex;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.Spline = Spline;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.EdgesHelper = EdgesHelper;\n\texports.WireframeHelper = WireframeHelper;\n\texports.XHRLoader = XHRLoader;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.GeometryUtils = GeometryUtils;\n\texports.ImageUtils = ImageUtils;\n\texports.Projector = Projector;\n\texports.CanvasRenderer = CanvasRenderer;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'SpriteCanvasMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\tthis.program = function () {};\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\nTHREE.SpriteCanvasMaterial.prototype.isSpriteCanvasMaterial = true;\n\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.SpriteCanvasMaterial();\n\n\tmaterial.copy( this );\n\tmaterial.color.copy( this.color );\n\tmaterial.program = this.program;\n\n\treturn material;\n\n};\n\n//\n\nTHREE.CanvasRenderer = function ( parameters ) {\n\n\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _this = this,\n\t\t_renderData, _elements, _lights,\n\t\t_projector = new THREE.Projector(),\n\n\t\t_canvas = parameters.canvas !== undefined\n\t\t\t\t ? parameters.canvas\n\t\t\t\t : document.createElement( 'canvas' ),\n\n\t\t_canvasWidth = _canvas.width,\n\t\t_canvasHeight = _canvas.height,\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\n\t\t_viewportX = 0,\n\t\t_viewportY = 0,\n\t\t_viewportWidth = _canvasWidth,\n\t\t_viewportHeight = _canvasHeight,\n\n\t\t_pixelRatio = 1,\n\n\t\t_context = _canvas.getContext( '2d', {\n\t\t\talpha: parameters.alpha === true\n\t\t} ),\n\n\t\t_clearColor = new THREE.Color( 0x000000 ),\n\t\t_clearAlpha = parameters.alpha === true ? 0 : 1,\n\n\t\t_contextGlobalAlpha = 1,\n\t\t_contextGlobalCompositeOperation = 0,\n\t\t_contextStrokeStyle = null,\n\t\t_contextFillStyle = null,\n\t\t_contextLineWidth = null,\n\t\t_contextLineCap = null,\n\t\t_contextLineJoin = null,\n\t\t_contextLineDash = [],\n\n\t\t_v1, _v2, _v3,\n\n\t\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n\n\t\t_color = new THREE.Color(),\n\n\t\t_diffuseColor = new THREE.Color(),\n\t\t_emissiveColor = new THREE.Color(),\n\n\t\t_lightColor = new THREE.Color(),\n\n\t\t_patterns = {},\n\n\t\t_uvs,\n\t\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\n\t\t_clipBox = new THREE.Box2(),\n\t\t_clearBox = new THREE.Box2(),\n\t\t_elemBox = new THREE.Box2(),\n\n\t\t_ambientLight = new THREE.Color(),\n\t\t_directionalLights = new THREE.Color(),\n\t\t_pointLights = new THREE.Color(),\n\n\t\t_vector3 = new THREE.Vector3(), // Needed for PointLight\n\t\t_centroid = new THREE.Vector3(),\n\t\t_normal = new THREE.Vector3(),\n\t\t_normalViewMatrix = new THREE.Matrix3();\n\n\t/* TODO\n\t_canvas.mozImageSmoothingEnabled = false;\n\t_canvas.webkitImageSmoothingEnabled = false;\n\t_canvas.msImageSmoothingEnabled = false;\n\t_canvas.imageSmoothingEnabled = false;\n\t*/\n\n\t// dash+gap fallbacks for Firefox and everything else\n\n\tif ( _context.setLineDash === undefined ) {\n\n\t\t_context.setLineDash = function () {};\n\n\t}\n\n\tthis.domElement = _canvas;\n\n\tthis.autoClear = true;\n\tthis.sortObjects = true;\n\tthis.sortElements = true;\n\n\tthis.info = {\n\n\t\trender: {\n\n\t\t\tvertices: 0,\n\t\t\tfaces: 0\n\n\t\t}\n\n\t};\n\n\t// WebGLRenderer compatibility\n\n\tthis.supportsVertexTextures = function () {};\n\tthis.setFaceCulling = function () {};\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _context;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _context.getContextAttributes();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value !== undefined ) _pixelRatio = value;\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t_canvasWidth = width * _pixelRatio;\n\t\t_canvasHeight = height * _pixelRatio;\n\n\t\t_canvas.width = _canvasWidth;\n\t\t_canvas.height = _canvasHeight;\n\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_contextGlobalAlpha = 1;\n\t\t_contextGlobalCompositeOperation = 0;\n\t\t_contextStrokeStyle = null;\n\t\t_contextFillStyle = null;\n\t\t_contextLineWidth = null;\n\t\t_contextLineCap = null;\n\t\t_contextLineJoin = null;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewportX = x * _pixelRatio;\n\t\t_viewportY = y * _pixelRatio;\n\n\t\t_viewportWidth = width * _pixelRatio;\n\t\t_viewportHeight = height * _pixelRatio;\n\n\t};\n\n\tthis.setScissor = function () {};\n\tthis.setScissorTest = function () {};\n\n\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t_clearColor.set( color );\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t};\n\n\tthis.setClearColorHex = function ( hex, alpha ) {\n\n\t\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\tthis.setClearColor( hex, alpha );\n\n\t};\n\n\tthis.getClearColor = function () {\n\n\t\treturn _clearColor;\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn _clearAlpha;\n\n\t};\n\n\tthis.getMaxAnisotropy = function () {\n\n\t\treturn 0;\n\n\t};\n\n\tthis.clear = function () {\n\n\t\tif ( _clearBox.isEmpty() === false ) {\n\n\t\t\t_clearBox.intersect( _clipBox );\n\t\t\t_clearBox.expandByScalar( 2 );\n\n\t\t\t_clearBox.min.x =   _clearBox.min.x + _canvasWidthHalf;\n\t\t\t_clearBox.min.y = - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n\t\t\t_clearBox.max.x =   _clearBox.max.x + _canvasWidthHalf;\n\t\t\t_clearBox.max.y = - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\n\t\t\tif ( _clearAlpha < 1 ) {\n\n\t\t\t\t_context.clearRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( _clearAlpha > 0 ) {\n\n\t\t\t\tsetOpacity( 1 );\n\t\t\t\tsetBlending( THREE.NormalBlending );\n\n\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\n\t\t\t\t_context.fillRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\t_clearBox.makeEmpty();\n\n\t\t}\n\n\t};\n\n\t// compatibility\n\n\tthis.clearColor = function () {};\n\tthis.clearDepth = function () {};\n\tthis.clearStencil = function () {};\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera.isCamera === undefined ) {\n\n\t\t\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar background = scene.background;\n\n\t\tif ( background && background.isColor ) {\n\n\t\t\tsetOpacity( 1 );\n\t\t\tsetBlending( THREE.NormalBlending );\n\n\t\t\tsetFillStyle( background.getStyle() );\n\t\t\t_context.fillRect( 0, 0, _canvasWidth, _canvasHeight );\n\n\t\t} else if ( this.autoClear === true ) {\n\n\t\t\tthis.clear();\n\n\t\t}\n\n\t\t_this.info.render.vertices = 0;\n\t\t_this.info.render.faces = 0;\n\n\t\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n\t\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\n\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t_elements = _renderData.elements;\n\t\t_lights = _renderData.lights;\n\n\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n\t\t/* DEBUG\n\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n\t\t*/\n\n\t\tcalculateLights();\n\n\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\n\t\t\tvar element = _elements[ e ];\n\n\t\t\tvar material = element.material;\n\n\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\n\t\t\t_elemBox.makeEmpty();\n\n\t\t\tif ( element instanceof THREE.RenderableSprite ) {\n\n\t\t\t\t_v1 = element;\n\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\n\t\t\t\trenderSprite( _v1, element, material );\n\n\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderLine( _v1, _v2, element, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\tif ( material.overdraw > 0 ) {\n\n\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\n\t\t\t\t}\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t_v3.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* DEBUG\n\t\t\tsetLineWidth( 1 );\n\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n\t\t\t*/\n\n\t\t\t_clearBox.union( _elemBox );\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetLineWidth( 1 );\n\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n\t\t*/\n\n\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\n\n\t};\n\n\t//\n\n\tfunction calculateLights() {\n\n\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t_pointLights.setRGB( 0, 0, 0 );\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\t\t\tvar lightColor = light.color;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t_ambientLight.add( lightColor );\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_directionalLights.add( lightColor );\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_pointLights.add( lightColor );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction calculateLight( position, normal, color ) {\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\n\t\t\t_lightColor.copy( light.color );\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n\t\t\t\tvar amount = normal.dot( lightPosition );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\n\t\t\t\tif ( amount == 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderSprite( v1, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\n\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\n\n\t\tvar dist = Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n\t\t_elemBox.min.set( v1.x - dist, v1.y - dist );\n\t\t_elemBox.max.set( v1.x + dist, v1.y + dist );\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tvar texture = material.map;\n\n\t\t\tif ( texture !== null ) {\n\n\t\t\t\tvar pattern = _patterns[ texture.id ];\n\n\t\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t\t\t\tvar bitmap = texture.image;\n\n\t\t\t\t\tvar ox = bitmap.width * texture.offset.x;\n\t\t\t\t\tvar oy = bitmap.height * texture.offset.y;\n\n\t\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\n\t\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\n\n\t\t\t\t\tvar cx = scaleX / sx;\n\t\t\t\t\tvar cy = scaleY / sy;\n\n\t\t\t\t\t_context.save();\n\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t_context.translate( - scaleX / 2, - scaleY / 2 );\n\t\t\t\t\t_context.scale( cx, cy );\n\t\t\t\t\t_context.translate( - ox, - oy );\n\t\t\t\t\t_context.fillRect( ox, oy, sx, sy );\n\t\t\t\t\t_context.restore();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// no texture\n\n\t\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t\t_context.save();\n\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t_context.scale( scaleX, - scaleY );\n\t\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t\t_context.restore();\n\n\t\t\t}\n\n\t\t} else if ( material.isSpriteCanvasMaterial ) {\n\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t_context.save();\n\t\t\t_context.translate( v1.x, v1.y );\n\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t_context.scale( scaleX, scaleY );\n\n\t\t\tmaterial.program( _context );\n\n\t\t\t_context.restore();\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t_context.save();\n\t\t\t_context.translate( v1.x, v1.y );\n\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t_context.scale( scaleX * material.size, - scaleY * material.size );\n\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t_context.restore();\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetStrokeStyle( 'rgb(255,255,0)' );\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.x - 10, v1.y );\n\t\t_context.lineTo( v1.x + 10, v1.y );\n\t\t_context.moveTo( v1.x, v1.y - 10 );\n\t\t_context.lineTo( v1.x, v1.y + 10 );\n\t\t_context.stroke();\n\t\t*/\n\n\t}\n\n\tfunction renderLine( v1, v2, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n\t\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\n\t\tif ( material.isLineBasicMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\n\t\t\tif ( material.vertexColors !== THREE.VertexColors ) {\n\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\n\t\t\t} else {\n\n\t\t\t\tvar colorStyle1 = element.vertexColors[ 0 ].getStyle();\n\t\t\t\tvar colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\n\t\t\t\tif ( colorStyle1 === colorStyle2 ) {\n\n\t\t\t\t\tsetStrokeStyle( colorStyle1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar grad = _context.createLinearGradient(\n\t\t\t\t\t\t\tv1.positionScreen.x,\n\t\t\t\t\t\t\tv1.positionScreen.y,\n\t\t\t\t\t\t\tv2.positionScreen.x,\n\t\t\t\t\t\t\tv2.positionScreen.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tgrad.addColorStop( 0, colorStyle1 );\n\t\t\t\t\t\tgrad.addColorStop( 1, colorStyle2 );\n\n\t\t\t\t\t} catch ( exception ) {\n\n\t\t\t\t\t\tgrad = colorStyle1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStrokeStyle( grad );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\tsetLineDash( [ material.dashSize, material.gapSize ] );\n\n\t\t\t}\n\n\t\t\t_context.stroke();\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\tsetLineDash( [] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\n\t\t_this.info.render.vertices += 3;\n\t\t_this.info.render.faces ++;\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n\t\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n\t\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\n\t\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\n\t\tif ( ( material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial ) && material.map === null ) {\n\n\t\t\t_diffuseColor.copy( material.color );\n\t\t\t_emissiveColor.copy( material.emissive );\n\n\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t_diffuseColor.multiply( element.color );\n\n\t\t\t}\n\n\t\t\t_color.copy( _ambientLight );\n\n\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\n\t\t\tcalculateLight( _centroid, element.normalModel, _color );\n\n\t\t\t_color.multiply( _diffuseColor ).add( _emissiveColor );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else if ( material.isMeshBasicMaterial || material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial ) {\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar mapping = material.map.mapping;\n\n\t\t\t\tif ( mapping === THREE.UVMapping ) {\n\n\t\t\t\t\t_uvs = element.uvs;\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.envMap !== null ) {\n\n\t\t\t\tif ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_color.copy( material.color );\n\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t\t_color.multiply( element.color );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\n\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else {\n\n\t\t\t_color.setRGB( 1, 1, 1 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( x0, y0 );\n\t\t_context.lineTo( x1, y1 );\n\t\t_context.lineTo( x2, y2 );\n\t\t_context.closePath();\n\n\t}\n\n\tfunction strokePath( color, linewidth, linecap, linejoin ) {\n\n\t\tsetLineWidth( linewidth );\n\t\tsetLineCap( linecap );\n\t\tsetLineJoin( linejoin );\n\t\tsetStrokeStyle( color.getStyle() );\n\n\t\t_context.stroke();\n\n\t\t_elemBox.expandByScalar( linewidth * 2 );\n\n\t}\n\n\tfunction fillPath( color ) {\n\n\t\tsetFillStyle( color.getStyle() );\n\t\t_context.fill();\n\n\t}\n\n\tfunction textureToPattern( texture ) {\n\n\t\tif ( texture.version === 0 ||\n\t\t\ttexture instanceof THREE.CompressedTexture ||\n\t\t\ttexture instanceof THREE.DataTexture ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: texture.version\n\t\t\t};\n\n\t\t}\n\n\t\tvar image = texture.image;\n\n\t\tif ( image.complete === false ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: 0\n\t\t\t};\n\n\t\t}\n\n\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping || texture.wrapS === THREE.MirroredRepeatWrapping;\n\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping || texture.wrapT === THREE.MirroredRepeatWrapping;\n\n\t\tvar mirrorX = texture.wrapS === THREE.MirroredRepeatWrapping;\n\t\tvar mirrorY = texture.wrapT === THREE.MirroredRepeatWrapping;\n\n\t\t//\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = image.width * ( mirrorX ? 2 : 1 );\n\t\tcanvas.height = image.height * ( mirrorY ? 2 : 1 );\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\n\t\tcontext.drawImage( image, 0, 0 );\n\n\t\tif ( mirrorX === true ) {\n\n\t\t\tcontext.setTransform( - 1, 0, 0, - 1, image.width, image.height );\n\t\t\tcontext.drawImage( image, - image.width, 0 );\n\n\t\t}\n\n\t\tif ( mirrorY === true ) {\n\n\t\t\tcontext.setTransform( 1, 0, 0, 1, 0, 0 );\n\t\t\tcontext.drawImage( image, 0, image.height );\n\n\t\t}\n\n\t\tif ( mirrorX === true && mirrorY === true ) {\n\n\t\t\tcontext.setTransform( - 1, 0, 0, 1, image.width, 0 );\n\t\t\tcontext.drawImage( image, - image.width, image.height );\n\n\t\t}\n\n\t\tvar repeat = 'no-repeat';\n\n\t\tif ( repeatX === true && repeatY === true ) {\n\n\t\t\trepeat = 'repeat';\n\n\t\t} else if ( repeatX === true ) {\n\n\t\t\trepeat = 'repeat-x';\n\n\t\t} else if ( repeatY === true ) {\n\n\t\t\trepeat = 'repeat-y';\n\n\t\t}\n\n\t\tvar pattern = _context.createPattern( canvas, repeat );\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\treturn {\n\t\t\tcanvas: pattern,\n\t\t\tversion: texture.version\n\t\t};\n\n\t}\n\n\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\n\t\tvar pattern = _patterns[ texture.id ];\n\n\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\tpattern = textureToPattern( texture );\n\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t}\n\n\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t} else {\n\n\t\t\tsetFillStyle( 'rgba( 0, 0, 0, 1)' );\n\t\t\t_context.fill();\n\t\t\treturn;\n\n\t\t}\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\t\toffsetX = texture.offset.x / texture.repeat.x,\n\t\t\toffsetY = texture.offset.y / texture.repeat.y,\n\t\t\twidth = texture.image.width * texture.repeat.x,\n\t\t\theight = texture.image.height * texture.repeat.y;\n\n\t\tu0 = ( u0 + offsetX ) * width;\n\t\tv0 = ( v0 + offsetY ) * height;\n\n\t\tu1 = ( u1 + offsetX ) * width;\n\t\tv1 = ( v1 + offsetY ) * height;\n\n\t\tu2 = ( u2 + offsetX ) * width;\n\t\tv2 = ( v2 + offsetY ) * height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.fill();\n\t\t_context.restore();\n\n\t}\n\n\t/*\n\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\twidth = image.width - 1,\n\t\theight = image.height - 1;\n\n\t\tu0 *= width; v0 *= height;\n\t\tu1 *= width; v1 *= height;\n\t\tu2 *= width; v2 *= height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.clip();\n\t\t_context.drawImage( image, 0, 0 );\n\t\t_context.restore();\n\n\t}\n\t*/\n\n\t// Hide anti-alias gaps\n\n\tfunction expand( v1, v2, pixels ) {\n\n\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\n\t\t\tdet = x * x + y * y, idet;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = pixels / Math.sqrt( det );\n\n\t\tx *= idet; y *= idet;\n\n\t\tv2.x += x; v2.y += y;\n\t\tv1.x -= x; v1.y -= y;\n\n\t}\n\n\t// Context cached methods.\n\n\tfunction setOpacity( value ) {\n\n\t\tif ( _contextGlobalAlpha !== value ) {\n\n\t\t\t_context.globalAlpha = value;\n\t\t\t_contextGlobalAlpha = value;\n\n\t\t}\n\n\t}\n\n\tfunction setBlending( value ) {\n\n\t\tif ( _contextGlobalCompositeOperation !== value ) {\n\n\t\t\tif ( value === THREE.NormalBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'source-over';\n\n\t\t\t} else if ( value === THREE.AdditiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'lighter';\n\n\t\t\t} else if ( value === THREE.SubtractiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'darker';\n\n\t\t\t} else if ( value === THREE.MultiplyBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'multiply';\n\n\t\t\t}\n\n\t\t\t_contextGlobalCompositeOperation = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineWidth( value ) {\n\n\t\tif ( _contextLineWidth !== value ) {\n\n\t\t\t_context.lineWidth = value;\n\t\t\t_contextLineWidth = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineCap( value ) {\n\n\t\t// \"butt\", \"round\", \"square\"\n\n\t\tif ( _contextLineCap !== value ) {\n\n\t\t\t_context.lineCap = value;\n\t\t\t_contextLineCap = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineJoin( value ) {\n\n\t\t// \"round\", \"bevel\", \"miter\"\n\n\t\tif ( _contextLineJoin !== value ) {\n\n\t\t\t_context.lineJoin = value;\n\t\t\t_contextLineJoin = value;\n\n\t\t}\n\n\t}\n\n\tfunction setStrokeStyle( value ) {\n\n\t\tif ( _contextStrokeStyle !== value ) {\n\n\t\t\t_context.strokeStyle = value;\n\t\t\t_contextStrokeStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setFillStyle( value ) {\n\n\t\tif ( _contextFillStyle !== value ) {\n\n\t\t\t_context.fillStyle = value;\n\t\t\t_contextFillStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineDash( value ) {\n\n\t\tif ( _contextLineDash.length !== value.length ) {\n\n\t\t\t_context.setLineDash( value );\n\t\t\t_contextLineDash = value;\n\n\t\t}\n\n\t}\n\n};\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author julianwa / https://github.com/julianwa\n */\n\nTHREE.RenderableObject = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableFace = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\tthis.v3 = new THREE.RenderableVertex();\n\n\tthis.normalModel = new THREE.Vector3();\n\n\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\tthis.vertexNormalsLength = 0;\n\n\tthis.color = new THREE.Color();\n\tthis.material = null;\n\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableVertex = function () {\n\n\tthis.position = new THREE.Vector3();\n\tthis.positionWorld = new THREE.Vector3();\n\tthis.positionScreen = new THREE.Vector4();\n\n\tthis.visible = true;\n\n};\n\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n\tthis.positionWorld.copy( vertex.positionWorld );\n\tthis.positionScreen.copy( vertex.positionScreen );\n\n};\n\n//\n\nTHREE.RenderableLine = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\n\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\tthis.material = null;\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableSprite = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.z = 0;\n\n\tthis.rotation = 0;\n\tthis.scale = new THREE.Vector2();\n\n\tthis.material = null;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n\t\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t\t_vector3 = new THREE.Vector3(),\n\t\t_vector4 = new THREE.Vector4(),\n\n\t\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t\t_boundingBox = new THREE.Box3(),\n\t\t_points3 = new Array( 3 ),\n\n\t\t_viewMatrix = new THREE.Matrix4(),\n\t\t_viewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_modelMatrix,\n\t\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_normalMatrix = new THREE.Matrix3(),\n\n\t\t_frustum = new THREE.Frustum(),\n\n\t\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t//\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n\t//\n\n\tvar RenderList = function () {\n\n\t\tvar normals = [];\n\t\tvar colors = [];\n\t\tvar uvs = [];\n\n\t\tvar object = null;\n\t\tvar material = null;\n\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\tfunction setObject( value ) {\n\n\t\t\tobject = value;\n\t\t\tmaterial = object.material;\n\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\tnormals.length = 0;\n\t\t\tcolors.length = 0;\n\t\t\tuvs.length = 0;\n\n\t\t}\n\n\t\tfunction projectVertex( vertex ) {\n\n\t\t\tvar position = vertex.position;\n\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\tpositionScreen.x *= invW;\n\t\t\tpositionScreen.y *= invW;\n\t\t\tpositionScreen.z *= invW;\n\n\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n\t\t}\n\n\t\tfunction pushVertex( x, y, z ) {\n\n\t\t\t_vertex = getNextVertexInPool();\n\t\t\t_vertex.position.set( x, y, z );\n\n\t\t\tprojectVertex( _vertex );\n\n\t\t}\n\n\t\tfunction pushNormal( x, y, z ) {\n\n\t\t\tnormals.push( x, y, z );\n\n\t\t}\n\n\t\tfunction pushColor( r, g, b ) {\n\n\t\t\tcolors.push( r, g, b );\n\n\t\t}\n\n\t\tfunction pushUv( x, y ) {\n\n\t\t\tuvs.push( x, y );\n\n\t\t}\n\n\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\n\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t_points3[ 2 ] = v3.positionScreen;\n\n\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\n\t\t}\n\n\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\n\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n\t\t}\n\n\t\tfunction pushLine( a, b ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\n\t\t\t// Clip\n\n\t\t\tv1.positionScreen.copy( v1.position ).applyMatrix4( _modelViewProjectionMatrix );\n\t\t\tv2.positionScreen.copy( v2.position ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\tif ( clipLine( v1.positionScreen, v2.positionScreen ) === true ) {\n\n\t\t\t\t// Perform the perspective divide\n\t\t\t\tv1.positionScreen.multiplyScalar( 1 / v1.positionScreen.w );\n\t\t\t\tv2.positionScreen.multiplyScalar( 1 / v2.positionScreen.w );\n\n\t\t\t\t_line = getNextLineInPool();\n\t\t\t\t_line.id = object.id;\n\t\t\t\t_line.v1.copy( v1 );\n\t\t\t\t_line.v2.copy( v2 );\n\t\t\t\t_line.z = Math.max( v1.positionScreen.z, v2.positionScreen.z );\n\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t_line.material = object.material;\n\n\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t_line.vertexColors[ 0 ].fromArray( colors, a * 3 );\n\t\t\t\t\t_line.vertexColors[ 1 ].fromArray( colors, b * 3 );\n\n\t\t\t\t}\n\n\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushTriangle( a, b, c ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\tvar v3 = _vertexPool[ c ];\n\n\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t_face.id = object.id;\n\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t// use first vertex normal as face normal\n\n\t\t\t\t_face.normalModel.fromArray( normals, a * 3 );\n\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\n\t\t\t\t}\n\n\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t_face.material = object.material;\n\n\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetObject: setObject,\n\t\t\tprojectVertex: projectVertex,\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\tpushVertex: pushVertex,\n\t\t\tpushNormal: pushNormal,\n\t\t\tpushColor: pushColor,\n\t\t\tpushUv: pushUv,\n\t\t\tpushLine: pushLine,\n\t\t\tpushTriangle: pushTriangle\n\t\t};\n\n\t};\n\n\tvar renderList = new RenderList();\n\n\tfunction projectObject( object ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t_renderData.lights.push( object );\n\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\n\n\t\t\tif ( object.material.visible === false ) return;\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\n\t\t\taddObject( object );\n\n\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\tif ( object.material.visible === false ) return;\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\n\t\t\taddObject( object );\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction addObject( object ) {\n\n\t\t_object = getNextObjectInPool();\n\t\t_object.id = object.id;\n\t\t_object.object = object;\n\n\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t_vector3.applyMatrix4( _viewProjectionMatrix );\n\t\t_object.z = _vector3.z;\n\t\t_object.renderOrder = object.renderOrder;\n\n\t\t_renderData.objects.push( _object );\n\n\t}\n\n\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n\t\t_faceCount = 0;\n\t\t_lineCount = 0;\n\t\t_spriteCount = 0;\n\n\t\t_renderData.elements.length = 0;\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t_viewMatrix.copy( camera.matrixWorldInverse );\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\n\n\t\t//\n\n\t\t_objectCount = 0;\n\n\t\t_renderData.objects.length = 0;\n\t\t_renderData.lights.length = 0;\n\n\t\tprojectObject( scene );\n\n\t\tif ( sortObjects === true ) {\n\n\t\t\t_renderData.objects.sort( painterSort );\n\n\t\t}\n\n\t\t//\n\n\t\tvar objects = _renderData.objects;\n\n\t\tfor ( var o = 0, ol = objects.length; o < ol; o ++ ) {\n\n\t\t\tvar object = objects[ o ].object;\n\t\t\tvar geometry = object.geometry;\n\n\t\t\trenderList.setObject( object );\n\n\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t_vertexCount = 0;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\n\t\t\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( var g = 0; g < groups.length; g ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ g ];\n\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector3.copy( vertex );\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\n\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\n\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t ? object.material[ face.materialIndex ]\n\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\tvar side = material.side;\n\n\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\n\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\n\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\n\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\n\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t_face.v3.copy( v3 );\n\n\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\n\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t_face.normalModel.negate();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\n\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t\tnormalModel.negate();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\n\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attributes.color !== undefined ) {\n\n\t\t\t\t\t\t\tvar colors = attributes.color.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\n\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\n\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\n\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\n\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\n\t\t\t\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\n\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Points ) {\n\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector4.set( vertex.x, vertex.y, vertex.z, 1 );\n\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t_vector4.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ], 1 );\n\t\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( sortElements === true ) {\n\n\t\t\t_renderData.elements.sort( painterSort );\n\n\t\t}\n\n\t\treturn _renderData;\n\n\t};\n\n\tfunction pushPoint( _vector4, object, camera ) {\n\n\t\tvar invW = 1 / _vector4.w;\n\n\t\t_vector4.z *= invW;\n\n\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t_sprite.id = object.id;\n\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t_sprite.z = _vector4.z;\n\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t_sprite.object = object;\n\n\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n\t\t\t_sprite.material = object.material;\n\n\t\t\t_renderData.elements.push( _sprite );\n\n\t\t}\n\n\t}\n\n\t// Pools\n\n\tfunction getNextObjectInPool() {\n\n\t\tif ( _objectCount === _objectPoolLength ) {\n\n\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t_objectPool.push( object );\n\t\t\t_objectPoolLength ++;\n\t\t\t_objectCount ++;\n\t\t\treturn object;\n\n\t\t}\n\n\t\treturn _objectPool[ _objectCount ++ ];\n\n\t}\n\n\tfunction getNextVertexInPool() {\n\n\t\tif ( _vertexCount === _vertexPoolLength ) {\n\n\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t_vertexPool.push( vertex );\n\t\t\t_vertexPoolLength ++;\n\t\t\t_vertexCount ++;\n\t\t\treturn vertex;\n\n\t\t}\n\n\t\treturn _vertexPool[ _vertexCount ++ ];\n\n\t}\n\n\tfunction getNextFaceInPool() {\n\n\t\tif ( _faceCount === _facePoolLength ) {\n\n\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t_facePool.push( face );\n\t\t\t_facePoolLength ++;\n\t\t\t_faceCount ++;\n\t\t\treturn face;\n\n\t\t}\n\n\t\treturn _facePool[ _faceCount ++ ];\n\n\n\t}\n\n\tfunction getNextLineInPool() {\n\n\t\tif ( _lineCount === _linePoolLength ) {\n\n\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t_linePool.push( line );\n\t\t\t_linePoolLength ++;\n\t\t\t_lineCount ++;\n\t\t\treturn line;\n\n\t\t}\n\n\t\treturn _linePool[ _lineCount ++ ];\n\n\t}\n\n\tfunction getNextSpriteInPool() {\n\n\t\tif ( _spriteCount === _spritePoolLength ) {\n\n\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t_spritePool.push( sprite );\n\t\t\t_spritePoolLength ++;\n\t\t\t_spriteCount ++;\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn _spritePool[ _spriteCount ++ ];\n\n\t}\n\n\t//\n\n\tfunction painterSort( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else if ( a.id !== b.id ) {\n\n\t\t\treturn a.id - b.id;\n\n\t\t} else {\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tfunction clipLine( s1, s2 ) {\n\n\t\tvar alpha1 = 0, alpha2 = 1,\n\n\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t// Z = -1 and Z = +1, respectively.\n\n\t\t\tbc1near = s1.z + s1.w,\n\t\t\tbc2near = s2.z + s2.w,\n\t\t\tbc1far = - s1.z + s1.w,\n\t\t\tbc2far = - s2.z + s2.w;\n\n\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\treturn true;\n\n\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\treturn false;\n\n\t\t} else {\n\n\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\tif ( bc1near < 0 ) {\n\n\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t} else if ( bc2near < 0 ) {\n\n\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t}\n\n\t\t\tif ( bc1far < 0 ) {\n\n\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t} else if ( bc2far < 0 ) {\n\n\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t}\n\n\t\t\tif ( alpha2 < alpha1 ) {\n\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n","// THIS FILE IS GENERATED - DO NOT EDIT!\n/*!mobile-detect v1.3.7 2017-09-06*/\n/*global module:false, define:false*/\n/*jshint latedef:false*/\n/*!@license Copyright 2013, Heinrich Goebl, License: MIT, see https://github.com/hgoebl/mobile-detect.js*/\n(function (define, undefined) {\ndefine(function () {\n    'use strict';\n\n    var impl = {};\n\n    impl.mobileDetectRules = {\n    \"phones\": {\n        \"iPhone\": \"\\\\biPhone\\\\b|\\\\biPod\\\\b\",\n        \"BlackBerry\": \"BlackBerry|\\\\bBB10\\\\b|rim[0-9]+\",\n        \"HTC\": \"HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\\\bEVO\\\\b|T-Mobile G1|Z520m\",\n        \"Nexus\": \"Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 6\",\n        \"Dell\": \"Dell.*Streak|Dell.*Aero|Dell.*Venue|DELL.*Venue Pro|Dell Flash|Dell Smoke|Dell Mini 3iX|XCD28|XCD35|\\\\b001DL\\\\b|\\\\b101DL\\\\b|\\\\bGS01\\\\b\",\n        \"Motorola\": \"Motorola|DROIDX|DROID BIONIC|\\\\bDroid\\\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\\\bMoto E\\\\b\",\n        \"Samsung\": \"\\\\bSamsung\\\\b|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C\",\n        \"LG\": \"\\\\bLG\\\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323)\",\n        \"Sony\": \"SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533\",\n        \"Asus\": \"Asus.*Galaxy|PadFone.*Mobile\",\n        \"NokiaLumia\": \"Lumia [0-9]{3,4}\",\n        \"Micromax\": \"Micromax.*\\\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\\\b\",\n        \"Palm\": \"PalmSource|Palm\",\n        \"Vertu\": \"Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature\",\n        \"Pantech\": \"PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790\",\n        \"Fly\": \"IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250\",\n        \"Wiko\": \"KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM\",\n        \"iMobile\": \"i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)\",\n        \"SimValley\": \"\\\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\\\b\",\n        \"Wolfgang\": \"AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q\",\n        \"Alcatel\": \"Alcatel\",\n        \"Nintendo\": \"Nintendo 3DS\",\n        \"Amoi\": \"Amoi\",\n        \"INQ\": \"INQ\",\n        \"GenericPhone\": \"Tapatalk|PDA;|SAGEM|\\\\bmmp\\\\b|pocket|\\\\bpsp\\\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\\\bwap\\\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser\"\n    },\n    \"tablets\": {\n        \"iPad\": \"iPad|iPad.*Mobile\",\n        \"NexusTablet\": \"Android.*Nexus[\\\\s]+(7|9|10)\",\n        \"SamsungTablet\": \"SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y\",\n        \"Kindle\": \"Kindle|Silk.*Accelerated|Android.*\\\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\\\b|Android.*Silk\\/[0-9.]+ like Chrome\\/[0-9.]+ (?!Mobile)\",\n        \"SurfaceTablet\": \"Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)\",\n        \"HPTablet\": \"HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10\",\n        \"AsusTablet\": \"^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\\\bK00F\\\\b|\\\\bK00C\\\\b|\\\\bK00E\\\\b|\\\\bK00L\\\\b|TX201LA|ME176C|ME102A|\\\\bM80TA\\\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\\\bME70C\\\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\\\bP027\\\\b\",\n        \"BlackBerryTablet\": \"PlayBook|RIM Tablet\",\n        \"HTCtablet\": \"HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410\",\n        \"MotorolaTablet\": \"xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617\",\n        \"NookTablet\": \"Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2\",\n        \"AcerTablet\": \"Android.*; \\\\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\\\b|W3-810|\\\\bA3-A10\\\\b|\\\\bA3-A11\\\\b|\\\\bA3-A20\\\\b|\\\\bA3-A30\",\n        \"ToshibaTablet\": \"Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO\",\n        \"LGTablet\": \"\\\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\\\b\",\n        \"FujitsuTablet\": \"Android.*\\\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\\\b\",\n        \"PrestigioTablet\": \"PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002\",\n        \"LenovoTablet\": \"Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)\",\n        \"DellTablet\": \"Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7\",\n        \"YarvikTablet\": \"Android.*\\\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\\\b\",\n        \"MedionTablet\": \"Android.*\\\\bOYO\\\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB\",\n        \"ArnovaTablet\": \"97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2\",\n        \"IntensoTablet\": \"INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004\",\n        \"IRUTablet\": \"M702pro\",\n        \"MegafonTablet\": \"MegaFon V9|\\\\bZTE V9\\\\b|Android.*\\\\bMT7A\\\\b\",\n        \"EbodaTablet\": \"E-Boda (Supreme|Impresspeed|Izzycomm|Essential)\",\n        \"AllViewTablet\": \"Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)\",\n        \"ArchosTablet\": \"\\\\b(101G9|80G9|A101IT)\\\\b|Qilive 97R|Archos5|\\\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\\\b\",\n        \"AinolTablet\": \"NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark\",\n        \"NokiaLumiaTablet\": \"Lumia 2520\",\n        \"SonyTablet\": \"Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP612|SOT31\",\n        \"PhilipsTablet\": \"\\\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\\\b\",\n        \"CubeTablet\": \"Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT\",\n        \"CobyTablet\": \"MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010\",\n        \"MIDTablet\": \"M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10\",\n        \"MSITablet\": \"MSI \\\\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\\\b\",\n        \"SMiTTablet\": \"Android.*(\\\\bMID\\\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)\",\n        \"RockChipTablet\": \"Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A\",\n        \"FlyTablet\": \"IQ310|Fly Vision\",\n        \"bqTablet\": \"Android.*(bq)?.*(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris [E|M]10)|Maxwell.*Lite|Maxwell.*Plus\",\n        \"HuaweiTablet\": \"MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim\",\n        \"NecTablet\": \"\\\\bN-06D|\\\\bN-08D\",\n        \"PantechTablet\": \"Pantech.*P4100\",\n        \"BronchoTablet\": \"Broncho.*(N701|N708|N802|a710)\",\n        \"VersusTablet\": \"TOUCHPAD.*[78910]|\\\\bTOUCHTAB\\\\b\",\n        \"ZyncTablet\": \"z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900\",\n        \"PositivoTablet\": \"TB07STA|TB10STA|TB07FTA|TB10FTA\",\n        \"NabiTablet\": \"Android.*\\\\bNabi\",\n        \"KoboTablet\": \"Kobo Touch|\\\\bK080\\\\b|\\\\bVox\\\\b Build|\\\\bArc\\\\b Build\",\n        \"DanewTablet\": \"DSlide.*\\\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\\\b\",\n        \"TexetTablet\": \"NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE\",\n        \"PlaystationTablet\": \"Playstation.*(Portable|Vita)\",\n        \"TrekstorTablet\": \"ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab\",\n        \"PyleAudioTablet\": \"\\\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\\\b\",\n        \"AdvanTablet\": \"Android.* \\\\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\\\b \",\n        \"DanyTechTablet\": \"Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1\",\n        \"GalapadTablet\": \"Android.*\\\\bG1\\\\b\",\n        \"MicromaxTablet\": \"Funbook|Micromax.*\\\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\\\b\",\n        \"KarbonnTablet\": \"Android.*\\\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\\\b\",\n        \"AllFineTablet\": \"Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide\",\n        \"PROSCANTablet\": \"\\\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\\\b\",\n        \"YONESTablet\": \"BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026\",\n        \"ChangJiaTablet\": \"TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503\",\n        \"GUTablet\": \"TX-A1301|TX-M9002|Q702|kf026\",\n        \"PointOfViewTablet\": \"TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10\",\n        \"OvermaxTablet\": \"OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)\",\n        \"HCLTablet\": \"HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync\",\n        \"DPSTablet\": \"DPS Dream 9|DPS Dual 7\",\n        \"VistureTablet\": \"V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10\",\n        \"CrestaTablet\": \"CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989\",\n        \"MediatekTablet\": \"\\\\bMT8125|MT8389|MT8135|MT8377\\\\b\",\n        \"ConcordeTablet\": \"Concorde([ ]+)?Tab|ConCorde ReadMan\",\n        \"GoCleverTablet\": \"GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042\",\n        \"ModecomTablet\": \"FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003\",\n        \"VoninoTablet\": \"\\\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\\\bQ8\\\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\\\b\",\n        \"ECSTablet\": \"V07OT2|TM105A|S10OT1|TR10CS1\",\n        \"StorexTablet\": \"eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab\",\n        \"VodafoneTablet\": \"SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497\",\n        \"EssentielBTablet\": \"Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2\",\n        \"RossMoorTablet\": \"RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711\",\n        \"iMobileTablet\": \"i-mobile i-note\",\n        \"TolinoTablet\": \"tolino tab [0-9.]+|tolino shine\",\n        \"AudioSonicTablet\": \"\\\\bC-22Q|T7-QC|T-17B|T-17P\\\\b\",\n        \"AMPETablet\": \"Android.* A78 \",\n        \"SkkTablet\": \"Android.* (SKYPAD|PHOENIX|CYCLOPS)\",\n        \"TecnoTablet\": \"TECNO P9\",\n        \"JXDTablet\": \"Android.* \\\\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\\\b\",\n        \"iJoyTablet\": \"Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)\",\n        \"FX2Tablet\": \"FX2 PAD7|FX2 PAD10\",\n        \"XoroTablet\": \"KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151\",\n        \"ViewsonicTablet\": \"ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a\",\n        \"OdysTablet\": \"LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\\\bXELIO\\\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10\",\n        \"CaptivaTablet\": \"CAPTIVA PAD\",\n        \"IconbitTablet\": \"NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S\",\n        \"TeclastTablet\": \"T98 4G|\\\\bP80\\\\b|\\\\bX90HD\\\\b|X98 Air|X98 Air 3G|\\\\bX89\\\\b|P80 3G|\\\\bX80h\\\\b|P98 Air|\\\\bX89HD\\\\b|P98 3G|\\\\bP90HD\\\\b|P89 3G|X98 3G|\\\\bP70h\\\\b|P79HD 3G|G18d 3G|\\\\bP79HD\\\\b|\\\\bP89s\\\\b|\\\\bA88\\\\b|\\\\bP10HD\\\\b|\\\\bP19HD\\\\b|G18 3G|\\\\bP78HD\\\\b|\\\\bA78\\\\b|\\\\bP75\\\\b|G17s 3G|G17h 3G|\\\\bP85t\\\\b|\\\\bP90\\\\b|\\\\bP11\\\\b|\\\\bP98t\\\\b|\\\\bP98HD\\\\b|\\\\bG18d\\\\b|\\\\bP85s\\\\b|\\\\bP11HD\\\\b|\\\\bP88s\\\\b|\\\\bA80HD\\\\b|\\\\bA80se\\\\b|\\\\bA10h\\\\b|\\\\bP89\\\\b|\\\\bP78s\\\\b|\\\\bG18\\\\b|\\\\bP85\\\\b|\\\\bA70h\\\\b|\\\\bA70\\\\b|\\\\bG17\\\\b|\\\\bP18\\\\b|\\\\bA80s\\\\b|\\\\bA11s\\\\b|\\\\bP88HD\\\\b|\\\\bA80h\\\\b|\\\\bP76s\\\\b|\\\\bP76h\\\\b|\\\\bP98\\\\b|\\\\bA10HD\\\\b|\\\\bP78\\\\b|\\\\bP88\\\\b|\\\\bA11\\\\b|\\\\bA10t\\\\b|\\\\bP76a\\\\b|\\\\bP76t\\\\b|\\\\bP76e\\\\b|\\\\bP85HD\\\\b|\\\\bP85a\\\\b|\\\\bP86\\\\b|\\\\bP75HD\\\\b|\\\\bP76v\\\\b|\\\\bA12\\\\b|\\\\bP75a\\\\b|\\\\bA15\\\\b|\\\\bP76Ti\\\\b|\\\\bP81HD\\\\b|\\\\bA10\\\\b|\\\\bT760VE\\\\b|\\\\bT720HD\\\\b|\\\\bP76\\\\b|\\\\bP73\\\\b|\\\\bP71\\\\b|\\\\bP72\\\\b|\\\\bT720SE\\\\b|\\\\bC520Ti\\\\b|\\\\bT760\\\\b|\\\\bT720VE\\\\b|T720-3GE|T720-WiFi\",\n        \"OndaTablet\": \"\\\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\\\b[\\\\s]+\",\n        \"JaytechTablet\": \"TPC-PA762\",\n        \"BlaupunktTablet\": \"Endeavour 800NG|Endeavour 1010\",\n        \"DigmaTablet\": \"\\\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\\\b\",\n        \"EvolioTablet\": \"ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\\\bEvotab\\\\b|\\\\bNeura\\\\b\",\n        \"LavaTablet\": \"QPAD E704|\\\\bIvoryS\\\\b|E-TAB IVORY|\\\\bE-TAB\\\\b\",\n        \"AocTablet\": \"MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712\",\n        \"MpmanTablet\": \"MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\\\bMPG7\\\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010\",\n        \"CelkonTablet\": \"CT695|CT888|CT[\\\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\\\bCT-1\\\\b\",\n        \"WolderTablet\": \"miTab \\\\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\\\b\",\n        \"MiTablet\": \"\\\\bMI PAD\\\\b|\\\\bHM NOTE 1W\\\\b\",\n        \"NibiruTablet\": \"Nibiru M1|Nibiru Jupiter One\",\n        \"NexoTablet\": \"NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI\",\n        \"LeaderTablet\": \"TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100\",\n        \"UbislateTablet\": \"UbiSlate[\\\\s]?7C\",\n        \"PocketBookTablet\": \"Pocketbook\",\n        \"KocasoTablet\": \"\\\\b(TB-1207)\\\\b\",\n        \"HisenseTablet\": \"\\\\b(F5281|E2371)\\\\b\",\n        \"Hudl\": \"Hudl HT7S3|Hudl 2\",\n        \"TelstraTablet\": \"T-Hub2\",\n        \"GenericTablet\": \"Android.*\\\\b97D\\\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\\\bA7EB\\\\b|CatNova8|A1_07|CT704|CT1002|\\\\bM721\\\\b|rk30sdk|\\\\bEVOTAB\\\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\\\bM6pro\\\\b|CT1020W|arc 10HD|\\\\bTP750\\\\b|\\\\bQTAQZ3\\\\b\"\n    },\n    \"oss\": {\n        \"AndroidOS\": \"Android\",\n        \"BlackBerryOS\": \"blackberry|\\\\bBB10\\\\b|rim tablet os\",\n        \"PalmOS\": \"PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino\",\n        \"SymbianOS\": \"Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\\\bS60\\\\b\",\n        \"WindowsMobileOS\": \"Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Window Mobile|Windows Phone [0-9.]+|WCE;\",\n        \"WindowsPhoneOS\": \"Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;\",\n        \"iOS\": \"\\\\biPhone.*Mobile|\\\\biPod|\\\\biPad\",\n        \"MeeGoOS\": \"MeeGo\",\n        \"MaemoOS\": \"Maemo\",\n        \"JavaOS\": \"J2ME\\/|\\\\bMIDP\\\\b|\\\\bCLDC\\\\b\",\n        \"webOS\": \"webOS|hpwOS\",\n        \"badaOS\": \"\\\\bBada\\\\b\",\n        \"BREWOS\": \"BREW\"\n    },\n    \"uas\": {\n        \"Chrome\": \"\\\\bCrMo\\\\b|CriOS|Android.*Chrome\\/[.0-9]* (Mobile)?\",\n        \"Dolfin\": \"\\\\bDolfin\\\\b\",\n        \"Opera\": \"Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR\\/[0-9.]+|Coast\\/[0-9.]+\",\n        \"Skyfire\": \"Skyfire\",\n        \"Edge\": \"Mobile Safari\\/[.0-9]* Edge\",\n        \"IE\": \"IEMobile|MSIEMobile\",\n        \"Firefox\": \"fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS\",\n        \"Bolt\": \"bolt\",\n        \"TeaShark\": \"teashark\",\n        \"Blazer\": \"Blazer\",\n        \"Safari\": \"Version.*Mobile.*Safari|Safari.*Mobile|MobileSafari\",\n        \"UCBrowser\": \"UC.*Browser|UCWEB\",\n        \"baiduboxapp\": \"baiduboxapp\",\n        \"baidubrowser\": \"baidubrowser\",\n        \"DiigoBrowser\": \"DiigoBrowser\",\n        \"Puffin\": \"Puffin\",\n        \"Mercury\": \"\\\\bMercury\\\\b\",\n        \"ObigoBrowser\": \"Obigo\",\n        \"NetFront\": \"NF-Browser\",\n        \"GenericBrowser\": \"NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger\",\n        \"PaleMoon\": \"Android.*PaleMoon|Mobile.*PaleMoon\"\n    },\n    \"props\": {\n        \"Mobile\": \"Mobile\\/[VER]\",\n        \"Build\": \"Build\\/[VER]\",\n        \"Version\": \"Version\\/[VER]\",\n        \"VendorID\": \"VendorID\\/[VER]\",\n        \"iPad\": \"iPad.*CPU[a-z ]+[VER]\",\n        \"iPhone\": \"iPhone.*CPU[a-z ]+[VER]\",\n        \"iPod\": \"iPod.*CPU[a-z ]+[VER]\",\n        \"Kindle\": \"Kindle\\/[VER]\",\n        \"Chrome\": [\n            \"Chrome\\/[VER]\",\n            \"CriOS\\/[VER]\",\n            \"CrMo\\/[VER]\"\n        ],\n        \"Coast\": [\n            \"Coast\\/[VER]\"\n        ],\n        \"Dolfin\": \"Dolfin\\/[VER]\",\n        \"Firefox\": [\n            \"Firefox\\/[VER]\",\n            \"FxiOS\\/[VER]\"\n        ],\n        \"Fennec\": \"Fennec\\/[VER]\",\n        \"Edge\": \"Edge\\/[VER]\",\n        \"IE\": [\n            \"IEMobile\\/[VER];\",\n            \"IEMobile [VER]\",\n            \"MSIE [VER];\",\n            \"Trident\\/[0-9.]+;.*rv:[VER]\"\n        ],\n        \"NetFront\": \"NetFront\\/[VER]\",\n        \"NokiaBrowser\": \"NokiaBrowser\\/[VER]\",\n        \"Opera\": [\n            \" OPR\\/[VER]\",\n            \"Opera Mini\\/[VER]\",\n            \"Version\\/[VER]\"\n        ],\n        \"Opera Mini\": \"Opera Mini\\/[VER]\",\n        \"Opera Mobi\": \"Version\\/[VER]\",\n        \"UC Browser\": \"UC Browser[VER]\",\n        \"MQQBrowser\": \"MQQBrowser\\/[VER]\",\n        \"MicroMessenger\": \"MicroMessenger\\/[VER]\",\n        \"baiduboxapp\": \"baiduboxapp\\/[VER]\",\n        \"baidubrowser\": \"baidubrowser\\/[VER]\",\n        \"SamsungBrowser\": \"SamsungBrowser\\/[VER]\",\n        \"Iron\": \"Iron\\/[VER]\",\n        \"Safari\": [\n            \"Version\\/[VER]\",\n            \"Safari\\/[VER]\"\n        ],\n        \"Skyfire\": \"Skyfire\\/[VER]\",\n        \"Tizen\": \"Tizen\\/[VER]\",\n        \"Webkit\": \"webkit[ \\/][VER]\",\n        \"PaleMoon\": \"PaleMoon\\/[VER]\",\n        \"Gecko\": \"Gecko\\/[VER]\",\n        \"Trident\": \"Trident\\/[VER]\",\n        \"Presto\": \"Presto\\/[VER]\",\n        \"Goanna\": \"Goanna\\/[VER]\",\n        \"iOS\": \" \\\\bi?OS\\\\b [VER][ ;]{1}\",\n        \"Android\": \"Android [VER]\",\n        \"BlackBerry\": [\n            \"BlackBerry[\\\\w]+\\/[VER]\",\n            \"BlackBerry.*Version\\/[VER]\",\n            \"Version\\/[VER]\"\n        ],\n        \"BREW\": \"BREW [VER]\",\n        \"Java\": \"Java\\/[VER]\",\n        \"Windows Phone OS\": [\n            \"Windows Phone OS [VER]\",\n            \"Windows Phone [VER]\"\n        ],\n        \"Windows Phone\": \"Windows Phone [VER]\",\n        \"Windows CE\": \"Windows CE\\/[VER]\",\n        \"Windows NT\": \"Windows NT [VER]\",\n        \"Symbian\": [\n            \"SymbianOS\\/[VER]\",\n            \"Symbian\\/[VER]\"\n        ],\n        \"webOS\": [\n            \"webOS\\/[VER]\",\n            \"hpwOS\\/[VER];\"\n        ]\n    },\n    \"utils\": {\n        \"Bot\": \"Googlebot|facebookexternalhit|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom\",\n        \"MobileBot\": \"Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker\\/M1A1-R2D2\",\n        \"DesktopMode\": \"WPDesktop\",\n        \"TV\": \"SonyDTV|HbbTV\",\n        \"WebKit\": \"(webkit)[ \\/]([\\\\w.]+)\",\n        \"Console\": \"\\\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|PLAYSTATION|Xbox)\\\\b\",\n        \"Watch\": \"SM-V700\"\n    }\n};\n\n    // following patterns come from http://detectmobilebrowsers.com/\n    impl.detectMobileBrowsers = {\n        fullPattern: /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,\n        shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i,\n        tabletPattern: /android|ipad|playbook|silk/i\n    };\n\n    var hasOwnProp = Object.prototype.hasOwnProperty,\n        isArray;\n\n    impl.FALLBACK_PHONE = 'UnknownPhone';\n    impl.FALLBACK_TABLET = 'UnknownTablet';\n    impl.FALLBACK_MOBILE = 'UnknownMobile';\n\n    isArray = ('isArray' in Array) ?\n        Array.isArray : function (value) { return Object.prototype.toString.call(value) === '[object Array]'; };\n\n    function equalIC(a, b) {\n        return a != null && b != null && a.toLowerCase() === b.toLowerCase();\n    }\n\n    function containsIC(array, value) {\n        var valueLC, i, len = array.length;\n        if (!len || !value) {\n            return false;\n        }\n        valueLC = value.toLowerCase();\n        for (i = 0; i < len; ++i) {\n            if (valueLC === array[i].toLowerCase()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function convertPropsToRegExp(object) {\n        for (var key in object) {\n            if (hasOwnProp.call(object, key)) {\n                object[key] = new RegExp(object[key], 'i');\n            }\n        }\n    }\n\n    (function init() {\n        var key, values, value, i, len, verPos, mobileDetectRules = impl.mobileDetectRules;\n        for (key in mobileDetectRules.props) {\n            if (hasOwnProp.call(mobileDetectRules.props, key)) {\n                values = mobileDetectRules.props[key];\n                if (!isArray(values)) {\n                    values = [values];\n                }\n                len = values.length;\n                for (i = 0; i < len; ++i) {\n                    value = values[i];\n                    verPos = value.indexOf('[VER]');\n                    if (verPos >= 0) {\n                        value = value.substring(0, verPos) + '([\\\\w._\\\\+]+)' + value.substring(verPos + 5);\n                    }\n                    values[i] = new RegExp(value, 'i');\n                }\n                mobileDetectRules.props[key] = values;\n            }\n        }\n        convertPropsToRegExp(mobileDetectRules.oss);\n        convertPropsToRegExp(mobileDetectRules.phones);\n        convertPropsToRegExp(mobileDetectRules.tablets);\n        convertPropsToRegExp(mobileDetectRules.uas);\n        convertPropsToRegExp(mobileDetectRules.utils);\n\n        // copy some patterns to oss0 which are tested first (see issue#15)\n        mobileDetectRules.oss0 = {\n            WindowsPhoneOS: mobileDetectRules.oss.WindowsPhoneOS,\n            WindowsMobileOS: mobileDetectRules.oss.WindowsMobileOS\n        };\n    }());\n\n    /**\n     * Test userAgent string against a set of rules and find the first matched key.\n     * @param {Object} rules (key is String, value is RegExp)\n     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').\n     * @returns {String|null} the matched key if found, otherwise <tt>null</tt>\n     * @private\n     */\n    impl.findMatch = function(rules, userAgent) {\n        for (var key in rules) {\n            if (hasOwnProp.call(rules, key)) {\n                if (rules[key].test(userAgent)) {\n                    return key;\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Test userAgent string against a set of rules and return an array of matched keys.\n     * @param {Object} rules (key is String, value is RegExp)\n     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').\n     * @returns {Array} an array of matched keys, may be empty when there is no match, but not <tt>null</tt>\n     * @private\n     */\n    impl.findMatches = function(rules, userAgent) {\n        var result = [];\n        for (var key in rules) {\n            if (hasOwnProp.call(rules, key)) {\n                if (rules[key].test(userAgent)) {\n                    result.push(key);\n                }\n            }\n        }\n        return result;\n    };\n\n    /**\n     * Check the version of the given property in the User-Agent.\n     *\n     * @param {String} propertyName\n     * @param {String} userAgent\n     * @return {String} version or <tt>null</tt> if version not found\n     * @private\n     */\n    impl.getVersionStr = function (propertyName, userAgent) {\n        var props = impl.mobileDetectRules.props, patterns, i, len, match;\n        if (hasOwnProp.call(props, propertyName)) {\n            patterns = props[propertyName];\n            len = patterns.length;\n            for (i = 0; i < len; ++i) {\n                match = patterns[i].exec(userAgent);\n                if (match !== null) {\n                    return match[1];\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Check the version of the given property in the User-Agent.\n     * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)\n     *\n     * @param {String} propertyName\n     * @param {String} userAgent\n     * @return {Number} version or <tt>NaN</tt> if version not found\n     * @private\n     */\n    impl.getVersion = function (propertyName, userAgent) {\n        var version = impl.getVersionStr(propertyName, userAgent);\n        return version ? impl.prepareVersionNo(version) : NaN;\n    };\n\n    /**\n     * Prepare the version number.\n     *\n     * @param {String} version\n     * @return {Number} the version number as a floating number\n     * @private\n     */\n    impl.prepareVersionNo = function (version) {\n        var numbers;\n\n        numbers = version.split(/[a-z._ \\/\\-]/i);\n        if (numbers.length === 1) {\n            version = numbers[0];\n        }\n        if (numbers.length > 1) {\n            version = numbers[0] + '.';\n            numbers.shift();\n            version += numbers.join('');\n        }\n        return Number(version);\n    };\n\n    impl.isMobileFallback = function (userAgent) {\n        return impl.detectMobileBrowsers.fullPattern.test(userAgent) ||\n            impl.detectMobileBrowsers.shortPattern.test(userAgent.substr(0,4));\n    };\n\n    impl.isTabletFallback = function (userAgent) {\n        return impl.detectMobileBrowsers.tabletPattern.test(userAgent);\n    };\n\n    impl.prepareDetectionCache = function (cache, userAgent, maxPhoneWidth) {\n        if (cache.mobile !== undefined) {\n            return;\n        }\n        var phone, tablet, phoneSized;\n\n        // first check for stronger tablet rules, then phone (see issue#5)\n        tablet = impl.findMatch(impl.mobileDetectRules.tablets, userAgent);\n        if (tablet) {\n            cache.mobile = cache.tablet = tablet;\n            cache.phone = null;\n            return; // unambiguously identified as tablet\n        }\n\n        phone = impl.findMatch(impl.mobileDetectRules.phones, userAgent);\n        if (phone) {\n            cache.mobile = cache.phone = phone;\n            cache.tablet = null;\n            return; // unambiguously identified as phone\n        }\n\n        // our rules haven't found a match -> try more general fallback rules\n        if (impl.isMobileFallback(userAgent)) {\n            phoneSized = MobileDetect.isPhoneSized(maxPhoneWidth);\n            if (phoneSized === undefined) {\n                cache.mobile = impl.FALLBACK_MOBILE;\n                cache.tablet = cache.phone = null;\n            } else if (phoneSized) {\n                cache.mobile = cache.phone = impl.FALLBACK_PHONE;\n                cache.tablet = null;\n            } else {\n                cache.mobile = cache.tablet = impl.FALLBACK_TABLET;\n                cache.phone = null;\n            }\n        } else if (impl.isTabletFallback(userAgent)) {\n            cache.mobile = cache.tablet = impl.FALLBACK_TABLET;\n            cache.phone = null;\n        } else {\n            // not mobile at all!\n            cache.mobile = cache.tablet = cache.phone = null;\n        }\n    };\n\n    // t is a reference to a MobileDetect instance\n    impl.mobileGrade = function (t) {\n        // impl note:\n        // To keep in sync w/ Mobile_Detect.php easily, the following code is tightly aligned to the PHP version.\n        // When changes are made in Mobile_Detect.php, copy this method and replace:\n        //     $this-> / t.\n        //     self::MOBILE_GRADE_(.) / '$1'\n        //     , self::VERSION_TYPE_FLOAT / (nothing)\n        //     isIOS() / os('iOS')\n        //     [reg] / (nothing)   <-- jsdelivr complaining about unescaped unicode character U+00AE\n        var $isMobile = t.mobile() !== null;\n\n        if (\n            // Apple iOS 3.2-5.1 - Tested on the original iPad (4.3 / 5.0), iPad 2 (4.3), iPad 3 (5.1), original iPhone (3.1), iPhone 3 (3.2), 3GS (4.3), 4 (4.3 / 5.0), and 4S (5.1)\n            t.os('iOS') && t.version('iPad')>=4.3 ||\n            t.os('iOS') && t.version('iPhone')>=3.1 ||\n            t.os('iOS') && t.version('iPod')>=3.1 ||\n\n            // Android 2.1-2.3 - Tested on the HTC Incredible (2.2), original Droid (2.2), HTC Aria (2.1), Google Nexus S (2.3). Functional on 1.5 & 1.6 but performance may be sluggish, tested on Google G1 (1.5)\n            // Android 3.1 (Honeycomb)  - Tested on the Samsung Galaxy Tab 10.1 and Motorola XOOM\n            // Android 4.0 (ICS)  - Tested on a Galaxy Nexus. Note: transition performance can be poor on upgraded devices\n            // Android 4.1 (Jelly Bean)  - Tested on a Galaxy Nexus and Galaxy 7\n            ( t.version('Android')>2.1 && t.is('Webkit') ) ||\n\n            // Windows Phone 7-7.5 - Tested on the HTC Surround (7.0) HTC Trophy (7.5), LG-E900 (7.5), Nokia Lumia 800\n            t.version('Windows Phone OS')>=7.0 ||\n\n            // Blackberry 7 - Tested on BlackBerry Torch 9810\n            // Blackberry 6.0 - Tested on the Torch 9800 and Style 9670\n            t.is('BlackBerry') && t.version('BlackBerry')>=6.0 ||\n            // Blackberry Playbook (1.0-2.0) - Tested on PlayBook\n            t.match('Playbook.*Tablet') ||\n\n            // Palm WebOS (1.4-2.0) - Tested on the Palm Pixi (1.4), Pre (1.4), Pre 2 (2.0)\n            ( t.version('webOS')>=1.4 && t.match('Palm|Pre|Pixi') ) ||\n            // Palm WebOS 3.0  - Tested on HP TouchPad\n            t.match('hp.*TouchPad') ||\n\n            // Firefox Mobile (12 Beta) - Tested on Android 2.3 device\n            ( t.is('Firefox') && t.version('Firefox')>=12 ) ||\n\n            // Chrome for Android - Tested on Android 4.0, 4.1 device\n            ( t.is('Chrome') && t.is('AndroidOS') && t.version('Android')>=4.0 ) ||\n\n            // Skyfire 4.1 - Tested on Android 2.3 device\n            ( t.is('Skyfire') && t.version('Skyfire')>=4.1 && t.is('AndroidOS') && t.version('Android')>=2.3 ) ||\n\n            // Opera Mobile 11.5-12: Tested on Android 2.3\n            ( t.is('Opera') && t.version('Opera Mobi')>11 && t.is('AndroidOS') ) ||\n\n            // Meego 1.2 - Tested on Nokia 950 and N9\n            t.is('MeeGoOS') ||\n\n            // Tizen (pre-release) - Tested on early hardware\n            t.is('Tizen') ||\n\n            // Samsung Bada 2.0 - Tested on a Samsung Wave 3, Dolphin browser\n            // @todo: more tests here!\n            t.is('Dolfin') && t.version('Bada')>=2.0 ||\n\n            // UC Browser - Tested on Android 2.3 device\n            ( (t.is('UC Browser') || t.is('Dolfin')) && t.version('Android')>=2.3 ) ||\n\n            // Kindle 3 and Fire  - Tested on the built-in WebKit browser for each\n            ( t.match('Kindle Fire') ||\n                t.is('Kindle') && t.version('Kindle')>=3.0 ) ||\n\n            // Nook Color 1.4.1 - Tested on original Nook Color, not Nook Tablet\n            t.is('AndroidOS') && t.is('NookTablet') ||\n\n            // Chrome Desktop 11-21 - Tested on OS X 10.7 and Windows 7\n            t.version('Chrome')>=11 && !$isMobile ||\n\n            // Safari Desktop 4-5 - Tested on OS X 10.7 and Windows 7\n            t.version('Safari')>=5.0 && !$isMobile ||\n\n            // Firefox Desktop 4-13 - Tested on OS X 10.7 and Windows 7\n            t.version('Firefox')>=4.0 && !$isMobile ||\n\n            // Internet Explorer 7-9 - Tested on Windows XP, Vista and 7\n            t.version('MSIE')>=7.0 && !$isMobile ||\n\n            // Opera Desktop 10-12 - Tested on OS X 10.7 and Windows 7\n            // @reference: http://my.opera.com/community/openweb/idopera/\n            t.version('Opera')>=10 && !$isMobile\n\n            ){\n            return 'A';\n        }\n\n        if (\n            t.os('iOS') && t.version('iPad')<4.3 ||\n            t.os('iOS') && t.version('iPhone')<3.1 ||\n            t.os('iOS') && t.version('iPod')<3.1 ||\n\n            // Blackberry 5.0: Tested on the Storm 2 9550, Bold 9770\n            t.is('Blackberry') && t.version('BlackBerry')>=5 && t.version('BlackBerry')<6 ||\n\n            //Opera Mini (5.0-6.5) - Tested on iOS 3.2/4.3 and Android 2.3\n            ( t.version('Opera Mini')>=5.0 && t.version('Opera Mini')<=6.5 &&\n                (t.version('Android')>=2.3 || t.is('iOS')) ) ||\n\n            // Nokia Symbian^3 - Tested on Nokia N8 (Symbian^3), C7 (Symbian^3), also works on N97 (Symbian^1)\n            t.match('NokiaN8|NokiaC7|N97.*Series60|Symbian/3') ||\n\n            // @todo: report this (tested on Nokia N71)\n            t.version('Opera Mobi')>=11 && t.is('SymbianOS')\n            ){\n            return 'B';\n        }\n\n        if (\n        // Blackberry 4.x - Tested on the Curve 8330\n            t.version('BlackBerry')<5.0 ||\n            // Windows Mobile - Tested on the HTC Leo (WinMo 5.2)\n            t.match('MSIEMobile|Windows CE.*Mobile') || t.version('Windows Mobile')<=5.2\n\n            ){\n            return 'C';\n        }\n\n        //All older smartphone platforms and featurephones - Any device that doesn't support media queries\n        //will receive the basic, C grade experience.\n        return 'C';\n    };\n\n    impl.detectOS = function (ua) {\n        return impl.findMatch(impl.mobileDetectRules.oss0, ua) ||\n            impl.findMatch(impl.mobileDetectRules.oss, ua);\n    };\n\n    impl.getDeviceSmallerSide = function () {\n        return window.screen.width < window.screen.height ?\n            window.screen.width :\n            window.screen.height;\n    };\n\n    /**\n     * Constructor for MobileDetect object.\n     * <br>\n     * Such an object will keep a reference to the given user-agent string and cache most of the detect queries.<br>\n     * <div style=\"background-color: #d9edf7; border: 1px solid #bce8f1; color: #3a87ad; padding: 14px; border-radius: 2px; margin-top: 20px\">\n     *     <strong>Find information how to download and install:</strong>\n     *     <a href=\"https://github.com/hgoebl/mobile-detect.js/\">github.com/hgoebl/mobile-detect.js/</a>\n     * </div>\n     *\n     * @example <pre>\n     *     var md = new MobileDetect(window.navigator.userAgent);\n     *     if (md.mobile()) {\n     *         location.href = (md.mobileGrade() === 'A') ? '/mobile/' : '/lynx/';\n     *     }\n     * </pre>\n     *\n     * @param {string} userAgent typically taken from window.navigator.userAgent or http_header['User-Agent']\n     * @param {number} [maxPhoneWidth=600] <strong>only for browsers</strong> specify a value for the maximum\n     *        width of smallest device side (in logical \"CSS\" pixels) until a device detected as mobile will be handled\n     *        as phone.\n     *        This is only used in cases where the device cannot be classified as phone or tablet.<br>\n     *        See <a href=\"http://developer.android.com/guide/practices/screens_support.html\">Declaring Tablet Layouts\n     *        for Android</a>.<br>\n     *        If you provide a value < 0, then this \"fuzzy\" check is disabled.\n     * @constructor\n     * @global\n     */\n    function MobileDetect(userAgent, maxPhoneWidth) {\n        this.ua = userAgent || '';\n        this._cache = {};\n        //600dp is typical 7\" tablet minimum width\n        this.maxPhoneWidth = maxPhoneWidth || 600;\n    }\n\n    MobileDetect.prototype = {\n        constructor: MobileDetect,\n\n        /**\n         * Returns the detected phone or tablet type or <tt>null</tt> if it is not a mobile device.\n         * <br>\n         * For a list of possible return values see {@link MobileDetect#phone} and {@link MobileDetect#tablet}.<br>\n         * <br>\n         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against\n         * the patterns of <a href=\"http://detectmobilebrowsers.com/\">detectmobilebrowsers.com</a>. If this test\n         * is positive, a value of <code>UnknownPhone</code>, <code>UnknownTablet</code> or\n         * <code>UnknownMobile</code> is returned.<br>\n         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>\n         * <br>\n         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>\n         * and <code>UnknownMobile</code>, so you will get <code>UnknownMobile</code> here.<br>\n         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:\n         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.\n         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.\n         * <br>\n         * In most cases you will use the return value just as a boolean.\n         *\n         * @returns {String} the key for the phone family or tablet family, e.g. \"Nexus\".\n         * @function MobileDetect#mobile\n         */\n        mobile: function () {\n            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);\n            return this._cache.mobile;\n        },\n\n        /**\n         * Returns the detected phone type/family string or <tt>null</tt>.\n         * <br>\n         * The returned tablet (family or producer) is one of following keys:<br>\n         * <br><tt>iPhone, BlackBerry, HTC, Nexus, Dell, Motorola, Samsung, LG, Sony, Asus,\n         * NokiaLumia, Micromax, Palm, Vertu, Pantech, Fly, Wiko, iMobile, SimValley,\n         * Wolfgang, Alcatel, Nintendo, Amoi, INQ, GenericPhone</tt><br>\n         * <br>\n         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against\n         * the patterns of <a href=\"http://detectmobilebrowsers.com/\">detectmobilebrowsers.com</a>. If this test\n         * is positive, a value of <code>UnknownPhone</code> or <code>UnknownMobile</code> is returned.<br>\n         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>\n         * <br>\n         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>\n         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}\n         * will return <code>UnknownMobile</code>.<br>\n         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:\n         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.\n         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.\n         * <br>\n         * In most cases you will use the return value just as a boolean.\n         *\n         * @returns {String} the key of the phone family or producer, e.g. \"iPhone\"\n         * @function MobileDetect#phone\n         */\n        phone: function () {\n            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);\n            return this._cache.phone;\n        },\n\n        /**\n         * Returns the detected tablet type/family string or <tt>null</tt>.\n         * <br>\n         * The returned tablet (family or producer) is one of following keys:<br>\n         * <br><tt>iPad, NexusTablet, SamsungTablet, Kindle, SurfaceTablet, HPTablet, AsusTablet,\n         * BlackBerryTablet, HTCtablet, MotorolaTablet, NookTablet, AcerTablet,\n         * ToshibaTablet, LGTablet, FujitsuTablet, PrestigioTablet, LenovoTablet,\n         * DellTablet, YarvikTablet, MedionTablet, ArnovaTablet, IntensoTablet, IRUTablet,\n         * MegafonTablet, EbodaTablet, AllViewTablet, ArchosTablet, AinolTablet,\n         * NokiaLumiaTablet, SonyTablet, PhilipsTablet, CubeTablet, CobyTablet, MIDTablet,\n         * MSITablet, SMiTTablet, RockChipTablet, FlyTablet, bqTablet, HuaweiTablet,\n         * NecTablet, PantechTablet, BronchoTablet, VersusTablet, ZyncTablet,\n         * PositivoTablet, NabiTablet, KoboTablet, DanewTablet, TexetTablet,\n         * PlaystationTablet, TrekstorTablet, PyleAudioTablet, AdvanTablet,\n         * DanyTechTablet, GalapadTablet, MicromaxTablet, KarbonnTablet, AllFineTablet,\n         * PROSCANTablet, YONESTablet, ChangJiaTablet, GUTablet, PointOfViewTablet,\n         * OvermaxTablet, HCLTablet, DPSTablet, VistureTablet, CrestaTablet,\n         * MediatekTablet, ConcordeTablet, GoCleverTablet, ModecomTablet, VoninoTablet,\n         * ECSTablet, StorexTablet, VodafoneTablet, EssentielBTablet, RossMoorTablet,\n         * iMobileTablet, TolinoTablet, AudioSonicTablet, AMPETablet, SkkTablet,\n         * TecnoTablet, JXDTablet, iJoyTablet, FX2Tablet, XoroTablet, ViewsonicTablet,\n         * OdysTablet, CaptivaTablet, IconbitTablet, TeclastTablet, OndaTablet,\n         * JaytechTablet, BlaupunktTablet, DigmaTablet, EvolioTablet, LavaTablet,\n         * AocTablet, MpmanTablet, CelkonTablet, WolderTablet, MiTablet, NibiruTablet,\n         * NexoTablet, LeaderTablet, UbislateTablet, PocketBookTablet, KocasoTablet,\n         * HisenseTablet, Hudl, TelstraTablet, GenericTablet</tt><br>\n         * <br>\n         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against\n         * the patterns of <a href=\"http://detectmobilebrowsers.com/\">detectmobilebrowsers.com</a>. If this test\n         * is positive, a value of <code>UnknownTablet</code> or <code>UnknownMobile</code> is returned.<br>\n         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>\n         * <br>\n         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>\n         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}\n         * will return <code>UnknownMobile</code>.<br>\n         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:\n         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.\n         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.\n         * <br>\n         * In most cases you will use the return value just as a boolean.\n         *\n         * @returns {String} the key of the tablet family or producer, e.g. \"SamsungTablet\"\n         * @function MobileDetect#tablet\n         */\n        tablet: function () {\n            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);\n            return this._cache.tablet;\n        },\n\n        /**\n         * Returns the (first) detected user-agent string or <tt>null</tt>.\n         * <br>\n         * The returned user-agent is one of following keys:<br>\n         * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,\n         * Safari, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Puffin, Mercury,\n         * ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>\n         * <br>\n         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare\n         * cases where a mobile device pretends to be more than one particular browser. You can get the\n         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by\n         * providing one of the defined keys as first argument to {@link MobileDetect#is}.\n         *\n         * @returns {String} the key for the detected user-agent or <tt>null</tt>\n         * @function MobileDetect#userAgent\n         */\n        userAgent: function () {\n            if (this._cache.userAgent === undefined) {\n                this._cache.userAgent = impl.findMatch(impl.mobileDetectRules.uas, this.ua);\n            }\n            return this._cache.userAgent;\n        },\n\n        /**\n         * Returns all detected user-agent strings.\n         * <br>\n         * The array is empty or contains one or more of following keys:<br>\n         * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,\n         * Safari, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Puffin, Mercury,\n         * ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>\n         * <br>\n         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare\n         * cases where a mobile device pretends to be more than one particular browser. You can get the\n         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by\n         * providing one of the defined keys as first argument to {@link MobileDetect#is}.\n         *\n         * @returns {Array} the array of detected user-agent keys or <tt>[]</tt>\n         * @function MobileDetect#userAgents\n         */\n        userAgents: function () {\n            if (this._cache.userAgents === undefined) {\n                this._cache.userAgents = impl.findMatches(impl.mobileDetectRules.uas, this.ua);\n            }\n            return this._cache.userAgents;\n        },\n\n        /**\n         * Returns the detected operating system string or <tt>null</tt>.\n         * <br>\n         * The operating system is one of following keys:<br>\n         * <br><tt>AndroidOS, BlackBerryOS, PalmOS, SymbianOS, WindowsMobileOS, WindowsPhoneOS,\n         * iOS, MeeGoOS, MaemoOS, JavaOS, webOS, badaOS, BREWOS</tt><br>\n         *\n         * @returns {String} the key for the detected operating system.\n         * @function MobileDetect#os\n         */\n        os: function () {\n            if (this._cache.os === undefined) {\n                this._cache.os = impl.detectOS(this.ua);\n            }\n            return this._cache.os;\n        },\n\n        /**\n         * Get the version (as Number) of the given property in the User-Agent.\n         * <br>\n         * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)\n         *\n         * @param {String} key a key defining a thing which has a version.<br>\n         *        You can use one of following keys:<br>\n         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,\n         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,\n         * Opera Mobi, UC Browser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,\n         * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident,\n         * Presto, Goanna, iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows\n         * Phone, Windows CE, Windows NT, Symbian, webOS</tt><br>\n         *\n         * @returns {Number} the version as float or <tt>NaN</tt> if User-Agent doesn't contain this version.\n         *          Be careful when comparing this value with '==' operator!\n         * @function MobileDetect#version\n         */\n        version: function (key) {\n            return impl.getVersion(key, this.ua);\n        },\n\n        /**\n         * Get the version (as String) of the given property in the User-Agent.\n         * <br>\n         *\n         * @param {String} key a key defining a thing which has a version.<br>\n         *        You can use one of following keys:<br>\n         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,\n         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,\n         * Opera Mobi, UC Browser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,\n         * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident,\n         * Presto, Goanna, iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows\n         * Phone, Windows CE, Windows NT, Symbian, webOS</tt><br>\n         *\n         * @returns {String} the \"raw\" version as String or <tt>null</tt> if User-Agent doesn't contain this version.\n         *\n         * @function MobileDetect#versionStr\n         */\n        versionStr: function (key) {\n            return impl.getVersionStr(key, this.ua);\n        },\n\n        /**\n         * Global test key against userAgent, os, phone, tablet and some other properties of userAgent string.\n         *\n         * @param {String} key the key (case-insensitive) of a userAgent, an operating system, phone or\n         *        tablet family.<br>\n         *        For a complete list of possible values, see {@link MobileDetect#userAgent},\n         *        {@link MobileDetect#os}, {@link MobileDetect#phone}, {@link MobileDetect#tablet}.<br>\n         *        Additionally you have following keys:<br>\n         * <br><tt>Bot, MobileBot, DesktopMode, TV, WebKit, Console, Watch</tt><br>\n         *\n         * @returns {boolean} <tt>true</tt> when the given key is one of the defined keys of userAgent, os, phone,\n         *                    tablet or one of the listed additional keys, otherwise <tt>false</tt>\n         * @function MobileDetect#is\n         */\n        is: function (key) {\n            return containsIC(this.userAgents(), key) ||\n                   equalIC(key, this.os()) ||\n                   equalIC(key, this.phone()) ||\n                   equalIC(key, this.tablet()) ||\n                   containsIC(impl.findMatches(impl.mobileDetectRules.utils, this.ua), key);\n        },\n\n        /**\n         * Do a quick test against navigator::userAgent.\n         *\n         * @param {String|RegExp} pattern the pattern, either as String or RegExp\n         *                        (a string will be converted to a case-insensitive RegExp).\n         * @returns {boolean} <tt>true</tt> when the pattern matches, otherwise <tt>false</tt>\n         * @function MobileDetect#match\n         */\n        match: function (pattern) {\n            if (!(pattern instanceof RegExp)) {\n                pattern = new RegExp(pattern, 'i');\n            }\n            return pattern.test(this.ua);\n        },\n\n        /**\n         * Checks whether the mobile device can be considered as phone regarding <code>screen.width</code>.\n         * <br>\n         * Obviously this method makes sense in browser environments only (not for Node.js)!\n         * @param {number} [maxPhoneWidth] the maximum logical pixels (aka. CSS-pixels) to be considered as phone.<br>\n         *        The argument is optional and if not present or falsy, the value of the constructor is taken.\n         * @returns {boolean|undefined} <code>undefined</code> if screen size wasn't detectable, else <code>true</code>\n         *          when screen.width is less or equal to maxPhoneWidth, otherwise <code>false</code>.<br>\n         *          Will always return <code>undefined</code> server-side.\n         */\n        isPhoneSized: function (maxPhoneWidth) {\n            return MobileDetect.isPhoneSized(maxPhoneWidth || this.maxPhoneWidth);\n        },\n\n        /**\n         * Returns the mobile grade ('A', 'B', 'C').\n         *\n         * @returns {String} one of the mobile grades ('A', 'B', 'C').\n         * @function MobileDetect#mobileGrade\n         */\n        mobileGrade: function () {\n            if (this._cache.grade === undefined) {\n                this._cache.grade = impl.mobileGrade(this);\n            }\n            return this._cache.grade;\n        }\n    };\n\n    // environment-dependent\n    if (typeof window !== 'undefined' && window.screen) {\n        MobileDetect.isPhoneSized = function (maxPhoneWidth) {\n            return maxPhoneWidth < 0 ? undefined : impl.getDeviceSmallerSide() <= maxPhoneWidth;\n        };\n    } else {\n        MobileDetect.isPhoneSized = function () {};\n    }\n\n    // should not be replaced by a completely new object - just overwrite existing methods\n    MobileDetect._impl = impl;\n    \n    MobileDetect.version = '1.3.7 2017-09-06';\n\n    return MobileDetect;\n}); // end of call of define()\n})((function (undefined) {\n    if (typeof module !== 'undefined' && module.exports) {\n        return function (factory) { module.exports = factory(); };\n    } else if (typeof define === 'function' && define.amd) {\n        return define;\n    } else if (typeof window !== 'undefined') {\n        return function (factory) { window.MobileDetect = factory(); };\n    } else {\n        // please file a bug if you get this error!\n        throw new Error('unknown environment');\n    }\n})());","/*!\n * Vue.js v2.5.2\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Vue = factory());\n}(this, (function () { 'use strict';\n\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\n{\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.functionalOptions = undefined;\n  this.functionalScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode, deep) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  if (deep && vnode.children) {\n    cloned.children = cloneVNodes(vnode.children);\n  }\n  return cloned\n}\n\nfunction cloneVNodes (vnodes, deep) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i], deep);\n  }\n  return res\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (\"development\" !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"development\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"development\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\n{\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"development\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    \"development\" !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"development\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (\"development\" !== 'production' && inject) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (\"development\" !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (\"development\" !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if (inBrowser && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both micro and macro tasks.\n// In < 2.4 we used micro tasks everywhere, but there are some scenarios where\n// micro tasks have too high a priority and fires in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using macro tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use micro task by default, but expose a way to force macro task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) Task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine MicroTask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a Task instead of a MicroTask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\n{\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\n{\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"development\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"development\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                \"timeout (\" + (res.timeout) + \"ms)\"\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (\"development\" !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = (parentVnode.data && parentVnode.data.attrs) || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (\"development\" !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = expOrFn.toString();\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"development\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"development\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"development\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (\"development\" !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (\"development\" !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject).filter(function (key) {\n          /* istanbul ignore next */\n          return Object.getOwnPropertyDescriptor(inject, key).enumerable\n        })\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (\"development\" !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"development\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias,\n  eventKeyName\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (keyCodes) {\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"development\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  // static trees can be rendered once and cached on the contructor options\n  // so every instance shares the same cached trees\n  var renderFns = this.$options.staticRenderFns;\n  var cached = renderFns.cached || (renderFns.cached = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = renderFns[index].call(this._renderProxy, null, this);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"development\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm = Object.create(parent);\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode) {\n        vnode.functionalScopeId = options._scopeId;\n        vnode.functionalContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = contextVm;\n    vnode.functionalOptions = options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"development\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (\"development\" !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // if the parent didn't update, the slot nodes will be the ones from\n      // last render. They need to be cloned to ensure \"freshness\" for this render.\n      for (var key in vm.$slots) {\n        var slot = vm.$slots[key];\n        if (slot._rendered) {\n          vm.$slots[key] = cloneVNodes(slot, true /* deep */);\n        }\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (\"development\" !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (\"development\" !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    {\n      initProxy(vm);\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (\"development\" !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (\"development\" !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && cached$$1 !== current) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n\n      var ref = this;\n      var cache = ref.cache;\n      var keys = ref.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.5.2';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"development\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(\n            config.ignoredElements.length &&\n            config.ignoredElements.some(function (ignore) {\n              return isRegExp(ignore)\n                ? ignore.test(tag)\n                : ignore === tag\n            })\n          ) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (\"development\" !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.functionalScopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setAttribute(vnode.elm, i, '');\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.functionalContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (\"development\" !== 'production' && !vnodeToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (\"development\" !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (\"development\" !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE9 || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    \"development\" !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat([$$v]))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (\"development\" !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (\"development\" !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"development\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (\"development\" !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (\"development\" !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nVue$3.nextTick(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (\"development\" !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (\"development\" !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (\"development\" !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (\"development\" !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (\"development\" !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"development\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$1 = 0; i$1 < postTransforms.length; i$1++) {\n        postTransforms[i$1](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (\"development\" !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"development\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (\"development\" !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (\"development\" !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (!el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (\"development\" !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      \"development\" !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (map['v-model'] && (map['v-bind:type'] || map[':type'])) {\n      var typeBinding = getBindingAttr(el, 'type');\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (\"development\" !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var code = keyCodes[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(code)) + \",\" +\n    \"$event.key)\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (\"development\" !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"development\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\"development\" !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (\"development\" !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"development\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (\"development\" !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nreturn Vue$3;\n\n})));\n","/*!\n *  howler.js v2.0.5\n *  howlerjs.com\n *\n *  (c) 2013-2017, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto iOS enabler.\n      self.mobileAutoEnable = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.value = vol;\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.value = muted ? 0 : self._volume;\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'running' : 'running';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Mobile browsers will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _enableMobileAudio: function() {\n      var self = this || Howler;\n\n      // Only run this on mobile devices if audio isn't already eanbled.\n      var isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(self._navigator && self._navigator.userAgent);\n      var isTouch = !!(('ontouchend' in window) || (self._navigator && self._navigator.maxTouchPoints > 0) || (self._navigator && self._navigator.msMaxTouchPoints > 0));\n      if (self._mobileEnabled || !self.ctx || (!isMobile && !isTouch)) {\n        return;\n      }\n\n      self._mobileEnabled = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function() {\n        // Fix Android can not play in suspend state.\n        Howler._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._mobileEnabled = true;\n          self.mobileAutoEnable = false;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio on iOS.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.mobileAutoEnable) {\n        Howler._enableMobileAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        var num = 0;\n        for (var i=0; i<self._sounds.length; i++) {\n          if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n            num++;\n            id = self._sounds[i]._id;\n          }\n        }\n\n        if (num === 1) {\n          sprite = null;\n        } else {\n          id = null;\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Makr this sounded as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          setTimeout(function() {\n            self._emit('play', sound._id);\n          }, 0);\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n      // Update the parameters of the sound\n      sound._paused = false;\n      sound._ended = false;\n      sound._sprite = sprite;\n      sound._seek = seek;\n      sound._start = self._sprite[sprite][0] / 1000;\n      sound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Mobile browsers will throw an error if this is called without user interaction.\n          try {\n            node.play();\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the new end timer.\n            if (timeout !== Infinity) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            if (!internal) {\n              self._emit('play', sound._id);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState === 4 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i]);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     */\n    _startFadeInterval: function(sound, from, to, len, id) {\n      var self = this;\n      var vol = from;\n      var dir = from > to ? 'out' : 'in';\n      var diff = Math.abs(from - to);\n      var steps = diff / 0.01;\n      var stepLen = (steps > 0) ? len / steps : len;\n\n      // Since browsers clamp timeouts to 4ms, we need to clamp our steps to that too.\n      if (stepLen < 4) {\n        steps = Math.ceil(steps / (4 / stepLen));\n        stepLen = 4;\n      }\n\n      sound._interval = setInterval(function() {\n        // Update the volume amount, but only if the volume should change.\n        if (steps > 0) {\n          vol += (dir === 'in' ? 0.01 : -0.01);\n        }\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          if (typeof id === 'undefined') {\n            self._volume = vol;\n          }\n\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            sound._rateSeek = self.seek(id[i]);\n            sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.value = rate;\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Restart the playback if the sound was playing.\n          if (playing) {\n            self.play(id, true);\n          }\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node) {\n            sound._node.currentTime = seek;\n          }\n\n          self._emit('seek', id);\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n          if (!checkIE) {\n            sounds[i]._node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n          }\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n\n        // Remove the references in the global Howler object.\n        var index = Howler._howls.indexOf(self);\n        if (index >= 0) {\n          Howler._howls.splice(index, 1);\n        }\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function() {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // don't move onto the next task until this one is done\n        self.once(task.event, function() {\n          self._queue.shift();\n          self._loadQueue();\n        });\n\n        task.action();\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        clearTimeout(self._endTimers[id]);\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop;\n      }\n      sound._node.bufferSource.playbackRate.value = sound._rate;\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n\n      if (self._scratchBuffer) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        try { node.bufferSource.buffer = self._scratchBuffer; } catch(e) {}\n      }\n      node.bufferSource = null;\n\n      return self;\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        self._node = new Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Decode the buffer into an audio source.\n    Howler.ctx.decodeAudioData(arraybuffer, function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      }\n    }, function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    });\n  };\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.value = Howler._muted ? 0 : 1;\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *\n *  howler.js v2.0.5\n *  howlerjs.com\n *\n *  (c) 2013-2017, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n      self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n      self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              sound._panner.setPosition(pan, 0, 0);\n            } else {\n              sound._panner.pan.value = pan;\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setPosition(x, y, z);\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setOrientation(x, y, z);\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n      sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.value = sound._stereo;\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id);\n    }\n  };\n})();\n"]}