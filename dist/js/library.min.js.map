{"version":3,"sources":["lazysizes.js","moment.js","es.js","three.js","CanvasRenderer.js","Projector.js"],"names":["window","factory","lazySizes","document","getElementsByClassName","lazySizesConfig","docElem","documentElement","Date","supportPicture","HTMLPictureElement","addEventListener","setTimeout","requestAnimationFrame","requestIdleCallback","regPicture","loadEvents","regClassCache","forEach","Array","prototype","hasClass","ele","cls","RegExp","test","addClass","setAttribute","trim","removeClass","reg","replace","addRemoveLoadEvents","dom","fn","add","action","evt","triggerEvent","elem","name","detail","noBubbles","noCancelable","event","createEvent","initCustomEvent","dispatchEvent","updatePolyfill","el","full","polyfill","picturefill","pf","reevaluate","elements","src","getCSS","style","getComputedStyle","getWidth","parent","width","offsetWidth","minSize","_lazysizesWidth","parentNode","rAF","running","waiting","fns","run","length","shift","apply","rafBatch","this","arguments","push","hidden","_lsFlush","rAFIt","simple","that","args","throttle","lastTime","rICTimeout","now","idleCallback","timeout","isPriority","delay","debounce","func","timestamp","later","last","loader","lazyloadElems","preloadElems","isCompleted","resetPreloadingTimer","loadMode","started","eLvW","elvH","eLtop","eLleft","eLright","eLbottom","defaultExpand","preloadExpand","hFac","regImg","regIframe","supportScroll","navigator","userAgent","currentExpand","isLoading","lowRuns","resetPreloading","e","target","isNestedVisible","elemExpand","outerRect","visible","body","offsetParent","getBoundingClientRect","left","right","top","bottom","checkElements","eLlen","i","rect","autoLoadElem","loadedSomething","elemNegativeExpand","elemExpandVal","beforeExpandVal","expand","clientHeight","clientWidth","expFactor","_lazyRace","innerWidth","innerHeight","unveilElement","preloadAfterLoad","sizesAttr","throttledCheckElements","switchLoadingClass","loadedClass","loadingClass","rafSwitchLoadingClass","rafedSwitchLoadingClass","changeIframeSrc","contentWindow","location","handleSources","source","customMedia","sourceSrcset","srcsetAttr","insertBefore","cloneNode","removeChild","lazyUnveil","isAuto","sizes","isImg","srcset","isPicture","firesLoad","defaultPrevented","autosizesClass","srcAttr","nodeName","clearTimeout","call","getElementsByTagName","lazyClass","complete","errorClass","autoSizer","updateElem","onload","afterScroll","_","preloadClass","MutationObserver","observe","childList","subtree","attributes","setInterval","readyState","checkElems","unveil","autosizesElems","sizeElement","sources","len","dataAttr","getSizeElement","updateElementsSizes","debouncedUpdateElementsSizes","init","prop","lazySizesDefaults","lazysizesConfig","cfg","uP","aC","rC","hC","fire","gW","module","exports","global","define","amd","moment","hooks","hookCallback","isArray","input","Object","toString","isObject","isObjectEmpty","obj","k","isUndefined","isNumber","isDate","map","arr","res","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","some$1","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","key","slice","join","Error","stack","deprecateSimple","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","_dayOfMonthOrdinalParse","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","makeGetSet","keepTime","set$1","get","stringGet","stringSet","prioritized","zeroFill","targetLength","forceSign","absNumber","zerosToFill","pow","max","substr","addFormatToken","token","padded","callback","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","month","UTC","getUTCDate","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf$1","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","y","d","h","M","ms","getFullYear","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","oldLocale","locales","globalLocale","_abbr","require","getSetGlobalLocale","values","data","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","x","updateLocale","listLocales","keys$1","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromRFC2822","dayFormat","timezone","timezoneIndex","timezones"," GMT"," EDT"," EST"," CDT"," CST"," MDT"," MST"," PDT"," PST","military","basicRfcRegex","momentDate","momentDay","indexOf","splice","configFromString","aspNetJsonRegex","createFromInputFallback","defaults","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","ISO_8601","RFC_2822","parsedInput","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","total","asSeconds","some","fun","t","keys","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match6","matchWord","o","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","getSetHour","dayOfMonthOrdinalParse","meridiemParse","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","monthsShortDot","monthsParseExact","weekdaysParseExact","THREE","EventDispatcher","Vector2","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","type","anisotropy","encoding","defineProperty","textureId","uuid","_Math","generateUUID","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","ClampToEdgeWrapping","LinearFilter","LinearMipMapLinearFilter","RGBAFormat","UnsignedByteType","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","LinearEncoding","onUpdate","Vector4","z","WebGLRenderTarget","height","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","Quaternion","_x","_y","_z","Vector3","Matrix4","error","DataTexture","NearestFilter","CubeTexture","images","CubeReflectionMapping","UniformContainer","seq","flatten","nBlocks","blockSize","firstElem","n","r","arrayCacheF32","Float32Array","allocTexUnits","renderer","arrayCacheI32","Int32Array","allocTextureUnit","setValue1f","gl","v","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","g","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","mat3array","setValue4fm","uniformMatrix4fv","mat4array","setValueT1","setTexture2D","emptyTexture","setValueT6","setTextureCube","emptyCubeTexture","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","size","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","setValueT6a","getPureArraySetter","SingleUniform","id","activeInfo","setValue","PureArrayUniform","StructuredUniform","addUniform","container","uniformObject","parseUniform","path","pathLength","RePathPart","matchEnd","idIsIndex","subscript","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","Color","setRGB","Box2","Infinity","LensFlarePlugin","flares","vertices","faces","Uint16Array","vertexBuffer","createBuffer","elementBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","tempTexture","createTexture","occlusionTexture","state","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","shader","vertexShader","fragmentShader","createProgram","vertex","getAttribLocation","uv","uniforms","renderType","occlusionMap","opacity","color","scale","rotation","screenPosition","createShader","FRAGMENT_SHADER","VERTEX_SHADER","getPrecision","shaderSource","compileShader","attachShader","linkProgram","context","render","scene","camera","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","disable","CULL_FACE","buffers","depth","setMask","flare","matrixWorld","applyMatrix4","matrixWorldInverse","projectionMatrix","copy","containsPoint","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","resetGLState","SpritePlugin","sprites","position","uvOffset","uvScale","modelViewMatrix","fogType","fogDensity","fogNear","fogFar","fogColor","alphaTest","canvas","createElementNS","getContext","fillStyle","fillRect","needsUpdate","painterSortStable","renderOrder","spritePosition","spriteRotation","spriteScale","oldFogType","sceneFogType","fog","isFog","near","far","isFogExp2","density","multiplyMatrices","material","onBeforeRender","decompose","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","setTest","depthTest","depthWrite","onAfterRender","Material","materialId","lights","NormalBlending","side","FrontSide","shading","SmoothShading","vertexColors","NoColors","transparent","SrcAlphaFactor","OneMinusSrcAlphaFactor","AddEquation","depthFunc","LessEqualDepth","clippingPlanes","clipIntersection","clipShadows","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","overdraw","ShaderMaterial","parameters","defines","linewidth","wireframe","wireframeLinewidth","clipping","skinning","morphTargets","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","uv2","index0AttributeName","setValues","MeshDepthMaterial","depthPacking","BasicDepthPacking","alphaMap","displacementMap","displacementScale","displacementBias","Box3","Sphere","center","radius","Matrix3","Plane","normal","constant","Frustum","p0","p5","planes","WebGLShadowMap","_renderer","_lights","_objects","capabilities","getDepthMaterial","object","isPointLight","lightPositionWorld","geometry","result","materialVariants","_depthMaterials","customMaterial","customDepthMaterial","_distanceMaterials","customDistanceMaterial","useMorphing","isBufferGeometry","morphAttributes","isGeometry","isSkinnedMesh","useSkinning","variantIndex","_MorphingFlag","_SkinningFlag","localClippingEnabled","keyA","keyB","materialsForVariant","_materialCache","cachedMaterial","scope","renderSingleSided","DoubleSide","renderReverseSided","BackSide","lightPos","renderObject","shadowCamera","layers","isMesh","isLine","isPoints","castShadow","frustumCulled","_frustum","intersectsObject","update","groups","kl","group","groupMaterial","materialIndex","depthMaterial","_lightPositionWorld","renderBufferDirect","children","_gl","_state","_projScreenMatrix","_lightShadows","shadows","_shadowMapSize","_maxShadowMapSize","maxTextureSize","_lookTarget","_NumberOfMaterialVariants","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","RGBADepthPacking","distanceShader","ShaderLib","distanceUniforms","UniformsUtils","distanceMaterial","USE_SHADOWMAP","enabled","autoUpdate","PCFShadowMap","setClear","setScissorTest","faceCount","il","light","shadow","mapSize","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","matrix","setFromMatrixPosition","makeTranslation","lookAt","updateMatrixWorld","multiply","setRenderTarget","clear","face","up","vpDimensions","setFromMatrix","clearColor","getClearColor","clearAlpha","getClearAlpha","setClearColor","WebGLAttributes","attribute","bufferType","usage","dynamic","DYNAMIC_DRAW","buffer","onUploadCallback","Float64Array","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","INT","Int8Array","BYTE","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","count","bufferSubData","subarray","isInterleavedBufferAttribute","remove","deleteBuffer","Euler","order","_order","DefaultOrder","Layers","mask","Object3D","onRotationChange","quaternion","setFromEuler","onQuaternionChange","setFromQuaternion","object3DId","DefaultUp","onChange","defineProperties","enumerable","normalMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","userData","Camera","OrthographicCamera","zoom","view","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","Face3","isVector3","vertexNormals","isColor","GeometryIdCount","Geometry","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","boundingSphere","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","TypeError","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","indices","normals","uvs","uvs2","arrayMax","BufferGeometry","drawRange","start","BoxGeometry","widthSegments","heightSegments","depthSegments","fromBufferGeometry","BoxBufferGeometry","mergeVertices","buildPlane","udir","vdir","gridX","gridY","ix","iy","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","vector","numberOfVertices","addGroup","groupStart","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","MeshBasicMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","envMap","combine","MultiplyOperation","reflectivity","refractionRatio","wireframeLinecap","wireframeLinejoin","Ray","origin","Line3","end","Triangle","Mesh","random","drawMode","TrianglesDrawMode","updateMorphTargets","WebGLBackground","objects","forceClear","background","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","boxCamera","boxMesh","cube","extractRotation","getInverse","isTexture","planeCamera","planeMesh","alpha","setClearAlpha","reversePainterSortStable","WebGLRenderList","opaqueLastIndex","transparentLastIndex","opaque","renderItem","finish","WebGLRenderLists","hash","list","lists","dispose","WebGLIndexedBufferRenderer","infoRender","setMode","mode","calls","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLGeometries","infoMemory","onGeometryDispose","buffergeometry","geometries","removeEventListener","wireframeAttributes","_bufferGeometry","setFromObject","geometryAttributes","getWireframeAttribute","geometryIndex","WebGLLights","shadowBias","shadowRadius","shadowMapSize","distance","coneCos","penumbraCos","decay","skyColor","groundColor","halfWidth","halfHeight","WebGLObjects","frame","updateList","updateFromObject","addLineNumbers","lines","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getEncodingComponents","sRGBEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","GammaEncoding","getTexelDecodingFunction","functionName","components","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","generateExtensions","rendererExtensions","envMapCubeUV","bumpMap","normalMap","flatShading","logarithmicDepthBuffer","filter","filterEmptyLine","generateDefines","chunks","fetchAttributeLocations","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","parseIncludes","include","ShaderChunk","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","PCFSoftShadowMap","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","CubeRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","MixOperation","AddOperation","prefixVertex","prefixFragment","gammaFactorDefine","gammaFactor","customExtensions","customDefines","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","emissiveMap","roughnessMap","metalnessMap","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","sizeAttenuation","gradientMap","numClipIntersection","physicallyCorrectLights","NoToneMapping","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","isShaderMaterial","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","log","deleteShader","cachedUniforms","getUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","programIdCount","usedTimes","WebGLPrograms","allocateBones","skeleton","bones","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","isWebGLRenderTarget","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","parameterNames","getParameters","nClipPlanes","nClipIntersection","shaderID","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","FlatShading","maxMorphTargets","maxMorphNormals","directional","point","spot","rectArea","hemi","getProgramCode","onBeforeCompile","acquireProgram","p","pl","programInfo","releaseProgram","pop","WebGLTextures","properties","paramThreeToGL","clampToMaxSize","maxSize","drawImage","isPowerOfTwo","makePowerOfTwo","HTMLImageElement","HTMLCanvasElement","nearestPowerOfTwo","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","filterFallback","f","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LINEAR","onTextureDispose","deallocateTexture","textures","onRenderTargetDispose","renderTarget","deallocateRenderTarget","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","isWebGLRenderTargetCube","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","__version","uploadTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","isDataTexture","cubeImage","maxCubemapSize","isPowerOfTwoImage","glFormat","glType","setTextureParameters","mipmap","RGBFormat","getCompressedTextureFormats","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","generateMipmap","setTextureCubeDynamic","textureType","FloatType","HalfFloatType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","_isWebGL2","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DepthFormat","UnsignedShortType","UnsignedIntType","DepthStencilFormat","DEPTH_STENCIL","UnsignedInt248Type","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","webglDepthTexture","setupDepthRenderbuffer","isCube","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGL2RenderingContext","WebGLProperties","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","equals","reset","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","setFlipSided","setCullFace","CullFaceBack","newAttributes","enabledAttributes","enableVertexAttribArray","attributeDivisors","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","compressedTextureFormats","getParameter","COMPRESSED_TEXTURE_FORMATS","NoBlending","CustomBlending","currentBlending","currentPremultipledAlpha","AdditiveBlending","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","SubtractiveBlending","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","MultiplyBlending","SRC_COLOR","currentBlendEquation","currentBlendEquationAlpha","currentBlendSrc","currentBlendDst","currentBlendSrcAlpha","currentBlendDstAlpha","setMaterial","setPolygonOffset","currentFlipSided","frontFace","CW","CCW","cullFace","CullFaceNone","currentCullFace","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setLineWidth","currentLineWidth","lineWidthAvailable","lineWidth","factor","POLYGON_OFFSET_FILL","currentPolygonOffsetFactor","currentPolygonOffsetUnits","getScissorTest","currentScissorTest","SCISSOR_TEST","webglSlot","maxTextures","currentTextureSlot","webglType","boundTexture","currentBoundTextures","emptyTextures","currentScissor","currentViewport","maxVertexAttributes","MAX_VERTEX_ATTRIBS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","VERSION","WebGLCapabilities","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","ArrayCamera","cameras","WebVRManager","onVRDisplayPresentChange","device","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","currentPixelRatio","getPixelRatio","currentSize","getSize","setDrawingBufferSize","frameData","VRFrameData","standingMatrix","standingMatrixInverse","cameraL","bounds","cameraR","cameraVR","standing","getDevice","setDevice","getCamera","depthNear","depthFar","getFrameData","pose","fromArray","orientation","stageParameters","sittingToStandingTransform","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebGLExtensions","getExtension","WebGLClipping","resetGlobalState","uniform","globalState","numGlobalPlanes","numPlanes","numIntersection","projectPlanes","dstOffset","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","viewNormalMatrix","getNormalMatrix","i4","plane","renderingShadows","enableLocalClipping","beginShadows","endShadows","setState","cache","fromCache","nGlobal","lGlobal","clippingState","WebGLRenderer","getTargetPixelRatio","_currentRenderTarget","_pixelRatio","setDefaultGLState","_currentScissor","_scissor","multiplyScalar","_currentViewport","_viewport","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","onContextLost","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","programCache","renderObjectImmediate","_this","renderBufferImmediate","absNumericalSort","setupVertexAttributes","startIndex","isInstancedBufferGeometry","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","projectObject","sortObjects","isLight","isSprite","intersectsSprite","isLensFlare","isImmediateRenderObject","_vector3","currentRenderList","renderObjects","renderList","overrideMaterial","isArrayCamera","_currentArrayCamera","camera2","_width","_height","setViewport","setScissor","setProgram","initMaterial","materialProperties","_clipping","programChange","numSupportedMorphTargets","numSupportedMorphNormals","lightsHash","ambientLightColor","ambient","directionalLights","spotLights","rectAreaLights","pointLights","hemisphereLights","directionalShadowMap","directionalShadowMatrix","spotShadowMap","spotShadowMatrix","pointShadowMap","pointShadowMatrix","progUniforms","uniformsList","seqWithValue","_usedTextureUnits","_clippingEnabled","_localClippingEnabled","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","isMeshBasicMaterial","setOptional","boneTexture","sqrt","nextPowerOfTwo","boneMatrices","boneTextureSize","toneMappingExposure","toneMappingWhitePoint","markUniformsLightsNeedsUpdate","refreshUniformsFog","isMeshNormalMaterial","isMeshDepthMaterial","refreshUniformsCommon","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","refreshUniformsNormal","ltcMat","UniformsLib","LTC_MAT_TEXTURE","ltcMag","LTC_MAG_TEXTURE","upload","diffuse","emissive","emissiveIntensity","uvScaleMap","offsetRepeat","flipEnvMap","dashSize","totalSize","gapSize","specular","shininess","bumpScale","normalScale","roughness","metalness","envMapIntensity","clearCoat","clearCoatRoughness","setupShadows","lightShadowsLength","setupLights","ll","intensity","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","isAmbientLight","isDirectionalLight","lightCache","sub","transformDirection","bias","isSpotLight","cos","angle","penumbra","isRectAreaLight","_matrix42","identity","_matrix4","premultiply","isHemisphereLight","normalize","textureUnit","RepeatWrapping","REPEAT","MirroredRepeatWrapping","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LinearMipMapNearestFilter","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UnsignedShort4444Type","UNSIGNED_SHORT_4_4_4_4","UnsignedShort5551Type","UNSIGNED_SHORT_5_5_5_1","UnsignedShort565Type","UNSIGNED_SHORT_5_6_5","ByteType","ShortType","IntType","HALF_FLOAT_OES","AlphaFormat","ALPHA","LuminanceFormat","LUMINANCE","LuminanceAlphaFormat","LUMINANCE_ALPHA","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","DstAlphaFactor","DST_ALPHA","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","DstColorFactor","DST_COLOR","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","RGB_ETC1_Format","COMPRESSED_RGB_ETC1_WEBGL","MinEquation","MaxEquation","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","REVISION","_canvas","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","morphInfluences","domElement","_currentFramebuffer","_currentScissorTest","_scissorTest","_infoMemory","_infoRender","points","memory","contextAttributes","rangeMin","rangeMax","MaxIndex","renderLists","vr","bufferRenderer","indexedBufferRenderer","spritePlugin","lensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","setPixelRatio","setSize","updateStyle","getDrawingBufferSize","pixelRatio","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","nx","ny","nz","uvArray","colorArray","geometryProgram","updateBuffers","morphTargetInfluences","activeInfluences","influence","removeAttribute","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TriangleStripDrawMode","TRIANGLE_STRIP","TriangleFanDrawMode","TRIANGLE_FAN","isLineSegments","isLineLoop","LINE_LOOP","LINE_STRIP","POINTS","compile","traverse","animate","onFrame","isCamera","opaqueObjects","transparentObjects","setFaceCulling","frontFaceDirection","FrontFaceDirectionCW","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","SpriteMaterial","Sprite","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","Group","VideoTexture","video","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","ol","edge1","edge2","edge","edges","index1","index2","getX","fromBufferAttribute","ParametricGeometry","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","subVectors","crossVectors","PolyhedronGeometry","PolyhedronBufferGeometry","subdivideFace","cols","aj","lerp","bj","rows","pushVertex","correctSeam","uvBuffer","x0","x1","x2","getVertexByIndex","correctUVs","centroid","uvA","uvB","uvC","divideScalar","azi","azimuth","correctUV","PI","atan2","inclination","computeVertexNormals","normalizeNormals","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","generateSegment","P","getPointAt","N","frames","B","sin","generateIndices","generateUVs","computeFrenetFrames","TorusKnotGeometry","tube","q","heightScale","TorusKnotBufferGeometry","calculatePositionOnCurve","cu","su","quOverP","cs","P1","P2","T","addVectors","cx","cy","TorusGeometry","arc","TorusBufferGeometry","ExtrudeGeometry","shapes","ExtrudeBufferGeometry","addShapeList","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","curveSegments","amount","bevelThickness","bevelSize","bevelEnabled","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","clamp","inverseSegments","phi","n1","n2","ShapeGeometry","ShapeBufferGeometry","addShape","shape","shapeHole","indexOffset","extractPoints","shapeVertices","shapeHoles","holes","ShapeUtils","isClockWise","reverse","triangulateShape","concat","EdgesGeometry","thresholdAngle","geometry2","thresholdDot","DEG2RAD","computeFaceNormals","sourceVertices","face1","face2","dot","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","generateCap","centerIndexStart","centerIndexEnd","theta","cosTheta","sinTheta","indexArray","slope","indexRow","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","ShadowMaterial","merge","RawShaderMaterial","STANDARD","PHYSICAL","TOON","LoadingManager","onLoad","onProgress","onError","itemsLoaded","itemsTotal","onStart","itemStart","url","itemEnd","itemError","FileLoader","manager","DefaultLoadingManager","CompressedTextureLoader","_parser","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Light","HemisphereLight","updateMatrix","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","constructor","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrackConstructor","times","interpolation","AnimationUtils","convertArray","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","optimize","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","AnimationClip","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","Loader","onLoadStart","onLoadProgress","onLoadComplete","JSONLoader","withCredentials","ObjectLoader","texturePath","CatmullRom","v0","v1","t2","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","Curve","arcLengthDivisions","LineCurve","v2","CurvePath","curves","autoClose","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","SplineCurve","CubicBezierCurve","v3","QuadraticBezierCurve","Path","currentPoint","fromPoints","Shape","ShapePath","subPaths","currentPath","Font","FontLoader","AudioLoader","StereoCamera","eyeSep","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCubeMap","AudioListener","AudioContext","gain","createGain","connect","destination","Audio","listener","getInput","autoplay","loop","startTime","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","typeName","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","node","findNode","AnimationObjectGroup","var_args","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","AnimationAction","mixer","clip","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","endingStart","ZeroCurvatureEnding","endingEnd","interpolant","createInterpolant","settings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","LoopRepeat","_loopCount","_startTime","timeScale","_effectiveTimeScale","weight","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","ray","params","PointCloud","ascSort","intersectObject","raycaster","intersects","recursive","raycast","Clock","autoStart","oldTime","elapsedTime","Spherical","Cylindrical","MorphBlendMesh","animationsMap","animationsList","numFrames","endFrame","fps","createAnimation","setAnimationWeight","ImmediateRenderObject","renderCallback","VertexNormalsHelper","hex","nNormals","objGeometry","positions","SpotLightHelper","cone","getBoneList","boneList","isBone","SkeletonHelper","color1","color2","bone","VertexColors","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","rotateY","getAttribute","GridHelper","divisions","step","halfSize","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","CameraHelper","addLine","addPoint","pointMap","FaceColors","colorFrustum","colorCone","colorUp","colorTarget","colorCross","BoxHelper","ArrowHelper","dir","headLength","headWidth","lineGeometry","coneGeometry","translate","line","setDirection","setLength","AxisHelper","CubicPoly","t0","t1","c0","c1","c2","c3","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","CatmullRomCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","ArcCurve","aRadius","Face4","MeshFaceMaterial","materials","MultiMaterial","isMultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","setDynamic","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","ClosedSplineCurve3","SplineCurve3","Spline","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","Projector","projectVector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","Number","EPSILON","isInteger","assign","nextKey","_listeners","listeners","hasEventListener","listenerArray","MOUSE","LEFT","MIDDLE","RIGHT","RGBEFormat","RAD2DEG","chars","rnd","euclideanModulo","mapLinear","a1","a2","b1","b2","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addScalar","addScaledVector","subScalar","divide","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","lengthSq","lengthManhattan","distanceTo","distanceToSquared","dx","dy","distanceToManhattan","lerpVectors","getY","rotateAround","meta","metadata","generator","wrap","toDataURL","transformUv","isVector4","setZ","setW","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","zz","xy","xz","yz","getZ","getW","create","slerp","qa","qb","qm","slerpFlat","dst","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","y1","z1","w1","sqrSin","tDir","onChangeCallback","euler","isEuler","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","qx","qy","qz","qw","iz","iw","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setFromSpherical","sinPhiRadius","setFromCylindrical","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","setXYZ","determinant","transpose","setPosition","throwOnDegenerate","t11","t12","t13","t14","det","detInv","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","makeShear","compose","invSX","invSY","invSZ","makePerspective","makeOrthographic","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","setHex","setStyle","setHSL","hue2rgb","handleAlpha","copyGammaToLinear","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","getStyle","offsetHSL","addColors","common","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","merged","uniforms_src","uniforms_dst","parameter_src","isMatrix3","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_flip","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","basic","lambert","phong","standard","dashed","tCube","tFlip","equirect","tEquirect","distanceRGBA","physical","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","box","isEmpty","getCenter","expandByVector","expandByScalar","containsBox","intersectsBox","clampPoint","distanceToPoint","intersect","union","isMaterial","newValue","currentValue","extractFromCache","isRoot","srcPlanes","dstPlanes","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","expandByObject","intersectsSphere","closestPoint","sphere","intersectsPlane","getBoundingSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","setFromMatrix4","matrix4","transposeIntoArray","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","referencePoint","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","computeBoundingSphere","negRadius","d1","d2","RotationOrders","asin","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","toggle","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateX","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","force","serialize","library","element","isRootObject","JSON","stringify","uuids","parse","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","computeBoundingBox","addFace","tempNormals","tempUVs","tempUVs2","cb","ab","fl","vA","vB","vC","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","verticesMap","unique","changes","faceIndicesToRemove","idx","sortFacesByMaterialIndex","materialIndexSort","_id","newUvs1","newUvs2","setBit","getNormalIndex","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","copyAt","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","getIndex","clearGroups","setDrawRange","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","morphAttribute","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","edgeList","projectedPoint","minDistance","setDrawMode","ml","morphTargetDictionary","String","uvIntersection","uv1","uv3","barycoord","checkIntersection","intersectionPointWorld","checkBufferGeometryIntersection","intersection","intersectionPoint","faceIndex","inverseMatrix","tempA","tempB","tempC","fvA","fvB","fvC","faceMaterial","tl","targets","uvs_f","vecX","vecY","wantedRotation","isSpriteMaterial","intersectPoint","worldPosition","worldScale","guessSizeSq","level","addLevel","getObjectForDistance","matrixPosition","offsetMatrix","identityMatrix","gbone","rotq","scl","sw","vec","skinWeight","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","testPoint","rayPointDistanceSq","localThresholdSq","distanceToRay","localThreshold","contour","triangulate","snip","verts","px","py","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","allPointsMap","allpoints","hl","shapeWithoutHoles","hole","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","indepHoles","failedCuts","minShapeIndex","counter","h2","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","inShapePt","inHolePt","sIdx","nextIdx","ihIdx","chkHole","hIdx","triangles","pts","getArrays","positionAttribute","verticesArray","uvAttribute","IndexAttribute","sl","arrays","scalePt2","pt","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","sidewalls","layeroffset","steps","bevelSegments","slen1","vlen","slen2","f4","placeholder","f3","addVertex","nextIndex","uvgen","generateTopUV","addUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","indicesArray","vector2","extrudePts","splineTube","binormal","position2","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","getSpacedPoints","ahole","shapePoints","bs","vert","flen","contourMovements","oneHoleMovements","holesMovements","verticesMovements","extrudeMaterial","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","Geometries","freeze","isShadowMaterial","Materials","Cache","files","file","load","cached","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","ArrayBuffer","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","status","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loaded","texDatas","mipmapCount","isCubemap","texData","crossOrigin","setCrossOrigin","urls","isJPEG","search","arraySlice","isTypedArray","forceClone","isView","DataView","getKeyframeOrder","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","KeyframeTrackPrototype","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","message","ValueTypeName","getInterpolation","timeOffset","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","json","trackType","_getTrackTypeForValueTypeName","track","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","animationMorphTargets","clips","parseAnimation","animation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","typedArray","TYPED_ARRAYS","drawcalls","offsets","Handlers","handlers","extractUrlBase","initMaterials","createMaterial","BlendingMode","textureLoader","materialLoader","loadTexture","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","getPoint","getUtoTmapping","getPoints","getLength","lengths","getLengths","cacheArcLengths","current","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","isLineCurve","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","twoPi","deltaAngle","samePoints","intPoint","point0","point1","point2","point3","PathPrototype","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","extractAllPoints","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","solid","holesFirst","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","froms","tos","tmpHoles","createPath","glyph","glyphs","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","ha","paths","line_height","yMax","yMin","underlineThickness","char","webkitAudioContext","setContext","decodeAudioData","audioBuffer","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","positionX","setValueAtTime","currentTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setBuffer","play","createBufferSource","onended","onEnded","pause","stop","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","trackRe","supportedObjectNames","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","isInterleavedBuffer","setFromCamera","coords","intersectObjects","performance","getElapsedTime","getDelta","newTime","makeSafe","vec3","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","morph","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","hx","hy","lightPlane","targetLine","setPoint","setColor","pz","SceneUtils","createMultiMaterialObject","detach","attach","construct","initFromArray","getControlPointsArray","reparametrizeByArcLength","samplingCoef","setColors","isIntersectionBox","isIntersectionSphere","random16","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","extrude","makeGeometry","fromAttribute","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","getCurrentRenderTarget","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CullFaceFrontBack","FrontFaceDirectionCCW","BasicShadowMap","LoopOnce","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroSlopeEnding","WrapAroundEnding","LogLuvEncoding","CubeGeometry","LineStrip","LinePieces","SpriteCanvasMaterial","isSpriteCanvasMaterial","calculateLights","_ambientLight","_directionalLights","_pointLights","lightColor","calculateLight","_lightColor","lightPosition","renderSprite","setOpacity","_canvasWidthHalf","_canvasHeightHalf","dist","_elemBox","pattern","_patterns","textureToPattern","setFillStyle","bitmap","ox","oy","save","rotate","setStrokeStyle","renderLine","beginPath","setLineCap","setLineJoin","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","stroke","setLineDash","renderFace3","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","drawTriangle","_diffuseColor","_emissiveColor","_color","_centroid","positionWorld","normalModel","strokePath","fillPath","_uvs","patternPath","_normal","vertexNormalsModel","_normalViewMatrix","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","fill","repeatX","repeatY","mirrorX","mirrorY","createElement","setTransform","createPattern","u0","u1","u2","idet","transform","pixels","_contextGlobalAlpha","globalAlpha","_contextGlobalCompositeOperation","globalCompositeOperation","_contextLineWidth","_contextLineCap","lineCap","_contextLineJoin","lineJoin","_contextStrokeStyle","strokeStyle","_contextFillStyle","_contextLineDash","_renderData","_elements","_v1","_v2","_v3","_projector","_canvasWidth","_canvasHeight","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_clearColor","_clearAlpha","_clipBox","_clearBox","sortElements","setClearColorHex","clearRect","projectScene","RenderableSprite","RenderableLine","RenderableFace","RenderableObject","RenderableVertex","vertexNormalsLength","addObject","_object","getNextObjectInPool","_viewProjectionMatrix","pushPoint","_vector4","invW","_sprite","getNextSpriteInPool","_objectCount","_objectPoolLength","_objectPool","getNextVertexInPool","_vertexCount","_vertexPoolLength","_vertexPool","getNextFaceInPool","_faceCount","_facePoolLength","_facePool","getNextLineInPool","_lineCount","_linePoolLength","_linePool","_spriteCount","_spritePoolLength","_spritePool","painterSort","clipLine","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","_vertex","_face","_line","_modelMatrix","_boundingBox","_points3","_viewMatrix","_modelViewProjectionMatrix","_normalMatrix","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","RenderList","setObject","projectVertex","pushNormal","pushColor","pushUv","checkTriangleVisibility","checkBackfaceCulling","pushLine","pushTriangle","targetVertex","nl"],"mappings":"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","file":"library.min.js","sourcesContent":["(function(window, factory) {\n\tvar lazySizes = factory(window, window.document);\n\twindow.lazySizes = lazySizes;\n\tif(typeof module == 'object' && module.exports){\n\t\tmodule.exports = lazySizes;\n\t}\n}(window, function l(window, document) {\n\t'use strict';\n\t/*jshint eqnull:true */\n\tif(!document.getElementsByClassName){return;}\n\n\tvar lazySizesConfig;\n\n\tvar docElem = document.documentElement;\n\n\tvar Date = window.Date;\n\n\tvar supportPicture = window.HTMLPictureElement;\n\n\tvar _addEventListener = 'addEventListener';\n\n\tvar _getAttribute = 'getAttribute';\n\n\tvar addEventListener = window[_addEventListener];\n\n\tvar setTimeout = window.setTimeout;\n\n\tvar requestAnimationFrame = window.requestAnimationFrame || setTimeout;\n\n\tvar requestIdleCallback = window.requestIdleCallback;\n\n\tvar regPicture = /^picture$/i;\n\n\tvar loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];\n\n\tvar regClassCache = {};\n\n\tvar forEach = Array.prototype.forEach;\n\n\tvar hasClass = function(ele, cls) {\n\t\tif(!regClassCache[cls]){\n\t\t\tregClassCache[cls] = new RegExp('(\\\\s|^)'+cls+'(\\\\s|$)');\n\t\t}\n\t\treturn regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];\n\t};\n\n\tvar addClass = function(ele, cls) {\n\t\tif (!hasClass(ele, cls)){\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);\n\t\t}\n\t};\n\n\tvar removeClass = function(ele, cls) {\n\t\tvar reg;\n\t\tif ((reg = hasClass(ele,cls))) {\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));\n\t\t}\n\t};\n\n\tvar addRemoveLoadEvents = function(dom, fn, add){\n\t\tvar action = add ? _addEventListener : 'removeEventListener';\n\t\tif(add){\n\t\t\taddRemoveLoadEvents(dom, fn);\n\t\t}\n\t\tloadEvents.forEach(function(evt){\n\t\t\tdom[action](evt, fn);\n\t\t});\n\t};\n\n\tvar triggerEvent = function(elem, name, detail, noBubbles, noCancelable){\n\t\tvar event = document.createEvent('CustomEvent');\n\n\t\tevent.initCustomEvent(name, !noBubbles, !noCancelable, detail || {});\n\n\t\telem.dispatchEvent(event);\n\t\treturn event;\n\t};\n\n\tvar updatePolyfill = function (el, full){\n\t\tvar polyfill;\n\t\tif( !supportPicture && ( polyfill = (window.picturefill || lazySizesConfig.pf) ) ){\n\t\t\tpolyfill({reevaluate: true, elements: [el]});\n\t\t} else if(full && full.src){\n\t\t\tel.src = full.src;\n\t\t}\n\t};\n\n\tvar getCSS = function (elem, style){\n\t\treturn (getComputedStyle(elem, null) || {})[style];\n\t};\n\n\tvar getWidth = function(elem, parent, width){\n\t\twidth = width || elem.offsetWidth;\n\n\t\twhile(width < lazySizesConfig.minSize && parent && !elem._lazysizesWidth){\n\t\t\twidth =  parent.offsetWidth;\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\treturn width;\n\t};\n\n\tvar rAF = (function(){\n\t\tvar running, waiting;\n\t\tvar fns = [];\n\n\t\tvar run = function(){\n\t\t\tvar fn;\n\t\t\trunning = true;\n\t\t\twaiting = false;\n\t\t\twhile(fns.length){\n\t\t\t\tfn = fns.shift();\n\t\t\t\tfn[0].apply(fn[1], fn[2]);\n\t\t\t}\n\t\t\trunning = false;\n\t\t};\n\n\t\tvar rafBatch = function(fn){\n\t\t\tif(running){\n\t\t\t\tfn.apply(this, arguments);\n\t\t\t} else {\n\t\t\t\tfns.push([fn, this, arguments]);\n\n\t\t\t\tif(!waiting){\n\t\t\t\t\twaiting = true;\n\t\t\t\t\t(document.hidden ? setTimeout : requestAnimationFrame)(run);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trafBatch._lsFlush = run;\n\n\t\treturn rafBatch;\n\t})();\n\n\tvar rAFIt = function(fn, simple){\n\t\treturn simple ?\n\t\t\tfunction() {\n\t\t\t\trAF(fn);\n\t\t\t} :\n\t\t\tfunction(){\n\t\t\t\tvar that = this;\n\t\t\t\tvar args = arguments;\n\t\t\t\trAF(function(){\n\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t});\n\t\t\t}\n\t\t;\n\t};\n\n\tvar throttle = function(fn){\n\t\tvar running;\n\t\tvar lastTime = 0;\n\t\tvar gDelay = 125;\n\t\tvar RIC_DEFAULT_TIMEOUT = 666;\n\t\tvar rICTimeout = RIC_DEFAULT_TIMEOUT;\n\t\tvar run = function(){\n\t\t\trunning = false;\n\t\t\tlastTime = Date.now();\n\t\t\tfn();\n\t\t};\n\t\tvar idleCallback = requestIdleCallback ?\n\t\t\tfunction(){\n\t\t\t\trequestIdleCallback(run, {timeout: rICTimeout});\n\t\t\t\tif(rICTimeout !== RIC_DEFAULT_TIMEOUT){\n\t\t\t\t\trICTimeout = RIC_DEFAULT_TIMEOUT;\n\t\t\t\t}\n\t\t\t}:\n\t\t\trAFIt(function(){\n\t\t\t\tsetTimeout(run);\n\t\t\t}, true)\n\t\t;\n\n\t\treturn function(isPriority){\n\t\t\tvar delay;\n\t\t\tif((isPriority = isPriority === true)){\n\t\t\t\trICTimeout = 44;\n\t\t\t}\n\n\t\t\tif(running){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trunning =  true;\n\n\t\t\tdelay = gDelay - (Date.now() - lastTime);\n\n\t\t\tif(delay < 0){\n\t\t\t\tdelay = 0;\n\t\t\t}\n\n\t\t\tif(isPriority || (delay < 9 && requestIdleCallback)){\n\t\t\t\tidleCallback();\n\t\t\t} else {\n\t\t\t\tsetTimeout(idleCallback, delay);\n\t\t\t}\n\t\t};\n\t};\n\n\t//based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html\n\tvar debounce = function(func) {\n\t\tvar timeout, timestamp;\n\t\tvar wait = 99;\n\t\tvar run = function(){\n\t\t\ttimeout = null;\n\t\t\tfunc();\n\t\t};\n\t\tvar later = function() {\n\t\t\tvar last = Date.now() - timestamp;\n\n\t\t\tif (last < wait) {\n\t\t\t\tsetTimeout(later, wait - last);\n\t\t\t} else {\n\t\t\t\t(requestIdleCallback || run)(run);\n\t\t\t}\n\t\t};\n\n\t\treturn function() {\n\t\t\ttimestamp = Date.now();\n\n\t\t\tif (!timeout) {\n\t\t\t\ttimeout = setTimeout(later, wait);\n\t\t\t}\n\t\t};\n\t};\n\n\n\tvar loader = (function(){\n\t\tvar lazyloadElems, preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;\n\n\t\tvar eLvW, elvH, eLtop, eLleft, eLright, eLbottom;\n\n\t\tvar defaultExpand, preloadExpand, hFac;\n\n\t\tvar regImg = /^img$/i;\n\t\tvar regIframe = /^iframe$/i;\n\n\t\tvar supportScroll = ('onscroll' in window) && !(/glebot/.test(navigator.userAgent));\n\n\t\tvar shrinkExpand = 0;\n\t\tvar currentExpand = 0;\n\n\t\tvar isLoading = 0;\n\t\tvar lowRuns = -1;\n\n\t\tvar resetPreloading = function(e){\n\t\t\tisLoading--;\n\t\t\tif(e && e.target){\n\t\t\t\taddRemoveLoadEvents(e.target, resetPreloading);\n\t\t\t}\n\n\t\t\tif(!e || isLoading < 0 || !e.target){\n\t\t\t\tisLoading = 0;\n\t\t\t}\n\t\t};\n\n\t\tvar isNestedVisible = function(elem, elemExpand){\n\t\t\tvar outerRect;\n\t\t\tvar parent = elem;\n\t\t\tvar visible = getCSS(document.body, 'visibility') == 'hidden' || getCSS(elem, 'visibility') != 'hidden';\n\n\t\t\teLtop -= elemExpand;\n\t\t\teLbottom += elemExpand;\n\t\t\teLleft -= elemExpand;\n\t\t\teLright += elemExpand;\n\n\t\t\twhile(visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem){\n\t\t\t\tvisible = ((getCSS(parent, 'opacity') || 1) > 0);\n\n\t\t\t\tif(visible && getCSS(parent, 'overflow') != 'visible'){\n\t\t\t\t\touterRect = parent.getBoundingClientRect();\n\t\t\t\t\tvisible = eLright > outerRect.left &&\n\t\t\t\t\t\teLleft < outerRect.right &&\n\t\t\t\t\t\teLbottom > outerRect.top - 1 &&\n\t\t\t\t\t\teLtop < outerRect.bottom + 1\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn visible;\n\t\t};\n\n\t\tvar checkElements = function() {\n\t\t\tvar eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal, beforeExpandVal;\n\n\t\t\tif((loadMode = lazySizesConfig.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)){\n\n\t\t\t\ti = 0;\n\n\t\t\t\tlowRuns++;\n\n\t\t\t\tif(preloadExpand == null){\n\t\t\t\t\tif(!('expand' in lazySizesConfig)){\n\t\t\t\t\t\tlazySizesConfig.expand = docElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefaultExpand = lazySizesConfig.expand;\n\t\t\t\t\tpreloadExpand = defaultExpand * lazySizesConfig.expFactor;\n\t\t\t\t}\n\n\t\t\t\tif(currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden){\n\t\t\t\t\tcurrentExpand = preloadExpand;\n\t\t\t\t\tlowRuns = 0;\n\t\t\t\t} else if(loadMode > 1 && lowRuns > 1 && isLoading < 6){\n\t\t\t\t\tcurrentExpand = defaultExpand;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentExpand = shrinkExpand;\n\t\t\t\t}\n\n\t\t\t\tfor(; i < eLlen; i++){\n\n\t\t\t\t\tif(!lazyloadElems[i] || lazyloadElems[i]._lazyRace){continue;}\n\n\t\t\t\t\tif(!supportScroll){unveilElement(lazyloadElems[i]);continue;}\n\n\t\t\t\t\tif(!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)){\n\t\t\t\t\t\telemExpand = currentExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(beforeExpandVal !== elemExpand){\n\t\t\t\t\t\teLvW = innerWidth + (elemExpand * hFac);\n\t\t\t\t\t\telvH = innerHeight + elemExpand;\n\t\t\t\t\t\telemNegativeExpand = elemExpand * -1;\n\t\t\t\t\t\tbeforeExpandVal = elemExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\trect = lazyloadElems[i].getBoundingClientRect();\n\n\t\t\t\t\tif ((eLbottom = rect.bottom) >= elemNegativeExpand &&\n\t\t\t\t\t\t(eLtop = rect.top) <= elvH &&\n\t\t\t\t\t\t(eLright = rect.right) >= elemNegativeExpand * hFac &&\n\t\t\t\t\t\t(eLleft = rect.left) <= eLvW &&\n\t\t\t\t\t\t(eLbottom || eLright || eLleft || eLtop) &&\n\t\t\t\t\t\t((isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4)) || isNestedVisible(lazyloadElems[i], elemExpand))){\n\t\t\t\t\t\tunveilElement(lazyloadElems[i]);\n\t\t\t\t\t\tloadedSomething = true;\n\t\t\t\t\t\tif(isLoading > 9){break;}\n\t\t\t\t\t} else if(!loadedSomething && isCompleted && !autoLoadElem &&\n\t\t\t\t\t\tisLoading < 4 && lowRuns < 4 && loadMode > 2 &&\n\t\t\t\t\t\t(preloadElems[0] || lazySizesConfig.preloadAfterLoad) &&\n\t\t\t\t\t\t(preloadElems[0] || (!elemExpandVal && ((eLbottom || eLright || eLleft || eLtop) || lazyloadElems[i][_getAttribute](lazySizesConfig.sizesAttr) != 'auto')))){\n\t\t\t\t\t\tautoLoadElem = preloadElems[0] || lazyloadElems[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(autoLoadElem && !loadedSomething){\n\t\t\t\t\tunveilElement(autoLoadElem);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar throttledCheckElements = throttle(checkElements);\n\n\t\tvar switchLoadingClass = function(e){\n\t\t\taddClass(e.target, lazySizesConfig.loadedClass);\n\t\t\tremoveClass(e.target, lazySizesConfig.loadingClass);\n\t\t\taddRemoveLoadEvents(e.target, rafSwitchLoadingClass);\n\t\t};\n\t\tvar rafedSwitchLoadingClass = rAFIt(switchLoadingClass);\n\t\tvar rafSwitchLoadingClass = function(e){\n\t\t\trafedSwitchLoadingClass({target: e.target});\n\t\t};\n\n\t\tvar changeIframeSrc = function(elem, src){\n\t\t\ttry {\n\t\t\t\telem.contentWindow.location.replace(src);\n\t\t\t} catch(e){\n\t\t\t\telem.src = src;\n\t\t\t}\n\t\t};\n\n\t\tvar handleSources = function(source){\n\t\t\tvar customMedia, parent;\n\n\t\t\tvar sourceSrcset = source[_getAttribute](lazySizesConfig.srcsetAttr);\n\n\t\t\tif( (customMedia = lazySizesConfig.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) ){\n\t\t\t\tsource.setAttribute('media', customMedia);\n\t\t\t}\n\n\t\t\tif(sourceSrcset){\n\t\t\t\tsource.setAttribute('srcset', sourceSrcset);\n\t\t\t}\n\n\t\t\t//https://bugzilla.mozilla.org/show_bug.cgi?id=1170572\n\t\t\tif(customMedia){\n\t\t\t\tparent = source.parentNode;\n\t\t\t\tparent.insertBefore(source.cloneNode(), source);\n\t\t\t\tparent.removeChild(source);\n\t\t\t}\n\t\t};\n\n\t\tvar lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg){\n\t\t\tvar src, srcset, parent, isPicture, event, firesLoad;\n\n\t\t\tif(!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented){\n\n\t\t\t\tif(sizes){\n\t\t\t\t\tif(isAuto){\n\t\t\t\t\t\taddClass(elem, lazySizesConfig.autosizesClass);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.setAttribute('sizes', sizes);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsrcset = elem[_getAttribute](lazySizesConfig.srcsetAttr);\n\t\t\t\tsrc = elem[_getAttribute](lazySizesConfig.srcAttr);\n\n\t\t\t\tif(isImg) {\n\t\t\t\t\tparent = elem.parentNode;\n\t\t\t\t\tisPicture = parent && regPicture.test(parent.nodeName || '');\n\t\t\t\t}\n\n\t\t\t\tfiresLoad = detail.firesLoad || (('src' in elem) && (srcset || src || isPicture));\n\n\t\t\t\tevent = {target: elem};\n\n\t\t\t\tif(firesLoad){\n\t\t\t\t\taddRemoveLoadEvents(elem, resetPreloading, true);\n\t\t\t\t\tclearTimeout(resetPreloadingTimer);\n\t\t\t\t\tresetPreloadingTimer = setTimeout(resetPreloading, 2500);\n\n\t\t\t\t\taddClass(elem, lazySizesConfig.loadingClass);\n\t\t\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass, true);\n\t\t\t\t}\n\n\t\t\t\tif(isPicture){\n\t\t\t\t\tforEach.call(parent.getElementsByTagName('source'), handleSources);\n\t\t\t\t}\n\n\t\t\t\tif(srcset){\n\t\t\t\t\telem.setAttribute('srcset', srcset);\n\t\t\t\t} else if(src && !isPicture){\n\t\t\t\t\tif(regIframe.test(elem.nodeName)){\n\t\t\t\t\t\tchangeIframeSrc(elem, src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.src = src;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(srcset || isPicture){\n\t\t\t\t\tupdatePolyfill(elem, {src: src});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trAF(function(){\n\t\t\t\tif(elem._lazyRace){\n\t\t\t\t\tdelete elem._lazyRace;\n\t\t\t\t}\n\t\t\t\tremoveClass(elem, lazySizesConfig.lazyClass);\n\n\t\t\t\tif( !firesLoad || elem.complete ){\n\t\t\t\t\tif(firesLoad){\n\t\t\t\t\t\tresetPreloading(event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisLoading--;\n\t\t\t\t\t}\n\t\t\t\t\tswitchLoadingClass(event);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tvar unveilElement = function (elem){\n\t\t\tvar detail;\n\n\t\t\tvar isImg = regImg.test(elem.nodeName);\n\n\t\t\t//allow using sizes=\"auto\", but don't use. it's invalid. Use data-sizes=\"auto\" or a valid value for sizes instead (i.e.: sizes=\"80vw\")\n\t\t\tvar sizes = isImg && (elem[_getAttribute](lazySizesConfig.sizesAttr) || elem[_getAttribute]('sizes'));\n\t\t\tvar isAuto = sizes == 'auto';\n\n\t\t\tif( (isAuto || !isCompleted) && isImg && (elem.src || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesConfig.errorClass)){return;}\n\n\t\t\tdetail = triggerEvent(elem, 'lazyunveilread').detail;\n\n\t\t\tif(isAuto){\n\t\t\t\t autoSizer.updateElem(elem, true, elem.offsetWidth);\n\t\t\t}\n\n\t\t\telem._lazyRace = true;\n\t\t\tisLoading++;\n\n\t\t\tlazyUnveil(elem, detail, isAuto, sizes, isImg);\n\t\t};\n\n\t\tvar onload = function(){\n\t\t\tif(isCompleted){return;}\n\t\t\tif(Date.now() - started < 999){\n\t\t\t\tsetTimeout(onload, 999);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar afterScroll = debounce(function(){\n\t\t\t\tlazySizesConfig.loadMode = 3;\n\t\t\t\tthrottledCheckElements();\n\t\t\t});\n\n\t\t\tisCompleted = true;\n\n\t\t\tlazySizesConfig.loadMode = 3;\n\n\t\t\tthrottledCheckElements();\n\n\t\t\taddEventListener('scroll', function(){\n\t\t\t\tif(lazySizesConfig.loadMode == 3){\n\t\t\t\t\tlazySizesConfig.loadMode = 2;\n\t\t\t\t}\n\t\t\t\tafterScroll();\n\t\t\t}, true);\n\t\t};\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tstarted = Date.now();\n\n\t\t\t\tlazyloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass);\n\t\t\t\tpreloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass + ' ' + lazySizesConfig.preloadClass);\n\t\t\t\thFac = lazySizesConfig.hFac;\n\n\t\t\t\taddEventListener('scroll', throttledCheckElements, true);\n\n\t\t\t\taddEventListener('resize', throttledCheckElements, true);\n\n\t\t\t\tif(window.MutationObserver){\n\t\t\t\t\tnew MutationObserver( throttledCheckElements ).observe( docElem, {childList: true, subtree: true, attributes: true} );\n\t\t\t\t} else {\n\t\t\t\t\tdocElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);\n\t\t\t\t\tdocElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);\n\t\t\t\t\tsetInterval(throttledCheckElements, 999);\n\t\t\t\t}\n\n\t\t\t\taddEventListener('hashchange', throttledCheckElements, true);\n\n\t\t\t\t//, 'fullscreenchange'\n\t\t\t\t['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend', 'webkitAnimationEnd'].forEach(function(name){\n\t\t\t\t\tdocument[_addEventListener](name, throttledCheckElements, true);\n\t\t\t\t});\n\n\t\t\t\tif((/d$|^c/.test(document.readyState))){\n\t\t\t\t\tonload();\n\t\t\t\t} else {\n\t\t\t\t\taddEventListener('load', onload);\n\t\t\t\t\tdocument[_addEventListener]('DOMContentLoaded', throttledCheckElements);\n\t\t\t\t\tsetTimeout(onload, 20000);\n\t\t\t\t}\n\n\t\t\t\tif(lazyloadElems.length){\n\t\t\t\t\tcheckElements();\n\t\t\t\t} else {\n\t\t\t\t\tthrottledCheckElements();\n\t\t\t\t}\n\t\t\t},\n\t\t\tcheckElems: throttledCheckElements,\n\t\t\tunveil: unveilElement\n\t\t};\n\t})();\n\n\n\tvar autoSizer = (function(){\n\t\tvar autosizesElems;\n\n\t\tvar sizeElement = rAFIt(function(elem, parent, event, width){\n\t\t\tvar sources, i, len;\n\t\t\telem._lazysizesWidth = width;\n\t\t\twidth += 'px';\n\n\t\t\telem.setAttribute('sizes', width);\n\n\t\t\tif(regPicture.test(parent.nodeName || '')){\n\t\t\t\tsources = parent.getElementsByTagName('source');\n\t\t\t\tfor(i = 0, len = sources.length; i < len; i++){\n\t\t\t\t\tsources[i].setAttribute('sizes', width);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!event.detail.dataAttr){\n\t\t\t\tupdatePolyfill(elem, event.detail);\n\t\t\t}\n\t\t});\n\t\tvar getSizeElement = function (elem, dataAttr, width){\n\t\t\tvar event;\n\t\t\tvar parent = elem.parentNode;\n\n\t\t\tif(parent){\n\t\t\t\twidth = getWidth(elem, parent, width);\n\t\t\t\tevent = triggerEvent(elem, 'lazybeforesizes', {width: width, dataAttr: !!dataAttr});\n\n\t\t\t\tif(!event.defaultPrevented){\n\t\t\t\t\twidth = event.detail.width;\n\n\t\t\t\t\tif(width && width !== elem._lazysizesWidth){\n\t\t\t\t\t\tsizeElement(elem, parent, event, width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar updateElementsSizes = function(){\n\t\t\tvar i;\n\t\t\tvar len = autosizesElems.length;\n\t\t\tif(len){\n\t\t\t\ti = 0;\n\n\t\t\t\tfor(; i < len; i++){\n\t\t\t\t\tgetSizeElement(autosizesElems[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar debouncedUpdateElementsSizes = debounce(updateElementsSizes);\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tautosizesElems = document.getElementsByClassName(lazySizesConfig.autosizesClass);\n\t\t\t\taddEventListener('resize', debouncedUpdateElementsSizes);\n\t\t\t},\n\t\t\tcheckElems: debouncedUpdateElementsSizes,\n\t\t\tupdateElem: getSizeElement\n\t\t};\n\t})();\n\n\tvar init = function(){\n\t\tif(!init.i){\n\t\t\tinit.i = true;\n\t\t\tautoSizer._();\n\t\t\tloader._();\n\t\t}\n\t};\n\n\t(function(){\n\t\tvar prop;\n\n\t\tvar lazySizesDefaults = {\n\t\t\tlazyClass: 'lazyload',\n\t\t\tloadedClass: 'lazyloaded',\n\t\t\tloadingClass: 'lazyloading',\n\t\t\tpreloadClass: 'lazypreload',\n\t\t\terrorClass: 'lazyerror',\n\t\t\t//strictClass: 'lazystrict',\n\t\t\tautosizesClass: 'lazyautosizes',\n\t\t\tsrcAttr: 'data-src',\n\t\t\tsrcsetAttr: 'data-srcset',\n\t\t\tsizesAttr: 'data-sizes',\n\t\t\t//preloadAfterLoad: false,\n\t\t\tminSize: 40,\n\t\t\tcustomMedia: {},\n\t\t\tinit: true,\n\t\t\texpFactor: 1.5,\n\t\t\thFac: 0.8,\n\t\t\tloadMode: 2\n\t\t};\n\n\t\tlazySizesConfig = window.lazySizesConfig || window.lazysizesConfig || {};\n\n\t\tfor(prop in lazySizesDefaults){\n\t\t\tif(!(prop in lazySizesConfig)){\n\t\t\t\tlazySizesConfig[prop] = lazySizesDefaults[prop];\n\t\t\t}\n\t\t}\n\n\t\twindow.lazySizesConfig = lazySizesConfig;\n\n\t\tsetTimeout(function(){\n\t\t\tif(lazySizesConfig.init){\n\t\t\t\tinit();\n\t\t\t}\n\t\t});\n\t})();\n\n\treturn {\n\t\tcfg: lazySizesConfig,\n\t\tautoSizer: autoSizer,\n\t\tloader: loader,\n\t\tinit: init,\n\t\tuP: updatePolyfill,\n\t\taC: addClass,\n\t\trC: removeClass,\n\t\thC: hasClass,\n\t\tfire: triggerEvent,\n\t\tgW: getWidth,\n\t\trAF: rAF,\n\t};\n}\n));\n","//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.18.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n","//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nvar monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nvar es = moment.defineLocale('es', {\n    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort : function (m, format) {\n        if (!m) {\n            return monthsShortDot;\n        } else if (/-MMM-/.test(format)) {\n            return monthsShort[m.month()];\n        } else {\n            return monthsShortDot[m.month()];\n        }\n    },\n    monthsParseExact : true,\n    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D [de] MMMM [de] YYYY',\n        LLL : 'D [de] MMMM [de] YYYY H:mm',\n        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar : {\n        sameDay : function () {\n            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay : function () {\n            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek : function () {\n            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay : function () {\n            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek : function () {\n            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'en %s',\n        past : 'hace %s',\n        s : 'unos segundos',\n        m : 'un minuto',\n        mm : '%d minutos',\n        h : 'una hora',\n        hh : '%d horas',\n        d : 'un día',\n        dd : '%d días',\n        M : 'un mes',\n        MM : '%d meses',\n        y : 'un año',\n        yy : '%d años'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n    ordinal : '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn es;\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.THREE = global.THREE || {})));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\tif ( Number.isInteger === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\t\tNumber.isInteger = function ( value ) {\n\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t\t};\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( Function.prototype.name === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\t( function () {\n\n\t\t\tObject.assign = function ( target ) {\n\n\t\t\t\t'use strict';\n\n\t\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t\t}\n\n\t\t\t\tvar output = Object( target );\n\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t};\n\n\t\t} )();\n\n\t}\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tvar REVISION = '86';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar Uncharted2ToneMapping = 3;\n\tvar CineonToneMapping = 4;\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar SphericalReflectionMapping = 305;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RGB_S3TC_DXT1_Format = 2001;\n\tvar RGBA_S3TC_DXT1_Format = 2002;\n\tvar RGBA_S3TC_DXT3_Format = 2003;\n\tvar RGBA_S3TC_DXT5_Format = 2004;\n\tvar RGB_PVRTC_4BPPV1_Format = 2100;\n\tvar RGB_PVRTC_2BPPV1_Format = 2101;\n\tvar RGBA_PVRTC_4BPPV1_Format = 2102;\n\tvar RGBA_PVRTC_2BPPV1_Format = 2103;\n\tvar RGB_ETC1_Format = 2151;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\t\tvar uuid = new Array( 36 );\n\t\t\tvar rnd = 0, r;\n\n\t\t\treturn function generateUUID() {\n\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn uuid.join( '' );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * _Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * _Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tvalue --;\n\t\t\tvalue |= value >> 1;\n\t\t\tvalue |= value >> 2;\n\t\t\tvalue |= value >> 4;\n\t\t\tvalue |= value >> 8;\n\t\t\tvalue |= value >> 16;\n\t\t\tvalue ++;\n\n\t\t\treturn value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t}\n\n\tObject.defineProperties( Vector2.prototype, {\n\n\t\t\"width\" : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.x = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\" : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.y = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tisVector2: true,\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min = new Vector2();\n\t\t\tvar max = new Vector2();\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tlengthManhattan: function() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar textureId = 0;\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Texture.prototype, EventDispatcher.prototype, {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tfunction getDataURL( image ) {\n\n\t\t\t\tvar canvas;\n\n\t\t\t\tif ( image.toDataURL !== undefined ) {\n\n\t\t\t\t\tcanvas = image;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\t\tuv.multiply( this.repeat );\n\t\t\tuv.add( this.offset );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\t this.x = 1;\n\t\t\t\t this.y = 0;\n\t\t\t\t this.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\t this.x = q.x / s;\n\t\t\t\t this.y = q.y / s;\n\t\t\t\t this.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector4();\n\t\t\t\t\tmax = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t */\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\tthis.activeMipMapLevel = 0;\n\n\t}\n\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function ( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Quaternion.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tw: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._w = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c1 = cos( x / 2 );\n\t\t\tvar c2 = cos( y / 2 );\n\t\t\tvar c3 = cos( z / 2 );\n\n\t\t\tvar s1 = sin( x / 2 );\n\t\t\tvar s2 = sin( y / 2 );\n\t\t\tvar s3 = sin( z / 2 );\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function () {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar r;\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\t\tif ( r < EPS ) {\n\n\t\t\t\t\tr = 0;\n\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t\t}\n\n\t\t\t\tthis._x = v1.x;\n\t\t\t\tthis._y = v1.y;\n\t\t\t\tthis._z = v1.z;\n\t\t\t\tthis._w = r;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tinverse: function () {\n\n\t\t\treturn this.conjugate().normalize();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector3( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t}\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function applyEuler( euler ) {\n\n\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyAxisAngle: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function project( camera ) {\n\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tunproject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function unproject( camera ) {\n\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min = new Vector3();\n\t\t\tvar max = new Vector3();\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\t\tthis.x = y * v.z - z * v.y;\n\t\t\tthis.y = z * v.x - x * v.z;\n\t\t\tthis.z = x * v.y - y * v.x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\t\treturn this.sub( v1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\treflect: function () {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function reflect( normal ) {\n\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function ( s ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCylindrical: function ( c ) {\n\n\t\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\t\tthis.y = c.y;\n\t\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0,       0,       0,       1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function extractRotation( m ) {\n\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\t\tte[ 4 ] = xy - wz;\n\t\t\tte[ 8 ] = xz + wy;\n\n\t\t\tte[ 1 ] = xy + wz;\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\t\tte[ 9 ] = yz - wx;\n\n\t\t\tte[ 2 ] = xz - wy;\n\t\t\tte[ 6 ] = yz + wx;\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function () {\n\n\t\t\tvar x = new Vector3();\n\t\t\tvar y = new Vector3();\n\t\t\tvar z = new Vector3();\n\n\t\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tz.subVectors( eye, target );\n\n\t\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t\tz.z = 1;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t\t// up and z are parallel\n\n\t\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tz.normalize();\n\t\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t\t}\n\n\t\t\t\tx.normalize();\n\t\t\t\ty.crossVectors( z, x );\n\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn attribute;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPosition: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 12 ] = v.x;\n\t\t\tte[ 13 ] = v.y;\n\t\t\tte[ 14 ] = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0,  0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s,  c, 0,\n\t\t\t\t0, 0,  0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts,  c, 0, 0,\n\t\t\t\t0,  0, 1, 0,\n\t\t\t\t0,  0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeShear: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, y, z, 0,\n\t\t\t\tx, 1, z, 0,\n\t\t\t\tx, y, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\t\tthis.scale( scale );\n\t\t\tthis.setPosition( position );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function () {\n\n\t\t\tvar vector = new Vector3();\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\tvar det = this.determinant();\n\t\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\tposition.z = te[ 14 ];\n\n\t\t\t\t// scale the rotation part\n\t\t\t\tmatrix.copy( this );\n\n\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\t\tscale.x = sx;\n\t\t\t\tscale.y = sy;\n\t\t\t\tscale.z = sz;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tif ( far === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Base for inner nodes (including the root) ---\n\n\tfunction UniformContainer() {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array( 16 );\n\tvar mat3array = new Float32Array( 9 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( renderer, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\n\tfunction setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValue2fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n\tfunction setValue3fv( gl, v ) {\n\n\t\tif ( v.x !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\telse if ( v.r !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\telse\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n\tfunction setValue4fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValue2fm( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n\t}\n\n\tfunction setValue3fm( gl, v ) {\n\n\t\tif ( v.elements === undefined ) {\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t} else {\n\n\t\t\tmat3array.set( v.elements );\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t}\n\n\t}\n\n\tfunction setValue4fm( gl, v ) {\n\n\t\tif ( v.elements === undefined ) {\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t} else {\n\n\t\t\tmat4array.set( v.elements );\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t}\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\n\tfunction setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\n\tfunction setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\n\tfunction setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\n\tfunction setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2a( gl, v ) {\n\n\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n\t}\n\n\tfunction setValueV3a( gl, v ) {\n\n\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n\t}\n\n\tfunction setValueV4a( gl, v ) {\n\n\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2a( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n\t}\n\n\tfunction setValueM3a( gl, v ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n\t}\n\n\tfunction setValueM4a( gl, v ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tUniformContainer.call( this ); // mix-in\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t// are not allowed in structured uniforms.\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ] );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\tfor ( ; ; ) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\tid = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program, renderer ) {\n\n\t\tUniformContainer.call( this );\n\n\t\tthis.renderer = renderer;\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\tpath = info.name,\n\t\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tObject.assign( Color.prototype, {\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function () {\n\n\t\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\t\tif ( s === 0 ) {\n\n\t\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function () {\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tthis.r = r * r;\n\t\t\tthis.g = g * g;\n\t\t\tthis.b = b * b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function () {\n\n\t\t\tthis.r = Math.sqrt( this.r );\n\t\t\tthis.g = Math.sqrt( this.g );\n\t\t\tthis.b = Math.sqrt( this.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( optionalTarget ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\thsl.h = hue;\n\t\t\thsl.s = saturation;\n\t\t\thsl.l = lightness;\n\n\t\t\treturn hsl;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tvar hsl = this.getHSL();\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\n\t\t\tspecularMap: { value: null },\n\t\t\talphaMap: { value: null },\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tvar UniformsUtils = {\n\n\t\tmerge: function ( uniforms ) {\n\n\t\t\tvar merged = {};\n\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn merged;\n\n\t\t},\n\n\t\tclone: function ( uniforms_src ) {\n\n\t\t\tvar uniforms_dst = {};\n\n\t\t\tfor ( var u in uniforms_src ) {\n\n\t\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uniforms_dst;\n\n\t\t}\n\n\t};\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\n\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n\tvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = asin( flipNormal * reflectVec.y ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\n\tvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n\tvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n\tvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar normal_flip = \"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";\n\n\tvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n\tvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n\tvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar distanceRGBA_frag = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\n\tvar distanceRGBA_vert = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar shadow_frag = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\";\n\n\tvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars: lights_pars,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_template: lights_template,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_flip: normal_flip,\n\t\tnormal_fragment: normal_fragment,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t\ttFlip: { value: - 1 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: {\n\t\t\t\tlightPos: { value: new Vector3() }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\tclearCoat: { value: 0 },\n\t\t\t\tclearCoatRoughness: { value: 0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box2.prototype, {\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlarePlugin( renderer, flares ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar shader, program, attributes, uniforms;\n\n\t\tvar tempTexture, occlusionTexture;\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 1, - 1,  0, 0,\n\t\t\t\t 1, - 1,  1, 0,\n\t\t\t\t 1,  1,  1, 1,\n\t\t\t\t- 1,  1,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\t// buffers\n\n\t\t\tvertexBuffer     = gl.createBuffer();\n\t\t\telementBuffer    = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\t// textures\n\n\t\t\ttempTexture      = gl.createTexture();\n\t\t\tocclusionTexture = gl.createTexture();\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t\tprogram = createProgram( shader );\n\n\t\t\tattributes = {\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t\t};\n\n\t\t}\n\n\t\t/*\n\t\t * Render lens flares\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t *         reads these back and calculates occlusion.\n\t\t */\n\n\t\tthis.render = function ( scene, camera, viewport ) {\n\n\t\t\tif ( flares.length === 0 ) return;\n\n\t\t\tvar tempPosition = new Vector3();\n\n\t\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\t\tvar size = 16 / viewport.w,\n\t\t\t\tscale = new Vector2( size * invAspect, size );\n\n\t\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n\t\t\tvar validArea = new Box2();\n\n\t\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.vertex );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t// loop through all lens flares to update their occlusion and positions\n\t\t\t// setup gl and common used attribs/uniforms\n\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.buffers.depth.setMask( false );\n\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\t\tsize = 16 / viewport.w;\n\t\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t\t// calc object screen position\n\n\t\t\t\tvar flare = flares[ i ];\n\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\t\ttempPosition.applyMatrix4( camera.projectionMatrix );\n\n\t\t\t\t// setup arrays for gl programs\n\n\t\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t\t// screen cull\n\n\t\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// render pink quad\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// restore graphics\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// update object positions\n\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// render flares\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\t\tstate.buffers.depth.setMask( true );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram( shader ) {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\t\tgl.compileShader( fragmentShader );\n\t\t\tgl.compileShader( vertexShader );\n\n\t\t\tgl.attachShader( program, fragmentShader );\n\t\t\tgl.attachShader( program, vertexShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpritePlugin( renderer, sprites ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar program, attributes, uniforms;\n\n\t\tvar texture;\n\n\t\t// decompose matrixWorld\n\n\t\tvar spritePosition = new Vector3();\n\t\tvar spriteRotation = new Quaternion();\n\t\tvar spriteScale = new Vector3();\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t\t- 0.5,   0.5,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\tvertexBuffer  = gl.createBuffer();\n\t\t\telementBuffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\tprogram = createProgram();\n\n\t\t\tattributes = {\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t\t};\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = 8;\n\t\t\tcanvas.height = 8;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\t\ttexture = new Texture( canvas );\n\t\t\ttexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( sprites.length === 0 ) return;\n\n\t\t\t// setup gl\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.position );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.BLEND );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\t\tvar oldFogType = 0;\n\t\t\tvar sceneFogType = 0;\n\t\t\tvar fog = scene.fog;\n\n\t\t\tif ( fog ) {\n\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\t\tif ( fog.isFog ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\t\toldFogType = 1;\n\t\t\t\t\tsceneFogType = 1;\n\n\t\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\t\toldFogType = 2;\n\t\t\t\t\tsceneFogType = 2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\t\toldFogType = 0;\n\t\t\t\tsceneFogType = 0;\n\n\t\t\t}\n\n\n\t\t\t// update positions and sort\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t\t}\n\n\t\t\tsprites.sort( painterSortStable );\n\n\t\t\t// render all sprites\n\n\t\t\tvar scale = [];\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\t\t\t\tvar material = sprite.material;\n\n\t\t\t\tif ( material.visible === false ) continue;\n\n\t\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\t\tvar fogType = 0;\n\n\t\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\t\tfogType = sceneFogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\t\toldFogType = fogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.map !== null ) {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\trenderer.setTexture2D( material.map, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setTexture2D( texture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram() {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform float rotation;',\n\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t'uniform vec2 uvOffset;',\n\t\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t\t'attribute vec2 position;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t\t'uniform vec3 color;',\n\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t'uniform float opacity;',\n\n\t\t\t\t'uniform int fogType;',\n\t\t\t\t'uniform vec3 fogColor;',\n\t\t\t\t'uniform float fogDensity;',\n\t\t\t\t'uniform float fogNear;',\n\t\t\t\t'uniform float fogFar;',\n\t\t\t\t'uniform float alphaTest;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t\t'}',\n\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.compileShader( vertexShader );\n\t\t\tgl.compileShader( fragmentShader );\n\n\t\t\tgl.attachShader( program, vertexShader );\n\t\t\tgl.attachShader( program, fragmentShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction painterSortStable( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn b.id - a.id;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\t\tthis.visible = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tObject.assign( Material.prototype, EventDispatcher.prototype, {\n\n\t\tisMaterial: true,\n\n\t\tonBeforeCompile: function () {},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = meta === undefined;\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t}\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.shading !== SmoothShading ) data.shading = this.shading;\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\t\tdata.skinning = this.skinning;\n\t\t\tdata.morphTargets = this.morphTargets;\n\n\t\t\tdata.dithering = this.dithering;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.shading = source.shading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.overdraw = source.overdraw;\n\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\t\tthis.defines = source.defines;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = this.uniforms;\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box3.prototype, {\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\tvar z = attribute.getZ( i );\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByObject: function () {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function expandByObject( object ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\t\tvar i, l;\n\n\t\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tintersectsSphere: ( function () {\n\n\t\t\tvar closestPoint = new Vector3();\n\n\t\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetBoundingSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\t\tthis.getCenter( result.center );\n\n\t\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar points = [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t];\n\n\t\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t}\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function () {\n\n\t\t\tvar box = new Box3();\n\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t\t}\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We use the following equation to compute the signed distance from\n\t\t\t// the center of the sphere to the plane.\n\t\t\t//\n\t\t\t// distance = q * n - d\n\t\t\t//\n\t\t\t// If this distance is greater than the radius of the sphere,\n\t\t\t// then there is no intersection.\n\n\t\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\tresult.sub( this.center ).normalize();\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\t\tvar box = optionalTarget || new Box3();\n\n\t\t\tbox.set( this.center, this.center );\n\t\t\tbox.expandByScalar( this.radius );\n\n\t\t\treturn box;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn attribute;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Plane( normal, constant ) {\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tObject.assign( Plane.prototype, {\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n\t\t},\n\n\t\torthoPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n\t\t},\n\n\t\tintersectLine: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tvar direction = line.delta( v1 );\n\n\t\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar m1 = new Matrix3();\n\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t\t// transform normal based on theory here:\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tObject.assign( Frustum.prototype, {\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsObject( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSprite: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function () {\n\n\t\t\tvar p1 = new Vector3(),\n\t\t\t\tp2 = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\tvar planes = this.planes;\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {\n\n\t\tvar _gl = _renderer.context,\n\t\t\t_state = _renderer.state,\n\t\t\t_frustum = new Frustum(),\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_lightShadows = _lights.shadows,\n\n\t\t\t_shadowMapSize = new Vector2(),\n\t\t\t_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\n\n\t\t\t_lookTarget = new Vector3(),\n\t\t\t_lightPositionWorld = new Vector3(),\n\n\t\t\t_MorphingFlag = 1,\n\t\t\t_SkinningFlag = 2,\n\n\t\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t\t_materialCache = {};\n\n\t\tvar cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tvar cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t\tvar cube2DViewPorts = [\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\n\t\t];\n\n\t\t// init\n\n\t\tvar depthMaterialTemplate = new MeshDepthMaterial();\n\t\tdepthMaterialTemplate.depthPacking = RGBADepthPacking;\n\t\tdepthMaterialTemplate.clipping = true;\n\n\t\tvar distanceShader = ShaderLib[ \"distanceRGBA\" ];\n\t\tvar distanceUniforms = UniformsUtils.clone( distanceShader.uniforms );\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = depthMaterialTemplate.clone();\n\t\t\tdepthMaterial.morphTargets = useMorphing;\n\t\t\tdepthMaterial.skinning = useSkinning;\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\tvar distanceMaterial = new ShaderMaterial( {\n\t\t\t\tdefines: {\n\t\t\t\t\t'USE_SHADOWMAP': ''\n\t\t\t\t},\n\t\t\t\tuniforms: distanceUniforms,\n\t\t\t\tvertexShader: distanceShader.vertexShader,\n\t\t\t\tfragmentShader: distanceShader.fragmentShader,\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning,\n\t\t\t\tclipping: true\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.renderReverseSided = true;\n\t\tthis.renderSingleSided = true;\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( _lightShadows.length === 0 ) return;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.disable( _gl.BLEND );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tvar faceCount;\n\n\t\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = _lightShadows[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\t\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t// following orientation:\n\t\t\t\t\t//\n\t\t\t\t\t//  xzXZ\n\t\t\t\t\t//   y Y\n\t\t\t\t\t//\n\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t// z - Negative z direction\n\n\t\t\t\t\t// positive X\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative X\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Z\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative Z\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Y\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t// negative Y\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\t\tshadow.update( light );\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\tfaceCount = 6;\n\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfaceCount = 1;\n\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\t// compute shadow matrix\n\n\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t);\n\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t// run a single pass if not\n\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Restore GL state.\n\t\t\tvar clearColor = _renderer.getClearColor();\n\t\t\tvar clearAlpha = _renderer.getClearAlpha();\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t};\n\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tvar side = material.side;\n\n\t\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n\t\t\t\tside = FrontSide;\n\n\t\t\t}\n\n\t\t\tif ( scope.renderReverseSided ) {\n\n\t\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\t\telse if ( side === BackSide ) side = FrontSide;\n\n\t\t\t}\n\n\t\t\tresult.side = side;\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\n\n\t\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAttributes( gl ) {\n\n\t\tvar buffers = {};\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\t\tvar buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tvar type = gl.FLOAT;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = gl.FLOAT;\n\n\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = gl.SHORT;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = gl.INT;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = gl.BYTE;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( attribute.dynamic === false ) {\n\n\t\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\treturn buffers[ attribute.uuid ];\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\t\t\t\n\t\t\tvar data = buffers[ attribute.uuid ];\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tdelete buffers[ attribute.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\tvar data = buffers[ attribute.uuid ];\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers[ attribute.uuid ] = createBuffer( attribute, bufferType );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Euler( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || Euler.DefaultOrder;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tObject.defineProperties( Euler.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\torder: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._order;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._order = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Euler.prototype, {\n\n\t\tisEuler: true,\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = _Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function () {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\tvar q = new Quaternion();\n\n\t\t\treturn function reorder( newOrder ) {\n\n\t\t\t\tq.setFromEuler( this );\n\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tObject.assign( Layers.prototype, {\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel | 0;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tvar object3DId = 0;\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation.onChange( onRotationChange );\n\t\tquaternion.onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n\t\tisObject3D: true,\n\n\t\tonBeforeRender: function () {},\n\t\tonAfterRender: function () {},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function () {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar q1 = new Quaternion();\n\n\t\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateOnAxis: function () {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function translateX( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function translateY( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function translateZ( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function () {\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function worldToLocal( vector ) {\n\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( this.isCamera ) {\n\n\t\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t\t}\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\t\tthis.children.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\t\t\t\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar scale = new Vector3();\n\n\t\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldRotation: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldScale: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is '' when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.geometry !== undefined ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\t\tthis.projectionMatrix = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Camera,\n\n\t\tisCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan(\n\t\t\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( view !== null ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tObject.assign( Face3.prototype, {\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar count = 0;\n\tfunction GeometryIdCount() { return count++; }\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj = new Object3D();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tvar tempNormals = [];\n\t\t\tvar tempUVs = [];\n\t\t\tvar tempUVs2 = [];\n\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tvar f, fl, face;\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar d = 0;\n\t\t\tvar vertices = this.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tif ( i > 0 ) {\n\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\tvertices1 = this.vertices,\n\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\tfaces1 = this.faces,\n\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\t\tcolors1 = this.colors,\n\t\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\t\tif ( uv === undefined ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tuvs1.push( uvCopy );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar i, il, j, jl, k, kl;\n\n\t\t\t// reset\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\t\tthis.lineDistances = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// vertices\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// face vertex uvs\n\n\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargets = source.morphTargets;\n\n\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = {};\n\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t\t// morph normals\n\n\t\t\tvar morphNormals = source.morphNormals;\n\n\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphNormal = {};\n\n\t\t\t\t// vertex normals\n\n\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// face normals\n\n\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t\t}\n\n\t\t\t// skin weights\n\n\t\t\tvar skinWeights = source.skinWeights;\n\n\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// skin indices\n\n\t\t\tvar skinIndices = source.skinIndices;\n\n\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tvar lineDistances = source.lineDistances;\n\n\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// update flags\n\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.uuid = _Math.generateUUID();\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.onUploadCallback = function () {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\n\t\tisBufferAttribute: true,\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyIndicesArray: function ( indices ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tvar index = indices[ i ];\n\n\t\t\t\tarray[ offset ++ ] = index.a;\n\t\t\t\tarray[ offset ++ ] = index.b;\n\t\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Int8BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize );\n\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\n\tfunction Uint8BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize );\n\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\n\tfunction Uint8ClampedBufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize );\n\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\n\tfunction Int16BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize );\n\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\n\tfunction Uint16BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize );\n\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\n\tfunction Int32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize );\n\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\n\tfunction Uint32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize );\n\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\n\tfunction Float32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize );\n\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\n\tfunction Float64BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize );\n\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tthis.indices = [];\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, {\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex = undefined;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction arrayMax( array ) {\n\n\t\tif ( array.length === 0 ) return - Infinity;\n\n\t\tvar max = array[ 0 ];\n\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t\t}\n\n\t\treturn max;\n\n\t}\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t}\n\n\tBufferGeometry.MaxIndex = 65535;\n\n\tObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj = new Object3D();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh ) {\n\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\t\tvar TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tvar box = new Box3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function computeBoundingSphere() {\n\n\t\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tvar position = this.attributes.position;\n\n\t\t\t\tif ( position ) {\n\n\t\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tvar x, y, z, n;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tx = normals.getX( i );\n\t\t\t\ty = normals.getY( i );\n\t\t\t\tz = normals.getZ( i );\n\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n\t\t\t\tnormals.setXYZ( i, x * n, y * n, z * n );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: array\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar name, i, l;\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( name in morphAttributes ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// BoxGeometry\n\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\n\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\t// BoxBufferGeometry\n\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar numberOfVertices = 0;\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth = width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar ix, iy;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PlaneGeometry\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t// PlaneBufferGeometry\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar ix, iy;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n\t}\n\n\tObject.assign( Ray.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function recast( t ) {\n\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tresult.subVectors( point, this.origin );\n\t\t\tvar directionDistance = result.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn result.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t\t// point behind the ray\n\n\t\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t\t}\n\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\t\treturn v1.distanceToSquared( point );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceSqToSegment: function () {\n\n\t\t\tvar segCenter = new Vector3();\n\t\t\tvar segDir = new Vector3();\n\t\t\tvar diff = new Vector3();\n\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t// defined by v0 and v1\n\t\t\t\t// It can also set two optional targets :\n\t\t\t\t// - The closest point on the ray\n\t\t\t\t// - The closest point on the segment\n\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\t\tif ( det > 0 ) {\n\n\t\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\textDet = segExtent * det;\n\n\t\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t\t}\n\n\t\t\t\treturn sqrDist;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\tvar t0 = tca - thc;\n\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\tvar t1 = tca + thc;\n\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t :  null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, optionalTarget );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, optionalTarget ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t\t},\n\n\t\tintersectsBox: ( function () {\n\n\t\t\tvar v = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectTriangle: function () {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\tvar diff = new Vector3();\n\t\t\tvar edge1 = new Vector3();\n\t\t\tvar edge2 = new Vector3();\n\t\t\tvar normal = new Vector3();\n\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\tvar sign;\n\n\t\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\tsign = 1;\n\n\t\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\t\tsign = - 1;\n\t\t\t\t\tDdN = - DdN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t\t// b1 < 0, no intersection\n\t\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t\t// b2 < 0, no intersection\n\t\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t\t// t < 0, no intersection\n\t\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Ray intersects triangle.\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tObject.assign( Line3.prototype, {\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function () {\n\n\t\t\tvar startP = new Vector3();\n\t\t\tvar startEnd = new Vector3();\n\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\t\tif ( clampToLine ) {\n\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tObject.assign( Triangle, {\n\n\t\tnormal: function () {\n\n\t\t\tvar v0 = new Vector3();\n\n\t\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tresult.subVectors( c, b );\n\t\t\t\tv0.subVectors( a, b );\n\t\t\t\tresult.cross( v0 );\n\n\t\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tbarycoordFromPoint: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\t\tv0.subVectors( c, a );\n\t\t\t\tv1.subVectors( b, a );\n\t\t\t\tv2.subVectors( point, a );\n\n\t\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\t// collinear or singular triangle\n\t\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t\t}\n\n\t\t\t\tvar invDenom = 1 / denom;\n\t\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t\t// barycentric coordinates must always sum to 1\n\t\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarea: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function area() {\n\n\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmidpoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tnormal: function ( optionalTarget ) {\n\n\t\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tplane: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Plane();\n\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tclosestPointToPoint: function () {\n\n\t\t\tvar plane = new Plane();\n\t\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\t\tvar projectedPoint = new Vector3();\n\t\t\tvar closestPoint = new Vector3();\n\n\t\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\tvar minDistance = Infinity;\n\n\t\t\t\t// project the point onto the plane of the triangle\n\n\t\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t\t// check if the projection lies within the triangle\n\n\t\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t\t// if so, this is the closest point\n\n\t\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar m, ml, name;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\tvar vA = new Vector3();\n\t\t\tvar vB = new Vector3();\n\t\t\tvar vC = new Vector3();\n\n\t\t\tvar tempA = new Vector3();\n\t\t\tvar tempB = new Vector3();\n\t\t\tvar tempC = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tvar barycoord = new Vector3();\n\n\t\t\tvar intersectionPoint = new Vector3();\n\t\t\tvar intersectionPointWorld = new Vector3();\n\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\t\treturn uv1.clone();\n\n\t\t\t}\n\n\t\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\t\tvar intersect;\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersect === null ) return null;\n\n\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\tobject: object\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uv ) {\n\n\t\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t\t}\n\n\t\t\t\treturn intersection;\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar material = this.material;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\tif ( material === undefined ) return;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\t// Check boundingBox before continuing\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t\t}\n\n\t\t\t\tvar intersection;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar a, b, c;\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\t\tvar i, l;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar uvs;\n\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\t\tvar clearColor = new Color( 0x000000 );\n\t\tvar clearAlpha = 0;\n\n\t\tvar planeCamera, planeMesh;\n\t\tvar boxCamera, boxMesh;\n\n\t\tfunction render( scene, camera, forceClear ) {\n\n\t\t\tvar background = scene.background;\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\t\tif ( boxCamera === undefined ) {\n\n\t\t\t\t\tboxCamera = new PerspectiveCamera();\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxBufferGeometry( 5, 5, 5 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tboxCamera.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\tboxCamera.matrixWorld.extractRotation( camera.matrixWorld );\n\t\t\t\tboxCamera.matrixWorldInverse.getInverse( boxCamera.matrixWorld );\n\n\t\t\t\tboxMesh.material.uniforms[ \"tCube\" ].value = background;\n\t\t\t\tboxMesh.modelViewMatrix.multiplyMatrices( boxCamera.matrixWorldInverse, boxMesh.matrixWorld );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t\trenderer.renderBufferDirect( boxCamera, null, boxMesh.geometry, boxMesh.material, boxMesh, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.map = background;\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\t\treturn a.program.id - b.program.id;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction WebGLRenderList() {\n\n\t\tvar opaque = [];\n\t\tvar opaqueLastIndex = - 1;\n\n\t\tvar transparent = [];\n\t\tvar transparentLastIndex = - 1;\n\n\t\tfunction init() {\n\n\t\t\topaqueLastIndex = - 1;\n\t\t\ttransparentLastIndex = - 1;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, z, group ) {\n\n\t\t\tvar array, index;\n\n\t\t\t// allocate the next position in the appropriate array\n\n\t\t\tif ( material.transparent ) {\n\n\t\t\t\tarray = transparent;\n\t\t\t\tindex = ++ transparentLastIndex;\n\n\t\t\t} else {\n\n\t\t\t\tarray = opaque;\n\t\t\t\tindex = ++ opaqueLastIndex;\n\n\t\t\t}\n\n\t\t\t// recycle existing render item or grow the array\n\n\t\t\tvar renderItem = array[ index ];\n\n\t\t\tif ( renderItem ) {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = material.program;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: material.program,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\t// assert( index === array.length );\n\t\t\t\tarray.push( renderItem );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction finish() {\n\n\t\t\topaque.length = opaqueLastIndex + 1;\n\t\t\ttransparent.length = transparentLastIndex + 1;\n\n\t\t}\n\n\t\tfunction sort() {\n\n\t\t\topaque.sort( painterSortStable );\n\t\t\ttransparent.sort( reversePainterSortStable );\n\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tfinish: finish,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tvar lists = {};\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar hash = scene.id + ',' + camera.id;\n\t\t\tvar list = lists[ hash ];\n\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists[ hash ] = list;\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = {};\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tif ( position.isInterleavedBufferAttribute ) {\n\n\t\t\t\tcount = position.data.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t} else {\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\t\t}\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, attributes, infoMemory ) {\n\n\t\tvar geometries = {};\n\t\tvar wireframeAttributes = {};\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\t// TODO Remove duplicate code\n\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t\t}\n\n\t\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfoMemory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\t\tinfoMemory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\t\tif ( attribute ) return attribute;\n\n\t\t\tvar indices = [];\n\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\t// console.time( 'wireframe' );\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tvar array = geometryIndex.array;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// console.timeEnd( 'wireframe' );\n\n\t\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLLights() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( gl, geometries, infoRender ) {\n\n\t\tvar updateList = {};\n\n\t\tfunction update( object ) {\n\n\t\t\tvar frame = infoRender.frame;\n\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction clear() {\n\n\t\t\tupdateList = {};\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tclear: clear\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t}\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\tbreak;\n\n\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t}\n\n\tfunction parseIncludes( string ) {\n\n\t\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\t\tfunction replace( match, include ) {\n\n\t\t\tvar replace = ShaderChunk[ include ];\n\n\t\t\tif ( replace === undefined ) {\n\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t}\n\n\t\t\treturn parseIncludes( replace );\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction unrollLoops( string ) {\n\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\tvar unroll = '';\n\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t}\n\n\t\t\treturn unroll;\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction WebGLProgram( renderer, code, material, shader, parameters ) {\n\n\t\tvar gl = renderer.context;\n\n\t\tvar extensions = material.extensions;\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = shader.vertexShader;\n\t\tvar fragmentShader = shader.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t}\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t// console.log( 'building new program ' );\n\n\t\t//\n\n\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t\t'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = parseIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\t\tfragmentShader = parseIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\t\tif ( ! material.isShaderMaterial ) {\n\n\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function() {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms =\n\t\t\t\t\tnew WebGLUniforms( gl, program, renderer );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function() {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function() {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tuniforms: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tattributes: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\n\t\t//\n\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t\t];\n\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( map.isTexture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\t\tvar precision = renderer.getPrecision();\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexColors: material.vertexColors,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.shading === FlatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\t\tarray.push( renderer.gammaOutput );\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, code, material, shader, parameters );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function ( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, infoMemory ) {\n\n\t\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t\t//\n\n\t\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t// premultiplied alpha.\n\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction makePowerOfTwo( image ) {\n\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = _Math.nearestPowerOfTwo( image.width );\n\t\t\t\tcanvas.height = _Math.nearestPowerOfTwo( image.height );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tinfoMemory.textures --;\n\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\tinfoMemory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t\t} else {\n\n\t\t\t\t// 2D texture\n\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\t// remove all webgl properties\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.remove( renderTarget.texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image.length === 6 ) {\n\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\t\tvar cubeImage = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\t\timage = makePowerOfTwo( image );\n\n\t\t\t}\n\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t        console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\n\t\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\n\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( !( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error('Unknown depthTexture format')\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfoMemory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t_gl.generateMipmap( target );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = {};\n\n\t\tfunction get( object ) {\n\n\t\t\tvar uuid = object.uuid;\n\t\t\tvar map = properties[ uuid ];\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties[ uuid ] = map;\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tdelete properties[ object.uuid ];\n\n\t\t}\n\n\t\tfunction clear() {\n\n\t\t\tproperties = {};\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tclear: clear\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, paramThreeToGL ) {\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4();\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( 0, 0, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar capabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar currentScissorTest = null;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\t\tvar version = parseFloat( /^WebGL\\ ([0-9])/.exec( gl.getParameter( gl.VERSION ) )[ 1 ] );\n\t\tvar lineWidthAvailable = parseFloat( version ) >= 1.0;\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t//\n\n\t\tfunction init() {\n\n\t\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\t\tdepthBuffer.setClear( 1 );\n\t\t\tstencilBuffer.setClear( 0 );\n\n\t\t\tenable( gl.DEPTH_TEST );\n\t\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\t\tsetFlipSided( false );\n\t\t\tsetCullFace( CullFaceBack );\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tenable( gl.BLEND );\n\t\t\tsetBlending( NormalBlending );\n\n\t\t}\n\n\t\tfunction initAttributes() {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tcapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tcapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getCompressedTextureFormats() {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t}\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending !== NoBlending ) {\n\n\t\t\t\tenable( gl.BLEND );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.BLEND );\n\n\t\t\t}\n\n\t\t\tif ( ( blending !== CustomBlending ) && ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) ) {\n\n\t\t\t\tif ( blending === AdditiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === SubtractiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === MultiplyBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blending === CustomBlending ) {\n\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\n\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t\t}\n\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\n\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcurrentBlendEquation = null;\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setMaterial( material ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( gl.CULL_FACE )\n\t\t\t\t: enable( gl.CULL_FACE );\n\n\t\t\tsetFlipSided( material.side === BackSide );\n\n\t\t\tmaterial.transparent === true\n\t\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t\t: setBlending( NoBlending );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getScissorTest() {\n\n\t\t\treturn currentScissorTest;\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tcurrentScissorTest = scissorTest;\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tinit: init,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tgetScissorTest: getScissorTest,\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\treturn {\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ArrayCamera( array ) {\n\n\t\tPerspectiveCamera.call( this );\n\n\t\tthis.cameras = array || [];\n\n\t}\n\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\t\tconstructor: ArrayCamera,\n\n\t\tisArrayCamera: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebVRManager( renderer ) {\n\n\t\tvar scope = this;\n\n\t\tvar device = null;\n\t\tvar frameData = null;\n\n\t\tif ( 'VRFrameData' in window ) {\n\n\t\t\tframeData = new window.VRFrameData();\n\n\t\t}\n\n\t\tvar matrixWorldInverse = new Matrix4();\n\n\t\tvar standingMatrix = new Matrix4();\n\t\tvar standingMatrixInverse = new Matrix4();\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\t\tcameraL.layers.enable( 1 );\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\t\tcameraR.layers.enable( 2 );\n\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\t//\n\n\t\tvar currentSize, currentPixelRatio;\n\n\t\tfunction onVRDisplayPresentChange() {\n\n\t\t\tif ( device.isPresenting ) {\n\n\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\t} else if ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t}\n\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t\t//\n\n\t\tthis.enabled = false;\n\t\tthis.standing = false;\n\n\t\tthis.getDevice = function () {\n\n\t\t\treturn device;\n\n\t\t};\n\n\t\tthis.setDevice = function ( value ) {\n\n\t\t\tif ( value !== undefined ) device = value;\n\n\t\t};\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tif ( device === null ) return camera;\n\n\t\t\tdevice.depthNear = camera.near;\n\t\t\tdevice.depthFar = camera.far;\n\n\t\t\tdevice.getFrameData( frameData );\n\n\t\t\t//\n\n\t\t\tvar pose = frameData.pose;\n\n\t\t\tif ( pose.position !== null ) {\n\n\t\t\t\tcamera.position.fromArray( pose.position );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.position.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( pose.orientation !== null ) {\n\n\t\t\t\tcamera.quaternion.fromArray( pose.orientation );\n\n\t\t\t}\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( this.standing && stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\t\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\t\t\tcamera.matrixWorld.multiply( standingMatrix );\n\t\t\t\tcamera.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t\t//\n\n\t\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t\tif ( this.standing && stageParameters ) {\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tvar parent = camera.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t\t// HACK @mrdoob\n\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t//\n\n\t\t\tvar layers = device.getLayers();\n\n\t\t\tif ( layers.length ) {\n\n\t\t\t\tvar layer = layers[ 0 ];\n\n\t\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t\t}\n\n\t\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getStandingMatrix = function () {\n\n\t\t\treturn standingMatrix;\n\n\t\t};\n\n\t\tthis.submitFrame = function () {\n\n\t\t\tif ( device && device.isPresenting ) device.submitFrame();\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function() {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function() {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled ||\n\t\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\t\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t// import { Sphere } from '../math/Sphere';\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\t\tvar lights = [];\n\n\t\tvar currentRenderList = null;\n\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tvar sprites = [];\n\t\tvar lensFlares = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\t\tthis.context = null;\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t\t// internal state cache\n\n\t\t\t_currentProgram = null,\n\t\t\t_currentRenderTarget = null,\n\t\t\t_currentFramebuffer = null,\n\t\t\t_currentMaterialId = - 1,\n\t\t\t_currentGeometryProgram = '',\n\n\t\t\t_currentCamera = null,\n\t\t\t_currentArrayCamera = null,\n\n\t\t\t_currentScissor = new Vector4(),\n\t\t\t_currentScissorTest = null,\n\n\t\t\t_currentViewport = new Vector4(),\n\n\t\t\t//\n\n\t\t\t_usedTextureUnits = 0,\n\n\t\t\t//\n\n\t\t\t_width = _canvas.width,\n\t\t\t_height = _canvas.height,\n\n\t\t\t_pixelRatio = 1,\n\n\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissorTest = false,\n\n\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\n\t\t\t// frustum\n\n\t\t\t_frustum = new Frustum(),\n\n\t\t\t// clipping\n\n\t\t\t_clipping = new WebGLClipping(),\n\t\t\t_clippingEnabled = false,\n\t\t\t_localClippingEnabled = false,\n\n\t\t\t// camera matrices cache\n\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_vector3 = new Vector3(),\n\t\t\t_matrix4 = new Matrix4(),\n\t\t\t_matrix42 = new Matrix4(),\n\n\t\t\t// light arrays cache\n\n\t\t\t_lights = {\n\n\t\t\t\thash: '',\n\n\t\t\t\tambient: [ 0, 0, 0 ],\n\t\t\t\tdirectional: [],\n\t\t\t\tdirectionalShadowMap: [],\n\t\t\t\tdirectionalShadowMatrix: [],\n\t\t\t\tspot: [],\n\t\t\t\tspotShadowMap: [],\n\t\t\t\tspotShadowMatrix: [],\n\t\t\t\trectArea: [],\n\t\t\t\tpoint: [],\n\t\t\t\tpointShadowMap: [],\n\t\t\t\tpointShadowMatrix: [],\n\t\t\t\themi: [],\n\n\t\t\t\tshadows: []\n\n\t\t\t},\n\n\t\t\t// info\n\n\t\t\t_infoMemory = {\n\t\t\t\tgeometries: 0,\n\t\t\t\ttextures: 0\n\t\t\t},\n\n\t\t\t_infoRender = {\n\n\t\t\t\tframe: 0,\n\t\t\t\tcalls: 0,\n\t\t\t\tvertices: 0,\n\t\t\t\tfaces: 0,\n\t\t\t\tpoints: 0\n\n\t\t\t};\n\n\t\tthis.info = {\n\n\t\t\trender: _infoRender,\n\t\t\tmemory: _infoMemory,\n\t\t\tprograms: null\n\n\t\t};\n\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t\t};\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t\t}\n\n\t\tvar extensions = new WebGLExtensions( _gl );\n\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\tBufferGeometry.MaxIndex = 4294967296;\n\n\t\t}\n\n\t\tvar capabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tvar state = new WebGLState( _gl, extensions, paramThreeToGL );\n\n\t\tvar properties = new WebGLProperties();\n\t\tvar textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, _infoMemory );\n\t\tvar attributes = new WebGLAttributes( _gl );\n\t\tvar geometries = new WebGLGeometries( _gl, attributes, _infoMemory );\n\t\tvar objects = new WebGLObjects( _gl, geometries, _infoRender );\n\t\tvar programCache = new WebGLPrograms( this, capabilities );\n\t\tvar lightCache = new WebGLLights();\n\t\tvar renderLists = new WebGLRenderLists();\n\n\t\tvar background = new WebGLBackground( this, state, objects, _premultipliedAlpha );\n\t\tvar vr = new WebVRManager( this );\n\n\t\tthis.info.programs = programCache.programs;\n\n\t\tvar bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\tvar indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\t//\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\tfunction setDefaultGLState() {\n\n\t\t\tstate.init();\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t}\n\n\t\tfunction resetGLState() {\n\n\t\t\t_currentProgram = null;\n\t\t\t_currentCamera = null;\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\n\t\t\tstate.reset();\n\n\t\t}\n\n\t\tsetDefaultGLState();\n\n\t\tthis.context = _gl;\n\t\tthis.capabilities = capabilities;\n\t\tthis.extensions = extensions;\n\t\tthis.properties = properties;\n\t\tthis.renderLists = renderLists;\n\t\tthis.state = state;\n\t\tthis.vr = vr;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );\n\n\t\tthis.shadowMap = shadowMap;\n\n\n\t\t// Plugins\n\n\t\tvar spritePlugin = new SpritePlugin( this, sprites );\n\t\tvar lensFlarePlugin = new LensFlarePlugin( this, lensFlares );\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.getMaxAnisotropy = function () {\n\n\t\t\treturn capabilities.getMaxAnisotropy();\n\n\t\t};\n\n\t\tthis.getPrecision = function () {\n\n\t\t\treturn capabilities.precision;\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\tvar device = vr.getDevice();\n\n\t\t\tif ( device && device.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t_canvas.height = height * _pixelRatio;\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width * _pixelRatio,\n\t\t\t\theight: _height * _pixelRatio\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t_canvas.width = width * pixelRatio;\n\t\t\t_canvas.height = height * pixelRatio;\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\t_viewport.set( x, _height - y - height, width, height );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\t_scissor.set( x, _height - y - height, width, height );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = background.getClearColor;\n\t\tthis.setClearColor = background.setClearColor;\n\t\tthis.getClearAlpha = background.getClearAlpha;\n\t\tthis.setClearAlpha = background.setClearAlpha;\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t};\n\n\t\t// Reset\n\n\t\tthis.resetGLState = resetGLState;\n\n\t\tthis.dispose = function () {\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t\trenderLists.dispose();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tresetGLState();\n\t\t\tsetDefaultGLState();\n\n\t\t\tproperties.clear();\n\t\t\tobjects.clear();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\t\tmaterial.shading === FlatShading ) {\n\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tfunction absNumericalSort( a, b ) {\n\n\t\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\n\n\t\t}\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( morphTargetInfluences !== undefined ) {\n\n\t\t\t\t// TODO Remove allocations\n\n\t\t\t\tvar activeInfluences = [];\n\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\n\n\t\t\t\t}\n\n\t\t\t\tactiveInfluences.sort( absNumericalSort );\n\n\t\t\t\tif ( activeInfluences.length > 8 ) {\n\n\t\t\t\t\tactiveInfluences.length = 8;\n\n\t\t\t\t}\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = activeInfluences[ i ];\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\n\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\n\n\t\t\t\t\t\tvar index = influence[ 1 ];\n\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {\n\n\t\t\t\t\tmorphInfluences[ i ] = 0.0;\n\n\t\t\t\t}\n\n\t\t\t\tprogram.getUniforms().setValue( _gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = 0;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) return;\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t}\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tlights = [];\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlights.push( object );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tsetupLights( lights, camera );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.material ) {\n\n\t\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Rendering\n\n\t\tthis.animate = function ( callback ) {\n\n\t\t\tfunction onFrame() {\n\n\t\t\t\tcallback();\n\n\t\t\t\t( vr.getDevice() || window ).requestAnimationFrame( onFrame );\n\n\t\t\t}\n\n\t\t\t( vr.getDevice() || window ).requestAnimationFrame( onFrame );\n\n\t\t};\n\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tcamera = vr.getCamera( camera );\n\n\t\t\t}\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\tlights.length = 0;\n\t\t\tsprites.length = 0;\n\t\t\tlensFlares.length = 0;\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\tcurrentRenderList.init();\n\n\t\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tsetupShadows( lights );\n\n\t\t\tshadowMap.render( scene, camera );\n\n\t\t\tsetupLights( lights, camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\t_infoRender.frame ++;\n\t\t\t_infoRender.calls = 0;\n\t\t\t_infoRender.vertices = 0;\n\t\t\t_infoRender.faces = 0;\n\t\t\t_infoRender.points = 0;\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = null;\n\n\t\t\t}\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t//\n\n\t\t\tbackground.render( scene, camera, forceClear );\n\n\t\t\t// render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t}\n\n\t\t\t// custom render plugins (post pass)\n\n\t\t\tspritePlugin.render( scene, camera );\n\t\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_this.setScissorTest( false );\n\n\t\t\t}\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tvr.submitFrame();\n\n\t\t\t}\n\n\t\t\t// _gl.finish();\n\n\t\t};\n\n\t\t/*\n\t\t// TODO Duplicated code (Frustum)\n\n\t\tvar _sphere = new Sphere();\n\n\t\tfunction isObjectViewable( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSpriteViewable( sprite ) {\n\n\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSphereViewable( sphere ) {\n\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\t\tif ( numPlanes === 0 ) return true;\n\n\t\t\tvar planes = _this.clippingPlanes,\n\n\t\t\t\tcenter = sphere.center,\n\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\ti = 0;\n\n\t\t\tdo {\n\n\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t\t} while ( ++ i !== numPlanes );\n\n\t\t\treturn true;\n\n\t\t}\n\t\t*/\n\n\t\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\t\tif ( ! object.visible ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlights.push( object );\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tsprites.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isLensFlare ) {\n\n\t\t\t\t\tlensFlares.push( object );\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\t_this.setViewport( x, y, width, height );\n\t\t\t\t\t\t\t_this.setScissor( x, y, width, height );\n\t\t\t\t\t\t\t_this.setScissorTest( true );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\tstate.setMaterial( material );\n\n\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t\t_currentGeometryProgram = '';\n\n\t\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader );\n\n\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.fog = fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.lightsHash = _lights.hash;\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\n\t\t\t\tuniforms.directionalLights.value = _lights.directional;\n\t\t\t\tuniforms.spotLights.value = _lights.spot;\n\t\t\t\tuniforms.rectAreaLights.value = _lights.rectArea;\n\t\t\t\tuniforms.pointLights.value = _lights.point;\n\t\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\t_usedTextureUnits = 0;\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate === false ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( program.id !== _currentProgram ) {\n\n\t\t\t\t_gl.useProgram( program.program );\n\t\t\t\t_currentProgram = program.id;\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\tsize = _Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isMeshNormalMaterial ||\n\t\t\t\t\tmaterial.isMeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh single material specific uniforms\n\n\t\t\t\tif ( material.isLineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t\t// RectAreaLight Texture\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\t\tif ( m_uniforms.ltcMat !== undefined ) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;\n\t\t\t\tif ( m_uniforms.ltcMag !== undefined ) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;\n\n\t\t\t\tWebGLUniforms.upload(\n\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t\t}\n\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tuniforms.map.value = material.map;\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _height * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value = fog.color;\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value = material.specular;\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t}\n\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t// Lighting\n\n\t\tfunction setupShadows( lights ) {\n\n\t\t\tvar lightShadowsLength = 0;\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t_lights.shadows[ lightShadowsLength ] = light;\n\t\t\t\t\tlightShadowsLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.shadows.length = lightShadowsLength;\n\n\t\t}\n\n\t\tfunction setupLights( lights, camera ) {\n\n\t\t\tvar l, ll, light, shadow,\n\t\t\t\tr = 0, g = 0, b = 0,\n\t\t\t\tcolor,\n\t\t\t\tintensity,\n\t\t\t\tdistance,\n\t\t\t\tshadowMap,\n\n\t\t\t\tviewMatrix = camera.matrixWorldInverse,\n\n\t\t\t\tdirectionalLength = 0,\n\t\t\t\tpointLength = 0,\n\t\t\t\tspotLength = 0,\n\t\t\t\trectAreaLength = 0,\n\t\t\t\themiLength = 0;\n\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\t\tlight = lights[ l ];\n\n\t\t\t\tcolor = light.color;\n\t\t\t\tintensity = light.intensity;\n\t\t\t\tdistance = light.distance;\n\n\t\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tshadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tshadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.spot[ spotLength ] = uniforms;\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\t// (a) intensity controls irradiance of entire light\n\t\t\t\t\tuniforms.color\n\t\t\t\t\t\t.copy( color )\n\t\t\t\t\t\t.multiplyScalar( intensity / ( light.width * light.height ) );\n\n\t\t\t\t\t// (b) intensity controls the radiance per light area\n\t\t\t\t\t// uniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\t_matrix42.identity();\n\t\t\t\t\t_matrix4.copy( light.matrixWorld );\n\t\t\t\t\t_matrix4.premultiply( viewMatrix );\n\t\t\t\t\t_matrix42.extractRotation( _matrix4 );\n\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5,                0.0, 0.0 );\n\t\t\t\t\tuniforms.halfHeight.set(              0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( _matrix42 );\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( _matrix42 );\n\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t\t_lights.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tshadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.point[ pointLength ] = uniforms;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\t_lights.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.ambient[ 0 ] = r;\n\t\t\t_lights.ambient[ 1 ] = g;\n\t\t\t_lights.ambient[ 2 ] = b;\n\n\t\t\t_lights.directional.length = directionalLength;\n\t\t\t_lights.spot.length = spotLength;\n\t\t\t_lights.rectArea.length = rectAreaLength;\n\t\t\t_lights.point.length = pointLength;\n\t\t\t_lights.hemi.length = hemiLength;\n\n\t\t\t// TODO (sam-g-steel) why aren't we using join\n\t\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + _lights.shadows.length;\n\n\t\t}\n\n\t\t// GL state setting\n\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\t\tstate.setCullFace( cullFace );\n\t\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n\t\t};\n\n\t\t// Textures\n\n\t\tfunction allocTextureUnit() {\n\n\t\t\tvar textureUnit = _usedTextureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\t_usedTextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tthis.allocTextureUnit = allocTextureUnit;\n\n\t\t// this.setTexture2D = setTexture2D;\n\t\tthis.setTexture2D = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTexture( texture, slot ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTextureCube = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t// TODO: unify these code paths\n\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tvar framebuffer;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = null;\n\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tstate.viewport( _currentViewport );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Map three.js constants to WebGL constants\n\n\t\tfunction paramThreeToGL( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === RepeatWrapping ) return _gl.REPEAT;\n\t\t\tif ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n\t\t\tif ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n\t\t\tif ( p === NearestFilter ) return _gl.NEAREST;\n\t\t\tif ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tif ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n\t\t\tif ( p === LinearFilter ) return _gl.LINEAR;\n\t\t\tif ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tif ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n\t\t\tif ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n\t\t\tif ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n\t\t\tif ( p === ByteType ) return _gl.BYTE;\n\t\t\tif ( p === ShortType ) return _gl.SHORT;\n\t\t\tif ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n\t\t\tif ( p === IntType ) return _gl.INT;\n\t\t\tif ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;\n\t\t\tif ( p === FloatType ) return _gl.FLOAT;\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) return _gl.ALPHA;\n\t\t\tif ( p === RGBFormat ) return _gl.RGB;\n\t\t\tif ( p === RGBAFormat ) return _gl.RGBA;\n\t\t\tif ( p === LuminanceFormat ) return _gl.LUMINANCE;\n\t\t\tif ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;\n\t\t\tif ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;\n\n\t\t\tif ( p === AddEquation ) return _gl.FUNC_ADD;\n\t\t\tif ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;\n\t\t\tif ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n\t\t\tif ( p === ZeroFactor ) return _gl.ZERO;\n\t\t\tif ( p === OneFactor ) return _gl.ONE;\n\t\t\tif ( p === SrcColorFactor ) return _gl.SRC_COLOR;\n\t\t\tif ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n\t\t\tif ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tif ( p === DstAlphaFactor ) return _gl.DST_ALPHA;\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n\t\t\tif ( p === DstColorFactor ) return _gl.DST_COLOR;\n\t\t\tif ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2 ( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tFogExp2.prototype.clone = function () {\n\n\t\treturn new FogExp2( this.color.getHex(), this.density );\n\n\t};\n\n\tFogExp2.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog ( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tFog.prototype.clone = function () {\n\n\t\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n\t};\n\n\tFog.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene () {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t}\n\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Scene,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlare( texture, size, distance, blending, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.lensFlares = [];\n\n\t\tthis.positionScreen = new Vector3();\n\t\tthis.customUpdateCallback = undefined;\n\n\t\tif ( texture !== undefined ) {\n\n\t\t\tthis.add( texture, size, distance, blending, color );\n\n\t\t}\n\n\t}\n\n\tLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LensFlare,\n\n\t\tisLensFlare: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.positionScreen.copy( source.positionScreen );\n\t\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\t\tif ( size === undefined ) size = - 1;\n\t\t\tif ( distance === undefined ) distance = 0;\n\t\t\tif ( opacity === undefined ) opacity = 1;\n\t\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\t\tif ( blending === undefined ) blending = NormalBlending;\n\n\t\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\t\tthis.lensFlares.push( {\n\t\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\t\tscale: 1, \t\t// scale\n\t\t\t\trotation: 0, \t\t// rotation\n\t\t\t\topacity: opacity,\t// opacity\n\t\t\t\tcolor: color,\t\t// color\n\t\t\t\tblending: blending\t// blending\n\t\t\t} );\n\n\t\t},\n\n\t\t/*\n\t\t * Update lens flares update positions on all flares based on the screen position\n\t\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t\t */\n\n\t\tupdateLensFlares: function () {\n\n\t\t\tvar f, fl = this.lensFlares.length;\n\t\t\tvar flare;\n\t\t\tvar vecX = - this.positionScreen.x * 2;\n\t\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *\tuvOffset: new THREE.Vector2(),\n\t *\tuvScale: new THREE.Vector2()\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar intersectPoint = new Vector3();\n\t\t\tvar worldPosition = new Vector3();\n\t\t\tvar worldScale = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tupdate: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar levels = this.levels;\n\n\t\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Skeleton( bones, boneInverses ) {\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone, i, il;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: ( function () {\n\n\t\t\tvar offsetMatrix = new Matrix4();\n\t\t\tvar identityMatrix = new Matrix4();\n\n\t\t\treturn function update() {\n\n\t\t\t\tvar bones = this.bones;\n\t\t\t\tvar boneInverses = this.boneInverses;\n\t\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t\t// flatten bone matrices to array\n\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tvar bones = this.initBones();\n\t\tvar skeleton = new Skeleton( bones );\n\n\t\tthis.bind( skeleton, this.matrixWorld );\n\n\t\tthis.normalizeSkinWeights();\n\n\t}\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tinitBones: function () {\n\n\t\t\tvar bones = [], bone, gbone;\n\t\t\tvar i, il;\n\n\t\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t\t// create new 'Bone' object\n\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t\tbones.push( bone );\n\n\t\t\t\t\t// apply values\n\n\t\t\t\t\tbone.name = gbone.name;\n\t\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t\t}\n\n\t\t\t\t// second, create bone hierarchy\n\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t\t// let's update the corresponding matrices\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn bones;\n\n\t\t},\n\n\t\tbind: function ( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tvar scale, i;\n\n\t\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\t\tscale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\t\tvar vec = new Vector4();\n\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\t\tscale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\t\treturn new LineSegments( geometry, material );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar precision = raycaster.linePrecision;\n\t\t\t\tvar precisionSq = precision * precision;\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar vStart = new Vector3();\n\t\t\t\tvar vEnd = new Vector3();\n\t\t\t\tvar interSegment = new Vector3();\n\t\t\t\tvar interRay = new Vector3();\n\t\t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true\n\n\t} );\n\n\t/**\n\t * @author mgreter / http://github.com/mgreter\n\t */\n\n\tfunction LineLoop( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineLoop,\n\n\t\tisLineLoop: true,\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar object = this;\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\t\tsphere.radius += threshold;\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\tvar position = new Vector3();\n\n\t\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.generateMipmaps = false;\n\n\t\tvar scope = this;\n\n\t\tfunction update() {\n\n\t\t\trequestAnimationFrame( update );\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tscope.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate();\n\n\t}\n\n\tVideoTexture.prototype = Object.create( Texture.prototype );\n\tVideoTexture.prototype.constructor = VideoTexture;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar i, j, l, o, ol;\n\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\t\tvar vertex;\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tvar position, indices, groups;\n\t\t\tvar group, start, count;\n\t\t\tvar index1, index2;\n\n\t\t\tvertex = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\t\t\t\tindices = geometry.index;\n\t\t\t\tgroups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\t\tstart = group.start;\n\t\t\t\t\tcount = group.count;\n\n\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( key in edges ) {\n\n\t\t\t\t\te = edges[ key ];\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\n\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\t// ParametricGeometry\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t// ParametricBufferGeometry\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar EPS = 0.00001;\n\n\t\tvar normal = new Vector3();\n\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\tvar pu = new Vector3(), pv = new Vector3();\n\n\t\tvar i, j;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tvar u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tp0 = func( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tp1 = func( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp1 = func( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tp1 = func( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp1 = func( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\tvar a = i * sliceCount + j;\n\t\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PolyhedronGeometry\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t// PolyhedronBufferGeometry\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tappplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\tvar i, j;\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction appplyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TetrahedronGeometry\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t// TetrahedronBufferGeometry\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// OctahedronGeometry\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t// OctahedronBufferGeometry\n\n\tfunction OctahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// IcosahedronGeometry\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t \tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t// IcosahedronBufferGeometry\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// DodecahedronGeometry\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t// DodecahedronBufferGeometry\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t\t  1, - 1, - 1,     1, - 1,  1,\n\t\t\t  1,  1, - 1,     1,  1,  1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t,     0, - r,  t,\n\t\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t,  0,    - r,  t,  0,\n\t\t\t r, - t,  0,     r,  t,  0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t,  0, - r,     t,  0, - r,\n\t\t\t- t,  0,  r,     t,  0,  r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */\n\n\t// TubeGeometry\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t// TubeBufferGeometry\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\tvar i, j;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tvar P = path.getPointAt( i / tubularSegments );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin =   Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */\n\n\t// TorusKnotGeometry\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t// TorusKnotBufferGeometry\n\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, j;\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TorusGeometry\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t// TorusBufferGeometry\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\ttriangulate: ( function () {\n\n\t\t\t/**\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t * See original code and more information here:\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t *\n\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t * www.actionsnippet.com\n\t\t\t *\n\t\t\t * ported to javascript by Joshua Koo\n\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t *\n\t\t\t */\n\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\t\tvar p;\n\t\t\t\tvar ax, ay, bx, by;\n\t\t\t\tvar cx, cy, px, py;\n\n\t\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// takes in an contour array and returns\n\n\t\t\treturn function triangulate( contour, indices ) {\n\n\t\t\t\tvar n = contour.length;\n\n\t\t\t\tif ( n < 3 ) return null;\n\n\t\t\t\tvar result = [],\n\t\t\t\t\tverts = [],\n\t\t\t\t\tvertIndices = [];\n\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\t\tvar u, v, w;\n\n\t\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t\t}\n\n\t\t\t\tvar nv = n;\n\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t\t//return null;\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnv --;\n\n\t\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\treturn result;\n\n\t\t\t}\n\n\t\t} )(),\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tfunction removeDupEndPts(points) {\n\n\t\t\t\tvar l = points.length;\n\n\t\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\t\tpoints.pop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\n\t\t\t\t\tvar perpSeg2;\n\t\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t\t// return real intersection point\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t\t// they are collinear or degenerate\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t\t// both segments are points\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#1  is a single point\n\t\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#2  is a single point\n\t\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t\t// The order of legs is important\n\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t\t// angle != 180 deg.\n\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\t\tvar hole;\n\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with shape edges\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar indepHoles = [];\n\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with hole edges\n\t\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\t\tshapePt, holePt,\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tindepHoles.push( h );\n\n\t\t\t\t}\n\n\t\t\t\tvar minShapeIndex = 0;\n\t\t\t\tvar counter = indepHoles.length * 2;\n\t\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\t\tcounter --;\n\t\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t\t// which can be connected without intersections\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t\t}\n\n\n\t\t\tvar i, il, f, face,\n\t\t\t\tkey, index,\n\t\t\t\tallPointsMap = {};\n\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\t\tvar allpoints = contour.concat();\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t\t}\n\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t\t// prepare all points map\n\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.ShapeUtils: Duplicate point\", key, i );\n\n\t\t\t\t}\n\n\t\t\t\tallPointsMap[ key ] = i;\n\n\t\t\t}\n\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t\t// check all face vertices against all points map\n\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\t\tface = triangles[ i ];\n\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n\t\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn triangles.concat();\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  amount: <int>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *  frames: <Object> // containing arrays of tangents, normals, binormals\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\t// ExtrudeGeometry\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\t// ExtrudeBufferGeometry\n\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\t\tif ( typeof ( shapes ) === \"undefined\" ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// can't really use automatic vertex normals\n\t\t// as then front and back sides get smoothed too\n\t\t// should do separate smoothing just for sides\n\n\t\t//this.computeVertexNormals();\n\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n\t}\n\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n\tExtrudeBufferGeometry.prototype.getArrays = function () {\n\n\t\tvar positionAttribute = this.getAttribute( \"position\" );\n\t\tvar verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];\n\n\t\tvar uvAttribute = this.getAttribute( \"uv\" );\n\t\tvar uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];\n\n\t\tvar IndexAttribute = this.index;\n\t\tvar indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];\n\n\t\treturn {\n\t\t\tposition: verticesArray,\n\t\t\tuv: uvArray,\n\t\t\tindex: indicesArray\n\t\t};\n\n\t};\n\n\tExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tvar sl = shapes.length;\n\t\toptions.arrays = this.getArrays();\n\n\t\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\t\tvar shape = shapes[ s ];\n\t\t\tthis.addShape( shape, options );\n\n\t\t}\n\n\t\tthis.setIndex( options.arrays.index );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( options.arrays.position, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t};\n\n\tExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tvar arrays = options.arrays ? options.arrays : this.getArrays();\n\t\tvar verticesArray = arrays.position;\n\t\tvar indicesArray = arrays.index;\n\t\tvar uvArray = arrays.uv;\n\n\t\tvar placeholder = [];\n\n\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\t\tvar extrudePath = options.extrudePath;\n\t\tvar extrudePts, extrudeByPath = false;\n\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\t\tvar splineTube, binormal, normal, position2;\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\t\tvar scope = this;\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length/3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length/3 -start, options.material !== undefined ? options.material : 0);\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length/3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length/3 -start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1);\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tindicesArray.push( verticesArray.length / 3 );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t\tif ( ! options.arrays ) {\n\n\t\t\tthis.setIndex( indicesArray );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t\t}\n\n\t};\n\n\tExtrudeGeometry.WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */\n\n\t// TextGeometry\n\n\tfunction TextGeometry(  text, parameters ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t// TextBufferGeometry\n\n\tfunction TextBufferGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// SphereGeometry\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t// SphereBufferGeometry\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = thetaStart + thetaLength;\n\n\t\tvar ix, iy;\n\n\t\tvar index = 0;\n\t\tvar grid = [];\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = iy / heightSegments;\n\n\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tvar u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// RingGeometry\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t// RingBufferGeometry\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 20;\n\t\touterRadius = outerRadius || 50;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// some helper variables\n\n\t\tvar segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author astrodud / http://astrodud.isgreat.org/\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// LatheGeometry\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t// LatheBufferGeometry\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar base;\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// ShapeGeometry\n\n\tfunction ShapeGeometry( shapes, curveSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\t// ShapeBufferGeometry\n\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tcurveSegments = curveSegments || 12;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar groupStart = 0;\n\t\tvar groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar i, l, shapeHole;\n\n\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\t\tvar shapeVertices = points.shape;\n\t\t\tvar shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t\t// also check if holes are in the opposite direction\n\n\t\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t\t// prepare source geometry\n\n\t\tvar geometry2;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar sourceVertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\tvar e = edges[ key ];\n\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// CylinderGeometry\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t// CylinderBufferGeometry\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\t\theight = height !== undefined ? height : 100;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\t// ConeGeometry\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t// ConeBufferGeometry\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */\n\n\t// CircleGeometry\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t// CircleBufferGeometry\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, s;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\n\tvar Geometries = Object.freeze({\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  opacity: <float>\n\t * }\n\t */\n\n\tfunction ShadowMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, {\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\t\t\tvertexShader: ShaderChunk[ 'shadow_vert' ],\n\t\t\tfragmentShader: ShaderChunk[ 'shadow_frag' ]\n\t\t} );\n\n\t\tthis.lights = true;\n\t\tthis.transparent = true;\n\n\t\tObject.defineProperties( this, {\n\t\t\topacity: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\t\t\t\t\treturn this.uniforms.opacity.value;\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\t\t\t\tthis.uniforms.opacity.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearCoat = 0.0;\n\t\tthis.clearCoatRoughness = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearCoat = source.clearCoat;\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  gradientMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tfunction MeshToonMaterial( parameters ) {\n\n\t\tMeshPhongMaterial.call( this );\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.gradientMap = null;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( Material.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Materials = Object.freeze({\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FileLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FileLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t \tresponse = new ArrayBuffer( data.length );\n\n\t\t\t\t\t\t\tvar view = new Uint8Array( response );\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ response ], { type: mimeType } );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = event.target.response;\n\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\t\tonProgress( event );\n\n\t\t\t\t\t}, false );\n\n\t\t\t\t}\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t\t}\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMimeType: function ( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRequestHeader: function ( value ) {\n\n\t\t\tthis.requestHeader = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( CompressedTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tfunction DataTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( DataTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( ImageLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\t\timage.addEventListener( 'load', function () {\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\t/*\n\t\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tif ( onProgress ) onProgress( event );\n\n\t\t\t}, false );\n\t\t\t*/\n\n\t\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( CubeTextureLoader.prototype, {\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( TextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar texture = new Texture();\n\t\t\ttexture.image = loader.load( url, function () {\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.matrix = new Matrix4();\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdate: function ( light ) {\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow( ) {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true\n\n\t} );\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction RectAreaLight( color, intensity, width, height ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.position.set( 0, 1, 0 );\n\t\tthis.updateMatrix();\n\n\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t\t// TODO (abelnation): distance/decay\n\n\t\t// TODO (abelnation): update method for RectAreaLight to update transform to lookat target\n\n\t\t// TODO (abelnation): shadows\n\n\t}\n\n\t// TODO (abelnation): RectAreaLight update when light shape is changed\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: RectAreaLight,\n\n\t\tisRectAreaLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function ( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function ( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function ( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function ( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function ( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tevaluate: function( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[   i1   ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function() {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tthrow new Error( \"call to abstract method\" );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( Interpolant.prototype, {\n\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = -0;\n\t\tthis._offsetPrev = -0;\n\t\tthis._weightNext = -0;\n\t\tthis._offsetNext = -0;\n\n\t}\n\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\tvar KeyframeTrackPrototype;\n\n\tKeyframeTrackPrototype = {\n\n\t\tTimeBufferType: Float32Array,\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\t\treturn new DiscreteInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new LinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\t\treturn new CubicInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function ( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrackPrototype:', message );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t},\n\n\t\tgetInterpolation: function () {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function () {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function ( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function ( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function ( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) -- to;\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.\n\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function () {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\twriteIndex = 1,\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else keep = true;\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\tfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\t\tif ( times === undefined || times.length === 0 ) {\n\n\t\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t\t}\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t\tthis.validate();\n\t\tthis.optimize();\n\n\t}\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0,\n\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.apply( this, arguments );\n\n\t}\n\n\tKeyframeTrack.prototype = KeyframeTrackPrototype;\n\tKeyframeTrackPrototype.constructor = KeyframeTrack;\n\n\t// Static methods:\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\tparse: function( json ) {\n\n\t\t\tif( json.type === undefined ) {\n\n\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t\t}\n\n\t\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\t\tif ( json.times === undefined ) {\n\n\t\t\t\tvar times = [], values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\t\tjson.times = times;\n\t\t\t\tjson.values = values;\n\n\t\t\t}\n\n\t\t\t// derived classes can define a static parse method\n\t\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\t\treturn trackType.parse( json );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we asssume a constructor compatible with the base\n\t\t\t\treturn new trackType(\n\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\t\tcase \"scalar\":\n\t\t\t\tcase \"double\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"number\":\n\t\t\t\tcase \"integer\":\n\n\t\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\t\tcase \"vector\":\n\t\t\t\tcase \"vector2\":\n\t\t\t\tcase \"vector3\":\n\t\t\t\tcase \"vector4\":\n\n\t\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\t\tcase \"color\":\n\n\t\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\t\tcase \"quaternion\":\n\n\t\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\t\tcase \"bool\":\n\t\t\t\tcase \"boolean\":\n\n\t\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\t\tcase \"string\":\n\n\t\t\t\t\treturn StringKeyframeTrack;\n\n\t\t\t}\n\n\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t\tthis.optimize();\n\n\t}\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\t\ttoJSON: function ( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\t\ttimes, values\n\t\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t\t},\n\n\t\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function ( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || - 1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( AnimationClip.prototype, {\n\n\t\tresetDuration: function () {\n\n\t\t\tvar tracks = this.tracks, duration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t},\n\n\t\ttrim: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\toptimize: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.textures = {};\n\n\t}\n\n\tObject.assign( MaterialLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\t\treturn material;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( BufferGeometryLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader() {\n\n\t\tthis.onLoadStart = function () {};\n\t\tthis.onLoadProgress = function () {};\n\t\tthis.onLoadComplete = function () {};\n\n\t}\n\n\tLoader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\tObject.assign( Loader.prototype, {\n\n\t\tcrossOrigin: undefined,\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar parts = url.split( '/' );\n\n\t\t\tif ( parts.length === 1 ) return './';\n\n\t\t\tparts.pop();\n\n\t\t\treturn parts.join( '/' ) + '/';\n\n\t\t},\n\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tcreateMaterial: ( function () {\n\n\t\t\tvar BlendingMode = {\n\t\t\t\tNoBlending: NoBlending,\n\t\t\t\tNormalBlending: NormalBlending,\n\t\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\t\tCustomBlending: CustomBlending\n\t\t\t};\n\n\t\t\tvar color = new Color();\n\t\t\tvar textureLoader = new TextureLoader();\n\t\t\tvar materialLoader = new MaterialLoader();\n\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\t\treturn uuid;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\t\treturn materialLoader.parse( json );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction JSONLoader( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t}\n\n\tObject.assign( JSONLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tparse: ( function () {\n\n\t\t\tfunction parseModel( json, geometry ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\t\toffset, zLength,\n\n\t\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\t\ttype,\n\t\t\t\t\tisQuad,\n\t\t\t\t\thasMaterial,\n\t\t\t\t\thasFaceVertexUv,\n\t\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\t\tfaces = json.faces,\n\t\t\t\t\tvertices = json.vertices,\n\t\t\t\t\tnormals = json.normals,\n\t\t\t\t\tcolors = json.colors,\n\n\t\t\t\t\tscale = json.scale,\n\n\t\t\t\t\tnUvLayers = 0;\n\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\t\tvar scale = json.scale;\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\treturn function ( json, texturePath ) {\n\n\t\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t\t// Geometry 4.0 spec\n\t\t\t\t\tjson = json.data;\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tjson.scale = 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new Geometry();\n\n\t\t\t\tparseModel( json, geometry );\n\t\t\t\tparseSkin( json, geometry );\n\t\t\t\tparseMorphing( json, geometry );\n\t\t\t\tparseAnimations( json, geometry );\n\n\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\t\treturn { geometry: geometry };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.texturePath = '';\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.texturePath === '' ) {\n\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseGeometries: function ( json ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t\t// Deprecated\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\t\tvar object;\n\n\t\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn geometries[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn array;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn materials[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'Scene':\n\n\t\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LOD':\n\n\t\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Line':\n\n\t\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointCloud':\n\t\t\t\t\tcase 'Points':\n\n\t\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Group':\n\n\t\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tobject = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t\tobject.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\t\tif ( data.shadow ) {\n\n\t\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\t\tfor ( var child in data.children ) {\n\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\t\tvar levels = data.levels;\n\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint(t), getTangent(t)\n\t * .getPointAt(u), getTangentAt(u)\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\tObject.assign( Curve.prototype, {\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function ( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\tvar i, u, theta;\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tu = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar point = this.v2.clone().sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u ) {\n\n\t\treturn this.getPoint( u );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function ( t ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tCurve.call( this );\n\n\t\tthis.curves = [];\n\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n\t\t\t\t\t: (curve && curve.isLineCurve) ? 1\n\t\t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**************************************************************\n\t\t *\tCreate Geometries Helpers\n\t\t **************************************************************/\n\n\t\t/// Generate geometry from path points (for Line or Points objects)\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\t// Generate geometry from equidistant sampling along the path\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn new Vector2( x, y );\n\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.points = ( points === undefined ) ? [] : points;\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\treturn new Vector2(\n\t\t\tCatmullRom( weight, point0.x, point1.x, point2.x, point3.x ),\n\t\t\tCatmullRom( weight, point0.y, point1.y, point2.y, point3.y )\n\t\t);\n\n\t};\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\treturn new Vector2(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\treturn new Vector2(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t};\n\n\tvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tfromPoints: function ( vectors ) {\n\n\t\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.fromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = PathPrototype;\n\tPathPrototype.constructor = Path;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape() {\n\n\t\tPath.apply( this, arguments );\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn this.extractAllPoints( divisions );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/\n\n\tfunction ShapePath() {\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tObject.assign( ShapePath.prototype, {\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Font( data ) {\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\t\tfunction createPaths( text ) {\n\n\t\t\t\tvar chars = String( text ).split( '' );\n\t\t\t\tvar scale = size / data.resolution;\n\t\t\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\t\t\tvar offsetX = 0, offsetY = 0;\n\n\t\t\t\tvar paths = [];\n\n\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\t\tvar char = chars[ i ];\n\n\t\t\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\t\t\toffsetX = 0;\n\t\t\t\t\t\toffsetY -= line_height;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY );\n\t\t\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn paths;\n\n\t\t\t}\n\n\t\t\tfunction createPath( c, scale, offsetX, offsetY ) {\n\n\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\t\tif ( ! glyph ) return;\n\n\t\t\t\tvar path = new ShapePath();\n\n\t\t\t\tvar pts = [];\n\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\t\tif ( glyph.o ) {\n\n\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tCubicBezier( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\t\tCubicBezier( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( size === undefined ) size = 100;\n\t\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\t\tvar data = this.data;\n\n\t\t\tvar paths = createPaths( text );\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FontLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\tvar context;\n\n\tvar AudioContext = {\n\n\t\tgetContext: function () {\n\n\t\t\tif ( context === undefined ) {\n\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn context;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( AudioLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar context = AudioContext.getContext();\n\n\t\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: ( function () {\n\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\t\tvar eyeRight = new Matrix4();\n\t\t\tvar eyeLeft = new Matrix4();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tinstance = this;\n\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\tnear = camera.near;\n\t\t\t\t\tfar = camera.far;\n\t\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t\t// translate xOffset\n\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t\t// for left eye\n\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t\t// for right eye\n\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CubeCamera( near, far, cubeResolution ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar fov = 90, aspect = 1;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\t\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar scale = new Vector3();\n\n\t\t\tvar orientation = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar listener = this.context.listener;\n\t\t\t\tvar up = this.up;\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.loop = false;\n\t\tthis.startTime = 0;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\t\tsource.start( 0, this.startTime );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\t\t\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tbufferType = Array;\n\t\t\t\tmixFunction = this._select;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tObject.assign( PropertyMixer.prototype, {\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function ( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function ( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function () {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function () {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tObject.assign( Composite.prototype, {\n\n\t\tgetValue: function ( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function ( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tObject.assign( PropertyBinding, {\n\n\t\tComposite: Composite,\n\n\t\tcreate: function ( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param  {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: function ( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( /[^\\w-]/g, '' );\n\n\t\t},\n\n\t\tparseTrackName: function () {\n\n\t\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t\t// be matched to parse the rest of the track name.\n\t\t\tvar directoryRe = /((?:[\\w-]+[\\/:])*)/;\n\n\t\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\t\tvar nodeRe = /([\\w-\\.]+)?/;\n\n\t\t\t// Object on target node, and accessor. Name may contain only word\n\t\t\t// characters. Accessor may contain any character except closing bracket.\n\t\t\tvar objectRe = /(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?/;\n\n\t\t\t// Property and accessor. May contain only word characters. Accessor may\n\t\t\t// contain any non-bracket characters.\n\t\t\tvar propertyRe = /\\.([\\w-]+)(?:\\[(.+)\\])?/;\n\n\t\t\tvar trackRe = new RegExp(''\n\t\t\t\t+ '^'\n\t\t\t\t+ directoryRe.source\n\t\t\t\t+ nodeRe.source\n\t\t\t\t+ objectRe.source\n\t\t\t\t+ propertyRe.source\n\t\t\t\t+ '$'\n\t\t\t);\n\n\t\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\t\treturn function ( trackName ) {\n\n\t\t\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\t\t\tif ( ! matches ) {\n\n\t\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar results = {\n\t\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\t\t\tpropertyName: matches[ 5 ],     // required\n\t\t\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t\t\t};\n\n\t\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\t\t\tif ( lastDot !== undefined && lastDot !== -1 ) {\n\n\t\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t\t\t// include '.' characters).\n\t\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== -1 ) {\n\n\t\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn results;\n\n\t\t\t\t};\n\n\t\t}(),\n\n\t\tfindNode: function ( root, nodeName ) {\n\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tvar searchSkeleton = function ( skeleton ) {\n\n\t\t\t\t\tfor ( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function () {},\n\t\t_setValue_unavailable: function () {},\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t],\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function () {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode(\n\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( PropertyBinding.prototype, {\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t} );\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup( var_args ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() { return scope._objects.length; },\n\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_; }\n\t\t\t},\n\n\t\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t\t};\n\n\t}\n\n\tObject.assign( AnimationObjectGroup.prototype, {\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ],\n\t\t\t\t\tknownObject = undefined;\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\t\tnew PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function ( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = -1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\t\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\t\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n\t}\n\n\tObject.assign( AnimationAction.prototype, {\n\n\t\t// State & Scheduling\n\n\t\tplay: function() {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function() {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function() {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\tthis._loopCount = -1;\t// forget previous loops\n\t\t\tthis._startTime = null;\t// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function() {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function() {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function() {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function() {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function() {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function() {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function() {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function() {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function() {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\n\t\t\tif ( deltaTime === 0 ) return time;\n\n\t\t\tvar duration = this._clip.duration,\n\n\t\t\t\tloop = this.loop,\n\t\t\t\tloopCount = this._loopCount;\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else break handle_stop;\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\tthis.time = time;\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.time = time;\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n\t\t_bindAction: function ( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function ( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function ( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function () {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function ( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function ( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function ( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function ( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tremove_empty_map: {\n\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function () {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function () {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function ( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function () {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function ( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function ( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tUniform.prototype.clone = function () {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\t\tconstructor: InstancedBufferGeometry,\n\n\t\tisInstancedBufferGeometry: true,\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\n\t\t\t} );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\t\tcount: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.count;\n\n\t\t\t}\n\n\t\t},\n\n\t\tarray: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.array;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBufferAttribute.prototype, {\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.onUploadCallback = function () {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\n\t\tisInterleavedBuffer: true,\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\t\tconstructor: InstancedInterleavedBuffer,\n\n\t\tisInstancedInterleavedBuffer: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\t\tBufferAttribute.call( this, array, itemSize );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\t\tconstructor: InstancedBufferAttribute,\n\n\t\tisInstancedBufferAttribute: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Raycaster.prototype, {\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tObject.assign( Clock.prototype, {\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The poles (phi) are at the positive and negative y axis.\n\t * The equator starts at positive z.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Spherical.prototype, {\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function() {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = vec3.length();\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */\n\n\tfunction Cylindrical( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Cylindrical.prototype, {\n\n\t\tset: function ( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\t\tthis.y = vec3.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction MorphBlendMesh( geometry, material ) {\n\r\n\t\tMesh.call( this, geometry, material );\r\n\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\t\tvar name = \"__default\";\r\n\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\r\n\t\tvar fps = numFrames / 1;\r\n\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\r\n\t}\r\n\r\n\tMorphBlendMesh.prototype = Object.create( Mesh.prototype );\r\n\tMorphBlendMesh.prototype.constructor = MorphBlendMesh;\r\n\r\n\tMorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\t\tvar animation = {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\r\n\t\t\tlength: end - start + 1,\r\n\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\r\n\t\t\tactive: false,\r\n\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\r\n\t\t};\r\n\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/i;\r\n\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in frameRanges ) {\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t\t}\r\n\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.weight = weight;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.time = time;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\t\tvar time = 0;\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\ttime = animation.time;\r\n\r\n\t\t}\r\n\r\n\t\treturn time;\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\t\tvar duration = - 1;\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tduration = animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\treturn duration;\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.active = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\t\tif ( ! animation.active ) continue;\r\n\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar keyframe = animation.start + _Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( renderCallback ) {};\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n\tVertexNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\t\tvar faces = objGeometry.faces;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction SpotLightHelper( light ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0,   0,   0,   1,\n\t\t\t0, 0, 0,   1,   0,   1,\n\t\t\t0, 0, 0, - 1,   0,   1,\n\t\t\t0, 0, 0,   0,   1,   1,\n\t\t\t0, 0, 0,   0, - 1,   1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar vector2 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tthis.light.updateMatrixWorld();\n\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction getBoneList( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object && object.isBone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tvar bones = getBoneList( object );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar color1 = new Color( 0, 0, 1 );\n\t\tvar color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.onBeforeRender();\n\n\t}\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.onBeforeRender = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\tvar boneMatrix = new Matrix4();\n\t\tvar matrixWorldInv = new Matrix4();\n\n\t\treturn function onBeforeRender() {\n\n\t\t\tvar bones = this.bones;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\t\tvar bone = bones[ i ];\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\t\tj += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tmaterial.color.copy( this.light.color );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction RectAreaLightHelper( light ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar material = new LineBasicMaterial( { color: light.color } );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\t\tthis.add( new Line( geometry, material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\n\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n\tRectAreaLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tRectAreaLightHelper.prototype.update = function () {\n\n\t\tvar line = this.children[ 0 ];\n\n\t\t// update material\n\n\t\tline.material.color.copy( this.light.color );\n\n\t\t// calculate new dimensions of the helper\n\n\t\tvar hx = this.light.width * 0.5;\n\t\tvar hy = this.light.height * 0.5;\n\n\t\tvar position = line.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\t// update vertices\n\n\t\tarray[  0 ] =   hx; array[  1 ] = - hy; array[  2 ] = 0;\n\t\tarray[  3 ] =   hx; array[  4 ] =   hy; array[  5 ] = 0;\n\t\tarray[  6 ] = - hx; array[  7 ] =   hy; array[  8 ] = 0;\n\t\tarray[  9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\t\tarray[ 12 ] =   hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction HemisphereLightHelper( light, size ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tvar material = new MeshBasicMaterial( { vertexColors: VertexColors, wireframe: true } );\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\t\tvar colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\tvar color1 = new Color();\n\t\tvar color2 = new Color();\n\n\t\treturn function update() {\n\n\t\t\tvar mesh = this.children[ 0 ];\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tsize = size || 10;\n\t\tdivisions = divisions || 10;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = size / divisions;\n\t\tvar halfSize = size / 2;\n\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tGridHelper.prototype = Object.create( LineSegments.prototype );\n\tGridHelper.prototype.constructor = GridHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */\n\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\t\tradius = radius || 10;\n\t\tradials = radials || 16;\n\t\tcircles = circles || 8;\n\t\tdivisions = divisions || 64;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar x, z;\n\t\tvar v, i, j, r, color;\n\n\t\t// create the radials\n\n\t\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * radius;\n\t\t\tz = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tr = radius - ( radius / circles * i );\n\n\t\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t}\n\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n\tFaceNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction DirectionalLightHelper( light, size ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size,   size, 0,\n\t\t\t  size,   size, 0,\n\t\t\t  size, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size,   size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.add( new Line( geometry, material ) );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.add( new Line( geometry, material ));\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tvar lightPlane = this.children[ 0 ];\n\t\tvar targetLine = this.children[ 1 ];\n\n\t\tlightPlane.geometry.dispose();\n\t\tlightPlane.material.dispose();\n\t\ttargetLine.geometry.dispose();\n\t\ttargetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar v3 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\tv3.subVectors( v2, v1 );\n\n\t\t\tvar lightPlane = this.children[ 0 ];\n\t\t\tvar targetLine = this.children[ 1 ];\n\n\t\t\tlightPlane.lookAt( v3 );\n\t\t\tlightPlane.material.color.copy( this.light.color );\n\n\t\t\ttargetLine.lookAt( v3 );\n\t\t\ttargetLine.scale.z = v3.length();\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\tvar colorCone = new Color( 0xff0000 );\n\t\tvar colorUp = new Color( 0x00aaff );\n\t\tvar colorTarget = new Color( 0xffffff );\n\t\tvar colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( \"n1\", \"n2\", colorFrustum );\n\t\taddLine( \"n2\", \"n4\", colorFrustum );\n\t\taddLine( \"n4\", \"n3\", colorFrustum );\n\t\taddLine( \"n3\", \"n1\", colorFrustum );\n\n\t\t// far\n\n\t\taddLine( \"f1\", \"f2\", colorFrustum );\n\t\taddLine( \"f2\", \"f4\", colorFrustum );\n\t\taddLine( \"f4\", \"f3\", colorFrustum );\n\t\taddLine( \"f3\", \"f1\", colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( \"n1\", \"f1\", colorFrustum );\n\t\taddLine( \"n2\", \"f2\", colorFrustum );\n\t\taddLine( \"n3\", \"f3\", colorFrustum );\n\t\taddLine( \"n4\", \"f4\", colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( \"p\", \"n1\", colorCone );\n\t\taddLine( \"p\", \"n2\", colorCone );\n\t\taddLine( \"p\", \"n3\", colorCone );\n\t\taddLine( \"p\", \"n4\", colorCone );\n\n\t\t// up\n\n\t\taddLine( \"u1\", \"u2\", colorUp );\n\t\taddLine( \"u2\", \"u3\", colorUp );\n\t\taddLine( \"u3\", \"u1\", colorUp );\n\n\t\t// target\n\n\t\taddLine( \"c\", \"t\", colorTarget );\n\t\taddLine( \"p\", \"c\", colorCross );\n\n\t\t// cross\n\n\t\taddLine( \"cn1\", \"cn2\", colorCross );\n\t\taddLine( \"cn3\", \"cn4\", colorCross );\n\n\t\taddLine( \"cf1\", \"cf2\", colorCross );\n\t\taddLine( \"cf3\", \"cf4\", colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry, pointMap;\n\n\t\tvar vector = new Vector3();\n\t\tvar camera = new Camera();\n\n\t\tfunction setPoint( point, x, y, z ) {\n\n\t\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\t\tvar points = pointMap[ point ];\n\n\t\t\tif ( points !== undefined ) {\n\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function update() {\n\n\t\t\tgeometry = this.geometry;\n\t\t\tpointMap = this.pointMap;\n\n\t\t\tvar w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix\n\t\t\t// world matrix must be identity\n\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tthis.object = object;\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = ( function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function update( object ) {\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t\t}\n\n\t\t\tif ( this.object !== undefined ) {\n\n\t\t\t\tbox.setFromObject( this.object );\n\n\t\t\t}\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tvar min = box.min;\n\t\t\tvar max = box.max;\n\n\t\t\t/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t};\n\n\t} )();\n\n\tBoxHelper.prototype.setFromObject = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar lineGeometry;\n\tvar coneGeometry;\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tif ( lineGeometry === undefined ) {\n\n\t\t\tlineGeometry = new BufferGeometry();\n\t\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = ( function () {\n\n\t\tvar axis = new Vector3();\n\t\tvar radians;\n\n\t\treturn function setDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tradians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.copy( color );\n\t\tthis.cone.material.color.copy( color );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxisHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = [\n\t\t\t0, 0, 0,  size, 0, 0,\n\t\t\t0, 0, 0,  0, size, 0,\n\t\t\t0, 0, 0,  0, 0, size\n\t\t];\n\n\t\tvar colors = [\n\t\t\t1, 0, 0,  1, 0.6, 0,\n\t\t\t0, 1, 0,  0.6, 1, 0,\n\t\t\t0, 0, 1,  0, 0.6, 1\n\t\t];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tAxisHelper.prototype = Object.create( LineSegments.prototype );\n\tAxisHelper.prototype.constructor = AxisHelper;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly();\n\tvar py = new CubicPoly();\n\tvar pz = new CubicPoly();\n\n\tfunction CatmullRomCurve3( points ) {\n\n\t\tCurve.call( this );\n\n\t\tif ( points.length < 2 ) console.warn( 'THREE.CatmullRomCurve3: Points array needs at least two entries.' );\n\n\t\tthis.points = points || [];\n\t\tthis.closed = false;\n\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n\tCatmullRomCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\n\t\tvar point = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tp1 = points[ intPoint % l ];\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.type === 'catmullrom' ) {\n\n\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t\t}\n\n\t\treturn new Vector3( px.calc( weight ), py.calc( weight ), pz.calc( weight ) );\n\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n\tCubicBezierCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\treturn new Vector3(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\treturn new Vector3(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve3.prototype = Object.create( Curve.prototype );\n\tLineCurve3.prototype.constructor = LineCurve3;\n\n\tLineCurve3.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar vector = new Vector3();\n\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\tvector.multiplyScalar( t );\n\t\tvector.add( this.v1 );\n\n\t\treturn vector;\n\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t},\n\n\t\tdetach: function ( child, parent, scene ) {\n\n\t\t\tchild.applyMatrix( parent.matrixWorld );\n\t\t\tparent.remove( child );\n\t\t\tscene.add( child );\n\n\t\t},\n\n\t\tattach: function ( child, scene, parent ) {\n\n\t\t\tchild.applyMatrix( new Matrix4().getInverse( parent.matrixWorld ) );\n\n\t\t\tscene.remove( child );\n\t\t\tparent.add( child );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n\t}\n\n\tvar LineStrip = 0;\n\n\tvar LinePieces = 1;\n\n\tfunction MeshFaceMaterial( materials ) {\n\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\treturn materials;\n\n\t}\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tif ( materials === undefined ) materials = [];\n\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\t\tmaterials.clone = function () {\n\n\t\t\treturn materials.slice();\n\n\t\t};\n\t\treturn materials;\n\n\t}\n\n\tfunction PointCloud( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction Particle( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\treturn new Sprite( material );\n\n\t}\n\n\tfunction ParticleSystem( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction PointCloudMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleBasicMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleSystemMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction Vertex( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\n\t}\n\n\t//\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t}\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\treturn new Int8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\treturn new Uint8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\treturn new Int16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\treturn new Uint16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\treturn new Int32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\treturn new Uint32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\treturn new Float64BufferAttribute( array, itemSize );\n\n\t}\n\n\t//\n\n\tCurve.create = function ( construct, getPoint ) {\n\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\n\t\treturn construct;\n\n\t};\n\n\t//\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction SplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction Spline( points ) {\n\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\tObject.assign( Spline.prototype, {\n\n\t\tinitFromArray: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t\t},\n\t\tgetControlPointsArray: function ( optionalTarget ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t\t},\n\t\treparametrizeByArcLength: function ( samplingCoef ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\tfunction BoundingBoxHelper( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\treturn new BoxHelper( object, color );\n\n\t}\n\n\tfunction EdgesHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\t\t\n\t};\n\n\tfunction WireframeHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\t//\n\n\tfunction XHRLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\treturn new FileLoader( manager );\n\n\t}\n\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\treturn new DataTextureLoader( manager );\n\n\t}\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tLine3.prototype.center = function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t};\n\n\t_Math.random16 = function () {\n\n\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t};\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.'  );\n\n\t\t},\n\t\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\textractPosition: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\n\t\t},\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tgetPosition: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function getPosition() {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t\t};\n\n\t\t}(),\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\n\t\t},\n\t\tmultiplyToArray: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.'  );\n\n\t\t},\n\t\trotateAxis: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\ttranslate: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t\t},\n\t\trotateX: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t\t},\n\t\trotateY: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t\t},\n\t\trotateZ: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t\t},\n\t\trotateByAxis: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t\t},\n\t\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t\t},\n\t\tmakeFrustum: function( left, right, bottom, top, near, far ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t\t}\n\n\t} );\n\n\tPlane.prototype.isIntersectionLine = function ( line ) {\n\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\n\t};\n\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t};\n\n\tObject.assign( Ray.prototype, {\n\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\n\t\textrude: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tsetEulerFromRotationMatrix: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t\t},\n\t\tapplyProjection: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\treturn this.applyMatrix4( m );\n\n\t\t},\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tGeometry.prototype.computeTangents = function () {\n\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t};\n\n\tObject.assign( Object3D.prototype, {\n\n\t\tgetChildByName: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\n\t\t},\n\t\trenderDepth: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\n\t\teulerOrder: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\n\t\tobjects: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\treturn this.arcLengthDivisions;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\tthis.arcLengthDivisions = value;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\n\t\tlength: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\treturn this.array.length;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\n\t\taddIndex: function ( index ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\t\tif ( indexOffset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\n\t\t},\n\t\tclearDrawCalls: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\n\t\t},\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeOffsets: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\n\t\tdynamic: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\n\t\twrapAround: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\t\tmetal: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\n\t\tderivatives: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\n\t\tgetCurrentRenderTarget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\treturn this.getRenderTarget();\n\n\t\t},\n\n\t\tsupportsFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\treturn this.capabilities.vertexTextures;\n\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\n\t\t},\n\t\tinitMaterial: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t\t},\n\t\taddPrePlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t\t},\n\t\taddPostPlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t\t},\n\t\tupdateShadowMap: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.enabled;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.cullFace;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\t\tthis.shadowMap.cullFace = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\n\t\tcullFace: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\n\t\t\t},\n\t\t\tset: function ( cullFace ) {\n\n\t\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\t\tthis.renderReverseSided = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\t\twrapS: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tAudio.prototype.load = function ( file ) {\n\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\tvar scope = this;\n\t\tvar audioLoader = new AudioLoader();\n\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\tscope.setBuffer( buffer );\n\n\t\t} );\n\t\treturn this;\n\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\n\t};\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tvar ImageUtils = {\n\n\t\tcrossOrigin: undefined,\n\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\t\tvar loader = new TextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\t\tvar loader = new CubeTextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadCompressedTexture: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t},\n\n\t\tloadCompressedTextureCube: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction Projector() {\n\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function () {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t}\n\n\t//\n\n\tfunction CanvasRenderer() {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tthis.clear = function () {};\n\t\tthis.render = function () {};\n\t\tthis.setClearColor = function () {};\n\t\tthis.setSize = function () {};\n\n\t}\n\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.ShaderLib = ShaderLib;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.FogExp2 = FogExp2;\n\texports.Fog = Fog;\n\texports.Scene = Scene;\n\texports.LensFlare = LensFlare;\n\texports.Sprite = Sprite;\n\texports.LOD = LOD;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.Skeleton = Skeleton;\n\texports.Bone = Bone;\n\texports.Mesh = Mesh;\n\texports.LineSegments = LineSegments;\n\texports.LineLoop = LineLoop;\n\texports.Line = Line;\n\texports.Points = Points;\n\texports.Group = Group;\n\texports.VideoTexture = VideoTexture;\n\texports.DataTexture = DataTexture;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CubeTexture = CubeTexture;\n\texports.CanvasTexture = CanvasTexture;\n\texports.DepthTexture = DepthTexture;\n\texports.Texture = Texture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.TextureLoader = TextureLoader;\n\texports.ObjectLoader = ObjectLoader;\n\texports.MaterialLoader = MaterialLoader;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.LoadingManager = LoadingManager;\n\texports.JSONLoader = JSONLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.FontLoader = FontLoader;\n\texports.FileLoader = FileLoader;\n\texports.Loader = Loader;\n\texports.Cache = Cache;\n\texports.AudioLoader = AudioLoader;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.SpotLight = SpotLight;\n\texports.PointLight = PointLight;\n\texports.RectAreaLight = RectAreaLight;\n\texports.HemisphereLight = HemisphereLight;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DirectionalLight = DirectionalLight;\n\texports.AmbientLight = AmbientLight;\n\texports.LightShadow = LightShadow;\n\texports.Light = Light;\n\texports.StereoCamera = StereoCamera;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.CubeCamera = CubeCamera;\n\texports.ArrayCamera = ArrayCamera;\n\texports.Camera = Camera;\n\texports.AudioListener = AudioListener;\n\texports.PositionalAudio = PositionalAudio;\n\texports.AudioContext = AudioContext;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.Audio = Audio;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.PropertyMixer = PropertyMixer;\n\texports.PropertyBinding = PropertyBinding;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.AnimationUtils = AnimationUtils;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationClip = AnimationClip;\n\texports.Uniform = Uniform;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.BufferGeometry = BufferGeometry;\n\texports.GeometryIdCount = GeometryIdCount;\n\texports.Geometry = Geometry;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.Face3 = Face3;\n\texports.Object3D = Object3D;\n\texports.Raycaster = Raycaster;\n\texports.Layers = Layers;\n\texports.EventDispatcher = EventDispatcher;\n\texports.Clock = Clock;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.Interpolant = Interpolant;\n\texports.Triangle = Triangle;\n\texports.Math = _Math;\n\texports.Spherical = Spherical;\n\texports.Cylindrical = Cylindrical;\n\texports.Plane = Plane;\n\texports.Frustum = Frustum;\n\texports.Sphere = Sphere;\n\texports.Ray = Ray;\n\texports.Matrix4 = Matrix4;\n\texports.Matrix3 = Matrix3;\n\texports.Box3 = Box3;\n\texports.Box2 = Box2;\n\texports.Line3 = Line3;\n\texports.Euler = Euler;\n\texports.Vector4 = Vector4;\n\texports.Vector3 = Vector3;\n\texports.Vector2 = Vector2;\n\texports.Quaternion = Quaternion;\n\texports.Color = Color;\n\texports.MorphBlendMesh = MorphBlendMesh;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.PointLightHelper = PointLightHelper;\n\texports.RectAreaLightHelper = RectAreaLightHelper;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.GridHelper = GridHelper;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.CameraHelper = CameraHelper;\n\texports.BoxHelper = BoxHelper;\n\texports.ArrowHelper = ArrowHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.LineCurve3 = LineCurve3;\n\texports.ArcCurve = ArcCurve;\n\texports.EllipseCurve = EllipseCurve;\n\texports.SplineCurve = SplineCurve;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.LineCurve = LineCurve;\n\texports.Shape = Shape;\n\texports.Path = Path;\n\texports.ShapePath = ShapePath;\n\texports.Font = Font;\n\texports.CurvePath = CurvePath;\n\texports.Curve = Curve;\n\texports.ShapeUtils = ShapeUtils;\n\texports.SceneUtils = SceneUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.PointsMaterial = PointsMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.Material = Material;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.BufferAttribute = BufferAttribute;\n\texports.REVISION = REVISION;\n\texports.MOUSE = MOUSE;\n\texports.CullFaceNone = CullFaceNone;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.FrontSide = FrontSide;\n\texports.BackSide = BackSide;\n\texports.DoubleSide = DoubleSide;\n\texports.FlatShading = FlatShading;\n\texports.SmoothShading = SmoothShading;\n\texports.NoColors = NoColors;\n\texports.FaceColors = FaceColors;\n\texports.VertexColors = VertexColors;\n\texports.NoBlending = NoBlending;\n\texports.NormalBlending = NormalBlending;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.CustomBlending = CustomBlending;\n\texports.AddEquation = AddEquation;\n\texports.SubtractEquation = SubtractEquation;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.MinEquation = MinEquation;\n\texports.MaxEquation = MaxEquation;\n\texports.ZeroFactor = ZeroFactor;\n\texports.OneFactor = OneFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.NeverDepth = NeverDepth;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.EqualDepth = EqualDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterDepth = GreaterDepth;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.MixOperation = MixOperation;\n\texports.AddOperation = AddOperation;\n\texports.NoToneMapping = NoToneMapping;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.UVMapping = UVMapping;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.ByteType = ByteType;\n\texports.ShortType = ShortType;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.IntType = IntType;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.FloatType = FloatType;\n\texports.HalfFloatType = HalfFloatType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.AlphaFormat = AlphaFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBAFormat = RGBAFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.RGBEFormat = RGBEFormat;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LoopPingPong = LoopPingPong;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.LinearEncoding = LinearEncoding;\n\texports.sRGBEncoding = sRGBEncoding;\n\texports.GammaEncoding = GammaEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.CubeGeometry = BoxGeometry;\n\texports.Face4 = Face4;\n\texports.LineStrip = LineStrip;\n\texports.LinePieces = LinePieces;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MultiMaterial = MultiMaterial;\n\texports.PointCloud = PointCloud;\n\texports.Particle = Particle;\n\texports.ParticleSystem = ParticleSystem;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Vertex = Vertex;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.Spline = Spline;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.EdgesHelper = EdgesHelper;\n\texports.WireframeHelper = WireframeHelper;\n\texports.XHRLoader = XHRLoader;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.GeometryUtils = GeometryUtils;\n\texports.ImageUtils = ImageUtils;\n\texports.Projector = Projector;\n\texports.CanvasRenderer = CanvasRenderer;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'SpriteCanvasMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\tthis.program = function () {};\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\nTHREE.SpriteCanvasMaterial.prototype.isSpriteCanvasMaterial = true;\n\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.SpriteCanvasMaterial();\n\n\tmaterial.copy( this );\n\tmaterial.color.copy( this.color );\n\tmaterial.program = this.program;\n\n\treturn material;\n\n};\n\n//\n\nTHREE.CanvasRenderer = function ( parameters ) {\n\n\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _this = this,\n\t\t_renderData, _elements, _lights,\n\t\t_projector = new THREE.Projector(),\n\n\t\t_canvas = parameters.canvas !== undefined\n\t\t\t\t ? parameters.canvas\n\t\t\t\t : document.createElement( 'canvas' ),\n\n\t\t_canvasWidth = _canvas.width,\n\t\t_canvasHeight = _canvas.height,\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\n\t\t_viewportX = 0,\n\t\t_viewportY = 0,\n\t\t_viewportWidth = _canvasWidth,\n\t\t_viewportHeight = _canvasHeight,\n\n\t\t_pixelRatio = 1,\n\n\t\t_context = _canvas.getContext( '2d', {\n\t\t\talpha: parameters.alpha === true\n\t\t} ),\n\n\t\t_clearColor = new THREE.Color( 0x000000 ),\n\t\t_clearAlpha = parameters.alpha === true ? 0 : 1,\n\n\t\t_contextGlobalAlpha = 1,\n\t\t_contextGlobalCompositeOperation = 0,\n\t\t_contextStrokeStyle = null,\n\t\t_contextFillStyle = null,\n\t\t_contextLineWidth = null,\n\t\t_contextLineCap = null,\n\t\t_contextLineJoin = null,\n\t\t_contextLineDash = [],\n\n\t\t_v1, _v2, _v3,\n\n\t\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n\n\t\t_color = new THREE.Color(),\n\n\t\t_diffuseColor = new THREE.Color(),\n\t\t_emissiveColor = new THREE.Color(),\n\n\t\t_lightColor = new THREE.Color(),\n\n\t\t_patterns = {},\n\n\t\t_uvs,\n\t\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\n\t\t_clipBox = new THREE.Box2(),\n\t\t_clearBox = new THREE.Box2(),\n\t\t_elemBox = new THREE.Box2(),\n\n\t\t_ambientLight = new THREE.Color(),\n\t\t_directionalLights = new THREE.Color(),\n\t\t_pointLights = new THREE.Color(),\n\n\t\t_vector3 = new THREE.Vector3(), // Needed for PointLight\n\t\t_centroid = new THREE.Vector3(),\n\t\t_normal = new THREE.Vector3(),\n\t\t_normalViewMatrix = new THREE.Matrix3();\n\n\t/* TODO\n\t_canvas.mozImageSmoothingEnabled = false;\n\t_canvas.webkitImageSmoothingEnabled = false;\n\t_canvas.msImageSmoothingEnabled = false;\n\t_canvas.imageSmoothingEnabled = false;\n\t*/\n\n\t// dash+gap fallbacks for Firefox and everything else\n\n\tif ( _context.setLineDash === undefined ) {\n\n\t\t_context.setLineDash = function () {};\n\n\t}\n\n\tthis.domElement = _canvas;\n\n\tthis.autoClear = true;\n\tthis.sortObjects = true;\n\tthis.sortElements = true;\n\n\tthis.info = {\n\n\t\trender: {\n\n\t\t\tvertices: 0,\n\t\t\tfaces: 0\n\n\t\t}\n\n\t};\n\n\t// WebGLRenderer compatibility\n\n\tthis.supportsVertexTextures = function () {};\n\tthis.setFaceCulling = function () {};\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _context;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _context.getContextAttributes();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value !== undefined ) _pixelRatio = value;\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t_canvasWidth = width * _pixelRatio;\n\t\t_canvasHeight = height * _pixelRatio;\n\n\t\t_canvas.width = _canvasWidth;\n\t\t_canvas.height = _canvasHeight;\n\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_contextGlobalAlpha = 1;\n\t\t_contextGlobalCompositeOperation = 0;\n\t\t_contextStrokeStyle = null;\n\t\t_contextFillStyle = null;\n\t\t_contextLineWidth = null;\n\t\t_contextLineCap = null;\n\t\t_contextLineJoin = null;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewportX = x * _pixelRatio;\n\t\t_viewportY = y * _pixelRatio;\n\n\t\t_viewportWidth = width * _pixelRatio;\n\t\t_viewportHeight = height * _pixelRatio;\n\n\t};\n\n\tthis.setScissor = function () {};\n\tthis.setScissorTest = function () {};\n\n\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t_clearColor.set( color );\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t};\n\n\tthis.setClearColorHex = function ( hex, alpha ) {\n\n\t\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\tthis.setClearColor( hex, alpha );\n\n\t};\n\n\tthis.getClearColor = function () {\n\n\t\treturn _clearColor;\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn _clearAlpha;\n\n\t};\n\n\tthis.getMaxAnisotropy = function () {\n\n\t\treturn 0;\n\n\t};\n\n\tthis.clear = function () {\n\n\t\tif ( _clearBox.isEmpty() === false ) {\n\n\t\t\t_clearBox.intersect( _clipBox );\n\t\t\t_clearBox.expandByScalar( 2 );\n\n\t\t\t_clearBox.min.x =   _clearBox.min.x + _canvasWidthHalf;\n\t\t\t_clearBox.min.y = - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n\t\t\t_clearBox.max.x =   _clearBox.max.x + _canvasWidthHalf;\n\t\t\t_clearBox.max.y = - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\n\t\t\tif ( _clearAlpha < 1 ) {\n\n\t\t\t\t_context.clearRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( _clearAlpha > 0 ) {\n\n\t\t\t\tsetBlending( THREE.NormalBlending );\n\t\t\t\tsetOpacity( 1 );\n\n\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\n\t\t\t\t_context.fillRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\t_clearBox.makeEmpty();\n\n\t\t}\n\n\t};\n\n\t// compatibility\n\n\tthis.clearColor = function () {};\n\tthis.clearDepth = function () {};\n\tthis.clearStencil = function () {};\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera.isCamera === undefined ) {\n\n\t\t\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar background = scene.background;\n\n\t\tif ( background && background.isColor ) {\n\n\t\t\tsetFillStyle( 'rgb(' + Math.floor( background.r * 255 ) + ',' + Math.floor( background.g * 255 ) + ',' + Math.floor( background.b * 255 ) + ')' );\n\t\t\t_context.fillRect( 0, 0, _canvasWidth, _canvasHeight );\n\n\t\t} else if ( this.autoClear === true ) {\n\n\t\t\tthis.clear();\n\n\t\t}\n\n\t\t_this.info.render.vertices = 0;\n\t\t_this.info.render.faces = 0;\n\n\t\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n\t\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\n\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t_elements = _renderData.elements;\n\t\t_lights = _renderData.lights;\n\n\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n\t\t/* DEBUG\n\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n\t\t*/\n\n\t\tcalculateLights();\n\n\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\n\t\t\tvar element = _elements[ e ];\n\n\t\t\tvar material = element.material;\n\n\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\n\t\t\t_elemBox.makeEmpty();\n\n\t\t\tif ( element instanceof THREE.RenderableSprite ) {\n\n\t\t\t\t_v1 = element;\n\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\n\t\t\t\trenderSprite( _v1, element, material );\n\n\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderLine( _v1, _v2, element, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\tif ( material.overdraw > 0 ) {\n\n\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\n\t\t\t\t}\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t_v3.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* DEBUG\n\t\t\tsetLineWidth( 1 );\n\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n\t\t\t*/\n\n\t\t\t_clearBox.union( _elemBox );\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetLineWidth( 1 );\n\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n\t\t*/\n\n\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\n\n\t};\n\n\t//\n\n\tfunction calculateLights() {\n\n\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t_pointLights.setRGB( 0, 0, 0 );\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\t\t\tvar lightColor = light.color;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t_ambientLight.add( lightColor );\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_directionalLights.add( lightColor );\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_pointLights.add( lightColor );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction calculateLight( position, normal, color ) {\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\n\t\t\t_lightColor.copy( light.color );\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n\t\t\t\tvar amount = normal.dot( lightPosition );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\n\t\t\t\tif ( amount == 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderSprite( v1, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\n\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\n\n\t\tvar dist = Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n\t\t_elemBox.min.set( v1.x - dist, v1.y - dist );\n\t\t_elemBox.max.set( v1.x + dist, v1.y + dist );\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tvar texture = material.map;\n\n\t\t\tif ( texture !== null ) {\n\n\t\t\t\tvar pattern = _patterns[ texture.id ];\n\n\t\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t\t\t\tvar bitmap = texture.image;\n\n\t\t\t\t\tvar ox = bitmap.width * texture.offset.x;\n\t\t\t\t\tvar oy = bitmap.height * texture.offset.y;\n\n\t\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\n\t\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\n\n\t\t\t\t\tvar cx = scaleX / sx;\n\t\t\t\t\tvar cy = scaleY / sy;\n\n\t\t\t\t\t_context.save();\n\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t_context.translate( - scaleX / 2, - scaleY / 2 );\n\t\t\t\t\t_context.scale( cx, cy );\n\t\t\t\t\t_context.translate( - ox, - oy );\n\t\t\t\t\t_context.fillRect( ox, oy, sx, sy );\n\t\t\t\t\t_context.restore();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// no texture\n\n\t\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t\t_context.save();\n\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t_context.scale( scaleX, - scaleY );\n\t\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t\t_context.restore();\n\n\t\t\t}\n\n\t\t} else if ( material.isSpriteCanvasMaterial ) {\n\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t_context.save();\n\t\t\t_context.translate( v1.x, v1.y );\n\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t_context.scale( scaleX, scaleY );\n\n\t\t\tmaterial.program( _context );\n\n\t\t\t_context.restore();\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t_context.save();\n\t\t\t_context.translate( v1.x, v1.y );\n\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t_context.scale( scaleX * material.size, - scaleY * material.size );\n\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t_context.restore();\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetStrokeStyle( 'rgb(255,255,0)' );\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.x - 10, v1.y );\n\t\t_context.lineTo( v1.x + 10, v1.y );\n\t\t_context.moveTo( v1.x, v1.y - 10 );\n\t\t_context.lineTo( v1.x, v1.y + 10 );\n\t\t_context.stroke();\n\t\t*/\n\n\t}\n\n\tfunction renderLine( v1, v2, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n\t\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\n\t\tif ( material.isLineBasicMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\n\t\t\tif ( material.vertexColors !== THREE.VertexColors ) {\n\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\n\t\t\t} else {\n\n\t\t\t\tvar colorStyle1 = element.vertexColors[ 0 ].getStyle();\n\t\t\t\tvar colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\n\t\t\t\tif ( colorStyle1 === colorStyle2 ) {\n\n\t\t\t\t\tsetStrokeStyle( colorStyle1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar grad = _context.createLinearGradient(\n\t\t\t\t\t\t\tv1.positionScreen.x,\n\t\t\t\t\t\t\tv1.positionScreen.y,\n\t\t\t\t\t\t\tv2.positionScreen.x,\n\t\t\t\t\t\t\tv2.positionScreen.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tgrad.addColorStop( 0, colorStyle1 );\n\t\t\t\t\t\tgrad.addColorStop( 1, colorStyle2 );\n\n\t\t\t\t\t} catch ( exception ) {\n\n\t\t\t\t\t\tgrad = colorStyle1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStrokeStyle( grad );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_context.stroke();\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t} else if ( material.isLineDashedMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetLineDash( [ material.dashSize, material.gapSize ] );\n\n\t\t\t_context.stroke();\n\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t\tsetLineDash( [] );\n\n\t\t}\n\n\t}\n\n\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\n\t\t_this.info.render.vertices += 3;\n\t\t_this.info.render.faces ++;\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n\t\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n\t\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\n\t\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\n\t\tif ( ( material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial ) && material.map === null ) {\n\n\t\t\t_diffuseColor.copy( material.color );\n\t\t\t_emissiveColor.copy( material.emissive );\n\n\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t_diffuseColor.multiply( element.color );\n\n\t\t\t}\n\n\t\t\t_color.copy( _ambientLight );\n\n\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\n\t\t\tcalculateLight( _centroid, element.normalModel, _color );\n\n\t\t\t_color.multiply( _diffuseColor ).add( _emissiveColor );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else if ( material.isMeshBasicMaterial || material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial ) {\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar mapping = material.map.mapping;\n\n\t\t\t\tif ( mapping === THREE.UVMapping ) {\n\n\t\t\t\t\t_uvs = element.uvs;\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.envMap !== null ) {\n\n\t\t\t\tif ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_color.copy( material.color );\n\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t\t_color.multiply( element.color );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\n\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else {\n\n\t\t\t_color.setRGB( 1, 1, 1 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( x0, y0 );\n\t\t_context.lineTo( x1, y1 );\n\t\t_context.lineTo( x2, y2 );\n\t\t_context.closePath();\n\n\t}\n\n\tfunction strokePath( color, linewidth, linecap, linejoin ) {\n\n\t\tsetLineWidth( linewidth );\n\t\tsetLineCap( linecap );\n\t\tsetLineJoin( linejoin );\n\t\tsetStrokeStyle( color.getStyle() );\n\n\t\t_context.stroke();\n\n\t\t_elemBox.expandByScalar( linewidth * 2 );\n\n\t}\n\n\tfunction fillPath( color ) {\n\n\t\tsetFillStyle( color.getStyle() );\n\t\t_context.fill();\n\n\t}\n\n\tfunction textureToPattern( texture ) {\n\n\t\tif ( texture.version === 0 ||\n\t\t\ttexture instanceof THREE.CompressedTexture ||\n\t\t\ttexture instanceof THREE.DataTexture ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: texture.version\n\t\t\t};\n\n\t\t}\n\n\t\tvar image = texture.image;\n\n\t\tif ( image.complete === false ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: 0\n\t\t\t};\n\n\t\t}\n\n\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping || texture.wrapS === THREE.MirroredRepeatWrapping;\n\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping || texture.wrapT === THREE.MirroredRepeatWrapping;\n\n\t\tvar mirrorX = texture.wrapS === THREE.MirroredRepeatWrapping;\n\t\tvar mirrorY = texture.wrapT === THREE.MirroredRepeatWrapping;\n\n\t\t//\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = image.width * ( mirrorX ? 2 : 1 );\n\t\tcanvas.height = image.height * ( mirrorY ? 2 : 1 );\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\n\t\tcontext.drawImage( image, 0, 0 );\n\n\t\tif ( mirrorX === true ) {\n\n\t\t\tcontext.setTransform( - 1, 0, 0, - 1, image.width, image.height );\n\t\t\tcontext.drawImage( image, - image.width, 0 );\n\n\t\t}\n\n\t\tif ( mirrorY === true ) {\n\n\t\t\tcontext.setTransform( 1, 0, 0, 1, 0, 0 );\n\t\t\tcontext.drawImage( image, 0, image.height );\n\n\t\t}\n\n\t\tif ( mirrorX === true && mirrorY === true ) {\n\n\t\t\tcontext.setTransform( - 1, 0, 0, 1, image.width, 0 );\n\t\t\tcontext.drawImage( image, - image.width, image.height );\n\n\t\t}\n\n\t\tvar repeat = 'no-repeat';\n\n\t\tif ( repeatX === true && repeatY === true ) {\n\n\t\t\trepeat = 'repeat';\n\n\t\t} else if ( repeatX === true ) {\n\n\t\t\trepeat = 'repeat-x';\n\n\t\t} else if ( repeatY === true ) {\n\n\t\t\trepeat = 'repeat-y';\n\n\t\t}\n\n\t\tvar pattern = _context.createPattern( canvas, repeat );\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\treturn {\n\t\t\tcanvas: pattern,\n\t\t\tversion: texture.version\n\t\t};\n\n\t}\n\n\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\n\t\tvar pattern = _patterns[ texture.id ];\n\n\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\tpattern = textureToPattern( texture );\n\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t}\n\n\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t} else {\n\n\t\t\tsetFillStyle( 'rgba( 0, 0, 0, 1)' );\n\t\t\t_context.fill();\n\t\t\treturn;\n\n\t\t}\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\t\toffsetX = texture.offset.x / texture.repeat.x,\n\t\t\toffsetY = texture.offset.y / texture.repeat.y,\n\t\t\twidth = texture.image.width * texture.repeat.x,\n\t\t\theight = texture.image.height * texture.repeat.y;\n\n\t\tu0 = ( u0 + offsetX ) * width;\n\t\tv0 = ( v0 + offsetY ) * height;\n\n\t\tu1 = ( u1 + offsetX ) * width;\n\t\tv1 = ( v1 + offsetY ) * height;\n\n\t\tu2 = ( u2 + offsetX ) * width;\n\t\tv2 = ( v2 + offsetY ) * height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.fill();\n\t\t_context.restore();\n\n\t}\n\n\t/*\n\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\twidth = image.width - 1,\n\t\theight = image.height - 1;\n\n\t\tu0 *= width; v0 *= height;\n\t\tu1 *= width; v1 *= height;\n\t\tu2 *= width; v2 *= height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.clip();\n\t\t_context.drawImage( image, 0, 0 );\n\t\t_context.restore();\n\n\t}\n\t*/\n\n\t// Hide anti-alias gaps\n\n\tfunction expand( v1, v2, pixels ) {\n\n\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\n\t\t\tdet = x * x + y * y, idet;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = pixels / Math.sqrt( det );\n\n\t\tx *= idet; y *= idet;\n\n\t\tv2.x += x; v2.y += y;\n\t\tv1.x -= x; v1.y -= y;\n\n\t}\n\n\t// Context cached methods.\n\n\tfunction setOpacity( value ) {\n\n\t\tif ( _contextGlobalAlpha !== value ) {\n\n\t\t\t_context.globalAlpha = value;\n\t\t\t_contextGlobalAlpha = value;\n\n\t\t}\n\n\t}\n\n\tfunction setBlending( value ) {\n\n\t\tif ( _contextGlobalCompositeOperation !== value ) {\n\n\t\t\tif ( value === THREE.NormalBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'source-over';\n\n\t\t\t} else if ( value === THREE.AdditiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'lighter';\n\n\t\t\t} else if ( value === THREE.SubtractiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'darker';\n\n\t\t\t} else if ( value === THREE.MultiplyBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'multiply';\n\n\t\t\t}\n\n\t\t\t_contextGlobalCompositeOperation = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineWidth( value ) {\n\n\t\tif ( _contextLineWidth !== value ) {\n\n\t\t\t_context.lineWidth = value;\n\t\t\t_contextLineWidth = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineCap( value ) {\n\n\t\t// \"butt\", \"round\", \"square\"\n\n\t\tif ( _contextLineCap !== value ) {\n\n\t\t\t_context.lineCap = value;\n\t\t\t_contextLineCap = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineJoin( value ) {\n\n\t\t// \"round\", \"bevel\", \"miter\"\n\n\t\tif ( _contextLineJoin !== value ) {\n\n\t\t\t_context.lineJoin = value;\n\t\t\t_contextLineJoin = value;\n\n\t\t}\n\n\t}\n\n\tfunction setStrokeStyle( value ) {\n\n\t\tif ( _contextStrokeStyle !== value ) {\n\n\t\t\t_context.strokeStyle = value;\n\t\t\t_contextStrokeStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setFillStyle( value ) {\n\n\t\tif ( _contextFillStyle !== value ) {\n\n\t\t\t_context.fillStyle = value;\n\t\t\t_contextFillStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineDash( value ) {\n\n\t\tif ( _contextLineDash.length !== value.length ) {\n\n\t\t\t_context.setLineDash( value );\n\t\t\t_contextLineDash = value;\n\n\t\t}\n\n\t}\n\n};\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author julianwa / https://github.com/julianwa\n */\n\nTHREE.RenderableObject = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableFace = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\tthis.v3 = new THREE.RenderableVertex();\n\n\tthis.normalModel = new THREE.Vector3();\n\n\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\tthis.vertexNormalsLength = 0;\n\n\tthis.color = new THREE.Color();\n\tthis.material = null;\n\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableVertex = function () {\n\n\tthis.position = new THREE.Vector3();\n\tthis.positionWorld = new THREE.Vector3();\n\tthis.positionScreen = new THREE.Vector4();\n\n\tthis.visible = true;\n\n};\n\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n\tthis.positionWorld.copy( vertex.positionWorld );\n\tthis.positionScreen.copy( vertex.positionScreen );\n\n};\n\n//\n\nTHREE.RenderableLine = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\n\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\tthis.material = null;\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableSprite = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.z = 0;\n\n\tthis.rotation = 0;\n\tthis.scale = new THREE.Vector2();\n\n\tthis.material = null;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n\t\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t\t_vector3 = new THREE.Vector3(),\n\t\t_vector4 = new THREE.Vector4(),\n\n\t\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t\t_boundingBox = new THREE.Box3(),\n\t\t_points3 = new Array( 3 ),\n\n\t\t_viewMatrix = new THREE.Matrix4(),\n\t\t_viewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_modelMatrix,\n\t\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_normalMatrix = new THREE.Matrix3(),\n\n\t\t_frustum = new THREE.Frustum(),\n\n\t\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t//\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n\t//\n\n\tvar RenderList = function () {\n\n\t\tvar normals = [];\n\t\tvar colors = [];\n\t\tvar uvs = [];\n\n\t\tvar object = null;\n\t\tvar material = null;\n\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\tfunction setObject( value ) {\n\n\t\t\tobject = value;\n\t\t\tmaterial = object.material;\n\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\tnormals.length = 0;\n\t\t\tcolors.length = 0;\n\t\t\tuvs.length = 0;\n\n\t\t}\n\n\t\tfunction projectVertex( vertex ) {\n\n\t\t\tvar position = vertex.position;\n\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\tpositionScreen.x *= invW;\n\t\t\tpositionScreen.y *= invW;\n\t\t\tpositionScreen.z *= invW;\n\n\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n\t\t}\n\n\t\tfunction pushVertex( x, y, z ) {\n\n\t\t\t_vertex = getNextVertexInPool();\n\t\t\t_vertex.position.set( x, y, z );\n\n\t\t\tprojectVertex( _vertex );\n\n\t\t}\n\n\t\tfunction pushNormal( x, y, z ) {\n\n\t\t\tnormals.push( x, y, z );\n\n\t\t}\n\n\t\tfunction pushColor( r, g, b ) {\n\n\t\t\tcolors.push( r, g, b );\n\n\t\t}\n\n\t\tfunction pushUv( x, y ) {\n\n\t\t\tuvs.push( x, y );\n\n\t\t}\n\n\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\n\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t_points3[ 2 ] = v3.positionScreen;\n\n\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\n\t\t}\n\n\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\n\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n\t\t}\n\n\t\tfunction pushLine( a, b ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\n\t\t\t// Clip\n\n\t\t\tv1.positionScreen.copy( v1.position ).applyMatrix4( _modelViewProjectionMatrix );\n\t\t\tv2.positionScreen.copy( v2.position ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\tif ( clipLine( v1.positionScreen, v2.positionScreen ) === true ) {\n\n\t\t\t\t// Perform the perspective divide\n\t\t\t\tv1.positionScreen.multiplyScalar( 1 / v1.positionScreen.w );\n\t\t\t\tv2.positionScreen.multiplyScalar( 1 / v2.positionScreen.w );\n\n\t\t\t\t_line = getNextLineInPool();\n\t\t\t\t_line.id = object.id;\n\t\t\t\t_line.v1.copy( v1 );\n\t\t\t\t_line.v2.copy( v2 );\n\t\t\t\t_line.z = Math.max( v1.positionScreen.z, v2.positionScreen.z );\n\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t_line.material = object.material;\n\n\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t_line.vertexColors[ 0 ].fromArray( colors, a * 3 );\n\t\t\t\t\t_line.vertexColors[ 1 ].fromArray( colors, b * 3 );\n\n\t\t\t\t}\n\n\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushTriangle( a, b, c ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\tvar v3 = _vertexPool[ c ];\n\n\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t_face.id = object.id;\n\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t// use first vertex normal as face normal\n\n\t\t\t\t_face.normalModel.fromArray( normals, a * 3 );\n\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\n\t\t\t\t}\n\n\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t_face.material = object.material;\n\n\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetObject: setObject,\n\t\t\tprojectVertex: projectVertex,\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\tpushVertex: pushVertex,\n\t\t\tpushNormal: pushNormal,\n\t\t\tpushColor: pushColor,\n\t\t\tpushUv: pushUv,\n\t\t\tpushLine: pushLine,\n\t\t\tpushTriangle: pushTriangle\n\t\t};\n\n\t};\n\n\tvar renderList = new RenderList();\n\n\tfunction projectObject( object ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t_renderData.lights.push( object );\n\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\n\n\t\t\tif ( object.material.visible === false ) return;\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\n\t\t\taddObject( object );\n\n\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\tif ( object.material.visible === false ) return;\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\n\t\t\taddObject( object );\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction addObject( object ) {\n\n\t\t_object = getNextObjectInPool();\n\t\t_object.id = object.id;\n\t\t_object.object = object;\n\n\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t_vector3.applyMatrix4( _viewProjectionMatrix );\n\t\t_object.z = _vector3.z;\n\t\t_object.renderOrder = object.renderOrder;\n\n\t\t_renderData.objects.push( _object );\n\n\t}\n\n\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n\t\t_faceCount = 0;\n\t\t_lineCount = 0;\n\t\t_spriteCount = 0;\n\n\t\t_renderData.elements.length = 0;\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t_viewMatrix.copy( camera.matrixWorldInverse );\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\n\n\t\t//\n\n\t\t_objectCount = 0;\n\n\t\t_renderData.objects.length = 0;\n\t\t_renderData.lights.length = 0;\n\n\t\tprojectObject( scene );\n\n\t\tif ( sortObjects === true ) {\n\n\t\t\t_renderData.objects.sort( painterSort );\n\n\t\t}\n\n\t\t//\n\n\t\tvar objects = _renderData.objects;\n\n\t\tfor ( var o = 0, ol = objects.length; o < ol; o ++ ) {\n\n\t\t\tvar object = objects[ o ].object;\n\t\t\tvar geometry = object.geometry;\n\n\t\t\trenderList.setObject( object );\n\n\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t_vertexCount = 0;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\n\t\t\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( var g = 0; g < groups.length; g ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ g ];\n\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector3.copy( vertex );\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\n\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\n\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t ? object.material[ face.materialIndex ]\n\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\tvar side = material.side;\n\n\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\n\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\n\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\n\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\n\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t_face.v3.copy( v3 );\n\n\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\n\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t_face.normalModel.negate();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\n\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t\tnormalModel.negate();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\n\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attributes.color !== undefined ) {\n\n\t\t\t\t\t\t\tvar colors = attributes.color.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\n\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\n\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\n\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\n\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\n\t\t\t\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\n\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Points ) {\n\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector4.set( vertex.x, vertex.y, vertex.z, 1 );\n\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t_vector4.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ], 1 );\n\t\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( sortElements === true ) {\n\n\t\t\t_renderData.elements.sort( painterSort );\n\n\t\t}\n\n\t\treturn _renderData;\n\n\t};\n\n\tfunction pushPoint( _vector4, object, camera ) {\n\n\t\tvar invW = 1 / _vector4.w;\n\n\t\t_vector4.z *= invW;\n\n\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t_sprite.id = object.id;\n\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t_sprite.z = _vector4.z;\n\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t_sprite.object = object;\n\n\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n\t\t\t_sprite.material = object.material;\n\n\t\t\t_renderData.elements.push( _sprite );\n\n\t\t}\n\n\t}\n\n\t// Pools\n\n\tfunction getNextObjectInPool() {\n\n\t\tif ( _objectCount === _objectPoolLength ) {\n\n\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t_objectPool.push( object );\n\t\t\t_objectPoolLength ++;\n\t\t\t_objectCount ++;\n\t\t\treturn object;\n\n\t\t}\n\n\t\treturn _objectPool[ _objectCount ++ ];\n\n\t}\n\n\tfunction getNextVertexInPool() {\n\n\t\tif ( _vertexCount === _vertexPoolLength ) {\n\n\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t_vertexPool.push( vertex );\n\t\t\t_vertexPoolLength ++;\n\t\t\t_vertexCount ++;\n\t\t\treturn vertex;\n\n\t\t}\n\n\t\treturn _vertexPool[ _vertexCount ++ ];\n\n\t}\n\n\tfunction getNextFaceInPool() {\n\n\t\tif ( _faceCount === _facePoolLength ) {\n\n\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t_facePool.push( face );\n\t\t\t_facePoolLength ++;\n\t\t\t_faceCount ++;\n\t\t\treturn face;\n\n\t\t}\n\n\t\treturn _facePool[ _faceCount ++ ];\n\n\n\t}\n\n\tfunction getNextLineInPool() {\n\n\t\tif ( _lineCount === _linePoolLength ) {\n\n\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t_linePool.push( line );\n\t\t\t_linePoolLength ++;\n\t\t\t_lineCount ++;\n\t\t\treturn line;\n\n\t\t}\n\n\t\treturn _linePool[ _lineCount ++ ];\n\n\t}\n\n\tfunction getNextSpriteInPool() {\n\n\t\tif ( _spriteCount === _spritePoolLength ) {\n\n\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t_spritePool.push( sprite );\n\t\t\t_spritePoolLength ++;\n\t\t\t_spriteCount ++;\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn _spritePool[ _spriteCount ++ ];\n\n\t}\n\n\t//\n\n\tfunction painterSort( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else if ( a.id !== b.id ) {\n\n\t\t\treturn a.id - b.id;\n\n\t\t} else {\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tfunction clipLine( s1, s2 ) {\n\n\t\tvar alpha1 = 0, alpha2 = 1,\n\n\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t// Z = -1 and Z = +1, respectively.\n\n\t\t\tbc1near = s1.z + s1.w,\n\t\t\tbc2near = s2.z + s2.w,\n\t\t\tbc1far = - s1.z + s1.w,\n\t\t\tbc2far = - s2.z + s2.w;\n\n\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\treturn true;\n\n\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\treturn false;\n\n\t\t} else {\n\n\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\tif ( bc1near < 0 ) {\n\n\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t} else if ( bc2near < 0 ) {\n\n\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t}\n\n\t\t\tif ( bc1far < 0 ) {\n\n\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t} else if ( bc2far < 0 ) {\n\n\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t}\n\n\t\t\tif ( alpha2 < alpha1 ) {\n\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n"]}